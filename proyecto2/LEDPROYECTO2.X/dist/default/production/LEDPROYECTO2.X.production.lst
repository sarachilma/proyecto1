

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Tue May 06 18:01:04 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F4550 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000FE0                     bsr             equ	4064
    63   000FE9                     fsr0            equ	4073
    64   000FEA                     fsr0h           equ	4074
    65   000FE9                     fsr0l           equ	4073
    66   000FE1                     fsr1            equ	4065
    67   000FE2                     fsr1h           equ	4066
    68   000FE1                     fsr1l           equ	4065
    69   000FD9                     fsr2            equ	4057
    70   000FDA                     fsr2h           equ	4058
    71   000FD9                     fsr2l           equ	4057
    72   000FEF                     indf0           equ	4079
    73   000FE7                     indf1           equ	4071
    74   000FDF                     indf2           equ	4063
    75   000FF2                     intcon          equ	4082
    76   000000                     nvmcon          equ	0
    77   000FF9                     pcl             equ	4089
    78   000FFA                     pclath          equ	4090
    79   000FFB                     pclatu          equ	4091
    80   000FEB                     plusw0          equ	4075
    81   000FE3                     plusw1          equ	4067
    82   000FDB                     plusw2          equ	4059
    83   000FED                     postdec0        equ	4077
    84   000FE5                     postdec1        equ	4069
    85   000FDD                     postdec2        equ	4061
    86   000FEE                     postinc0        equ	4078
    87   000FE6                     postinc1        equ	4070
    88   000FDE                     postinc2        equ	4062
    89   000FEC                     preinc0         equ	4076
    90   000FE4                     preinc1         equ	4068
    91   000FDC                     preinc2         equ	4060
    92   000FF3                     prod            equ	4083
    93   000FF4                     prodh           equ	4084
    94   000FF3                     prodl           equ	4083
    95   000FD8                     status          equ	4056
    96   000FF5                     tablat          equ	4085
    97   000FF6                     tblptr          equ	4086
    98   000FF7                     tblptrh         equ	4087
    99   000FF6                     tblptrl         equ	4086
   100   000FF8                     tblptru         equ	4088
   101   000FFD                     tosl            equ	4093
   102   000FE8                     wreg            equ	4072
   103   000F62                     SPPDATA         equ	3938	;# 
   104   000F63                     SPPCFG          equ	3939	;# 
   105   000F64                     SPPEPS          equ	3940	;# 
   106   000F65                     SPPCON          equ	3941	;# 
   107   000F66                     UFRM            equ	3942	;# 
   108   000F66                     UFRML           equ	3942	;# 
   109   000F67                     UFRMH           equ	3943	;# 
   110   000F68                     UIR             equ	3944	;# 
   111   000F69                     UIE             equ	3945	;# 
   112   000F6A                     UEIR            equ	3946	;# 
   113   000F6B                     UEIE            equ	3947	;# 
   114   000F6C                     USTAT           equ	3948	;# 
   115   000F6D                     UCON            equ	3949	;# 
   116   000F6E                     UADDR           equ	3950	;# 
   117   000F6F                     UCFG            equ	3951	;# 
   118   000F70                     UEP0            equ	3952	;# 
   119   000F71                     UEP1            equ	3953	;# 
   120   000F72                     UEP2            equ	3954	;# 
   121   000F73                     UEP3            equ	3955	;# 
   122   000F74                     UEP4            equ	3956	;# 
   123   000F75                     UEP5            equ	3957	;# 
   124   000F76                     UEP6            equ	3958	;# 
   125   000F77                     UEP7            equ	3959	;# 
   126   000F78                     UEP8            equ	3960	;# 
   127   000F79                     UEP9            equ	3961	;# 
   128   000F7A                     UEP10           equ	3962	;# 
   129   000F7B                     UEP11           equ	3963	;# 
   130   000F7C                     UEP12           equ	3964	;# 
   131   000F7D                     UEP13           equ	3965	;# 
   132   000F7E                     UEP14           equ	3966	;# 
   133   000F7F                     UEP15           equ	3967	;# 
   134   000F80                     PORTA           equ	3968	;# 
   135   000F81                     PORTB           equ	3969	;# 
   136   000F82                     PORTC           equ	3970	;# 
   137   000F83                     PORTD           equ	3971	;# 
   138   000F84                     PORTE           equ	3972	;# 
   139   000F89                     LATA            equ	3977	;# 
   140   000F8A                     LATB            equ	3978	;# 
   141   000F8B                     LATC            equ	3979	;# 
   142   000F8C                     LATD            equ	3980	;# 
   143   000F8D                     LATE            equ	3981	;# 
   144   000F92                     TRISA           equ	3986	;# 
   145   000F92                     DDRA            equ	3986	;# 
   146   000F93                     TRISB           equ	3987	;# 
   147   000F93                     DDRB            equ	3987	;# 
   148   000F94                     TRISC           equ	3988	;# 
   149   000F94                     DDRC            equ	3988	;# 
   150   000F95                     TRISD           equ	3989	;# 
   151   000F95                     DDRD            equ	3989	;# 
   152   000F96                     TRISE           equ	3990	;# 
   153   000F96                     DDRE            equ	3990	;# 
   154   000F9B                     OSCTUNE         equ	3995	;# 
   155   000F9D                     PIE1            equ	3997	;# 
   156   000F9E                     PIR1            equ	3998	;# 
   157   000F9F                     IPR1            equ	3999	;# 
   158   000FA0                     PIE2            equ	4000	;# 
   159   000FA1                     PIR2            equ	4001	;# 
   160   000FA2                     IPR2            equ	4002	;# 
   161   000FA6                     EECON1          equ	4006	;# 
   162   000FA7                     EECON2          equ	4007	;# 
   163   000FA8                     EEDATA          equ	4008	;# 
   164   000FA9                     EEADR           equ	4009	;# 
   165   000FAB                     RCSTA           equ	4011	;# 
   166   000FAB                     RCSTA1          equ	4011	;# 
   167   000FAC                     TXSTA           equ	4012	;# 
   168   000FAC                     TXSTA1          equ	4012	;# 
   169   000FAD                     TXREG           equ	4013	;# 
   170   000FAD                     TXREG1          equ	4013	;# 
   171   000FAE                     RCREG           equ	4014	;# 
   172   000FAE                     RCREG1          equ	4014	;# 
   173   000FAF                     SPBRG           equ	4015	;# 
   174   000FAF                     SPBRG1          equ	4015	;# 
   175   000FB0                     SPBRGH          equ	4016	;# 
   176   000FB1                     T3CON           equ	4017	;# 
   177   000FB2                     TMR3            equ	4018	;# 
   178   000FB2                     TMR3L           equ	4018	;# 
   179   000FB3                     TMR3H           equ	4019	;# 
   180   000FB4                     CMCON           equ	4020	;# 
   181   000FB5                     CVRCON          equ	4021	;# 
   182   000FB6                     ECCP1AS         equ	4022	;# 
   183   000FB6                     CCP1AS          equ	4022	;# 
   184   000FB7                     ECCP1DEL        equ	4023	;# 
   185   000FB7                     CCP1DEL         equ	4023	;# 
   186   000FB8                     BAUDCON         equ	4024	;# 
   187   000FB8                     BAUDCTL         equ	4024	;# 
   188   000FBA                     CCP2CON         equ	4026	;# 
   189   000FBB                     CCPR2           equ	4027	;# 
   190   000FBB                     CCPR2L          equ	4027	;# 
   191   000FBC                     CCPR2H          equ	4028	;# 
   192   000FBD                     CCP1CON         equ	4029	;# 
   193   000FBD                     ECCP1CON        equ	4029	;# 
   194   000FBE                     CCPR1           equ	4030	;# 
   195   000FBE                     CCPR1L          equ	4030	;# 
   196   000FBF                     CCPR1H          equ	4031	;# 
   197   000FC0                     ADCON2          equ	4032	;# 
   198   000FC1                     ADCON1          equ	4033	;# 
   199   000FC2                     ADCON0          equ	4034	;# 
   200   000FC3                     ADRES           equ	4035	;# 
   201   000FC3                     ADRESL          equ	4035	;# 
   202   000FC4                     ADRESH          equ	4036	;# 
   203   000FC5                     SSPCON2         equ	4037	;# 
   204   000FC6                     SSPCON1         equ	4038	;# 
   205   000FC7                     SSPSTAT         equ	4039	;# 
   206   000FC8                     SSPADD          equ	4040	;# 
   207   000FC9                     SSPBUF          equ	4041	;# 
   208   000FCA                     T2CON           equ	4042	;# 
   209   000FCB                     PR2             equ	4043	;# 
   210   000FCB                     MEMCON          equ	4043	;# 
   211   000FCC                     TMR2            equ	4044	;# 
   212   000FCD                     T1CON           equ	4045	;# 
   213   000FCE                     TMR1            equ	4046	;# 
   214   000FCE                     TMR1L           equ	4046	;# 
   215   000FCF                     TMR1H           equ	4047	;# 
   216   000FD0                     RCON            equ	4048	;# 
   217   000FD1                     WDTCON          equ	4049	;# 
   218   000FD2                     HLVDCON         equ	4050	;# 
   219   000FD2                     LVDCON          equ	4050	;# 
   220   000FD3                     OSCCON          equ	4051	;# 
   221   000FD5                     T0CON           equ	4053	;# 
   222   000FD6                     TMR0            equ	4054	;# 
   223   000FD6                     TMR0L           equ	4054	;# 
   224   000FD7                     TMR0H           equ	4055	;# 
   225   000FD8                     STATUS          equ	4056	;# 
   226   000FD9                     FSR2            equ	4057	;# 
   227   000FD9                     FSR2L           equ	4057	;# 
   228   000FDA                     FSR2H           equ	4058	;# 
   229   000FDB                     PLUSW2          equ	4059	;# 
   230   000FDC                     PREINC2         equ	4060	;# 
   231   000FDD                     POSTDEC2        equ	4061	;# 
   232   000FDE                     POSTINC2        equ	4062	;# 
   233   000FDF                     INDF2           equ	4063	;# 
   234   000FE0                     BSR             equ	4064	;# 
   235   000FE1                     FSR1            equ	4065	;# 
   236   000FE1                     FSR1L           equ	4065	;# 
   237   000FE2                     FSR1H           equ	4066	;# 
   238   000FE3                     PLUSW1          equ	4067	;# 
   239   000FE4                     PREINC1         equ	4068	;# 
   240   000FE5                     POSTDEC1        equ	4069	;# 
   241   000FE6                     POSTINC1        equ	4070	;# 
   242   000FE7                     INDF1           equ	4071	;# 
   243   000FE8                     WREG            equ	4072	;# 
   244   000FE9                     FSR0            equ	4073	;# 
   245   000FE9                     FSR0L           equ	4073	;# 
   246   000FEA                     FSR0H           equ	4074	;# 
   247   000FEB                     PLUSW0          equ	4075	;# 
   248   000FEC                     PREINC0         equ	4076	;# 
   249   000FED                     POSTDEC0        equ	4077	;# 
   250   000FEE                     POSTINC0        equ	4078	;# 
   251   000FEF                     INDF0           equ	4079	;# 
   252   000FF0                     INTCON3         equ	4080	;# 
   253   000FF1                     INTCON2         equ	4081	;# 
   254   000FF2                     INTCON          equ	4082	;# 
   255   000FF3                     PROD            equ	4083	;# 
   256   000FF3                     PRODL           equ	4083	;# 
   257   000FF4                     PRODH           equ	4084	;# 
   258   000FF5                     TABLAT          equ	4085	;# 
   259   000FF6                     TBLPTR          equ	4086	;# 
   260   000FF6                     TBLPTRL         equ	4086	;# 
   261   000FF7                     TBLPTRH         equ	4087	;# 
   262   000FF8                     TBLPTRU         equ	4088	;# 
   263   000FF9                     PCLAT           equ	4089	;# 
   264   000FF9                     PC              equ	4089	;# 
   265   000FF9                     PCL             equ	4089	;# 
   266   000FFA                     PCLATH          equ	4090	;# 
   267   000FFB                     PCLATU          equ	4091	;# 
   268   000FFC                     STKPTR          equ	4092	;# 
   269   000FFD                     TOS             equ	4093	;# 
   270   000FFD                     TOSL            equ	4093	;# 
   271   000FFE                     TOSH            equ	4094	;# 
   272   000FFF                     TOSU            equ	4095	;# 
   273   000F62                     SPPDATA         equ	3938	;# 
   274   000F63                     SPPCFG          equ	3939	;# 
   275   000F64                     SPPEPS          equ	3940	;# 
   276   000F65                     SPPCON          equ	3941	;# 
   277   000F66                     UFRM            equ	3942	;# 
   278   000F66                     UFRML           equ	3942	;# 
   279   000F67                     UFRMH           equ	3943	;# 
   280   000F68                     UIR             equ	3944	;# 
   281   000F69                     UIE             equ	3945	;# 
   282   000F6A                     UEIR            equ	3946	;# 
   283   000F6B                     UEIE            equ	3947	;# 
   284   000F6C                     USTAT           equ	3948	;# 
   285   000F6D                     UCON            equ	3949	;# 
   286   000F6E                     UADDR           equ	3950	;# 
   287   000F6F                     UCFG            equ	3951	;# 
   288   000F70                     UEP0            equ	3952	;# 
   289   000F71                     UEP1            equ	3953	;# 
   290   000F72                     UEP2            equ	3954	;# 
   291   000F73                     UEP3            equ	3955	;# 
   292   000F74                     UEP4            equ	3956	;# 
   293   000F75                     UEP5            equ	3957	;# 
   294   000F76                     UEP6            equ	3958	;# 
   295   000F77                     UEP7            equ	3959	;# 
   296   000F78                     UEP8            equ	3960	;# 
   297   000F79                     UEP9            equ	3961	;# 
   298   000F7A                     UEP10           equ	3962	;# 
   299   000F7B                     UEP11           equ	3963	;# 
   300   000F7C                     UEP12           equ	3964	;# 
   301   000F7D                     UEP13           equ	3965	;# 
   302   000F7E                     UEP14           equ	3966	;# 
   303   000F7F                     UEP15           equ	3967	;# 
   304   000F80                     PORTA           equ	3968	;# 
   305   000F81                     PORTB           equ	3969	;# 
   306   000F82                     PORTC           equ	3970	;# 
   307   000F83                     PORTD           equ	3971	;# 
   308   000F84                     PORTE           equ	3972	;# 
   309   000F89                     LATA            equ	3977	;# 
   310   000F8A                     LATB            equ	3978	;# 
   311   000F8B                     LATC            equ	3979	;# 
   312   000F8C                     LATD            equ	3980	;# 
   313   000F8D                     LATE            equ	3981	;# 
   314   000F92                     TRISA           equ	3986	;# 
   315   000F92                     DDRA            equ	3986	;# 
   316   000F93                     TRISB           equ	3987	;# 
   317   000F93                     DDRB            equ	3987	;# 
   318   000F94                     TRISC           equ	3988	;# 
   319   000F94                     DDRC            equ	3988	;# 
   320   000F95                     TRISD           equ	3989	;# 
   321   000F95                     DDRD            equ	3989	;# 
   322   000F96                     TRISE           equ	3990	;# 
   323   000F96                     DDRE            equ	3990	;# 
   324   000F9B                     OSCTUNE         equ	3995	;# 
   325   000F9D                     PIE1            equ	3997	;# 
   326   000F9E                     PIR1            equ	3998	;# 
   327   000F9F                     IPR1            equ	3999	;# 
   328   000FA0                     PIE2            equ	4000	;# 
   329   000FA1                     PIR2            equ	4001	;# 
   330   000FA2                     IPR2            equ	4002	;# 
   331   000FA6                     EECON1          equ	4006	;# 
   332   000FA7                     EECON2          equ	4007	;# 
   333   000FA8                     EEDATA          equ	4008	;# 
   334   000FA9                     EEADR           equ	4009	;# 
   335   000FAB                     RCSTA           equ	4011	;# 
   336   000FAB                     RCSTA1          equ	4011	;# 
   337   000FAC                     TXSTA           equ	4012	;# 
   338   000FAC                     TXSTA1          equ	4012	;# 
   339   000FAD                     TXREG           equ	4013	;# 
   340   000FAD                     TXREG1          equ	4013	;# 
   341   000FAE                     RCREG           equ	4014	;# 
   342   000FAE                     RCREG1          equ	4014	;# 
   343   000FAF                     SPBRG           equ	4015	;# 
   344   000FAF                     SPBRG1          equ	4015	;# 
   345   000FB0                     SPBRGH          equ	4016	;# 
   346   000FB1                     T3CON           equ	4017	;# 
   347   000FB2                     TMR3            equ	4018	;# 
   348   000FB2                     TMR3L           equ	4018	;# 
   349   000FB3                     TMR3H           equ	4019	;# 
   350   000FB4                     CMCON           equ	4020	;# 
   351   000FB5                     CVRCON          equ	4021	;# 
   352   000FB6                     ECCP1AS         equ	4022	;# 
   353   000FB6                     CCP1AS          equ	4022	;# 
   354   000FB7                     ECCP1DEL        equ	4023	;# 
   355   000FB7                     CCP1DEL         equ	4023	;# 
   356   000FB8                     BAUDCON         equ	4024	;# 
   357   000FB8                     BAUDCTL         equ	4024	;# 
   358   000FBA                     CCP2CON         equ	4026	;# 
   359   000FBB                     CCPR2           equ	4027	;# 
   360   000FBB                     CCPR2L          equ	4027	;# 
   361   000FBC                     CCPR2H          equ	4028	;# 
   362   000FBD                     CCP1CON         equ	4029	;# 
   363   000FBD                     ECCP1CON        equ	4029	;# 
   364   000FBE                     CCPR1           equ	4030	;# 
   365   000FBE                     CCPR1L          equ	4030	;# 
   366   000FBF                     CCPR1H          equ	4031	;# 
   367   000FC0                     ADCON2          equ	4032	;# 
   368   000FC1                     ADCON1          equ	4033	;# 
   369   000FC2                     ADCON0          equ	4034	;# 
   370   000FC3                     ADRES           equ	4035	;# 
   371   000FC3                     ADRESL          equ	4035	;# 
   372   000FC4                     ADRESH          equ	4036	;# 
   373   000FC5                     SSPCON2         equ	4037	;# 
   374   000FC6                     SSPCON1         equ	4038	;# 
   375   000FC7                     SSPSTAT         equ	4039	;# 
   376   000FC8                     SSPADD          equ	4040	;# 
   377   000FC9                     SSPBUF          equ	4041	;# 
   378   000FCA                     T2CON           equ	4042	;# 
   379   000FCB                     PR2             equ	4043	;# 
   380   000FCB                     MEMCON          equ	4043	;# 
   381   000FCC                     TMR2            equ	4044	;# 
   382   000FCD                     T1CON           equ	4045	;# 
   383   000FCE                     TMR1            equ	4046	;# 
   384   000FCE                     TMR1L           equ	4046	;# 
   385   000FCF                     TMR1H           equ	4047	;# 
   386   000FD0                     RCON            equ	4048	;# 
   387   000FD1                     WDTCON          equ	4049	;# 
   388   000FD2                     HLVDCON         equ	4050	;# 
   389   000FD2                     LVDCON          equ	4050	;# 
   390   000FD3                     OSCCON          equ	4051	;# 
   391   000FD5                     T0CON           equ	4053	;# 
   392   000FD6                     TMR0            equ	4054	;# 
   393   000FD6                     TMR0L           equ	4054	;# 
   394   000FD7                     TMR0H           equ	4055	;# 
   395   000FD8                     STATUS          equ	4056	;# 
   396   000FD9                     FSR2            equ	4057	;# 
   397   000FD9                     FSR2L           equ	4057	;# 
   398   000FDA                     FSR2H           equ	4058	;# 
   399   000FDB                     PLUSW2          equ	4059	;# 
   400   000FDC                     PREINC2         equ	4060	;# 
   401   000FDD                     POSTDEC2        equ	4061	;# 
   402   000FDE                     POSTINC2        equ	4062	;# 
   403   000FDF                     INDF2           equ	4063	;# 
   404   000FE0                     BSR             equ	4064	;# 
   405   000FE1                     FSR1            equ	4065	;# 
   406   000FE1                     FSR1L           equ	4065	;# 
   407   000FE2                     FSR1H           equ	4066	;# 
   408   000FE3                     PLUSW1          equ	4067	;# 
   409   000FE4                     PREINC1         equ	4068	;# 
   410   000FE5                     POSTDEC1        equ	4069	;# 
   411   000FE6                     POSTINC1        equ	4070	;# 
   412   000FE7                     INDF1           equ	4071	;# 
   413   000FE8                     WREG            equ	4072	;# 
   414   000FE9                     FSR0            equ	4073	;# 
   415   000FE9                     FSR0L           equ	4073	;# 
   416   000FEA                     FSR0H           equ	4074	;# 
   417   000FEB                     PLUSW0          equ	4075	;# 
   418   000FEC                     PREINC0         equ	4076	;# 
   419   000FED                     POSTDEC0        equ	4077	;# 
   420   000FEE                     POSTINC0        equ	4078	;# 
   421   000FEF                     INDF0           equ	4079	;# 
   422   000FF0                     INTCON3         equ	4080	;# 
   423   000FF1                     INTCON2         equ	4081	;# 
   424   000FF2                     INTCON          equ	4082	;# 
   425   000FF3                     PROD            equ	4083	;# 
   426   000FF3                     PRODL           equ	4083	;# 
   427   000FF4                     PRODH           equ	4084	;# 
   428   000FF5                     TABLAT          equ	4085	;# 
   429   000FF6                     TBLPTR          equ	4086	;# 
   430   000FF6                     TBLPTRL         equ	4086	;# 
   431   000FF7                     TBLPTRH         equ	4087	;# 
   432   000FF8                     TBLPTRU         equ	4088	;# 
   433   000FF9                     PCLAT           equ	4089	;# 
   434   000FF9                     PC              equ	4089	;# 
   435   000FF9                     PCL             equ	4089	;# 
   436   000FFA                     PCLATH          equ	4090	;# 
   437   000FFB                     PCLATU          equ	4091	;# 
   438   000FFC                     STKPTR          equ	4092	;# 
   439   000FFD                     TOS             equ	4093	;# 
   440   000FFD                     TOSL            equ	4093	;# 
   441   000FFE                     TOSH            equ	4094	;# 
   442   000FFF                     TOSU            equ	4095	;# 
   443   007D5C                     _CREN           set	32092
   444   007CF5                     _RCIF           set	31989
   445   007CF4                     _TXIF           set	31988
   446   007CA7                     _TRISC7         set	31911
   447   007CA6                     _TRISC6         set	31910
   448   000F81                     _PORTBbits      set	3969
   449   000F8A                     _LATBbits       set	3978
   450   000F93                     _TRISBbits      set	3987
   451   000FAE                     _RCREG          set	4014
   452   000FAB                     _RCSTAbits      set	4011
   453   000FAD                     _TXREG          set	4013
   454   000FAB                     _RCSTA          set	4011
   455   000FAC                     _TXSTA          set	4012
   456   000FAF                     _SPBRG          set	4015
   457   000F8C                     _LATDbits       set	3980
   458   000F8C                     _LATD           set	3980
   459   000F95                     _TRISD          set	3989
   460   000FD3                     _OSCCON         set	4051
   461                           
   462                           	psect	smallconst
   463   000800                     __psmallconst:
   464                           	callstack 0
   465   000800  00                 	db	0
   466   000801                     STR_1:
   467   000801  55                 	db	85	;'U'
   468   000802  53                 	db	83	;'S'
   469   000803  41                 	db	65	;'A'
   470   000804  52                 	db	82	;'R'
   471   000805  54                 	db	84	;'T'
   472   000806  20                 	db	32
   473   000807  53                 	db	83	;'S'
   474   000808  6F                 	db	111	;'o'
   475   000809  66                 	db	102	;'f'
   476   00080A  74                 	db	116	;'t'
   477   00080B  77                 	db	119	;'w'
   478   00080C  61                 	db	97	;'a'
   479   00080D  72                 	db	114	;'r'
   480   00080E  65                 	db	101	;'e'
   481   00080F  20                 	db	32
   482   000810  69                 	db	105	;'i'
   483   000811  6E                 	db	110	;'n'
   484   000812  69                 	db	105	;'i'
   485   000813  63                 	db	99	;'c'
   486   000814  69                 	db	105	;'i'
   487   000815  61                 	db	97	;'a'
   488   000816  64                 	db	100	;'d'
   489   000817  6F                 	db	111	;'o'
   490   000818  20                 	db	32
   491   000819  65                 	db	101	;'e'
   492   00081A  6E                 	db	110	;'n'
   493   00081B  20                 	db	32
   494   00081C  52                 	db	82	;'R'
   495   00081D  42                 	db	66	;'B'
   496   00081E  30                 	db	48	;'0'
   497   00081F  2F                 	db	47
   498   000820  52                 	db	82	;'R'
   499   000821  42                 	db	66	;'B'
   500   000822  31                 	db	49	;'1'
   501   000823  0D                 	db	13
   502   000824  0A                 	db	10
   503   000825  00                 	db	0
   504   000826                     STR_5:
   505   000826  43                 	db	67	;'C'
   506   000827  6F                 	db	111	;'o'
   507   000828  6D                 	db	109	;'m'
   508   000829  61                 	db	97	;'a'
   509   00082A  6E                 	db	110	;'n'
   510   00082B  64                 	db	100	;'d'
   511   00082C  6F                 	db	111	;'o'
   512   00082D  20                 	db	32
   513   00082E  69                 	db	105	;'i'
   514   00082F  6E                 	db	110	;'n'
   515   000830  76                 	db	118	;'v'
   516   000831  E1                 	db	-31
   517   000832  6C                 	db	108	;'l'
   518   000833  69                 	db	105	;'i'
   519   000834  64                 	db	100	;'d'
   520   000835  6F                 	db	111	;'o'
   521   000836  2E                 	db	46
   522   000837  20                 	db	32
   523   000838  55                 	db	85	;'U'
   524   000839  73                 	db	115	;'s'
   525   00083A  61                 	db	97	;'a'
   526   00083B  20                 	db	32
   527   00083C  31                 	db	49	;'1'
   528   00083D  20                 	db	32
   529   00083E  6F                 	db	111	;'o'
   530   00083F  20                 	db	32
   531   000840  30                 	db	48	;'0'
   532   000841  0D                 	db	13
   533   000842  0A                 	db	10
   534   000843  00                 	db	0
   535   000844                     STR_2:
   536   000844  52                 	db	82	;'R'
   537   000845  65                 	db	101	;'e'
   538   000846  63                 	db	99	;'c'
   539   000847  69                 	db	105	;'i'
   540   000848  62                 	db	98	;'b'
   541   000849  69                 	db	105	;'i'
   542   00084A  64                 	db	100	;'d'
   543   00084B  6F                 	db	111	;'o'
   544   00084C  3A                 	db	58	;':'
   545   00084D  20                 	db	32
   546   00084E  25                 	db	37
   547   00084F  63                 	db	99	;'c'
   548   000850  20                 	db	32
   549   000851  28                 	db	40
   550   000852  25                 	db	37
   551   000853  64                 	db	100	;'d'
   552   000854  29                 	db	41
   553   000855  0D                 	db	13
   554   000856  0A                 	db	10
   555   000857  00                 	db	0
   556   000858                     STR_3:
   557   000858  4C                 	db	76	;'L'
   558   000859  45                 	db	69	;'E'
   559   00085A  44                 	db	68	;'D'
   560   00085B  20                 	db	32
   561   00085C  45                 	db	69	;'E'
   562   00085D  4E                 	db	78	;'N'
   563   00085E  43                 	db	67	;'C'
   564   00085F  45                 	db	69	;'E'
   565   000860  4E                 	db	78	;'N'
   566   000861  44                 	db	68	;'D'
   567   000862  49                 	db	73	;'I'
   568   000863  44                 	db	68	;'D'
   569   000864  4F                 	db	79	;'O'
   570   000865  0D                 	db	13
   571   000866  0A                 	db	10
   572   000867  00                 	db	0
   573   000868                     STR_4:
   574   000868  4C                 	db	76	;'L'
   575   000869  45                 	db	69	;'E'
   576   00086A  44                 	db	68	;'D'
   577   00086B  20                 	db	32
   578   00086C  41                 	db	65	;'A'
   579   00086D  50                 	db	80	;'P'
   580   00086E  41                 	db	65	;'A'
   581   00086F  47                 	db	71	;'G'
   582   000870  41                 	db	65	;'A'
   583   000871  44                 	db	68	;'D'
   584   000872  4F                 	db	79	;'O'
   585   000873  0D                 	db	13
   586   000874  0A                 	db	10
   587   000875  00                 	db	0
   588   000876  00                 	db	0	; dummy byte at the end
   589   000002                     __activetblptr  equ	2
   590                           
   591                           ; #config settings
   592                           
   593                           	psect	cinit
   594   000F60                     __pcinit:
   595                           	callstack 0
   596   000F60                     start_initialization:
   597                           	callstack 0
   598   000F60                     __initialization:
   599                           	callstack 0
   600                           
   601                           ; Clear objects allocated to BANK0 (32 bytes)
   602   000F60  EE00  F060         	lfsr	0,__pbssBANK0
   603   000F64  0E20               	movlw	32
   604   000F66                     clear_0:
   605   000F66  6AEE               	clrf	postinc0,c
   606   000F68  06E8               	decf	wreg,f,c
   607   000F6A  E1FD               	bnz	clear_0
   608                           
   609                           ; Clear objects allocated to COMRAM (5 bytes)
   610   000F6C  6A53               	clrf	(__pbssCOMRAM+4)& (0+255),c
   611   000F6E  6A52               	clrf	(__pbssCOMRAM+3)& (0+255),c
   612   000F70  6A51               	clrf	(__pbssCOMRAM+2)& (0+255),c
   613   000F72  6A50               	clrf	(__pbssCOMRAM+1)& (0+255),c
   614   000F74  6A4F               	clrf	__pbssCOMRAM& (0+255),c
   615   000F76                     end_of_initialization:
   616                           	callstack 0
   617   000F76                     __end_of__initialization:
   618                           	callstack 0
   619   000F76  0E00               	movlw	low (__Lmediumconst shr (0+16))
   620   000F78  6EF8               	movwf	tblptru,c
   621   000F7A  0100               	movlb	0
   622   000F7C  EF40  F005         	goto	_main	;jump to C main() function
   623                           
   624                           	psect	bssCOMRAM
   625   00004F                     __pbssCOMRAM:
   626                           	callstack 0
   627   00004F                     _width:
   628                           	callstack 0
   629   00004F                     	ds	2
   630   000051                     _prec:
   631                           	callstack 0
   632   000051                     	ds	2
   633   000053                     _flags:
   634                           	callstack 0
   635   000053                     	ds	1
   636                           
   637                           	psect	bssBANK0
   638   000060                     __pbssBANK0:
   639                           	callstack 0
   640   000060                     _dbuf:
   641                           	callstack 0
   642   000060                     	ds	32
   643                           
   644                           	psect	cstackCOMRAM
   645   000001                     __pcstackCOMRAM:
   646                           	callstack 0
   647   000001                     ?___awdiv:
   648                           	callstack 0
   649   000001                     ?___awmod:
   650                           	callstack 0
   651   000001                     ___awdiv@dividend:
   652                           	callstack 0
   653   000001                     ___awmod@dividend:
   654                           	callstack 0
   655   000001                     fputc@c:
   656                           	callstack 0
   657   000001                     ??_SoftUSART_RxChar:
   658   000001                     ??_SoftUSART_TxChar:
   659                           
   660                           ; 1 bytes @ 0x0
   661   000001                     	ds	2
   662   000003                     SoftUSART_TxChar@data:
   663                           	callstack 0
   664   000003                     SoftUSART_RxChar@data:
   665                           	callstack 0
   666   000003                     fputc@fp:
   667                           	callstack 0
   668   000003                     ___awdiv@divisor:
   669                           	callstack 0
   670   000003                     ___awmod@divisor:
   671                           	callstack 0
   672                           
   673                           ; 2 bytes @ 0x2
   674   000003                     	ds	1
   675   000004                     SoftUSART_TxChar@i:
   676                           	callstack 0
   677   000004                     SoftUSART_RxChar@i:
   678                           	callstack 0
   679   000004                     ??_fputc:
   680                           
   681                           ; 1 bytes @ 0x3
   682   000004                     	ds	1
   683   000005                     ___awdiv@counter:
   684                           	callstack 0
   685   000005                     ___awmod@counter:
   686                           	callstack 0
   687   000005                     SoftUSART_SendString@str:
   688                           	callstack 0
   689   000005                     
   690                           ; 1 bytes @ 0x4
   691   000005                     	ds	1
   692   000006                     ___awdiv@sign:
   693                           	callstack 0
   694   000006                     ___awmod@sign:
   695                           	callstack 0
   696                           
   697                           ; 1 bytes @ 0x5
   698   000006                     	ds	1
   699   000007                     ?_abs:
   700                           	callstack 0
   701   000007                     ___awdiv@quotient:
   702                           	callstack 0
   703   000007                     abs@a:
   704                           	callstack 0
   705   000007                     
   706                           ; 1 bytes @ 0x6
   707   000007                     	ds	2
   708   000009                     ??_abs:
   709                           
   710                           ; 1 bytes @ 0x8
   711   000009                     	ds	2
   712   00000B                     vfpfcnvrt@fp:
   713                           	callstack 0
   714                           
   715                           ; 1 bytes @ 0xA
   716   00000B                     	ds	1
   717   00000C                     vfpfcnvrt@fmt:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0xB
   721   00000C                     	ds	1
   722   00000D                     vfpfcnvrt@ap:
   723                           	callstack 0
   724                           
   725                           ; 1 bytes @ 0xC
   726   00000D                     	ds	1
   727   00000E                     ??_vfpfcnvrt:
   728                           
   729                           ; 1 bytes @ 0xD
   730   00000E                     	ds	1
   731   00000F                     vfpfcnvrt@done:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0xE
   735   00000F                     	ds	1
   736   000010                     vfpfcnvrt@cp:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0xF
   740   000010                     	ds	1
   741   000011                     vfpfcnvrt@convarg:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x10
   745   000011                     	ds	4
   746   000015                     vfpfcnvrt@c:
   747                           	callstack 0
   748                           
   749                           ; 1 bytes @ 0x14
   750   000015                     	ds	1
   751   000016                     ?_vfprintf:
   752                           	callstack 0
   753   000016                     vfprintf@fp:
   754                           	callstack 0
   755                           
   756                           ; 1 bytes @ 0x15
   757   000016                     	ds	1
   758   000017                     vfprintf@fmt:
   759                           	callstack 0
   760                           
   761                           ; 1 bytes @ 0x16
   762   000017                     	ds	1
   763   000018                     vfprintf@ap:
   764                           	callstack 0
   765                           
   766                           ; 1 bytes @ 0x17
   767   000018                     	ds	1
   768   000019                     vfprintf@cfmt:
   769                           	callstack 0
   770   000019                     
   771                           ; 1 bytes @ 0x18
   772   000019                     	ds	1
   773   00001A                     ?_sprintf:
   774                           	callstack 0
   775   00001A                     sprintf@s:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x19
   779   00001A                     	ds	1
   780   00001B                     sprintf@fmt:
   781                           	callstack 0
   782                           
   783                           ; 1 bytes @ 0x1A
   784   00001B                     	ds	5
   785   000020                     sprintf@ap:
   786                           	callstack 0
   787   000020                     
   788                           ; 1 bytes @ 0x1F
   789   000020                     	ds	1
   790   000021                     sprintf@f:
   791                           	callstack 0
   792                           
   793                           ; 11 bytes @ 0x20
   794   000021                     	ds	11
   795   00002C                     ??_main:
   796                           
   797                           ; 1 bytes @ 0x2B
   798   00002C                     	ds	2
   799   00002E                     main@buf:
   800                           	callstack 0
   801                           
   802                           ; 32 bytes @ 0x2D
   803   00002E                     	ds	32
   804   00004E                     main@dato:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x4D
   808   00004E                     	ds	1
   809                           
   810 ;;
   811 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   812 ;;
   813 ;; *************** function _main *****************
   814 ;; Defined at:
   815 ;;		line 11 in file "MAIN.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;		None
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  buf            32   45[COMRAM] unsigned char [32]
   820 ;;  dato            1   77[COMRAM] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         0       0       0       0       0       0       0       0       0
   831 ;;      Locals:        33       0       0       0       0       0       0       0       0
   832 ;;      Temps:          2       0       0       0       0       0       0       0       0
   833 ;;      Totals:        35       0       0       0       0       0       0       0       0
   834 ;;Total ram usage:       35 bytes
   835 ;; Hardware stack levels required when called: 5
   836 ;; This function calls:
   837 ;;		_SoftUSART_Init
   838 ;;		_SoftUSART_RxChar
   839 ;;		_SoftUSART_SendString
   840 ;;		_sprintf
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text0
   847   000A80                     __ptext0:
   848                           	callstack 0
   849   000A80                     _main:
   850                           	callstack 26
   851   000A80                     
   852                           ;MAIN.c: 12:     OSCCON = 0x72;
   853   000A80  0E72               	movlw	114
   854   000A82  6ED3               	movwf	211,c	;volatile
   855   000A84                     
   856                           ;MAIN.c: 13:     TRISD = 0x00;
   857   000A84  6A95               	clrf	149,c	;volatile
   858   000A86                     
   859                           ;MAIN.c: 14:     LATD = 0x00;
   860   000A86  6A8C               	clrf	140,c	;volatile
   861   000A88                     
   862                           ;MAIN.c: 17:     SoftUSART_Init();
   863   000A88  ECC0  F007         	call	_SoftUSART_Init	;wreg free
   864   000A8C                     
   865                           ;MAIN.c: 18:     _delay((unsigned long)((200)*(8000000/4000.0)));
   866   000A8C  0E03               	movlw	3
   867   000A8E  6E2D               	movwf	(??_main+1)^0,c
   868   000A90  0E08               	movlw	8
   869   000A92  6E2C               	movwf	??_main^0,c
   870   000A94  0E77               	movlw	119
   871   000A96                     u837:
   872   000A96  2EE8               	decfsz	wreg,f,c
   873   000A98  D7FE               	bra	u837
   874   000A9A  2E2C               	decfsz	??_main^0,f,c
   875   000A9C  D7FC               	bra	u837
   876   000A9E  2E2D               	decfsz	(??_main+1)^0,f,c
   877   000AA0  D7FA               	bra	u837
   878   000AA2  0000               	nop	
   879   000AA4                     
   880                           ;MAIN.c: 20:     SoftUSART_SendString("USART Software iniciado en RB0/RB1\r\n");
   881   000AA4  0E01               	movlw	low STR_1
   882   000AA6  6E05               	movwf	SoftUSART_SendString@str^0,c
   883   000AA8  5005               	movf	SoftUSART_SendString@str^0,w,c
   884   000AAA  A4D8               	btfss	status,2,c
   885   000AAC  0E08               	movlw	high __smallconst
   886   000AAE  6E06               	movwf	(SoftUSART_SendString@str+1)^0,c
   887   000AB0  EC01  F007         	call	_SoftUSART_SendString	;wreg free
   888   000AB4                     l1362:
   889                           
   890                           ;MAIN.c: 26:         dato = SoftUSART_RxChar();
   891   000AB4  ECCD  F006         	call	_SoftUSART_RxChar	;wreg free
   892   000AB8  6E4E               	movwf	main@dato^0,c
   893   000ABA                     
   894                           ;MAIN.c: 29:         sprintf(buf, "Recibido: %c (%d)\r\n", dato, dato);
   895   000ABA  0E2E               	movlw	low main@buf
   896   000ABC  6E1A               	movwf	sprintf@s^0,c
   897   000ABE  0E44               	movlw	low STR_2
   898   000AC0  6E1B               	movwf	sprintf@fmt^0,c
   899   000AC2  C04E  F01C         	movff	main@dato,?_sprintf+2
   900   000AC6  6A1D               	clrf	(?_sprintf+3)^0,c
   901   000AC8  C04E  F01E         	movff	main@dato,?_sprintf+4
   902   000ACC  6A1F               	clrf	(?_sprintf+5)^0,c
   903   000ACE  EC7C  F007         	call	_sprintf	;wreg free
   904   000AD2                     
   905                           ;MAIN.c: 30:         SoftUSART_SendString(buf);
   906   000AD2  0E2E               	movlw	low main@buf
   907   000AD4  6E05               	movwf	SoftUSART_SendString@str^0,c
   908   000AD6  6A06               	clrf	(SoftUSART_SendString@str+1)^0,c
   909   000AD8  EC01  F007         	call	_SoftUSART_SendString	;wreg free
   910   000ADC                     
   911                           ;MAIN.c: 33:         if (dato == '1') {
   912   000ADC  0E31               	movlw	49
   913   000ADE  184E               	xorwf	main@dato^0,w,c
   914   000AE0  A4D8               	btfss	status,2,c
   915   000AE2  EF75  F005         	goto	u791
   916   000AE6  EF77  F005         	goto	u790
   917   000AEA                     u791:
   918   000AEA  EF82  F005         	goto	l1374
   919   000AEE                     u790:
   920   000AEE                     
   921                           ;MAIN.c: 34:             LATDbits.LATD0 = 1;
   922   000AEE  808C               	bsf	140,0,c	;volatile
   923   000AF0                     
   924                           ;MAIN.c: 35:             SoftUSART_SendString("LED ENCENDIDO\r\n");
   925   000AF0  0E58               	movlw	low STR_3
   926   000AF2  6E05               	movwf	SoftUSART_SendString@str^0,c
   927   000AF4  5005               	movf	SoftUSART_SendString@str^0,w,c
   928   000AF6  A4D8               	btfss	status,2,c
   929   000AF8  0E08               	movlw	high __smallconst
   930   000AFA  6E06               	movwf	(SoftUSART_SendString@str+1)^0,c
   931   000AFC  EC01  F007         	call	_SoftUSART_SendString	;wreg free
   932                           
   933                           ;MAIN.c: 36:         } else if (dato == '0') {
   934   000B00  EFB0  F005         	goto	l1386
   935   000B04                     l1374:
   936   000B04  0E30               	movlw	48
   937   000B06  184E               	xorwf	main@dato^0,w,c
   938   000B08  A4D8               	btfss	status,2,c
   939   000B0A  EF89  F005         	goto	u801
   940   000B0E  EF8B  F005         	goto	u800
   941   000B12                     u801:
   942   000B12  EF96  F005         	goto	l1380
   943   000B16                     u800:
   944   000B16                     
   945                           ;MAIN.c: 37:             LATDbits.LATD0 = 0;
   946   000B16  908C               	bcf	140,0,c	;volatile
   947   000B18                     
   948                           ;MAIN.c: 38:             SoftUSART_SendString("LED APAGADO\r\n");
   949   000B18  0E68               	movlw	low STR_4
   950   000B1A  6E05               	movwf	SoftUSART_SendString@str^0,c
   951   000B1C  5005               	movf	SoftUSART_SendString@str^0,w,c
   952   000B1E  A4D8               	btfss	status,2,c
   953   000B20  0E08               	movlw	high __smallconst
   954   000B22  6E06               	movwf	(SoftUSART_SendString@str+1)^0,c
   955   000B24  EC01  F007         	call	_SoftUSART_SendString	;wreg free
   956                           
   957                           ;MAIN.c: 39:         }
   958   000B28  EFB0  F005         	goto	l1386
   959   000B2C                     l1380:
   960   000B2C  0E0D               	movlw	13
   961   000B2E  184E               	xorwf	main@dato^0,w,c
   962   000B30  B4D8               	btfsc	status,2,c
   963   000B32  EF9D  F005         	goto	u811
   964   000B36  EF9F  F005         	goto	u810
   965   000B3A                     u811:
   966   000B3A  EFB0  F005         	goto	l1386
   967   000B3E                     u810:
   968   000B3E  0E0A               	movlw	10
   969   000B40  184E               	xorwf	main@dato^0,w,c
   970   000B42  B4D8               	btfsc	status,2,c
   971   000B44  EFA6  F005         	goto	u821
   972   000B48  EFA8  F005         	goto	u820
   973   000B4C                     u821:
   974   000B4C  EFB0  F005         	goto	l1386
   975   000B50                     u820:
   976   000B50                     
   977                           ;MAIN.c: 42:             SoftUSART_SendString("Comando inválido. Usa 1 o 0\r\n");
   978   000B50  0E26               	movlw	low STR_5
   979   000B52  6E05               	movwf	SoftUSART_SendString@str^0,c
   980   000B54  5005               	movf	SoftUSART_SendString@str^0,w,c
   981   000B56  A4D8               	btfss	status,2,c
   982   000B58  0E08               	movlw	high __smallconst
   983   000B5A  6E06               	movwf	(SoftUSART_SendString@str+1)^0,c
   984   000B5C  EC01  F007         	call	_SoftUSART_SendString	;wreg free
   985   000B60                     l1386:
   986                           
   987                           ;MAIN.c: 45:         _delay((unsigned long)((150)*(8000000/4000.0)));
   988   000B60  0E02               	movlw	2
   989   000B62  6E2D               	movwf	(??_main+1)^0,c
   990   000B64  0E86               	movlw	134
   991   000B66  6E2C               	movwf	??_main^0,c
   992   000B68  0E99               	movlw	153
   993   000B6A                     u847:
   994   000B6A  2EE8               	decfsz	wreg,f,c
   995   000B6C  D7FE               	bra	u847
   996   000B6E  2E2C               	decfsz	??_main^0,f,c
   997   000B70  D7FC               	bra	u847
   998   000B72  2E2D               	decfsz	(??_main+1)^0,f,c
   999   000B74  D7FA               	bra	u847
  1000   000B76  0000               	nop	
  1001   000B78  EF5A  F005         	goto	l1362
  1002   000B7C  EF00  F000         	goto	start
  1003   000B80                     __end_of_main:
  1004                           	callstack 0
  1005                           
  1006 ;; *************** function _sprintf *****************
  1007 ;; Defined at:
  1008 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1009 ;; Parameters:    Size  Location     Type
  1010 ;;  s               1   25[COMRAM] PTR unsigned char 
  1011 ;;		 -> main@buf(32), 
  1012 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  1013 ;;		 -> STR_2(20), 
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;  f              11   32[COMRAM] struct _IO_FILE
  1016 ;;  ret             2    0        int 
  1017 ;;  ap              1   31[COMRAM] PTR void [1]
  1018 ;;		 -> ?_sprintf(2), 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  2   25[COMRAM] int 
  1021 ;; Registers used:
  1022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1028 ;;      Params:         6       0       0       0       0       0       0       0       0
  1029 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1031 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1032 ;;Total ram usage:       18 bytes
  1033 ;; Hardware stack levels used: 1
  1034 ;; Hardware stack levels required when called: 4
  1035 ;; This function calls:
  1036 ;;		_vfprintf
  1037 ;; This function is called by:
  1038 ;;		_main
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           	psect	text1
  1043   000EF8                     __ptext1:
  1044                           	callstack 0
  1045   000EF8                     _sprintf:
  1046                           	callstack 26
  1047   000EF8  0E1C               	movlw	low (?_sprintf+2)
  1048   000EFA  6E20               	movwf	sprintf@ap^0,c
  1049   000EFC  C01A  F021         	movff	sprintf@s,sprintf@f
  1050   000F00  0E00               	movlw	0
  1051   000F02  6E24               	movwf	(sprintf@f+3)^0,c
  1052   000F04  0E00               	movlw	0
  1053   000F06  6E23               	movwf	(sprintf@f+2)^0,c
  1054   000F08  0E00               	movlw	0
  1055   000F0A  6E2B               	movwf	(sprintf@f+10)^0,c
  1056   000F0C  0E00               	movlw	0
  1057   000F0E  6E2A               	movwf	(sprintf@f+9)^0,c
  1058   000F10  0E21               	movlw	low sprintf@f
  1059   000F12  6E16               	movwf	vfprintf@fp^0,c
  1060   000F14  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
  1061   000F18  0E20               	movlw	low sprintf@ap
  1062   000F1A  6E18               	movwf	vfprintf@ap^0,c
  1063   000F1C  EC5D  F007         	call	_vfprintf	;wreg free
  1064   000F20  501A               	movf	sprintf@s^0,w,c
  1065   000F22  2423               	addwf	(sprintf@f+2)^0,w,c
  1066   000F24  6ED9               	movwf	fsr2l,c
  1067   000F26  6ADA               	clrf	fsr2h,c
  1068   000F28  6ADF               	clrf	indf2,c
  1069   000F2A  0012               	return		;funcret
  1070   000F2C                     __end_of_sprintf:
  1071                           	callstack 0
  1072                           
  1073 ;; *************** function _vfprintf *****************
  1074 ;; Defined at:
  1075 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  1078 ;;		 -> sprintf@f(11), 
  1079 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  1080 ;;		 -> STR_2(20), 
  1081 ;;  ap              1   23[COMRAM] PTR PTR void 
  1082 ;;		 -> sprintf@ap(1), 
  1083 ;; Auto vars:     Size  Location     Type
  1084 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  1085 ;;		 -> STR_2(20), 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  2   21[COMRAM] int 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1095 ;;      Params:         3       0       0       0       0       0       0       0       0
  1096 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1097 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1098 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1099 ;;Total ram usage:        4 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; Hardware stack levels required when called: 3
  1102 ;; This function calls:
  1103 ;;		_vfpfcnvrt
  1104 ;; This function is called by:
  1105 ;;		_sprintf
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109                           	psect	text2
  1110   000EBA                     __ptext2:
  1111                           	callstack 0
  1112   000EBA                     _vfprintf:
  1113                           	callstack 26
  1114   000EBA                     
  1115                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1116   000EBA  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
  1117                           
  1118                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1119   000EBE  EF69  F007         	goto	l1324
  1120   000EC2                     l1322:
  1121                           
  1122                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1123   000EC2  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1124   000EC6  0E19               	movlw	low vfprintf@cfmt
  1125   000EC8  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1126   000ECA  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1127   000ECE  EC3C  F004         	call	_vfpfcnvrt	;wreg free
  1128   000ED2                     l1324:
  1129                           
  1130                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1131   000ED2  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
  1132   000ED6                     	if	1	;There is more than 1 active tblptr byte
  1133   000ED6  0E08               	movlw	high __smallconst
  1134   000ED8  6EF7               	movwf	tblptrh,c
  1135   000EDA                     	endif
  1136   000EDA                     	if	0	;tblptru may be non-zero
  1137   000EDA                     	endif
  1138   000EDA                     	if	0	;tblptru may be non-zero
  1139   000EDA                     	endif
  1140   000EDA  0008               	tblrd		*
  1141   000EDC  50F5               	movf	tablat,w,c
  1142   000EDE  0900               	iorlw	0
  1143   000EE0  A4D8               	btfss	status,2,c
  1144   000EE2  EF75  F007         	goto	u751
  1145   000EE6  EF77  F007         	goto	u750
  1146   000EEA                     u751:
  1147   000EEA  EF61  F007         	goto	l1322
  1148   000EEE                     u750:
  1149   000EEE                     
  1150                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1151   000EEE  0E00               	movlw	0
  1152   000EF0  6E17               	movwf	(?_vfprintf+1)^0,c
  1153   000EF2  0E00               	movlw	0
  1154   000EF4  6E16               	movwf	?_vfprintf^0,c
  1155   000EF6  0012               	return		;funcret
  1156   000EF8                     __end_of_vfprintf:
  1157                           	callstack 0
  1158                           
  1159 ;; *************** function _vfpfcnvrt *****************
  1160 ;; Defined at:
  1161 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1164 ;;		 -> sprintf@f(11), 
  1165 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1166 ;;		 -> vfprintf@cfmt(1), 
  1167 ;;  ap              1   12[COMRAM] PTR PTR void 
  1168 ;;		 -> sprintf@ap(1), 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  convarg         4   16[COMRAM] struct .
  1171 ;;  c               1   20[COMRAM] unsigned char 
  1172 ;;  cp              1   15[COMRAM] PTR unsigned char 
  1173 ;;		 -> STR_2(20), 
  1174 ;;  done            1   14[COMRAM] _Bool 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1184 ;;      Params:         3       0       0       0       0       0       0       0       0
  1185 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1186 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1187 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1188 ;;Total ram usage:       11 bytes
  1189 ;; Hardware stack levels used: 1
  1190 ;; Hardware stack levels required when called: 2
  1191 ;; This function calls:
  1192 ;;		___awdiv
  1193 ;;		___awmod
  1194 ;;		_abs
  1195 ;;		_fputc
  1196 ;; This function is called by:
  1197 ;;		_vfprintf
  1198 ;; This function uses a non-reentrant model
  1199 ;;
  1200                           
  1201                           	psect	text3
  1202   000878                     __ptext3:
  1203                           	callstack 0
  1204   000878                     _vfpfcnvrt:
  1205                           	callstack 26
  1206   000878                     
  1207                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1208   000878  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1209   00087A  6ED9               	movwf	fsr2l,c
  1210   00087C  6ADA               	clrf	fsr2h,c
  1211   00087E  CFDF FFF6          	movff	indf2,tblptrl
  1212   000882                     	if	1	;There is more than 1 active tblptr byte
  1213   000882  0E08               	movlw	high __smallconst
  1214   000884  6EF7               	movwf	tblptrh,c
  1215   000886                     	endif
  1216   000886                     	if	0	;tblptru may be non-zero
  1217   000886                     	endif
  1218   000886                     	if	0	;tblptru may be non-zero
  1219   000886                     	endif
  1220   000886  0008               	tblrd		*
  1221   000888  50F5               	movf	tablat,w,c
  1222   00088A  0A25               	xorlw	37
  1223   00088C  A4D8               	btfss	status,2,c
  1224   00088E  EF4B  F004         	goto	u641
  1225   000892  EF4D  F004         	goto	u640
  1226   000896                     u641:
  1227   000896  EF2E  F005         	goto	l1314
  1228   00089A                     u640:
  1229   00089A                     
  1230                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1231   00089A  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1232   00089C  6ED9               	movwf	fsr2l,c
  1233   00089E  6ADA               	clrf	fsr2h,c
  1234   0008A0  2ADF               	incf	indf2,f,c
  1235   0008A2                     
  1236                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1237   0008A2  0E00               	movlw	0
  1238   0008A4  6E50               	movwf	(_width+1)^0,c
  1239   0008A6  0E00               	movlw	0
  1240   0008A8  6E4F               	movwf	_width^0,c
  1241   0008AA  C04F  F053         	movff	_width,_flags
  1242   0008AE                     
  1243                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1244   0008AE  6851               	setf	_prec^0,c
  1245   0008B0  6852               	setf	(_prec+1)^0,c
  1246   0008B2                     
  1247                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  1248   0008B2  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1249   0008B4  6ED9               	movwf	fsr2l,c
  1250   0008B6  6ADA               	clrf	fsr2h,c
  1251   0008B8  CFDF FFF6          	movff	indf2,tblptrl
  1252   0008BC                     	if	1	;There is more than 1 active tblptr byte
  1253   0008BC  0E08               	movlw	high __smallconst
  1254   0008BE  6EF7               	movwf	tblptrh,c
  1255   0008C0                     	endif
  1256   0008C0                     	if	0	;tblptru may be non-zero
  1257   0008C0                     	endif
  1258   0008C0                     	if	0	;tblptru may be non-zero
  1259   0008C0                     	endif
  1260   0008C0  0008               	tblrd		*
  1261   0008C2  50F5               	movf	tablat,w,c
  1262   0008C4  0A63               	xorlw	99
  1263   0008C6  A4D8               	btfss	status,2,c
  1264   0008C8  EF68  F004         	goto	u651
  1265   0008CC  EF6A  F004         	goto	u650
  1266   0008D0                     u651:
  1267   0008D0  EF81  F004         	goto	l1278
  1268   0008D4                     u650:
  1269   0008D4                     
  1270                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  1271   0008D4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1272   0008D6  6ED9               	movwf	fsr2l,c
  1273   0008D8  6ADA               	clrf	fsr2h,c
  1274   0008DA  2ADF               	incf	indf2,f,c
  1275   0008DC                     
  1276                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  1277   0008DC  500D               	movf	vfpfcnvrt@ap^0,w,c
  1278   0008DE  6ED9               	movwf	fsr2l,c
  1279   0008E0  6ADA               	clrf	fsr2h,c
  1280   0008E2  50DF               	movf	indf2,w,c
  1281   0008E4  2ADF               	incf	indf2,f,c
  1282   0008E6  2ADF               	incf	indf2,f,c
  1283   0008E8  6ED9               	movwf	fsr2l,c
  1284   0008EA  6ADA               	clrf	fsr2h,c
  1285   0008EC  50DF               	movf	indf2,w,c
  1286   0008EE  6E15               	movwf	vfpfcnvrt@c^0,c
  1287   0008F0                     
  1288                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1277:    fputc(c,
      +                           fp);
  1289   0008F0  C015  F001         	movff	vfpfcnvrt@c,fputc@c
  1290   0008F4  6A02               	clrf	(fputc@c+1)^0,c
  1291   0008F6  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1292   0008FA  EC78  F006         	call	_fputc	;wreg free
  1293   0008FE  EF3F  F005         	goto	l817
  1294   000902                     l1278:
  1295                           
  1296                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1297   000902  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1298   000904  6ED9               	movwf	fsr2l,c
  1299   000906  6ADA               	clrf	fsr2h,c
  1300   000908  50DF               	movf	indf2,w,c
  1301   00090A  6E10               	movwf	vfpfcnvrt@cp^0,c
  1302   00090C                     
  1303                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1304   00090C  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1305   000910                     	if	1	;There is more than 1 active tblptr byte
  1306   000910  0E08               	movlw	high __smallconst
  1307   000912  6EF7               	movwf	tblptrh,c
  1308   000914                     	endif
  1309   000914                     	if	0	;tblptru may be non-zero
  1310   000914                     	endif
  1311   000914                     	if	0	;tblptru may be non-zero
  1312   000914                     	endif
  1313   000914  0008               	tblrd		*
  1314   000916  50F5               	movf	tablat,w,c
  1315   000918  0A64               	xorlw	100
  1316   00091A  B4D8               	btfsc	status,2,c
  1317   00091C  EF92  F004         	goto	u661
  1318   000920  EF94  F004         	goto	u660
  1319   000924                     u661:
  1320   000924  EFA2  F004         	goto	l1284
  1321   000928                     u660:
  1322   000928  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1323   00092C                     	if	1	;There is more than 1 active tblptr byte
  1324   00092C  0E08               	movlw	high __smallconst
  1325   00092E  6EF7               	movwf	tblptrh,c
  1326   000930                     	endif
  1327   000930                     	if	0	;tblptru may be non-zero
  1328   000930                     	endif
  1329   000930                     	if	0	;tblptru may be non-zero
  1330   000930                     	endif
  1331   000930  0008               	tblrd		*
  1332   000932  50F5               	movf	tablat,w,c
  1333   000934  0A69               	xorlw	105
  1334   000936  A4D8               	btfss	status,2,c
  1335   000938  EFA0  F004         	goto	u671
  1336   00093C  EFA2  F004         	goto	u670
  1337   000940                     u671:
  1338   000940  EF28  F005         	goto	l1310
  1339   000944                     u670:
  1340   000944                     l1284:
  1341                           
  1342                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1343   000944  500D               	movf	vfpfcnvrt@ap^0,w,c
  1344   000946  6ED9               	movwf	fsr2l,c
  1345   000948  6ADA               	clrf	fsr2h,c
  1346   00094A  0E02               	movlw	2
  1347   00094C  26DF               	addwf	indf2,f,c
  1348   00094E  5CDF               	subwf	indf2,w,c
  1349   000950  6ED9               	movwf	fsr2l,c
  1350   000952  6ADA               	clrf	fsr2h,c
  1351   000954  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  1352   000958  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  1353   00095C                     
  1354                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1355   00095C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1356   00095E  6ED9               	movwf	fsr2l,c
  1357   000960  6ADA               	clrf	fsr2h,c
  1358   000962  2810               	incf	vfpfcnvrt@cp^0,w,c
  1359   000964  6EDF               	movwf	indf2,c
  1360   000966                     
  1361                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1362   000966  0E20               	movlw	32
  1363   000968  6E15               	movwf	vfpfcnvrt@c^0,c
  1364                           
  1365                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1366   00096A  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1367   00096C  EFBA  F004         	goto	u681
  1368   000970  EFBD  F004         	goto	u680
  1369   000974                     u681:
  1370   000974  0E01               	movlw	1
  1371   000976  EFBE  F004         	goto	u690
  1372   00097A                     u680:
  1373   00097A  0E00               	movlw	0
  1374   00097C                     u690:
  1375   00097C  6E0F               	movwf	vfpfcnvrt@done^0,c
  1376   00097E                     l1290:
  1377                           
  1378                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1379   00097E  0615               	decf	vfpfcnvrt@c^0,f,c
  1380   000980  5015               	movf	vfpfcnvrt@c^0,w,c
  1381   000982  0F60               	addlw	low _dbuf
  1382   000984  6ED9               	movwf	fsr2l,c
  1383   000986  6ADA               	clrf	fsr2h,c
  1384   000988  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1385   00098C  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1386   000990  0E00               	movlw	0
  1387   000992  6E04               	movwf	(___awmod@divisor+1)^0,c
  1388   000994  0E0A               	movlw	10
  1389   000996  6E03               	movwf	___awmod@divisor^0,c
  1390   000998  EC21  F006         	call	___awmod	;wreg free
  1391   00099C  C001  F007         	movff	?___awmod,abs@a
  1392   0009A0  C002  F008         	movff	?___awmod+1,abs@a+1
  1393   0009A4  EC96  F007         	call	_abs	;wreg free
  1394   0009A8  5007               	movf	?_abs^0,w,c
  1395   0009AA  0F30               	addlw	48
  1396   0009AC  6EDF               	movwf	indf2,c
  1397   0009AE                     
  1398                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1399   0009AE  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1400   0009B2  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1401   0009B6  0E00               	movlw	0
  1402   0009B8  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1403   0009BA  0E0A               	movlw	10
  1404   0009BC  6E03               	movwf	___awdiv@divisor^0,c
  1405   0009BE  ECC0  F005         	call	___awdiv	;wreg free
  1406   0009C2  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  1407   0009C6  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1408   0009CA                     
  1409                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1410   0009CA  5011               	movf	vfpfcnvrt@convarg^0,w,c
  1411   0009CC  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1412   0009CE  B4D8               	btfsc	status,2,c
  1413   0009D0  EFEC  F004         	goto	u701
  1414   0009D4  EFEE  F004         	goto	u700
  1415   0009D8                     u701:
  1416   0009D8  EFF6  F004         	goto	l1298
  1417   0009DC                     u700:
  1418   0009DC  5015               	movf	vfpfcnvrt@c^0,w,c
  1419   0009DE  A4D8               	btfss	status,2,c
  1420   0009E0  EFF4  F004         	goto	u711
  1421   0009E4  EFF6  F004         	goto	u710
  1422   0009E8                     u711:
  1423   0009E8  EFBF  F004         	goto	l1290
  1424   0009EC                     u710:
  1425   0009EC                     l1298:
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1428   0009EC  5015               	movf	vfpfcnvrt@c^0,w,c
  1429   0009EE  B4D8               	btfsc	status,2,c
  1430   0009F0  EFFC  F004         	goto	u721
  1431   0009F4  EFFE  F004         	goto	u720
  1432   0009F8                     u721:
  1433   0009F8  EF1D  F005         	goto	l1308
  1434   0009FC                     u720:
  1435   0009FC  500F               	movf	vfpfcnvrt@done^0,w,c
  1436   0009FE  B4D8               	btfsc	status,2,c
  1437   000A00  EF04  F005         	goto	u731
  1438   000A04  EF06  F005         	goto	u730
  1439   000A08                     u731:
  1440   000A08  EF1D  F005         	goto	l1308
  1441   000A0C                     u730:
  1442   000A0C                     
  1443                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1444   000A0C  0615               	decf	vfpfcnvrt@c^0,f,c
  1445   000A0E  5015               	movf	vfpfcnvrt@c^0,w,c
  1446   000A10  0F60               	addlw	low _dbuf
  1447   000A12  6ED9               	movwf	fsr2l,c
  1448   000A14  6ADA               	clrf	fsr2h,c
  1449   000A16  0E2D               	movlw	45
  1450   000A18  6EDF               	movwf	indf2,c
  1451   000A1A  EF1D  F005         	goto	l1308
  1452   000A1E                     l1304:
  1453                           
  1454                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1455   000A1E  5015               	movf	vfpfcnvrt@c^0,w,c
  1456   000A20  0F60               	addlw	low _dbuf
  1457   000A22  6ED9               	movwf	fsr2l,c
  1458   000A24  6ADA               	clrf	fsr2h,c
  1459   000A26  50DF               	movf	indf2,w,c
  1460   000A28  6E0E               	movwf	??_vfpfcnvrt^0,c
  1461   000A2A  500E               	movf	??_vfpfcnvrt^0,w,c
  1462   000A2C  6E01               	movwf	fputc@c^0,c
  1463   000A2E  6A02               	clrf	(fputc@c+1)^0,c
  1464   000A30  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1465   000A34  EC78  F006         	call	_fputc	;wreg free
  1466   000A38  2A15               	incf	vfpfcnvrt@c^0,f,c
  1467   000A3A                     l1308:
  1468                           
  1469                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1470   000A3A  0E20               	movlw	32
  1471   000A3C  1815               	xorwf	vfpfcnvrt@c^0,w,c
  1472   000A3E  A4D8               	btfss	status,2,c
  1473   000A40  EF24  F005         	goto	u741
  1474   000A44  EF26  F005         	goto	u740
  1475   000A48                     u741:
  1476   000A48  EF0F  F005         	goto	l1304
  1477   000A4C                     u740:
  1478   000A4C  EF3F  F005         	goto	l817
  1479   000A50                     l1310:
  1480                           
  1481                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1482   000A50  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1483   000A52  6ED9               	movwf	fsr2l,c
  1484   000A54  6ADA               	clrf	fsr2h,c
  1485   000A56  2ADF               	incf	indf2,f,c
  1486   000A58  EF3F  F005         	goto	l817
  1487   000A5C                     l1314:
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1490   000A5C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1491   000A5E  6ED9               	movwf	fsr2l,c
  1492   000A60  6ADA               	clrf	fsr2h,c
  1493   000A62  CFDF FFF6          	movff	indf2,tblptrl
  1494   000A66                     	if	1	;There is more than 1 active tblptr byte
  1495   000A66  0E08               	movlw	high __smallconst
  1496   000A68  6EF7               	movwf	tblptrh,c
  1497   000A6A                     	endif
  1498   000A6A                     	if	0	;tblptru may be non-zero
  1499   000A6A                     	endif
  1500   000A6A                     	if	0	;tblptru may be non-zero
  1501   000A6A                     	endif
  1502   000A6A  0008               	tblrd		*
  1503   000A6C  50F5               	movf	tablat,w,c
  1504   000A6E  6E01               	movwf	fputc@c^0,c
  1505   000A70  6A02               	clrf	(fputc@c+1)^0,c
  1506   000A72  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1507   000A76  EC78  F006         	call	_fputc	;wreg free
  1508   000A7A  EF28  F005         	goto	l1310
  1509   000A7E                     l817:
  1510   000A7E  0012               	return		;funcret
  1511   000A80                     __end_of_vfpfcnvrt:
  1512                           	callstack 0
  1513                           
  1514 ;; *************** function _fputc *****************
  1515 ;; Defined at:
  1516 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  1517 ;; Parameters:    Size  Location     Type
  1518 ;;  c               2    0[COMRAM] int 
  1519 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1520 ;;		 -> sprintf@f(11), 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;		None
  1523 ;; Return value:  Size  Location     Type
  1524 ;;                  2    0[COMRAM] int 
  1525 ;; Registers used:
  1526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1527 ;; Tracked objects:
  1528 ;;		On entry : 0/0
  1529 ;;		On exit  : 0/0
  1530 ;;		Unchanged: 0/0
  1531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1532 ;;      Params:         3       0       0       0       0       0       0       0       0
  1533 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1534 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1535 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1536 ;;Total ram usage:        8 bytes
  1537 ;; Hardware stack levels used: 1
  1538 ;; Hardware stack levels required when called: 1
  1539 ;; This function calls:
  1540 ;;		_putch
  1541 ;; This function is called by:
  1542 ;;		_vfpfcnvrt
  1543 ;; This function uses a non-reentrant model
  1544 ;;
  1545                           
  1546                           	psect	text4
  1547   000CF0                     __ptext4:
  1548                           	callstack 0
  1549   000CF0                     _fputc:
  1550                           	callstack 26
  1551   000CF0  5003               	movf	fputc@fp^0,w,c
  1552   000CF2  B4D8               	btfsc	status,2,c
  1553   000CF4  EF7E  F006         	goto	u591
  1554   000CF8  EF80  F006         	goto	u590
  1555   000CFC                     u591:
  1556   000CFC  EF88  F006         	goto	l1246
  1557   000D00                     u590:
  1558   000D00  5003               	movf	fputc@fp^0,w,c
  1559   000D02  A4D8               	btfss	status,2,c
  1560   000D04  EF86  F006         	goto	u601
  1561   000D08  EF88  F006         	goto	u600
  1562   000D0C                     u601:
  1563   000D0C  EF8D  F006         	goto	l1248
  1564   000D10                     u600:
  1565   000D10                     l1246:
  1566   000D10  5001               	movf	fputc@c^0,w,c
  1567   000D12  ECC4  F007         	call	_putch
  1568   000D16  EFCC  F006         	goto	l853
  1569   000D1A                     l1248:
  1570   000D1A  5003               	movf	fputc@fp^0,w,c
  1571   000D1C  6ED9               	movwf	fsr2l,c
  1572   000D1E  6ADA               	clrf	fsr2h,c
  1573   000D20  0E09               	movlw	9
  1574   000D22  26D9               	addwf	fsr2l,f,c
  1575   000D24  50DE               	movf	postinc2,w,c
  1576   000D26  10DE               	iorwf	postinc2,w,c
  1577   000D28  B4D8               	btfsc	status,2,c
  1578   000D2A  EF99  F006         	goto	u611
  1579   000D2E  EF9B  F006         	goto	u610
  1580   000D32                     u611:
  1581   000D32  EFB4  F006         	goto	l1252
  1582   000D36                     u610:
  1583   000D36  5003               	movf	fputc@fp^0,w,c
  1584   000D38  6ED9               	movwf	fsr2l,c
  1585   000D3A  6ADA               	clrf	fsr2h,c
  1586   000D3C  0E09               	movlw	9
  1587   000D3E  26D9               	addwf	fsr2l,f,c
  1588   000D40  5003               	movf	fputc@fp^0,w,c
  1589   000D42  6EE1               	movwf	fsr1l,c
  1590   000D44  6AE2               	clrf	fsr1h,c
  1591   000D46  0E02               	movlw	2
  1592   000D48  26E1               	addwf	fsr1l,f,c
  1593   000D4A  50DE               	movf	postinc2,w,c
  1594   000D4C  5CE6               	subwf	postinc1,w,c
  1595   000D4E  50E6               	movf	postinc1,w,c
  1596   000D50  0A80               	xorlw	128
  1597   000D52  6E08               	movwf	(??_fputc+4)^0,c
  1598   000D54  50DE               	movf	postinc2,w,c
  1599   000D56  0A80               	xorlw	128
  1600   000D58  5808               	subwfb	(??_fputc+4)^0,w,c
  1601   000D5A  B0D8               	btfsc	status,0,c
  1602   000D5C  EFB2  F006         	goto	u621
  1603   000D60  EFB4  F006         	goto	u620
  1604   000D64                     u621:
  1605   000D64  EFCC  F006         	goto	l853
  1606   000D68                     u620:
  1607   000D68                     l1252:
  1608   000D68  5003               	movf	fputc@fp^0,w,c
  1609   000D6A  6ED9               	movwf	fsr2l,c
  1610   000D6C  6ADA               	clrf	fsr2h,c
  1611   000D6E  0E02               	movlw	2
  1612   000D70  26D9               	addwf	fsr2l,f,c
  1613   000D72  50DF               	movf	indf2,w,c
  1614   000D74  6E04               	movwf	??_fputc^0,c
  1615   000D76  5003               	movf	fputc@fp^0,w,c
  1616   000D78  6ED9               	movwf	fsr2l,c
  1617   000D7A  6ADA               	clrf	fsr2h,c
  1618   000D7C  50DF               	movf	indf2,w,c
  1619   000D7E  2404               	addwf	??_fputc^0,w,c
  1620   000D80  6ED9               	movwf	fsr2l,c
  1621   000D82  6ADA               	clrf	fsr2h,c
  1622   000D84  C001  FFDF         	movff	fputc@c,indf2
  1623   000D88  5003               	movf	fputc@fp^0,w,c
  1624   000D8A  6ED9               	movwf	fsr2l,c
  1625   000D8C  6ADA               	clrf	fsr2h,c
  1626   000D8E  0E02               	movlw	2
  1627   000D90  26D9               	addwf	fsr2l,f,c
  1628   000D92  2ADE               	incf	postinc2,f,c
  1629   000D94  0E00               	movlw	0
  1630   000D96  22DD               	addwfc	postdec2,f,c
  1631   000D98                     l853:
  1632   000D98  0012               	return		;funcret
  1633   000D9A                     __end_of_fputc:
  1634                           	callstack 0
  1635                           
  1636 ;; *************** function _putch *****************
  1637 ;; Defined at:
  1638 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  1639 ;; Parameters:    Size  Location     Type
  1640 ;;  c               1    wreg     unsigned char 
  1641 ;; Auto vars:     Size  Location     Type
  1642 ;;  c               1    0[COMRAM] unsigned char 
  1643 ;; Return value:  Size  Location     Type
  1644 ;;                  1    wreg      void 
  1645 ;; Registers used:
  1646 ;;		wreg
  1647 ;; Tracked objects:
  1648 ;;		On entry : 0/0
  1649 ;;		On exit  : 0/0
  1650 ;;		Unchanged: 0/0
  1651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1652 ;;      Params:         0       0       0       0       0       0       0       0       0
  1653 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1654 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1655 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1656 ;;Total ram usage:        0 bytes
  1657 ;; Hardware stack levels used: 1
  1658 ;; This function calls:
  1659 ;;		Nothing
  1660 ;; This function is called by:
  1661 ;;		_fputc
  1662 ;; This function uses a non-reentrant model
  1663 ;;
  1664                           
  1665                           	psect	text5
  1666   000F88                     __ptext5:
  1667                           	callstack 0
  1668   000F88                     _putch:
  1669                           	callstack 26
  1670   000F88  0012               	return		;funcret
  1671   000F8A                     __end_of_putch:
  1672                           	callstack 0
  1673                           
  1674 ;; *************** function _abs *****************
  1675 ;; Defined at:
  1676 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  1677 ;; Parameters:    Size  Location     Type
  1678 ;;  a               2    6[COMRAM] int 
  1679 ;; Auto vars:     Size  Location     Type
  1680 ;;		None
  1681 ;; Return value:  Size  Location     Type
  1682 ;;                  2    6[COMRAM] int 
  1683 ;; Registers used:
  1684 ;;		wreg, status,2, status,0
  1685 ;; Tracked objects:
  1686 ;;		On entry : 0/0
  1687 ;;		On exit  : 0/0
  1688 ;;		Unchanged: 0/0
  1689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1690 ;;      Params:         2       0       0       0       0       0       0       0       0
  1691 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1692 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1693 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1694 ;;Total ram usage:        4 bytes
  1695 ;; Hardware stack levels used: 1
  1696 ;; This function calls:
  1697 ;;		Nothing
  1698 ;; This function is called by:
  1699 ;;		_vfpfcnvrt
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           	psect	text6
  1704   000F2C                     __ptext6:
  1705                           	callstack 0
  1706   000F2C                     _abs:
  1707                           	callstack 27
  1708   000F2C  BE08               	btfsc	(abs@a+1)^0,7,c
  1709   000F2E  EF9B  F007         	goto	u631
  1710   000F32  EF9D  F007         	goto	u630
  1711   000F36                     u631:
  1712   000F36  EFA3  F007         	goto	l838
  1713   000F3A                     u630:
  1714   000F3A  C007  F007         	movff	abs@a,?_abs
  1715   000F3E  C008  F008         	movff	abs@a+1,?_abs+1
  1716   000F42  EFAF  F007         	goto	l841
  1717   000F46                     l838:
  1718   000F46  C007  F009         	movff	abs@a,??_abs
  1719   000F4A  C008  F00A         	movff	abs@a+1,??_abs+1
  1720   000F4E  1E09               	comf	??_abs^0,f,c
  1721   000F50  1E0A               	comf	(??_abs+1)^0,f,c
  1722   000F52  4A09               	infsnz	??_abs^0,f,c
  1723   000F54  2A0A               	incf	(??_abs+1)^0,f,c
  1724   000F56  C009  F007         	movff	??_abs,?_abs
  1725   000F5A  C00A  F008         	movff	??_abs+1,?_abs+1
  1726   000F5E                     l841:
  1727   000F5E  0012               	return		;funcret
  1728   000F60                     __end_of_abs:
  1729                           	callstack 0
  1730                           
  1731 ;; *************** function ___awmod *****************
  1732 ;; Defined at:
  1733 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  1734 ;; Parameters:    Size  Location     Type
  1735 ;;  dividend        2    0[COMRAM] int 
  1736 ;;  divisor         2    2[COMRAM] int 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  sign            1    5[COMRAM] unsigned char 
  1739 ;;  counter         1    4[COMRAM] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  2    0[COMRAM] int 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1749 ;;      Params:         4       0       0       0       0       0       0       0       0
  1750 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1752 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1753 ;;Total ram usage:        6 bytes
  1754 ;; Hardware stack levels used: 1
  1755 ;; This function calls:
  1756 ;;		Nothing
  1757 ;; This function is called by:
  1758 ;;		_vfpfcnvrt
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           	psect	text7
  1763   000C42                     __ptext7:
  1764                           	callstack 0
  1765   000C42                     ___awmod:
  1766                           	callstack 27
  1767   000C42  6A06               	clrf	___awmod@sign^0,c
  1768   000C44  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1769   000C46  EF29  F006         	goto	u530
  1770   000C4A  EF27  F006         	goto	u531
  1771   000C4E                     u531:
  1772   000C4E  EF2F  F006         	goto	l1214
  1773   000C52                     u530:
  1774   000C52  6C01               	negf	___awmod@dividend^0,c
  1775   000C54  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1776   000C56  B0D8               	btfsc	status,0,c
  1777   000C58  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1778   000C5A  0E01               	movlw	1
  1779   000C5C  6E06               	movwf	___awmod@sign^0,c
  1780   000C5E                     l1214:
  1781   000C5E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1782   000C60  EF36  F006         	goto	u540
  1783   000C64  EF34  F006         	goto	u541
  1784   000C68                     u541:
  1785   000C68  EF3A  F006         	goto	l1218
  1786   000C6C                     u540:
  1787   000C6C  6C03               	negf	___awmod@divisor^0,c
  1788   000C6E  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1789   000C70  B0D8               	btfsc	status,0,c
  1790   000C72  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1791   000C74                     l1218:
  1792   000C74  5003               	movf	___awmod@divisor^0,w,c
  1793   000C76  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1794   000C78  B4D8               	btfsc	status,2,c
  1795   000C7A  EF41  F006         	goto	u551
  1796   000C7E  EF43  F006         	goto	u550
  1797   000C82                     u551:
  1798   000C82  EF67  F006         	goto	l1234
  1799   000C86                     u550:
  1800   000C86  0E01               	movlw	1
  1801   000C88  6E05               	movwf	___awmod@counter^0,c
  1802   000C8A  EF4B  F006         	goto	l1224
  1803   000C8E                     l1222:
  1804   000C8E  90D8               	bcf	status,0,c
  1805   000C90  3603               	rlcf	___awmod@divisor^0,f,c
  1806   000C92  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1807   000C94  2A05               	incf	___awmod@counter^0,f,c
  1808   000C96                     l1224:
  1809   000C96  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1810   000C98  EF50  F006         	goto	u561
  1811   000C9C  EF52  F006         	goto	u560
  1812   000CA0                     u561:
  1813   000CA0  EF47  F006         	goto	l1222
  1814   000CA4                     u560:
  1815   000CA4                     l1226:
  1816   000CA4  5003               	movf	___awmod@divisor^0,w,c
  1817   000CA6  5C01               	subwf	___awmod@dividend^0,w,c
  1818   000CA8  5004               	movf	(___awmod@divisor+1)^0,w,c
  1819   000CAA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1820   000CAC  A0D8               	btfss	status,0,c
  1821   000CAE  EF5B  F006         	goto	u571
  1822   000CB2  EF5D  F006         	goto	u570
  1823   000CB6                     u571:
  1824   000CB6  EF61  F006         	goto	l1230
  1825   000CBA                     u570:
  1826   000CBA  5003               	movf	___awmod@divisor^0,w,c
  1827   000CBC  5E01               	subwf	___awmod@dividend^0,f,c
  1828   000CBE  5004               	movf	(___awmod@divisor+1)^0,w,c
  1829   000CC0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1830   000CC2                     l1230:
  1831   000CC2  90D8               	bcf	status,0,c
  1832   000CC4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1833   000CC6  3203               	rrcf	___awmod@divisor^0,f,c
  1834   000CC8  2E05               	decfsz	___awmod@counter^0,f,c
  1835   000CCA  EF52  F006         	goto	l1226
  1836   000CCE                     l1234:
  1837   000CCE  5006               	movf	___awmod@sign^0,w,c
  1838   000CD0  B4D8               	btfsc	status,2,c
  1839   000CD2  EF6D  F006         	goto	u581
  1840   000CD6  EF6F  F006         	goto	u580
  1841   000CDA                     u581:
  1842   000CDA  EF73  F006         	goto	l1238
  1843   000CDE                     u580:
  1844   000CDE  6C01               	negf	___awmod@dividend^0,c
  1845   000CE0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1846   000CE2  B0D8               	btfsc	status,0,c
  1847   000CE4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1848   000CE6                     l1238:
  1849   000CE6  C001  F001         	movff	___awmod@dividend,?___awmod
  1850   000CEA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1851   000CEE  0012               	return		;funcret
  1852   000CF0                     __end_of___awmod:
  1853                           	callstack 0
  1854                           
  1855 ;; *************** function ___awdiv *****************
  1856 ;; Defined at:
  1857 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  1858 ;; Parameters:    Size  Location     Type
  1859 ;;  dividend        2    0[COMRAM] int 
  1860 ;;  divisor         2    2[COMRAM] int 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  quotient        2    6[COMRAM] int 
  1863 ;;  sign            1    5[COMRAM] unsigned char 
  1864 ;;  counter         1    4[COMRAM] unsigned char 
  1865 ;; Return value:  Size  Location     Type
  1866 ;;                  2    0[COMRAM] int 
  1867 ;; Registers used:
  1868 ;;		wreg, status,2, status,0
  1869 ;; Tracked objects:
  1870 ;;		On entry : 0/0
  1871 ;;		On exit  : 0/0
  1872 ;;		Unchanged: 0/0
  1873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1874 ;;      Params:         4       0       0       0       0       0       0       0       0
  1875 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1877 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1878 ;;Total ram usage:        8 bytes
  1879 ;; Hardware stack levels used: 1
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_vfpfcnvrt
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           	psect	text8
  1888   000B80                     __ptext8:
  1889                           	callstack 0
  1890   000B80                     ___awdiv:
  1891                           	callstack 27
  1892   000B80  6A06               	clrf	___awdiv@sign^0,c
  1893   000B82  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1894   000B84  EFC8  F005         	goto	u470
  1895   000B88  EFC6  F005         	goto	u471
  1896   000B8C                     u471:
  1897   000B8C  EFCE  F005         	goto	l1170
  1898   000B90                     u470:
  1899   000B90  6C03               	negf	___awdiv@divisor^0,c
  1900   000B92  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1901   000B94  B0D8               	btfsc	status,0,c
  1902   000B96  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1903   000B98  0E01               	movlw	1
  1904   000B9A  6E06               	movwf	___awdiv@sign^0,c
  1905   000B9C                     l1170:
  1906   000B9C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1907   000B9E  EFD5  F005         	goto	u480
  1908   000BA2  EFD3  F005         	goto	u481
  1909   000BA6                     u481:
  1910   000BA6  EFDB  F005         	goto	l1176
  1911   000BAA                     u480:
  1912   000BAA  6C01               	negf	___awdiv@dividend^0,c
  1913   000BAC  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1914   000BAE  B0D8               	btfsc	status,0,c
  1915   000BB0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1916   000BB2  0E01               	movlw	1
  1917   000BB4  1A06               	xorwf	___awdiv@sign^0,f,c
  1918   000BB6                     l1176:
  1919   000BB6  0E00               	movlw	0
  1920   000BB8  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1921   000BBA  0E00               	movlw	0
  1922   000BBC  6E07               	movwf	___awdiv@quotient^0,c
  1923   000BBE  5003               	movf	___awdiv@divisor^0,w,c
  1924   000BC0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1925   000BC2  B4D8               	btfsc	status,2,c
  1926   000BC4  EFE6  F005         	goto	u491
  1927   000BC8  EFE8  F005         	goto	u490
  1928   000BCC                     u491:
  1929   000BCC  EF10  F006         	goto	l1198
  1930   000BD0                     u490:
  1931   000BD0  0E01               	movlw	1
  1932   000BD2  6E05               	movwf	___awdiv@counter^0,c
  1933   000BD4  EFF0  F005         	goto	l1184
  1934   000BD8                     l1182:
  1935   000BD8  90D8               	bcf	status,0,c
  1936   000BDA  3603               	rlcf	___awdiv@divisor^0,f,c
  1937   000BDC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1938   000BDE  2A05               	incf	___awdiv@counter^0,f,c
  1939   000BE0                     l1184:
  1940   000BE0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1941   000BE2  EFF5  F005         	goto	u501
  1942   000BE6  EFF7  F005         	goto	u500
  1943   000BEA                     u501:
  1944   000BEA  EFEC  F005         	goto	l1182
  1945   000BEE                     u500:
  1946   000BEE                     l1186:
  1947   000BEE  90D8               	bcf	status,0,c
  1948   000BF0  3607               	rlcf	___awdiv@quotient^0,f,c
  1949   000BF2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1950   000BF4  5003               	movf	___awdiv@divisor^0,w,c
  1951   000BF6  5C01               	subwf	___awdiv@dividend^0,w,c
  1952   000BF8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1953   000BFA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1954   000BFC  A0D8               	btfss	status,0,c
  1955   000BFE  EF03  F006         	goto	u511
  1956   000C02  EF05  F006         	goto	u510
  1957   000C06                     u511:
  1958   000C06  EF0A  F006         	goto	l1194
  1959   000C0A                     u510:
  1960   000C0A  5003               	movf	___awdiv@divisor^0,w,c
  1961   000C0C  5E01               	subwf	___awdiv@dividend^0,f,c
  1962   000C0E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1963   000C10  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1964   000C12  8007               	bsf	___awdiv@quotient^0,0,c
  1965   000C14                     l1194:
  1966   000C14  90D8               	bcf	status,0,c
  1967   000C16  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1968   000C18  3203               	rrcf	___awdiv@divisor^0,f,c
  1969   000C1A  2E05               	decfsz	___awdiv@counter^0,f,c
  1970   000C1C  EFF7  F005         	goto	l1186
  1971   000C20                     l1198:
  1972   000C20  5006               	movf	___awdiv@sign^0,w,c
  1973   000C22  B4D8               	btfsc	status,2,c
  1974   000C24  EF16  F006         	goto	u521
  1975   000C28  EF18  F006         	goto	u520
  1976   000C2C                     u521:
  1977   000C2C  EF1C  F006         	goto	l1202
  1978   000C30                     u520:
  1979   000C30  6C07               	negf	___awdiv@quotient^0,c
  1980   000C32  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1981   000C34  B0D8               	btfsc	status,0,c
  1982   000C36  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1983   000C38                     l1202:
  1984   000C38  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1985   000C3C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1986   000C40  0012               	return		;funcret
  1987   000C42                     __end_of___awdiv:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function _SoftUSART_SendString *****************
  1991 ;; Defined at:
  1992 ;;		line 98 in file "USART_Source_File.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  str             2    4[COMRAM] PTR const unsigned char 
  1995 ;;		 -> STR_5(30), STR_4(14), STR_3(16), main@buf(32), 
  1996 ;;		 -> STR_1(37), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2008 ;;      Params:         2       0       0       0       0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2011 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2012 ;;Total ram usage:        2 bytes
  2013 ;; Hardware stack levels used: 1
  2014 ;; Hardware stack levels required when called: 1
  2015 ;; This function calls:
  2016 ;;		_SoftUSART_TxChar
  2017 ;; This function is called by:
  2018 ;;		_main
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text9
  2023   000E02                     __ptext9:
  2024                           	callstack 0
  2025   000E02                     _SoftUSART_SendString:
  2026                           	callstack 29
  2027   000E02                     
  2028                           ;USART_Source_File.c: 98: void SoftUSART_SendString(const char *str);USART_Source_File.c
      +                          : 99: {;USART_Source_File.c: 100:     while (*str != '\0') {
  2029   000E02  EF17  F007         	goto	l1336
  2030   000E06                     l1332:
  2031                           
  2032                           ;USART_Source_File.c: 101:         SoftUSART_TxChar(*str++);
  2033   000E06  C005  FFF6         	movff	SoftUSART_SendString@str,tblptrl
  2034   000E0A  C006  FFF7         	movff	SoftUSART_SendString@str+1,tblptrh
  2035   000E0E  6AF8               	clrf	tblptru,c
  2036   000E10  0E07               	movlw	(high __ramtop+-1)
  2037   000E12  64F7               	cpfsgt	tblptrh,c
  2038   000E14  D003               	bra	u767
  2039   000E16  0008               	tblrd		*
  2040   000E18  50F5               	movf	tablat,w,c
  2041   000E1A  D005               	bra	u760
  2042   000E1C                     u767:
  2043   000E1C  CFF6 FFE9          	movff	tblptrl,fsr0l
  2044   000E20  CFF7 FFEA          	movff	tblptrh,fsr0h
  2045   000E24  50EF               	movf	indf0,w,c
  2046   000E26                     u760:
  2047   000E26  EC30  F007         	call	_SoftUSART_TxChar
  2048   000E2A  4A05               	infsnz	SoftUSART_SendString@str^0,f,c
  2049   000E2C  2A06               	incf	(SoftUSART_SendString@str+1)^0,f,c
  2050   000E2E                     l1336:
  2051                           
  2052                           ;USART_Source_File.c: 100:     while (*str != '\0') {
  2053   000E2E  C005  FFF6         	movff	SoftUSART_SendString@str,tblptrl
  2054   000E32  C006  FFF7         	movff	SoftUSART_SendString@str+1,tblptrh
  2055   000E36  6AF8               	clrf	tblptru,c
  2056   000E38  0E07               	movlw	(high __ramtop+-1)
  2057   000E3A  64F7               	cpfsgt	tblptrh,c
  2058   000E3C  D003               	bra	u777
  2059   000E3E  0008               	tblrd		*
  2060   000E40  50F5               	movf	tablat,w,c
  2061   000E42  D005               	bra	u770
  2062   000E44                     u777:
  2063   000E44  CFF6 FFE9          	movff	tblptrl,fsr0l
  2064   000E48  CFF7 FFEA          	movff	tblptrh,fsr0h
  2065   000E4C  50EF               	movf	indf0,w,c
  2066   000E4E                     u770:
  2067   000E4E  0900               	iorlw	0
  2068   000E50  A4D8               	btfss	status,2,c
  2069   000E52  EF2D  F007         	goto	u781
  2070   000E56  EF2F  F007         	goto	u780
  2071   000E5A                     u781:
  2072   000E5A  EF03  F007         	goto	l1332
  2073   000E5E                     u780:
  2074   000E5E  0012               	return		;funcret
  2075   000E60                     __end_of_SoftUSART_SendString:
  2076                           	callstack 0
  2077                           
  2078 ;; *************** function _SoftUSART_TxChar *****************
  2079 ;; Defined at:
  2080 ;;		line 63 in file "USART_Source_File.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  data            1    wreg     unsigned char 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  data            1    2[COMRAM] unsigned char 
  2085 ;;  i               1    3[COMRAM] unsigned char 
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, status,2, status,0
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2095 ;;      Params:         0       0       0       0       0       0       0       0       0
  2096 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2097 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2098 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2099 ;;Total ram usage:        4 bytes
  2100 ;; Hardware stack levels used: 1
  2101 ;; This function calls:
  2102 ;;		Nothing
  2103 ;; This function is called by:
  2104 ;;		_SoftUSART_SendString
  2105 ;; This function uses a non-reentrant model
  2106 ;;
  2107                           
  2108                           	psect	text10
  2109   000E60                     __ptext10:
  2110                           	callstack 0
  2111   000E60                     _SoftUSART_TxChar:
  2112                           	callstack 29
  2113                           
  2114                           ;incstack = 0
  2115                           ;SoftUSART_TxChar@data stored from wreg
  2116   000E60  6E03               	movwf	SoftUSART_TxChar@data^0,c
  2117   000E62                     
  2118                           ;USART_Source_File.c: 63: void SoftUSART_TxChar(char data);USART_Source_File.c: 64: {;US
      +                          ART_Source_File.c: 65:     char i;;USART_Source_File.c: 66:     LATBbits.LATB0 = 0;
  2119   000E62  908A               	bcf	138,0,c	;volatile
  2120   000E64                     
  2121                           ;USART_Source_File.c: 67:     _delay((unsigned long)(((1000000 / 9600))*(8000000UL/40000
      +                          00.0)));
  2122   000E64  0E45               	movlw	69
  2123   000E66                     u857:
  2124   000E66  2EE8               	decfsz	wreg,f,c
  2125   000E68  D7FE               	bra	u857
  2126   000E6A  0000               	nop	
  2127   000E6C                     
  2128                           ;USART_Source_File.c: 69:     for (i = 0; i < 8; i++) {
  2129   000E6C  6A04               	clrf	SoftUSART_TxChar@i^0,c
  2130   000E6E                     l1034:
  2131                           
  2132                           ;USART_Source_File.c: 70:         LATBbits.LATB0 = (data >> i) & 1;
  2133   000E6E  C004  F001         	movff	SoftUSART_TxChar@i,??_SoftUSART_TxChar
  2134   000E72  C003  F002         	movff	SoftUSART_TxChar@data,??_SoftUSART_TxChar+1
  2135   000E76  2A01               	incf	??_SoftUSART_TxChar^0,f,c
  2136   000E78  EF40  F007         	goto	u294
  2137   000E7C                     u295:
  2138   000E7C  90D8               	bcf	status,0,c
  2139   000E7E  3202               	rrcf	(??_SoftUSART_TxChar+1)^0,f,c
  2140   000E80                     u294:
  2141   000E80  2E01               	decfsz	??_SoftUSART_TxChar^0,f,c
  2142   000E82  EF3E  F007         	goto	u295
  2143   000E86  0E01               	movlw	1
  2144   000E88  1602               	andwf	(??_SoftUSART_TxChar+1)^0,f,c
  2145   000E8A  508A               	movf	138,w,c	;volatile
  2146   000E8C  1802               	xorwf	(??_SoftUSART_TxChar+1)^0,w,c
  2147   000E8E  0BFE               	andlw	-2
  2148   000E90  1802               	xorwf	(??_SoftUSART_TxChar+1)^0,w,c
  2149   000E92  6E8A               	movwf	138,c	;volatile
  2150   000E94                     
  2151                           ;USART_Source_File.c: 71:         _delay((unsigned long)(((1000000 / 9600))*(8000000UL/4
      +                          000000.0)));
  2152   000E94  0E45               	movlw	69
  2153   000E96                     u867:
  2154   000E96  2EE8               	decfsz	wreg,f,c
  2155   000E98  D7FE               	bra	u867
  2156   000E9A  0000               	nop	
  2157                           
  2158                           ;USART_Source_File.c: 72:     }
  2159   000E9C  2A04               	incf	SoftUSART_TxChar@i^0,f,c
  2160   000E9E  0E07               	movlw	7
  2161   000EA0  6404               	cpfsgt	SoftUSART_TxChar@i^0,c
  2162   000EA2  EF55  F007         	goto	u301
  2163   000EA6  EF57  F007         	goto	u300
  2164   000EAA                     u301:
  2165   000EAA  EF37  F007         	goto	l1034
  2166   000EAE                     u300:
  2167   000EAE                     
  2168                           ;USART_Source_File.c: 74:     LATBbits.LATB0 = 1;
  2169   000EAE  808A               	bsf	138,0,c	;volatile
  2170   000EB0                     
  2171                           ;USART_Source_File.c: 75:     _delay((unsigned long)(((1000000 / 9600))*(8000000UL/40000
      +                          00.0)));
  2172   000EB0  0E45               	movlw	69
  2173   000EB2                     u877:
  2174   000EB2  2EE8               	decfsz	wreg,f,c
  2175   000EB4  D7FE               	bra	u877
  2176   000EB6  0000               	nop	
  2177   000EB8  0012               	return		;funcret
  2178   000EBA                     __end_of_SoftUSART_TxChar:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _SoftUSART_RxChar *****************
  2182 ;; Defined at:
  2183 ;;		line 78 in file "USART_Source_File.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  i               1    3[COMRAM] unsigned char 
  2188 ;;  data            1    2[COMRAM] unsigned char 
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      unsigned char 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2198 ;;      Params:         0       0       0       0       0       0       0       0       0
  2199 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2200 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2201 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2202 ;;Total ram usage:        4 bytes
  2203 ;; Hardware stack levels used: 1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		_main
  2208 ;; This function uses a non-reentrant model
  2209 ;;
  2210                           
  2211                           	psect	text11
  2212   000D9A                     __ptext11:
  2213                           	callstack 0
  2214   000D9A                     _SoftUSART_RxChar:
  2215                           	callstack 30
  2216   000D9A                     
  2217                           ;USART_Source_File.c: 80:     char i, data = 0;
  2218   000D9A  6A03               	clrf	SoftUSART_RxChar@data^0,c
  2219   000D9C                     l96:
  2220   000D9C  B281               	btfsc	129,1,c	;volatile
  2221   000D9E  EFD3  F006         	goto	u351
  2222   000DA2  EFD5  F006         	goto	u350
  2223   000DA6                     u351:
  2224   000DA6  EFCE  F006         	goto	l96
  2225   000DAA                     u350:
  2226   000DAA                     
  2227                           ;USART_Source_File.c: 84:     _delay((unsigned long)(((1000000 / 9600) + (1000000 / 9600
      +                          ) / 2)*(8000000UL/4000000.0)));
  2228   000DAA  0E68               	movlw	104
  2229   000DAC                     u887:
  2230   000DAC  2EE8               	decfsz	wreg,f,c
  2231   000DAE  D7FE               	bra	u887
  2232   000DB0                     
  2233                           ;USART_Source_File.c: 86:     for (i = 0; i < 8; i++) {
  2234   000DB0  6A04               	clrf	SoftUSART_RxChar@i^0,c
  2235   000DB2                     l99:
  2236                           
  2237                           ;USART_Source_File.c: 87:         if (PORTBbits.RB1)
  2238   000DB2  A281               	btfss	129,1,c	;volatile
  2239   000DB4  EFDE  F006         	goto	u361
  2240   000DB8  EFE0  F006         	goto	u360
  2241   000DBC                     u361:
  2242   000DBC  EFEE  F006         	goto	l1074
  2243   000DC0                     u360:
  2244   000DC0                     
  2245                           ;USART_Source_File.c: 88:             data |= (1 << i);
  2246   000DC0  C004  F001         	movff	SoftUSART_RxChar@i,??_SoftUSART_RxChar
  2247   000DC4  0E01               	movlw	1
  2248   000DC6  6E02               	movwf	(??_SoftUSART_RxChar+1)^0,c
  2249   000DC8  2A01               	incf	??_SoftUSART_RxChar^0,f,c
  2250   000DCA  EFE9  F006         	goto	u374
  2251   000DCE                     u375:
  2252   000DCE  90D8               	bcf	status,0,c
  2253   000DD0  3602               	rlcf	(??_SoftUSART_RxChar+1)^0,f,c
  2254   000DD2                     u374:
  2255   000DD2  2E01               	decfsz	??_SoftUSART_RxChar^0,f,c
  2256   000DD4  EFE7  F006         	goto	u375
  2257   000DD8  5002               	movf	(??_SoftUSART_RxChar+1)^0,w,c
  2258   000DDA  1203               	iorwf	SoftUSART_RxChar@data^0,f,c
  2259   000DDC                     l1074:
  2260                           
  2261                           ;USART_Source_File.c: 89:         _delay((unsigned long)(((1000000 / 9600))*(8000000UL/4
      +                          000000.0)));
  2262   000DDC  0E45               	movlw	69
  2263   000DDE                     u897:
  2264   000DDE  2EE8               	decfsz	wreg,f,c
  2265   000DE0  D7FE               	bra	u897
  2266   000DE2  0000               	nop	
  2267                           
  2268                           ;USART_Source_File.c: 90:     }
  2269   000DE4  2A04               	incf	SoftUSART_RxChar@i^0,f,c
  2270   000DE6  0E07               	movlw	7
  2271   000DE8  6404               	cpfsgt	SoftUSART_RxChar@i^0,c
  2272   000DEA  EFF9  F006         	goto	u381
  2273   000DEE  EFFB  F006         	goto	u380
  2274   000DF2                     u381:
  2275   000DF2  EFD9  F006         	goto	l99
  2276   000DF6                     u380:
  2277   000DF6                     
  2278                           ;USART_Source_File.c: 93:     _delay((unsigned long)(((1000000 / 9600))*(8000000UL/40000
      +                          00.0)));
  2279   000DF6  0E45               	movlw	69
  2280   000DF8                     u907:
  2281   000DF8  2EE8               	decfsz	wreg,f,c
  2282   000DFA  D7FE               	bra	u907
  2283   000DFC  0000               	nop	
  2284   000DFE                     
  2285                           ;USART_Source_File.c: 95:     return data;
  2286   000DFE  5003               	movf	SoftUSART_RxChar@data^0,w,c
  2287   000E00  0012               	return		;funcret
  2288   000E02                     __end_of_SoftUSART_RxChar:
  2289                           	callstack 0
  2290                           
  2291 ;; *************** function _SoftUSART_Init *****************
  2292 ;; Defined at:
  2293 ;;		line 56 in file "USART_Source_File.c"
  2294 ;; Parameters:    Size  Location     Type
  2295 ;;		None
  2296 ;; Auto vars:     Size  Location     Type
  2297 ;;		None
  2298 ;; Return value:  Size  Location     Type
  2299 ;;                  1    wreg      void 
  2300 ;; Registers used:
  2301 ;;		None
  2302 ;; Tracked objects:
  2303 ;;		On entry : 0/0
  2304 ;;		On exit  : 0/0
  2305 ;;		Unchanged: 0/0
  2306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2307 ;;      Params:         0       0       0       0       0       0       0       0       0
  2308 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2309 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2310 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2311 ;;Total ram usage:        0 bytes
  2312 ;; Hardware stack levels used: 1
  2313 ;; This function calls:
  2314 ;;		Nothing
  2315 ;; This function is called by:
  2316 ;;		_main
  2317 ;; This function uses a non-reentrant model
  2318 ;;
  2319                           
  2320                           	psect	text12
  2321   000F80                     __ptext12:
  2322                           	callstack 0
  2323   000F80                     _SoftUSART_Init:
  2324                           	callstack 30
  2325   000F80                     
  2326                           ;USART_Source_File.c: 58:     TRISBbits.TRISB0 = 0;
  2327   000F80  9093               	bcf	147,0,c	;volatile
  2328                           
  2329                           ;USART_Source_File.c: 59:     TRISBbits.TRISB1 = 1;
  2330   000F82  8293               	bsf	147,1,c	;volatile
  2331                           
  2332                           ;USART_Source_File.c: 60:     LATBbits.LATB0 = 1;
  2333   000F84  808A               	bsf	138,0,c	;volatile
  2334   000F86  0012               	return		;funcret
  2335   000F88                     __end_of_SoftUSART_Init:
  2336                           	callstack 0
  2337                           
  2338                           	psect	rparam
  2339   000001                     ___rparam_used  equ	1
  2340   000000                     ___param_bank   equ	0
  2341   000000                     __Lparam        equ	__Lrparam
  2342   000000                     __Hparam        equ	__Hrparam
  2343                           
  2344                           	psect	idloc
  2345                           
  2346                           ;Config register IDLOC0 @ 0x200000
  2347                           ;	unspecified, using default values
  2348   200000                     	org	2097152
  2349   200000  FF                 	db	255
  2350                           
  2351                           ;Config register IDLOC1 @ 0x200001
  2352                           ;	unspecified, using default values
  2353   200001                     	org	2097153
  2354   200001  FF                 	db	255
  2355                           
  2356                           ;Config register IDLOC2 @ 0x200002
  2357                           ;	unspecified, using default values
  2358   200002                     	org	2097154
  2359   200002  FF                 	db	255
  2360                           
  2361                           ;Config register IDLOC3 @ 0x200003
  2362                           ;	unspecified, using default values
  2363   200003                     	org	2097155
  2364   200003  FF                 	db	255
  2365                           
  2366                           ;Config register IDLOC4 @ 0x200004
  2367                           ;	unspecified, using default values
  2368   200004                     	org	2097156
  2369   200004  FF                 	db	255
  2370                           
  2371                           ;Config register IDLOC5 @ 0x200005
  2372                           ;	unspecified, using default values
  2373   200005                     	org	2097157
  2374   200005  FF                 	db	255
  2375                           
  2376                           ;Config register IDLOC6 @ 0x200006
  2377                           ;	unspecified, using default values
  2378   200006                     	org	2097158
  2379   200006  FF                 	db	255
  2380                           
  2381                           ;Config register IDLOC7 @ 0x200007
  2382                           ;	unspecified, using default values
  2383   200007                     	org	2097159
  2384   200007  FF                 	db	255
  2385                           
  2386                           	psect	config
  2387                           
  2388                           ;Config register CONFIG1L @ 0x300000
  2389                           ;	PLL Prescaler Selection bits
  2390                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2391                           ;	System Clock Postscaler Selection bits
  2392                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2393                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2394                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2395   300000                     	org	3145728
  2396   300000  00                 	db	0
  2397                           
  2398                           ;Config register CONFIG1H @ 0x300001
  2399                           ;	Oscillator Selection bits
  2400                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2401                           ;	Fail-Safe Clock Monitor Enable bit
  2402                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2403                           ;	Internal/External Oscillator Switchover bit
  2404                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2405   300001                     	org	3145729
  2406   300001  09                 	db	9
  2407                           
  2408                           ;Config register CONFIG2L @ 0x300002
  2409                           ;	Power-up Timer Enable bit
  2410                           ;	PWRT = OFF, PWRT disabled
  2411                           ;	Brown-out Reset Enable bits
  2412                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2413                           ;	Brown-out Reset Voltage bits
  2414                           ;	BORV = 3, Minimum setting 2.05V
  2415                           ;	USB Voltage Regulator Enable bit
  2416                           ;	VREGEN = OFF, USB voltage regulator disabled
  2417   300002                     	org	3145730
  2418   300002  1F                 	db	31
  2419                           
  2420                           ;Config register CONFIG2H @ 0x300003
  2421                           ;	Watchdog Timer Enable bit
  2422                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2423                           ;	Watchdog Timer Postscale Select bits
  2424                           ;	WDTPS = 32768, 1:32768
  2425   300003                     	org	3145731
  2426   300003  1E                 	db	30
  2427                           
  2428                           ; Padding undefined space
  2429   300004                     	org	3145732
  2430   300004  FF                 	db	255
  2431                           
  2432                           ;Config register CONFIG3H @ 0x300005
  2433                           ;	CCP2 MUX bit
  2434                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2435                           ;	PORTB A/D Enable bit
  2436                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2437                           ;	Low-Power Timer 1 Oscillator Enable bit
  2438                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2439                           ;	MCLR Pin Enable bit
  2440                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  2441   300005                     	org	3145733
  2442   300005  01                 	db	1
  2443                           
  2444                           ;Config register CONFIG4L @ 0x300006
  2445                           ;	Stack Full/Underflow Reset Enable bit
  2446                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2447                           ;	Single-Supply ICSP Enable bit
  2448                           ;	LVP = OFF, Single-Supply ICSP disabled
  2449                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2450                           ;	ICPRT = OFF, ICPORT disabled
  2451                           ;	Extended Instruction Set Enable bit
  2452                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2453                           ;	Background Debugger Enable bit
  2454                           ;	DEBUG = 0x1, unprogrammed default
  2455   300006                     	org	3145734
  2456   300006  81                 	db	129
  2457                           
  2458                           ; Padding undefined space
  2459   300007                     	org	3145735
  2460   300007  FF                 	db	255
  2461                           
  2462                           ;Config register CONFIG5L @ 0x300008
  2463                           ;	Code Protection bit
  2464                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2465                           ;	Code Protection bit
  2466                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2467                           ;	Code Protection bit
  2468                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2469                           ;	Code Protection bit
  2470                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2471   300008                     	org	3145736
  2472   300008  0F                 	db	15
  2473                           
  2474                           ;Config register CONFIG5H @ 0x300009
  2475                           ;	Boot Block Code Protection bit
  2476                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2477                           ;	Data EEPROM Code Protection bit
  2478                           ;	CPD = OFF, Data EEPROM is not code-protected
  2479   300009                     	org	3145737
  2480   300009  C0                 	db	192
  2481                           
  2482                           ;Config register CONFIG6L @ 0x30000A
  2483                           ;	Write Protection bit
  2484                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2485                           ;	Write Protection bit
  2486                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2487                           ;	Write Protection bit
  2488                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2489                           ;	Write Protection bit
  2490                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2491   30000A                     	org	3145738
  2492   30000A  0F                 	db	15
  2493                           
  2494                           ;Config register CONFIG6H @ 0x30000B
  2495                           ;	Configuration Register Write Protection bit
  2496                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2497                           ;	Boot Block Write Protection bit
  2498                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2499                           ;	Data EEPROM Write Protection bit
  2500                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2501   30000B                     	org	3145739
  2502   30000B  E0                 	db	224
  2503                           
  2504                           ;Config register CONFIG7L @ 0x30000C
  2505                           ;	Table Read Protection bit
  2506                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2507                           ;	Table Read Protection bit
  2508                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2509                           ;	Table Read Protection bit
  2510                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2511                           ;	Table Read Protection bit
  2512                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2513   30000C                     	org	3145740
  2514   30000C  0F                 	db	15
  2515                           
  2516                           ;Config register CONFIG7H @ 0x30000D
  2517                           ;	Boot Block Table Read Protection bit
  2518                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2519   30000D                     	org	3145741
  2520   30000D  40                 	db	64
  2521                           tosu	equ	0xFFF
  2522                           tosh	equ	0xFFE
  2523                           tosl	equ	0xFFD
  2524                           stkptr	equ	0xFFC
  2525                           pclatu	equ	0xFFB
  2526                           pclath	equ	0xFFA
  2527                           pcl	equ	0xFF9
  2528                           tblptru	equ	0xFF8
  2529                           tblptrh	equ	0xFF7
  2530                           tblptrl	equ	0xFF6
  2531                           tablat	equ	0xFF5
  2532                           prodh	equ	0xFF4
  2533                           prodl	equ	0xFF3
  2534                           indf0	equ	0xFEF
  2535                           postinc0	equ	0xFEE
  2536                           postdec0	equ	0xFED
  2537                           preinc0	equ	0xFEC
  2538                           plusw0	equ	0xFEB
  2539                           fsr0h	equ	0xFEA
  2540                           fsr0l	equ	0xFE9
  2541                           wreg	equ	0xFE8
  2542                           indf1	equ	0xFE7
  2543                           postinc1	equ	0xFE6
  2544                           postdec1	equ	0xFE5
  2545                           preinc1	equ	0xFE4
  2546                           plusw1	equ	0xFE3
  2547                           fsr1h	equ	0xFE2
  2548                           fsr1l	equ	0xFE1
  2549                           bsr	equ	0xFE0
  2550                           indf2	equ	0xFDF
  2551                           postinc2	equ	0xFDE
  2552                           postdec2	equ	0xFDD
  2553                           preinc2	equ	0xFDC
  2554                           plusw2	equ	0xFDB
  2555                           fsr2h	equ	0xFDA
  2556                           fsr2l	equ	0xFD9
  2557                           status	equ	0xFD8

Data Sizes:
    Strings     117
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     78      83
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    f$.$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(COMRAM[32]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(COMRAM[32]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    S795$buffer	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(COMRAM[32]), 

    S795$source	PTR const unsigned char  size(2) Largest target is 0

    SoftUSART_SendString@str	PTR const unsigned char  size(2) Largest target is 37
		 -> main@buf(COMRAM[32]), STR_1(CODE[37]), STR_3(CODE[16]), STR_4(CODE[14]), 
		 -> STR_5(CODE[30]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_2(CODE[20]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 32
		 -> main@buf(COMRAM[32]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 20
		 -> STR_2(CODE[20]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 20
		 -> STR_2(CODE[20]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 20
		 -> STR_2(CODE[20]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _SoftUSART_SendString->_SoftUSART_TxChar

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                35    35      0    2231
                                             43 COMRAM    35    35      0
                     _SoftUSART_Init
                   _SoftUSART_RxChar
               _SoftUSART_SendString
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             20    14      6    1878
                                             25 COMRAM    18    12      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    1675
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    1547
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SoftUSART_SendString                                 2     0      2     110
                                              4 COMRAM     2     0      2
                   _SoftUSART_TxChar
 ---------------------------------------------------------------------------------
 (2) _SoftUSART_TxChar                                     4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _SoftUSART_RxChar                                     4     4      0      60
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _SoftUSART_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SoftUSART_Init
   _SoftUSART_RxChar
   _SoftUSART_SendString
     _SoftUSART_TxChar
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      32     20.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     78      83     87.4%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     115      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Tue May 06 18:01:04 2025

                          l92 0EAE                            l93 0EB8                            l88 0F86  
                          l96 0D9C                            l99 0DB2                  ___awdiv@sign 0006  
                         l102 0E00                           l108 0E5E                           l342 0C40  
                         l355 0CEE                           l841 0F5E                           l817 0A7E  
                         l834 0EF6                           l853 0D98                           l838 0F46  
                         l864 0F88                           l789 0F2A                           u300 0EAE  
                         u301 0EAA                           u500 0BEE                           u501 0BEA  
                         u350 0DAA                           u510 0C0A                           u351 0DA6  
                         u511 0C06                           u360 0DC0                           u520 0C30  
                         u600 0D10                           u361 0DBC                           u521 0C2C  
                         u601 0D0C                           u530 0C52                           u610 0D36  
                         u531 0C4E                           u611 0D32                           u380 0DF6  
                         u540 0C6C                           u620 0D68                           u700 09DC  
                         u381 0DF2                           u541 0C68                           u621 0D64  
                         u701 09D8                           u374 0DD2                           u294 0E80  
                         u470 0B90                           u550 0C86                           u630 0F3A  
                         u710 09EC                           u375 0DCE                           u295 0E7C  
                         u471 0B8C                           u551 0C82                           u631 0F36  
                         u711 09E8                           u480 0BAA                           u560 0CA4  
                         u720 09FC                           u640 089A                           u800 0B16  
                         u481 0BA6                           u561 0CA0                           u721 09F8  
                         u641 0896                           u801 0B12                           u490 0BD0  
                         u570 0CBA                           u730 0A0C                           u650 08D4  
                         u810 0B3E                           u491 0BCC                           u571 0CB6  
                         u731 0A08                           u651 08D0                           u811 0B3A  
                         u580 0CDE                           u740 0A4C                           u660 0928  
                         u820 0B50                           u581 0CDA                           u741 0A48  
                         u661 0924                           u821 0B4C                           u590 0D00  
                         u670 0944                           u750 0EEE                           u591 0CFC  
                         u671 0940                           u751 0EEA                           u760 0E26  
                         u680 097A                           u681 0974                           u770 0E4E  
                         u690 097C                           u907 0DF8                           u780 0E5E  
                         u781 0E5A                           u837 0A96                           u790 0AEE  
                         u767 0E1C                           u847 0B6A                           u791 0AEA  
                         u857 0E66                           u777 0E44                           u867 0E96  
                         u877 0EB2                           u887 0DAC                           u897 0DDE  
                         _abs 0F2C                  ___awmod@sign 0006                           wreg 0FE8  
                        l1040 0EB0                          l1024 0E62                          l1200 0C30  
                        l1034 0E6E                          l1026 0E64                          l1202 0C38  
                        l1210 0C52                          ?_abs 0007                          l1052 0F80  
                        l1036 0E94                          l1028 0E6C                          l1220 0C86  
                        l1212 0C5A                          l1300 09FC                          l1062 0D9A  
                        l1038 0E9E                          l1230 0CC2                          l1222 0C8E  
                        l1214 0C5E                          l1206 0C42                          l1302 0A0C  
                        l1310 0A50                          l1080 0DFE                          l1072 0DC0  
                        l1064 0DAA                          l1232 0CC8                          l1224 0C96  
                        l1216 0C6C                          l1208 0C44                          l1304 0A1E  
                        l1320 0EBA                          l1074 0DDC                          l1066 0DB0  
                        l1330 0E02                          l1170 0B9C                          l1162 0B80  
                        l1226 0CA4                          l1234 0CCE                          l1218 0C74  
                        l1250 0D36                          l1242 0CF0                          l1306 0A38  
                        l1314 0A5C                          l1322 0EC2                          l1076 0DE6  
                        l1332 0E06                          l1180 0BD0                          l1172 0BAA  
                        l1164 0B82                          l1236 0CDE                          l1228 0CBA  
                        l1252 0D68                          l1244 0D00                          l1308 0A3A  
                        l1260 0878                          l1324 0ED2                          l1340 0F00  
                        l1078 0DF6                          l1334 0E2A                          l1190 0C0A  
                        l1182 0BD8                          l1174 0BB2                          l1166 0B90  
                        l1238 0CE6                          l1246 0D10                          l1270 08D4  
                        l1262 089A                          l1326 0EEE                          l1342 0F08  
                        l1350 0A80                          l1336 0E2E                          l1192 0C12  
                        l1184 0BE0                          l1176 0BB6                          l1168 0B98  
                        l1256 0F2C                          l1248 0D1A                          l1280 090C  
                        l1272 08DC                          l1264 08A2                          l1344 0F10  
                        l1360 0AA4                          l1352 0A84                          l1194 0C14  
                        l1186 0BEE                          l1178 0BBE                          l1258 0F3A  
                        l1290 097E                          l1282 0928                          l1274 08F0  
                        l1266 08AE                          l1346 0F20                          l1338 0EF8  
                        l1370 0AEE                          l1362 0AB4                          l1354 0A86  
                        l1196 0C1A                          l1188 0BF4                          l1292 09AE  
                        l1284 0944                          l1268 08B2                          l1380 0B2C  
                        l1372 0AF0                          l1364 0ABA                          l1356 0A88  
                        l1198 0C20                          l1294 09CA                          l1286 095C  
                        l1278 0902                          l1382 0B3E                          l1374 0B04  
                        l1366 0AD2                          l1358 0A8C                          l1296 09DC  
                        l1288 0966                          l1384 0B50                          l1376 0B16  
                        l1368 0ADC                          l1298 09EC                          l1378 0B18  
                        l1386 0B60                          STR_1 0801                          STR_2 0844  
                        STR_3 0858                          STR_4 0868                          STR_5 0826  
                        _CREN 7D5C                          _LATD 0F8C                          _RCIF 7CF5  
                        _TXIF 7CF4                          abs@a 0007                          _dbuf 0060  
                        _main 0A80                          _prec 0051                          fsr0h 0FEA  
                        fsr1h 0FE2                          indf0 0FEF                          fsr2h 0FDA  
                        fsr0l 0FE9                          indf2 0FDF                          fsr1l 0FE1  
                        fsr2l 0FD9                          start 0000                  ___param_bank 0000  
                       ??_abs 0009                         ?_main 0001               __end_of___awdiv 0C42  
             __end_of___awmod 0CF0               ___awdiv@divisor 0003               ___awdiv@counter 0005  
                       _RCREG 0FAE                         _RCSTA 0FAB                  vfpfcnvrt@fmt 000C  
                       _SPBRG 0FAF                         _TRISD 0F95                         _TXREG 0FAD  
                       _TXSTA 0FAC                         _flags 0053                         _fputc 0CF0  
                       _width 004F                         _putch 0F88                         tablat 0FF5  
                       status 0FD8               __end_of_sprintf 0F2C               __initialization 0F60  
                __end_of_main 0B80       SoftUSART_SendString@str 0005                        ??_main 002C  
               __activetblptr 0002              _SoftUSART_RxChar 0D9A              _SoftUSART_TxChar 0E60  
                      ?_fputc 0001              ___awdiv@dividend 0001                        ?_putch 0001  
                      _OSCCON 0FD3                 vfpfcnvrt@done 000F                        _TRISC6 7CA6  
                      _TRISC7 7CA7                  vfprintf@cfmt 0019                     ??___awdiv 0005  
                   ??___awmod 0005                        clear_0 0F66              ___awdiv@quotient 0007  
             ___awmod@divisor 0003                        isa$std 0001               ___awmod@counter 0005  
                      fputc@c 0001                  __mediumconst 0000                        tblptrh 0FF7  
                      tblptrl 0FF6                        tblptru 0FF8                        putch@c 0001  
            __end_of_vfprintf 0EF8                     ??_sprintf 0020                    __accesstop 0060  
     __end_of__initialization 0F76                 ___rparam_used 0001                __pcstackCOMRAM 0001  
               __end_of_fputc 0D9A                 __end_of_putch 0F8A                _SoftUSART_Init 0F80  
                     ??_fputc 0004                       ??_putch 0001                    __pbssBANK0 0060  
      __end_of_SoftUSART_Init 0F88                       __Hparam 0000                       __Lparam 0000  
    __end_of_SoftUSART_RxChar 0E02      __end_of_SoftUSART_TxChar 0EBA                       ___awdiv 0B80  
                     ___awmod 0C42                     ?_vfprintf 0016                  __psmallconst 0800  
                     __pcinit 0F60                       __ramtop 0800               ?_SoftUSART_Init 0001  
                     __ptext0 0A80                       __ptext1 0EF8                       __ptext2 0EBA  
                     __ptext3 0878                       __ptext4 0CF0                       __ptext5 0F88  
                     __ptext6 0F2C                       __ptext7 0C42                       __ptext8 0B80  
                     __ptext9 0E02              ___awmod@dividend 0001                       main@buf 002E  
                     _sprintf 0EF8          end_of_initialization 0F76                       fputc@fp 0003  
               __Lmediumconst 0000             __end_of_vfpfcnvrt 0A80                     _RCSTAbits 0FAB  
                     postdec2 0FDD                       postinc0 0FEE                       postinc1 0FE6  
                     postinc2 0FDE              vfpfcnvrt@convarg 0011                    ??_vfprintf 0019  
                   _PORTBbits 0F81  __end_of_SoftUSART_SendString 0E60                     _TRISBbits 0F93  
                 vfpfcnvrt@ap 000D                   vfpfcnvrt@cp 0010                   vfpfcnvrt@fp 000B  
         start_initialization 0F60                   __end_of_abs 0F60                   vfprintf@fmt 0017  
                 __pbssCOMRAM 004F          _SoftUSART_SendString 0E02              ??_SoftUSART_Init 0001  
           ?_SoftUSART_RxChar 0001             ?_SoftUSART_TxChar 0001                      ?___awdiv 0001  
                    ?___awmod 0001            ??_SoftUSART_RxChar 0001            ??_SoftUSART_TxChar 0001  
                 __smallconst 0800                      ?_sprintf 001A                      _LATBbits 0F8A  
                    _LATDbits 0F8C         ?_SoftUSART_SendString 0005                     _vfpfcnvrt 0878  
                  vfpfcnvrt@c 0015                      __Hrparam 0000                    vfprintf@ap 0018  
                    __Lrparam 0000                    vfprintf@fp 0016                    ?_vfpfcnvrt 000B  
                  sprintf@fmt 001B                      __ptext10 0E60                      __ptext11 0D9A  
                    __ptext12 0F80        ??_SoftUSART_SendString 0007          SoftUSART_RxChar@data 0003  
                    isa$xinst 0000                      _vfprintf 0EBA                      main@dato 004E  
        SoftUSART_TxChar@data 0003                     sprintf@ap 0020                   ??_vfpfcnvrt 000E  
                    sprintf@f 0021                      sprintf@s 001A             SoftUSART_RxChar@i 0004  
           SoftUSART_TxChar@i 0004  
