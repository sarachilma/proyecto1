

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Fri May 09 08:44:02 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=2
    21                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    22                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    24                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=3
    25                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=1
    26                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=3
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=3
    47                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=3
    51                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=3
    52                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    56                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Version 2.20
    61                           ; Generated 12/02/2020 GMT
    62                           ; 
    63                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000FE0                     bsr             equ	4064
    95   000FE9                     fsr0            equ	4073
    96   000FEA                     fsr0h           equ	4074
    97   000FE9                     fsr0l           equ	4073
    98   000FE1                     fsr1            equ	4065
    99   000FE2                     fsr1h           equ	4066
   100   000FE1                     fsr1l           equ	4065
   101   000FD9                     fsr2            equ	4057
   102   000FDA                     fsr2h           equ	4058
   103   000FD9                     fsr2l           equ	4057
   104   000FEF                     indf0           equ	4079
   105   000FE7                     indf1           equ	4071
   106   000FDF                     indf2           equ	4063
   107   000FF2                     intcon          equ	4082
   108   000000                     nvmcon          equ	0
   109   000FF9                     pcl             equ	4089
   110   000FFA                     pclath          equ	4090
   111   000FFB                     pclatu          equ	4091
   112   000FEB                     plusw0          equ	4075
   113   000FE3                     plusw1          equ	4067
   114   000FDB                     plusw2          equ	4059
   115   000FED                     postdec0        equ	4077
   116   000FE5                     postdec1        equ	4069
   117   000FDD                     postdec2        equ	4061
   118   000FEE                     postinc0        equ	4078
   119   000FE6                     postinc1        equ	4070
   120   000FDE                     postinc2        equ	4062
   121   000FEC                     preinc0         equ	4076
   122   000FE4                     preinc1         equ	4068
   123   000FDC                     preinc2         equ	4060
   124   000FF3                     prod            equ	4083
   125   000FF4                     prodh           equ	4084
   126   000FF3                     prodl           equ	4083
   127   000FD8                     status          equ	4056
   128   000FF5                     tablat          equ	4085
   129   000FF6                     tblptr          equ	4086
   130   000FF7                     tblptrh         equ	4087
   131   000FF6                     tblptrl         equ	4086
   132   000FF8                     tblptru         equ	4088
   133   000FFD                     tosl            equ	4093
   134   000FE8                     wreg            equ	4072
   135   000F62                     SPPDATA         equ	3938	;# 
   136   000F63                     SPPCFG          equ	3939	;# 
   137   000F64                     SPPEPS          equ	3940	;# 
   138   000F65                     SPPCON          equ	3941	;# 
   139   000F66                     UFRM            equ	3942	;# 
   140   000F66                     UFRML           equ	3942	;# 
   141   000F67                     UFRMH           equ	3943	;# 
   142   000F68                     UIR             equ	3944	;# 
   143   000F69                     UIE             equ	3945	;# 
   144   000F6A                     UEIR            equ	3946	;# 
   145   000F6B                     UEIE            equ	3947	;# 
   146   000F6C                     USTAT           equ	3948	;# 
   147   000F6D                     UCON            equ	3949	;# 
   148   000F6E                     UADDR           equ	3950	;# 
   149   000F6F                     UCFG            equ	3951	;# 
   150   000F70                     UEP0            equ	3952	;# 
   151   000F71                     UEP1            equ	3953	;# 
   152   000F72                     UEP2            equ	3954	;# 
   153   000F73                     UEP3            equ	3955	;# 
   154   000F74                     UEP4            equ	3956	;# 
   155   000F75                     UEP5            equ	3957	;# 
   156   000F76                     UEP6            equ	3958	;# 
   157   000F77                     UEP7            equ	3959	;# 
   158   000F78                     UEP8            equ	3960	;# 
   159   000F79                     UEP9            equ	3961	;# 
   160   000F7A                     UEP10           equ	3962	;# 
   161   000F7B                     UEP11           equ	3963	;# 
   162   000F7C                     UEP12           equ	3964	;# 
   163   000F7D                     UEP13           equ	3965	;# 
   164   000F7E                     UEP14           equ	3966	;# 
   165   000F7F                     UEP15           equ	3967	;# 
   166   000F80                     PORTA           equ	3968	;# 
   167   000F81                     PORTB           equ	3969	;# 
   168   000F82                     PORTC           equ	3970	;# 
   169   000F83                     PORTD           equ	3971	;# 
   170   000F84                     PORTE           equ	3972	;# 
   171   000F89                     LATA            equ	3977	;# 
   172   000F8A                     LATB            equ	3978	;# 
   173   000F8B                     LATC            equ	3979	;# 
   174   000F8C                     LATD            equ	3980	;# 
   175   000F8D                     LATE            equ	3981	;# 
   176   000F92                     TRISA           equ	3986	;# 
   177   000F92                     DDRA            equ	3986	;# 
   178   000F93                     TRISB           equ	3987	;# 
   179   000F93                     DDRB            equ	3987	;# 
   180   000F94                     TRISC           equ	3988	;# 
   181   000F94                     DDRC            equ	3988	;# 
   182   000F95                     TRISD           equ	3989	;# 
   183   000F95                     DDRD            equ	3989	;# 
   184   000F96                     TRISE           equ	3990	;# 
   185   000F96                     DDRE            equ	3990	;# 
   186   000F9B                     OSCTUNE         equ	3995	;# 
   187   000F9D                     PIE1            equ	3997	;# 
   188   000F9E                     PIR1            equ	3998	;# 
   189   000F9F                     IPR1            equ	3999	;# 
   190   000FA0                     PIE2            equ	4000	;# 
   191   000FA1                     PIR2            equ	4001	;# 
   192   000FA2                     IPR2            equ	4002	;# 
   193   000FA6                     EECON1          equ	4006	;# 
   194   000FA7                     EECON2          equ	4007	;# 
   195   000FA8                     EEDATA          equ	4008	;# 
   196   000FA9                     EEADR           equ	4009	;# 
   197   000FAB                     RCSTA           equ	4011	;# 
   198   000FAB                     RCSTA1          equ	4011	;# 
   199   000FAC                     TXSTA           equ	4012	;# 
   200   000FAC                     TXSTA1          equ	4012	;# 
   201   000FAD                     TXREG           equ	4013	;# 
   202   000FAD                     TXREG1          equ	4013	;# 
   203   000FAE                     RCREG           equ	4014	;# 
   204   000FAE                     RCREG1          equ	4014	;# 
   205   000FAF                     SPBRG           equ	4015	;# 
   206   000FAF                     SPBRG1          equ	4015	;# 
   207   000FB0                     SPBRGH          equ	4016	;# 
   208   000FB1                     T3CON           equ	4017	;# 
   209   000FB2                     TMR3            equ	4018	;# 
   210   000FB2                     TMR3L           equ	4018	;# 
   211   000FB3                     TMR3H           equ	4019	;# 
   212   000FB4                     CMCON           equ	4020	;# 
   213   000FB5                     CVRCON          equ	4021	;# 
   214   000FB6                     ECCP1AS         equ	4022	;# 
   215   000FB6                     CCP1AS          equ	4022	;# 
   216   000FB7                     ECCP1DEL        equ	4023	;# 
   217   000FB7                     CCP1DEL         equ	4023	;# 
   218   000FB8                     BAUDCON         equ	4024	;# 
   219   000FB8                     BAUDCTL         equ	4024	;# 
   220   000FBA                     CCP2CON         equ	4026	;# 
   221   000FBB                     CCPR2           equ	4027	;# 
   222   000FBB                     CCPR2L          equ	4027	;# 
   223   000FBC                     CCPR2H          equ	4028	;# 
   224   000FBD                     CCP1CON         equ	4029	;# 
   225   000FBD                     ECCP1CON        equ	4029	;# 
   226   000FBE                     CCPR1           equ	4030	;# 
   227   000FBE                     CCPR1L          equ	4030	;# 
   228   000FBF                     CCPR1H          equ	4031	;# 
   229   000FC0                     ADCON2          equ	4032	;# 
   230   000FC1                     ADCON1          equ	4033	;# 
   231   000FC2                     ADCON0          equ	4034	;# 
   232   000FC3                     ADRES           equ	4035	;# 
   233   000FC3                     ADRESL          equ	4035	;# 
   234   000FC4                     ADRESH          equ	4036	;# 
   235   000FC5                     SSPCON2         equ	4037	;# 
   236   000FC6                     SSPCON1         equ	4038	;# 
   237   000FC7                     SSPSTAT         equ	4039	;# 
   238   000FC8                     SSPADD          equ	4040	;# 
   239   000FC9                     SSPBUF          equ	4041	;# 
   240   000FCA                     T2CON           equ	4042	;# 
   241   000FCB                     PR2             equ	4043	;# 
   242   000FCB                     MEMCON          equ	4043	;# 
   243   000FCC                     TMR2            equ	4044	;# 
   244   000FCD                     T1CON           equ	4045	;# 
   245   000FCE                     TMR1            equ	4046	;# 
   246   000FCE                     TMR1L           equ	4046	;# 
   247   000FCF                     TMR1H           equ	4047	;# 
   248   000FD0                     RCON            equ	4048	;# 
   249   000FD1                     WDTCON          equ	4049	;# 
   250   000FD2                     HLVDCON         equ	4050	;# 
   251   000FD2                     LVDCON          equ	4050	;# 
   252   000FD3                     OSCCON          equ	4051	;# 
   253   000FD5                     T0CON           equ	4053	;# 
   254   000FD6                     TMR0            equ	4054	;# 
   255   000FD6                     TMR0L           equ	4054	;# 
   256   000FD7                     TMR0H           equ	4055	;# 
   257   000FD8                     STATUS          equ	4056	;# 
   258   000FD9                     FSR2            equ	4057	;# 
   259   000FD9                     FSR2L           equ	4057	;# 
   260   000FDA                     FSR2H           equ	4058	;# 
   261   000FDB                     PLUSW2          equ	4059	;# 
   262   000FDC                     PREINC2         equ	4060	;# 
   263   000FDD                     POSTDEC2        equ	4061	;# 
   264   000FDE                     POSTINC2        equ	4062	;# 
   265   000FDF                     INDF2           equ	4063	;# 
   266   000FE0                     BSR             equ	4064	;# 
   267   000FE1                     FSR1            equ	4065	;# 
   268   000FE1                     FSR1L           equ	4065	;# 
   269   000FE2                     FSR1H           equ	4066	;# 
   270   000FE3                     PLUSW1          equ	4067	;# 
   271   000FE4                     PREINC1         equ	4068	;# 
   272   000FE5                     POSTDEC1        equ	4069	;# 
   273   000FE6                     POSTINC1        equ	4070	;# 
   274   000FE7                     INDF1           equ	4071	;# 
   275   000FE8                     WREG            equ	4072	;# 
   276   000FE9                     FSR0            equ	4073	;# 
   277   000FE9                     FSR0L           equ	4073	;# 
   278   000FEA                     FSR0H           equ	4074	;# 
   279   000FEB                     PLUSW0          equ	4075	;# 
   280   000FEC                     PREINC0         equ	4076	;# 
   281   000FED                     POSTDEC0        equ	4077	;# 
   282   000FEE                     POSTINC0        equ	4078	;# 
   283   000FEF                     INDF0           equ	4079	;# 
   284   000FF0                     INTCON3         equ	4080	;# 
   285   000FF1                     INTCON2         equ	4081	;# 
   286   000FF2                     INTCON          equ	4082	;# 
   287   000FF3                     PROD            equ	4083	;# 
   288   000FF3                     PRODL           equ	4083	;# 
   289   000FF4                     PRODH           equ	4084	;# 
   290   000FF5                     TABLAT          equ	4085	;# 
   291   000FF6                     TBLPTR          equ	4086	;# 
   292   000FF6                     TBLPTRL         equ	4086	;# 
   293   000FF7                     TBLPTRH         equ	4087	;# 
   294   000FF8                     TBLPTRU         equ	4088	;# 
   295   000FF9                     PCLAT           equ	4089	;# 
   296   000FF9                     PC              equ	4089	;# 
   297   000FF9                     PCL             equ	4089	;# 
   298   000FFA                     PCLATH          equ	4090	;# 
   299   000FFB                     PCLATU          equ	4091	;# 
   300   000FFC                     STKPTR          equ	4092	;# 
   301   000FFD                     TOS             equ	4093	;# 
   302   000FFD                     TOSL            equ	4093	;# 
   303   000FFE                     TOSH            equ	4094	;# 
   304   000FFF                     TOSU            equ	4095	;# 
   305   000F62                     SPPDATA         equ	3938	;# 
   306   000F63                     SPPCFG          equ	3939	;# 
   307   000F64                     SPPEPS          equ	3940	;# 
   308   000F65                     SPPCON          equ	3941	;# 
   309   000F66                     UFRM            equ	3942	;# 
   310   000F66                     UFRML           equ	3942	;# 
   311   000F67                     UFRMH           equ	3943	;# 
   312   000F68                     UIR             equ	3944	;# 
   313   000F69                     UIE             equ	3945	;# 
   314   000F6A                     UEIR            equ	3946	;# 
   315   000F6B                     UEIE            equ	3947	;# 
   316   000F6C                     USTAT           equ	3948	;# 
   317   000F6D                     UCON            equ	3949	;# 
   318   000F6E                     UADDR           equ	3950	;# 
   319   000F6F                     UCFG            equ	3951	;# 
   320   000F70                     UEP0            equ	3952	;# 
   321   000F71                     UEP1            equ	3953	;# 
   322   000F72                     UEP2            equ	3954	;# 
   323   000F73                     UEP3            equ	3955	;# 
   324   000F74                     UEP4            equ	3956	;# 
   325   000F75                     UEP5            equ	3957	;# 
   326   000F76                     UEP6            equ	3958	;# 
   327   000F77                     UEP7            equ	3959	;# 
   328   000F78                     UEP8            equ	3960	;# 
   329   000F79                     UEP9            equ	3961	;# 
   330   000F7A                     UEP10           equ	3962	;# 
   331   000F7B                     UEP11           equ	3963	;# 
   332   000F7C                     UEP12           equ	3964	;# 
   333   000F7D                     UEP13           equ	3965	;# 
   334   000F7E                     UEP14           equ	3966	;# 
   335   000F7F                     UEP15           equ	3967	;# 
   336   000F80                     PORTA           equ	3968	;# 
   337   000F81                     PORTB           equ	3969	;# 
   338   000F82                     PORTC           equ	3970	;# 
   339   000F83                     PORTD           equ	3971	;# 
   340   000F84                     PORTE           equ	3972	;# 
   341   000F89                     LATA            equ	3977	;# 
   342   000F8A                     LATB            equ	3978	;# 
   343   000F8B                     LATC            equ	3979	;# 
   344   000F8C                     LATD            equ	3980	;# 
   345   000F8D                     LATE            equ	3981	;# 
   346   000F92                     TRISA           equ	3986	;# 
   347   000F92                     DDRA            equ	3986	;# 
   348   000F93                     TRISB           equ	3987	;# 
   349   000F93                     DDRB            equ	3987	;# 
   350   000F94                     TRISC           equ	3988	;# 
   351   000F94                     DDRC            equ	3988	;# 
   352   000F95                     TRISD           equ	3989	;# 
   353   000F95                     DDRD            equ	3989	;# 
   354   000F96                     TRISE           equ	3990	;# 
   355   000F96                     DDRE            equ	3990	;# 
   356   000F9B                     OSCTUNE         equ	3995	;# 
   357   000F9D                     PIE1            equ	3997	;# 
   358   000F9E                     PIR1            equ	3998	;# 
   359   000F9F                     IPR1            equ	3999	;# 
   360   000FA0                     PIE2            equ	4000	;# 
   361   000FA1                     PIR2            equ	4001	;# 
   362   000FA2                     IPR2            equ	4002	;# 
   363   000FA6                     EECON1          equ	4006	;# 
   364   000FA7                     EECON2          equ	4007	;# 
   365   000FA8                     EEDATA          equ	4008	;# 
   366   000FA9                     EEADR           equ	4009	;# 
   367   000FAB                     RCSTA           equ	4011	;# 
   368   000FAB                     RCSTA1          equ	4011	;# 
   369   000FAC                     TXSTA           equ	4012	;# 
   370   000FAC                     TXSTA1          equ	4012	;# 
   371   000FAD                     TXREG           equ	4013	;# 
   372   000FAD                     TXREG1          equ	4013	;# 
   373   000FAE                     RCREG           equ	4014	;# 
   374   000FAE                     RCREG1          equ	4014	;# 
   375   000FAF                     SPBRG           equ	4015	;# 
   376   000FAF                     SPBRG1          equ	4015	;# 
   377   000FB0                     SPBRGH          equ	4016	;# 
   378   000FB1                     T3CON           equ	4017	;# 
   379   000FB2                     TMR3            equ	4018	;# 
   380   000FB2                     TMR3L           equ	4018	;# 
   381   000FB3                     TMR3H           equ	4019	;# 
   382   000FB4                     CMCON           equ	4020	;# 
   383   000FB5                     CVRCON          equ	4021	;# 
   384   000FB6                     ECCP1AS         equ	4022	;# 
   385   000FB6                     CCP1AS          equ	4022	;# 
   386   000FB7                     ECCP1DEL        equ	4023	;# 
   387   000FB7                     CCP1DEL         equ	4023	;# 
   388   000FB8                     BAUDCON         equ	4024	;# 
   389   000FB8                     BAUDCTL         equ	4024	;# 
   390   000FBA                     CCP2CON         equ	4026	;# 
   391   000FBB                     CCPR2           equ	4027	;# 
   392   000FBB                     CCPR2L          equ	4027	;# 
   393   000FBC                     CCPR2H          equ	4028	;# 
   394   000FBD                     CCP1CON         equ	4029	;# 
   395   000FBD                     ECCP1CON        equ	4029	;# 
   396   000FBE                     CCPR1           equ	4030	;# 
   397   000FBE                     CCPR1L          equ	4030	;# 
   398   000FBF                     CCPR1H          equ	4031	;# 
   399   000FC0                     ADCON2          equ	4032	;# 
   400   000FC1                     ADCON1          equ	4033	;# 
   401   000FC2                     ADCON0          equ	4034	;# 
   402   000FC3                     ADRES           equ	4035	;# 
   403   000FC3                     ADRESL          equ	4035	;# 
   404   000FC4                     ADRESH          equ	4036	;# 
   405   000FC5                     SSPCON2         equ	4037	;# 
   406   000FC6                     SSPCON1         equ	4038	;# 
   407   000FC7                     SSPSTAT         equ	4039	;# 
   408   000FC8                     SSPADD          equ	4040	;# 
   409   000FC9                     SSPBUF          equ	4041	;# 
   410   000FCA                     T2CON           equ	4042	;# 
   411   000FCB                     PR2             equ	4043	;# 
   412   000FCB                     MEMCON          equ	4043	;# 
   413   000FCC                     TMR2            equ	4044	;# 
   414   000FCD                     T1CON           equ	4045	;# 
   415   000FCE                     TMR1            equ	4046	;# 
   416   000FCE                     TMR1L           equ	4046	;# 
   417   000FCF                     TMR1H           equ	4047	;# 
   418   000FD0                     RCON            equ	4048	;# 
   419   000FD1                     WDTCON          equ	4049	;# 
   420   000FD2                     HLVDCON         equ	4050	;# 
   421   000FD2                     LVDCON          equ	4050	;# 
   422   000FD3                     OSCCON          equ	4051	;# 
   423   000FD5                     T0CON           equ	4053	;# 
   424   000FD6                     TMR0            equ	4054	;# 
   425   000FD6                     TMR0L           equ	4054	;# 
   426   000FD7                     TMR0H           equ	4055	;# 
   427   000FD8                     STATUS          equ	4056	;# 
   428   000FD9                     FSR2            equ	4057	;# 
   429   000FD9                     FSR2L           equ	4057	;# 
   430   000FDA                     FSR2H           equ	4058	;# 
   431   000FDB                     PLUSW2          equ	4059	;# 
   432   000FDC                     PREINC2         equ	4060	;# 
   433   000FDD                     POSTDEC2        equ	4061	;# 
   434   000FDE                     POSTINC2        equ	4062	;# 
   435   000FDF                     INDF2           equ	4063	;# 
   436   000FE0                     BSR             equ	4064	;# 
   437   000FE1                     FSR1            equ	4065	;# 
   438   000FE1                     FSR1L           equ	4065	;# 
   439   000FE2                     FSR1H           equ	4066	;# 
   440   000FE3                     PLUSW1          equ	4067	;# 
   441   000FE4                     PREINC1         equ	4068	;# 
   442   000FE5                     POSTDEC1        equ	4069	;# 
   443   000FE6                     POSTINC1        equ	4070	;# 
   444   000FE7                     INDF1           equ	4071	;# 
   445   000FE8                     WREG            equ	4072	;# 
   446   000FE9                     FSR0            equ	4073	;# 
   447   000FE9                     FSR0L           equ	4073	;# 
   448   000FEA                     FSR0H           equ	4074	;# 
   449   000FEB                     PLUSW0          equ	4075	;# 
   450   000FEC                     PREINC0         equ	4076	;# 
   451   000FED                     POSTDEC0        equ	4077	;# 
   452   000FEE                     POSTINC0        equ	4078	;# 
   453   000FEF                     INDF0           equ	4079	;# 
   454   000FF0                     INTCON3         equ	4080	;# 
   455   000FF1                     INTCON2         equ	4081	;# 
   456   000FF2                     INTCON          equ	4082	;# 
   457   000FF3                     PROD            equ	4083	;# 
   458   000FF3                     PRODL           equ	4083	;# 
   459   000FF4                     PRODH           equ	4084	;# 
   460   000FF5                     TABLAT          equ	4085	;# 
   461   000FF6                     TBLPTR          equ	4086	;# 
   462   000FF6                     TBLPTRL         equ	4086	;# 
   463   000FF7                     TBLPTRH         equ	4087	;# 
   464   000FF8                     TBLPTRU         equ	4088	;# 
   465   000FF9                     PCLAT           equ	4089	;# 
   466   000FF9                     PC              equ	4089	;# 
   467   000FF9                     PCL             equ	4089	;# 
   468   000FFA                     PCLATH          equ	4090	;# 
   469   000FFB                     PCLATU          equ	4091	;# 
   470   000FFC                     STKPTR          equ	4092	;# 
   471   000FFD                     TOS             equ	4093	;# 
   472   000FFD                     TOSL            equ	4093	;# 
   473   000FFE                     TOSH            equ	4094	;# 
   474   000FFF                     TOSU            equ	4095	;# 
   475   000F62                     SPPDATA         equ	3938	;# 
   476   000F63                     SPPCFG          equ	3939	;# 
   477   000F64                     SPPEPS          equ	3940	;# 
   478   000F65                     SPPCON          equ	3941	;# 
   479   000F66                     UFRM            equ	3942	;# 
   480   000F66                     UFRML           equ	3942	;# 
   481   000F67                     UFRMH           equ	3943	;# 
   482   000F68                     UIR             equ	3944	;# 
   483   000F69                     UIE             equ	3945	;# 
   484   000F6A                     UEIR            equ	3946	;# 
   485   000F6B                     UEIE            equ	3947	;# 
   486   000F6C                     USTAT           equ	3948	;# 
   487   000F6D                     UCON            equ	3949	;# 
   488   000F6E                     UADDR           equ	3950	;# 
   489   000F6F                     UCFG            equ	3951	;# 
   490   000F70                     UEP0            equ	3952	;# 
   491   000F71                     UEP1            equ	3953	;# 
   492   000F72                     UEP2            equ	3954	;# 
   493   000F73                     UEP3            equ	3955	;# 
   494   000F74                     UEP4            equ	3956	;# 
   495   000F75                     UEP5            equ	3957	;# 
   496   000F76                     UEP6            equ	3958	;# 
   497   000F77                     UEP7            equ	3959	;# 
   498   000F78                     UEP8            equ	3960	;# 
   499   000F79                     UEP9            equ	3961	;# 
   500   000F7A                     UEP10           equ	3962	;# 
   501   000F7B                     UEP11           equ	3963	;# 
   502   000F7C                     UEP12           equ	3964	;# 
   503   000F7D                     UEP13           equ	3965	;# 
   504   000F7E                     UEP14           equ	3966	;# 
   505   000F7F                     UEP15           equ	3967	;# 
   506   000F80                     PORTA           equ	3968	;# 
   507   000F81                     PORTB           equ	3969	;# 
   508   000F82                     PORTC           equ	3970	;# 
   509   000F83                     PORTD           equ	3971	;# 
   510   000F84                     PORTE           equ	3972	;# 
   511   000F89                     LATA            equ	3977	;# 
   512   000F8A                     LATB            equ	3978	;# 
   513   000F8B                     LATC            equ	3979	;# 
   514   000F8C                     LATD            equ	3980	;# 
   515   000F8D                     LATE            equ	3981	;# 
   516   000F92                     TRISA           equ	3986	;# 
   517   000F92                     DDRA            equ	3986	;# 
   518   000F93                     TRISB           equ	3987	;# 
   519   000F93                     DDRB            equ	3987	;# 
   520   000F94                     TRISC           equ	3988	;# 
   521   000F94                     DDRC            equ	3988	;# 
   522   000F95                     TRISD           equ	3989	;# 
   523   000F95                     DDRD            equ	3989	;# 
   524   000F96                     TRISE           equ	3990	;# 
   525   000F96                     DDRE            equ	3990	;# 
   526   000F9B                     OSCTUNE         equ	3995	;# 
   527   000F9D                     PIE1            equ	3997	;# 
   528   000F9E                     PIR1            equ	3998	;# 
   529   000F9F                     IPR1            equ	3999	;# 
   530   000FA0                     PIE2            equ	4000	;# 
   531   000FA1                     PIR2            equ	4001	;# 
   532   000FA2                     IPR2            equ	4002	;# 
   533   000FA6                     EECON1          equ	4006	;# 
   534   000FA7                     EECON2          equ	4007	;# 
   535   000FA8                     EEDATA          equ	4008	;# 
   536   000FA9                     EEADR           equ	4009	;# 
   537   000FAB                     RCSTA           equ	4011	;# 
   538   000FAB                     RCSTA1          equ	4011	;# 
   539   000FAC                     TXSTA           equ	4012	;# 
   540   000FAC                     TXSTA1          equ	4012	;# 
   541   000FAD                     TXREG           equ	4013	;# 
   542   000FAD                     TXREG1          equ	4013	;# 
   543   000FAE                     RCREG           equ	4014	;# 
   544   000FAE                     RCREG1          equ	4014	;# 
   545   000FAF                     SPBRG           equ	4015	;# 
   546   000FAF                     SPBRG1          equ	4015	;# 
   547   000FB0                     SPBRGH          equ	4016	;# 
   548   000FB1                     T3CON           equ	4017	;# 
   549   000FB2                     TMR3            equ	4018	;# 
   550   000FB2                     TMR3L           equ	4018	;# 
   551   000FB3                     TMR3H           equ	4019	;# 
   552   000FB4                     CMCON           equ	4020	;# 
   553   000FB5                     CVRCON          equ	4021	;# 
   554   000FB6                     ECCP1AS         equ	4022	;# 
   555   000FB6                     CCP1AS          equ	4022	;# 
   556   000FB7                     ECCP1DEL        equ	4023	;# 
   557   000FB7                     CCP1DEL         equ	4023	;# 
   558   000FB8                     BAUDCON         equ	4024	;# 
   559   000FB8                     BAUDCTL         equ	4024	;# 
   560   000FBA                     CCP2CON         equ	4026	;# 
   561   000FBB                     CCPR2           equ	4027	;# 
   562   000FBB                     CCPR2L          equ	4027	;# 
   563   000FBC                     CCPR2H          equ	4028	;# 
   564   000FBD                     CCP1CON         equ	4029	;# 
   565   000FBD                     ECCP1CON        equ	4029	;# 
   566   000FBE                     CCPR1           equ	4030	;# 
   567   000FBE                     CCPR1L          equ	4030	;# 
   568   000FBF                     CCPR1H          equ	4031	;# 
   569   000FC0                     ADCON2          equ	4032	;# 
   570   000FC1                     ADCON1          equ	4033	;# 
   571   000FC2                     ADCON0          equ	4034	;# 
   572   000FC3                     ADRES           equ	4035	;# 
   573   000FC3                     ADRESL          equ	4035	;# 
   574   000FC4                     ADRESH          equ	4036	;# 
   575   000FC5                     SSPCON2         equ	4037	;# 
   576   000FC6                     SSPCON1         equ	4038	;# 
   577   000FC7                     SSPSTAT         equ	4039	;# 
   578   000FC8                     SSPADD          equ	4040	;# 
   579   000FC9                     SSPBUF          equ	4041	;# 
   580   000FCA                     T2CON           equ	4042	;# 
   581   000FCB                     PR2             equ	4043	;# 
   582   000FCB                     MEMCON          equ	4043	;# 
   583   000FCC                     TMR2            equ	4044	;# 
   584   000FCD                     T1CON           equ	4045	;# 
   585   000FCE                     TMR1            equ	4046	;# 
   586   000FCE                     TMR1L           equ	4046	;# 
   587   000FCF                     TMR1H           equ	4047	;# 
   588   000FD0                     RCON            equ	4048	;# 
   589   000FD1                     WDTCON          equ	4049	;# 
   590   000FD2                     HLVDCON         equ	4050	;# 
   591   000FD2                     LVDCON          equ	4050	;# 
   592   000FD3                     OSCCON          equ	4051	;# 
   593   000FD5                     T0CON           equ	4053	;# 
   594   000FD6                     TMR0            equ	4054	;# 
   595   000FD6                     TMR0L           equ	4054	;# 
   596   000FD7                     TMR0H           equ	4055	;# 
   597   000FD8                     STATUS          equ	4056	;# 
   598   000FD9                     FSR2            equ	4057	;# 
   599   000FD9                     FSR2L           equ	4057	;# 
   600   000FDA                     FSR2H           equ	4058	;# 
   601   000FDB                     PLUSW2          equ	4059	;# 
   602   000FDC                     PREINC2         equ	4060	;# 
   603   000FDD                     POSTDEC2        equ	4061	;# 
   604   000FDE                     POSTINC2        equ	4062	;# 
   605   000FDF                     INDF2           equ	4063	;# 
   606   000FE0                     BSR             equ	4064	;# 
   607   000FE1                     FSR1            equ	4065	;# 
   608   000FE1                     FSR1L           equ	4065	;# 
   609   000FE2                     FSR1H           equ	4066	;# 
   610   000FE3                     PLUSW1          equ	4067	;# 
   611   000FE4                     PREINC1         equ	4068	;# 
   612   000FE5                     POSTDEC1        equ	4069	;# 
   613   000FE6                     POSTINC1        equ	4070	;# 
   614   000FE7                     INDF1           equ	4071	;# 
   615   000FE8                     WREG            equ	4072	;# 
   616   000FE9                     FSR0            equ	4073	;# 
   617   000FE9                     FSR0L           equ	4073	;# 
   618   000FEA                     FSR0H           equ	4074	;# 
   619   000FEB                     PLUSW0          equ	4075	;# 
   620   000FEC                     PREINC0         equ	4076	;# 
   621   000FED                     POSTDEC0        equ	4077	;# 
   622   000FEE                     POSTINC0        equ	4078	;# 
   623   000FEF                     INDF0           equ	4079	;# 
   624   000FF0                     INTCON3         equ	4080	;# 
   625   000FF1                     INTCON2         equ	4081	;# 
   626   000FF2                     INTCON          equ	4082	;# 
   627   000FF3                     PROD            equ	4083	;# 
   628   000FF3                     PRODL           equ	4083	;# 
   629   000FF4                     PRODH           equ	4084	;# 
   630   000FF5                     TABLAT          equ	4085	;# 
   631   000FF6                     TBLPTR          equ	4086	;# 
   632   000FF6                     TBLPTRL         equ	4086	;# 
   633   000FF7                     TBLPTRH         equ	4087	;# 
   634   000FF8                     TBLPTRU         equ	4088	;# 
   635   000FF9                     PCLAT           equ	4089	;# 
   636   000FF9                     PC              equ	4089	;# 
   637   000FF9                     PCL             equ	4089	;# 
   638   000FFA                     PCLATH          equ	4090	;# 
   639   000FFB                     PCLATU          equ	4091	;# 
   640   000FFC                     STKPTR          equ	4092	;# 
   641   000FFD                     TOS             equ	4093	;# 
   642   000FFD                     TOSL            equ	4093	;# 
   643   000FFE                     TOSH            equ	4094	;# 
   644   000FFF                     TOSU            equ	4095	;# 
   645   000F62                     SPPDATA         equ	3938	;# 
   646   000F63                     SPPCFG          equ	3939	;# 
   647   000F64                     SPPEPS          equ	3940	;# 
   648   000F65                     SPPCON          equ	3941	;# 
   649   000F66                     UFRM            equ	3942	;# 
   650   000F66                     UFRML           equ	3942	;# 
   651   000F67                     UFRMH           equ	3943	;# 
   652   000F68                     UIR             equ	3944	;# 
   653   000F69                     UIE             equ	3945	;# 
   654   000F6A                     UEIR            equ	3946	;# 
   655   000F6B                     UEIE            equ	3947	;# 
   656   000F6C                     USTAT           equ	3948	;# 
   657   000F6D                     UCON            equ	3949	;# 
   658   000F6E                     UADDR           equ	3950	;# 
   659   000F6F                     UCFG            equ	3951	;# 
   660   000F70                     UEP0            equ	3952	;# 
   661   000F71                     UEP1            equ	3953	;# 
   662   000F72                     UEP2            equ	3954	;# 
   663   000F73                     UEP3            equ	3955	;# 
   664   000F74                     UEP4            equ	3956	;# 
   665   000F75                     UEP5            equ	3957	;# 
   666   000F76                     UEP6            equ	3958	;# 
   667   000F77                     UEP7            equ	3959	;# 
   668   000F78                     UEP8            equ	3960	;# 
   669   000F79                     UEP9            equ	3961	;# 
   670   000F7A                     UEP10           equ	3962	;# 
   671   000F7B                     UEP11           equ	3963	;# 
   672   000F7C                     UEP12           equ	3964	;# 
   673   000F7D                     UEP13           equ	3965	;# 
   674   000F7E                     UEP14           equ	3966	;# 
   675   000F7F                     UEP15           equ	3967	;# 
   676   000F80                     PORTA           equ	3968	;# 
   677   000F81                     PORTB           equ	3969	;# 
   678   000F82                     PORTC           equ	3970	;# 
   679   000F83                     PORTD           equ	3971	;# 
   680   000F84                     PORTE           equ	3972	;# 
   681   000F89                     LATA            equ	3977	;# 
   682   000F8A                     LATB            equ	3978	;# 
   683   000F8B                     LATC            equ	3979	;# 
   684   000F8C                     LATD            equ	3980	;# 
   685   000F8D                     LATE            equ	3981	;# 
   686   000F92                     TRISA           equ	3986	;# 
   687   000F92                     DDRA            equ	3986	;# 
   688   000F93                     TRISB           equ	3987	;# 
   689   000F93                     DDRB            equ	3987	;# 
   690   000F94                     TRISC           equ	3988	;# 
   691   000F94                     DDRC            equ	3988	;# 
   692   000F95                     TRISD           equ	3989	;# 
   693   000F95                     DDRD            equ	3989	;# 
   694   000F96                     TRISE           equ	3990	;# 
   695   000F96                     DDRE            equ	3990	;# 
   696   000F9B                     OSCTUNE         equ	3995	;# 
   697   000F9D                     PIE1            equ	3997	;# 
   698   000F9E                     PIR1            equ	3998	;# 
   699   000F9F                     IPR1            equ	3999	;# 
   700   000FA0                     PIE2            equ	4000	;# 
   701   000FA1                     PIR2            equ	4001	;# 
   702   000FA2                     IPR2            equ	4002	;# 
   703   000FA6                     EECON1          equ	4006	;# 
   704   000FA7                     EECON2          equ	4007	;# 
   705   000FA8                     EEDATA          equ	4008	;# 
   706   000FA9                     EEADR           equ	4009	;# 
   707   000FAB                     RCSTA           equ	4011	;# 
   708   000FAB                     RCSTA1          equ	4011	;# 
   709   000FAC                     TXSTA           equ	4012	;# 
   710   000FAC                     TXSTA1          equ	4012	;# 
   711   000FAD                     TXREG           equ	4013	;# 
   712   000FAD                     TXREG1          equ	4013	;# 
   713   000FAE                     RCREG           equ	4014	;# 
   714   000FAE                     RCREG1          equ	4014	;# 
   715   000FAF                     SPBRG           equ	4015	;# 
   716   000FAF                     SPBRG1          equ	4015	;# 
   717   000FB0                     SPBRGH          equ	4016	;# 
   718   000FB1                     T3CON           equ	4017	;# 
   719   000FB2                     TMR3            equ	4018	;# 
   720   000FB2                     TMR3L           equ	4018	;# 
   721   000FB3                     TMR3H           equ	4019	;# 
   722   000FB4                     CMCON           equ	4020	;# 
   723   000FB5                     CVRCON          equ	4021	;# 
   724   000FB6                     ECCP1AS         equ	4022	;# 
   725   000FB6                     CCP1AS          equ	4022	;# 
   726   000FB7                     ECCP1DEL        equ	4023	;# 
   727   000FB7                     CCP1DEL         equ	4023	;# 
   728   000FB8                     BAUDCON         equ	4024	;# 
   729   000FB8                     BAUDCTL         equ	4024	;# 
   730   000FBA                     CCP2CON         equ	4026	;# 
   731   000FBB                     CCPR2           equ	4027	;# 
   732   000FBB                     CCPR2L          equ	4027	;# 
   733   000FBC                     CCPR2H          equ	4028	;# 
   734   000FBD                     CCP1CON         equ	4029	;# 
   735   000FBD                     ECCP1CON        equ	4029	;# 
   736   000FBE                     CCPR1           equ	4030	;# 
   737   000FBE                     CCPR1L          equ	4030	;# 
   738   000FBF                     CCPR1H          equ	4031	;# 
   739   000FC0                     ADCON2          equ	4032	;# 
   740   000FC1                     ADCON1          equ	4033	;# 
   741   000FC2                     ADCON0          equ	4034	;# 
   742   000FC3                     ADRES           equ	4035	;# 
   743   000FC3                     ADRESL          equ	4035	;# 
   744   000FC4                     ADRESH          equ	4036	;# 
   745   000FC5                     SSPCON2         equ	4037	;# 
   746   000FC6                     SSPCON1         equ	4038	;# 
   747   000FC7                     SSPSTAT         equ	4039	;# 
   748   000FC8                     SSPADD          equ	4040	;# 
   749   000FC9                     SSPBUF          equ	4041	;# 
   750   000FCA                     T2CON           equ	4042	;# 
   751   000FCB                     PR2             equ	4043	;# 
   752   000FCB                     MEMCON          equ	4043	;# 
   753   000FCC                     TMR2            equ	4044	;# 
   754   000FCD                     T1CON           equ	4045	;# 
   755   000FCE                     TMR1            equ	4046	;# 
   756   000FCE                     TMR1L           equ	4046	;# 
   757   000FCF                     TMR1H           equ	4047	;# 
   758   000FD0                     RCON            equ	4048	;# 
   759   000FD1                     WDTCON          equ	4049	;# 
   760   000FD2                     HLVDCON         equ	4050	;# 
   761   000FD2                     LVDCON          equ	4050	;# 
   762   000FD3                     OSCCON          equ	4051	;# 
   763   000FD5                     T0CON           equ	4053	;# 
   764   000FD6                     TMR0            equ	4054	;# 
   765   000FD6                     TMR0L           equ	4054	;# 
   766   000FD7                     TMR0H           equ	4055	;# 
   767   000FD8                     STATUS          equ	4056	;# 
   768   000FD9                     FSR2            equ	4057	;# 
   769   000FD9                     FSR2L           equ	4057	;# 
   770   000FDA                     FSR2H           equ	4058	;# 
   771   000FDB                     PLUSW2          equ	4059	;# 
   772   000FDC                     PREINC2         equ	4060	;# 
   773   000FDD                     POSTDEC2        equ	4061	;# 
   774   000FDE                     POSTINC2        equ	4062	;# 
   775   000FDF                     INDF2           equ	4063	;# 
   776   000FE0                     BSR             equ	4064	;# 
   777   000FE1                     FSR1            equ	4065	;# 
   778   000FE1                     FSR1L           equ	4065	;# 
   779   000FE2                     FSR1H           equ	4066	;# 
   780   000FE3                     PLUSW1          equ	4067	;# 
   781   000FE4                     PREINC1         equ	4068	;# 
   782   000FE5                     POSTDEC1        equ	4069	;# 
   783   000FE6                     POSTINC1        equ	4070	;# 
   784   000FE7                     INDF1           equ	4071	;# 
   785   000FE8                     WREG            equ	4072	;# 
   786   000FE9                     FSR0            equ	4073	;# 
   787   000FE9                     FSR0L           equ	4073	;# 
   788   000FEA                     FSR0H           equ	4074	;# 
   789   000FEB                     PLUSW0          equ	4075	;# 
   790   000FEC                     PREINC0         equ	4076	;# 
   791   000FED                     POSTDEC0        equ	4077	;# 
   792   000FEE                     POSTINC0        equ	4078	;# 
   793   000FEF                     INDF0           equ	4079	;# 
   794   000FF0                     INTCON3         equ	4080	;# 
   795   000FF1                     INTCON2         equ	4081	;# 
   796   000FF2                     INTCON          equ	4082	;# 
   797   000FF3                     PROD            equ	4083	;# 
   798   000FF3                     PRODL           equ	4083	;# 
   799   000FF4                     PRODH           equ	4084	;# 
   800   000FF5                     TABLAT          equ	4085	;# 
   801   000FF6                     TBLPTR          equ	4086	;# 
   802   000FF6                     TBLPTRL         equ	4086	;# 
   803   000FF7                     TBLPTRH         equ	4087	;# 
   804   000FF8                     TBLPTRU         equ	4088	;# 
   805   000FF9                     PCLAT           equ	4089	;# 
   806   000FF9                     PC              equ	4089	;# 
   807   000FF9                     PCL             equ	4089	;# 
   808   000FFA                     PCLATH          equ	4090	;# 
   809   000FFB                     PCLATU          equ	4091	;# 
   810   000FFC                     STKPTR          equ	4092	;# 
   811   000FFD                     TOS             equ	4093	;# 
   812   000FFD                     TOSL            equ	4093	;# 
   813   000FFE                     TOSH            equ	4094	;# 
   814   000FFF                     TOSU            equ	4095	;# 
   815   000F62                     SPPDATA         equ	3938	;# 
   816   000F63                     SPPCFG          equ	3939	;# 
   817   000F64                     SPPEPS          equ	3940	;# 
   818   000F65                     SPPCON          equ	3941	;# 
   819   000F66                     UFRM            equ	3942	;# 
   820   000F66                     UFRML           equ	3942	;# 
   821   000F67                     UFRMH           equ	3943	;# 
   822   000F68                     UIR             equ	3944	;# 
   823   000F69                     UIE             equ	3945	;# 
   824   000F6A                     UEIR            equ	3946	;# 
   825   000F6B                     UEIE            equ	3947	;# 
   826   000F6C                     USTAT           equ	3948	;# 
   827   000F6D                     UCON            equ	3949	;# 
   828   000F6E                     UADDR           equ	3950	;# 
   829   000F6F                     UCFG            equ	3951	;# 
   830   000F70                     UEP0            equ	3952	;# 
   831   000F71                     UEP1            equ	3953	;# 
   832   000F72                     UEP2            equ	3954	;# 
   833   000F73                     UEP3            equ	3955	;# 
   834   000F74                     UEP4            equ	3956	;# 
   835   000F75                     UEP5            equ	3957	;# 
   836   000F76                     UEP6            equ	3958	;# 
   837   000F77                     UEP7            equ	3959	;# 
   838   000F78                     UEP8            equ	3960	;# 
   839   000F79                     UEP9            equ	3961	;# 
   840   000F7A                     UEP10           equ	3962	;# 
   841   000F7B                     UEP11           equ	3963	;# 
   842   000F7C                     UEP12           equ	3964	;# 
   843   000F7D                     UEP13           equ	3965	;# 
   844   000F7E                     UEP14           equ	3966	;# 
   845   000F7F                     UEP15           equ	3967	;# 
   846   000F80                     PORTA           equ	3968	;# 
   847   000F81                     PORTB           equ	3969	;# 
   848   000F82                     PORTC           equ	3970	;# 
   849   000F83                     PORTD           equ	3971	;# 
   850   000F84                     PORTE           equ	3972	;# 
   851   000F89                     LATA            equ	3977	;# 
   852   000F8A                     LATB            equ	3978	;# 
   853   000F8B                     LATC            equ	3979	;# 
   854   000F8C                     LATD            equ	3980	;# 
   855   000F8D                     LATE            equ	3981	;# 
   856   000F92                     TRISA           equ	3986	;# 
   857   000F92                     DDRA            equ	3986	;# 
   858   000F93                     TRISB           equ	3987	;# 
   859   000F93                     DDRB            equ	3987	;# 
   860   000F94                     TRISC           equ	3988	;# 
   861   000F94                     DDRC            equ	3988	;# 
   862   000F95                     TRISD           equ	3989	;# 
   863   000F95                     DDRD            equ	3989	;# 
   864   000F96                     TRISE           equ	3990	;# 
   865   000F96                     DDRE            equ	3990	;# 
   866   000F9B                     OSCTUNE         equ	3995	;# 
   867   000F9D                     PIE1            equ	3997	;# 
   868   000F9E                     PIR1            equ	3998	;# 
   869   000F9F                     IPR1            equ	3999	;# 
   870   000FA0                     PIE2            equ	4000	;# 
   871   000FA1                     PIR2            equ	4001	;# 
   872   000FA2                     IPR2            equ	4002	;# 
   873   000FA6                     EECON1          equ	4006	;# 
   874   000FA7                     EECON2          equ	4007	;# 
   875   000FA8                     EEDATA          equ	4008	;# 
   876   000FA9                     EEADR           equ	4009	;# 
   877   000FAB                     RCSTA           equ	4011	;# 
   878   000FAB                     RCSTA1          equ	4011	;# 
   879   000FAC                     TXSTA           equ	4012	;# 
   880   000FAC                     TXSTA1          equ	4012	;# 
   881   000FAD                     TXREG           equ	4013	;# 
   882   000FAD                     TXREG1          equ	4013	;# 
   883   000FAE                     RCREG           equ	4014	;# 
   884   000FAE                     RCREG1          equ	4014	;# 
   885   000FAF                     SPBRG           equ	4015	;# 
   886   000FAF                     SPBRG1          equ	4015	;# 
   887   000FB0                     SPBRGH          equ	4016	;# 
   888   000FB1                     T3CON           equ	4017	;# 
   889   000FB2                     TMR3            equ	4018	;# 
   890   000FB2                     TMR3L           equ	4018	;# 
   891   000FB3                     TMR3H           equ	4019	;# 
   892   000FB4                     CMCON           equ	4020	;# 
   893   000FB5                     CVRCON          equ	4021	;# 
   894   000FB6                     ECCP1AS         equ	4022	;# 
   895   000FB6                     CCP1AS          equ	4022	;# 
   896   000FB7                     ECCP1DEL        equ	4023	;# 
   897   000FB7                     CCP1DEL         equ	4023	;# 
   898   000FB8                     BAUDCON         equ	4024	;# 
   899   000FB8                     BAUDCTL         equ	4024	;# 
   900   000FBA                     CCP2CON         equ	4026	;# 
   901   000FBB                     CCPR2           equ	4027	;# 
   902   000FBB                     CCPR2L          equ	4027	;# 
   903   000FBC                     CCPR2H          equ	4028	;# 
   904   000FBD                     CCP1CON         equ	4029	;# 
   905   000FBD                     ECCP1CON        equ	4029	;# 
   906   000FBE                     CCPR1           equ	4030	;# 
   907   000FBE                     CCPR1L          equ	4030	;# 
   908   000FBF                     CCPR1H          equ	4031	;# 
   909   000FC0                     ADCON2          equ	4032	;# 
   910   000FC1                     ADCON1          equ	4033	;# 
   911   000FC2                     ADCON0          equ	4034	;# 
   912   000FC3                     ADRES           equ	4035	;# 
   913   000FC3                     ADRESL          equ	4035	;# 
   914   000FC4                     ADRESH          equ	4036	;# 
   915   000FC5                     SSPCON2         equ	4037	;# 
   916   000FC6                     SSPCON1         equ	4038	;# 
   917   000FC7                     SSPSTAT         equ	4039	;# 
   918   000FC8                     SSPADD          equ	4040	;# 
   919   000FC9                     SSPBUF          equ	4041	;# 
   920   000FCA                     T2CON           equ	4042	;# 
   921   000FCB                     PR2             equ	4043	;# 
   922   000FCB                     MEMCON          equ	4043	;# 
   923   000FCC                     TMR2            equ	4044	;# 
   924   000FCD                     T1CON           equ	4045	;# 
   925   000FCE                     TMR1            equ	4046	;# 
   926   000FCE                     TMR1L           equ	4046	;# 
   927   000FCF                     TMR1H           equ	4047	;# 
   928   000FD0                     RCON            equ	4048	;# 
   929   000FD1                     WDTCON          equ	4049	;# 
   930   000FD2                     HLVDCON         equ	4050	;# 
   931   000FD2                     LVDCON          equ	4050	;# 
   932   000FD3                     OSCCON          equ	4051	;# 
   933   000FD5                     T0CON           equ	4053	;# 
   934   000FD6                     TMR0            equ	4054	;# 
   935   000FD6                     TMR0L           equ	4054	;# 
   936   000FD7                     TMR0H           equ	4055	;# 
   937   000FD8                     STATUS          equ	4056	;# 
   938   000FD9                     FSR2            equ	4057	;# 
   939   000FD9                     FSR2L           equ	4057	;# 
   940   000FDA                     FSR2H           equ	4058	;# 
   941   000FDB                     PLUSW2          equ	4059	;# 
   942   000FDC                     PREINC2         equ	4060	;# 
   943   000FDD                     POSTDEC2        equ	4061	;# 
   944   000FDE                     POSTINC2        equ	4062	;# 
   945   000FDF                     INDF2           equ	4063	;# 
   946   000FE0                     BSR             equ	4064	;# 
   947   000FE1                     FSR1            equ	4065	;# 
   948   000FE1                     FSR1L           equ	4065	;# 
   949   000FE2                     FSR1H           equ	4066	;# 
   950   000FE3                     PLUSW1          equ	4067	;# 
   951   000FE4                     PREINC1         equ	4068	;# 
   952   000FE5                     POSTDEC1        equ	4069	;# 
   953   000FE6                     POSTINC1        equ	4070	;# 
   954   000FE7                     INDF1           equ	4071	;# 
   955   000FE8                     WREG            equ	4072	;# 
   956   000FE9                     FSR0            equ	4073	;# 
   957   000FE9                     FSR0L           equ	4073	;# 
   958   000FEA                     FSR0H           equ	4074	;# 
   959   000FEB                     PLUSW0          equ	4075	;# 
   960   000FEC                     PREINC0         equ	4076	;# 
   961   000FED                     POSTDEC0        equ	4077	;# 
   962   000FEE                     POSTINC0        equ	4078	;# 
   963   000FEF                     INDF0           equ	4079	;# 
   964   000FF0                     INTCON3         equ	4080	;# 
   965   000FF1                     INTCON2         equ	4081	;# 
   966   000FF2                     INTCON          equ	4082	;# 
   967   000FF3                     PROD            equ	4083	;# 
   968   000FF3                     PRODL           equ	4083	;# 
   969   000FF4                     PRODH           equ	4084	;# 
   970   000FF5                     TABLAT          equ	4085	;# 
   971   000FF6                     TBLPTR          equ	4086	;# 
   972   000FF6                     TBLPTRL         equ	4086	;# 
   973   000FF7                     TBLPTRH         equ	4087	;# 
   974   000FF8                     TBLPTRU         equ	4088	;# 
   975   000FF9                     PCLAT           equ	4089	;# 
   976   000FF9                     PC              equ	4089	;# 
   977   000FF9                     PCL             equ	4089	;# 
   978   000FFA                     PCLATH          equ	4090	;# 
   979   000FFB                     PCLATU          equ	4091	;# 
   980   000FFC                     STKPTR          equ	4092	;# 
   981   000FFD                     TOS             equ	4093	;# 
   982   000FFD                     TOSL            equ	4093	;# 
   983   000FFE                     TOSH            equ	4094	;# 
   984   000FFF                     TOSU            equ	4095	;# 
   985   007C61                     _LATD1          set	31841
   986   007C60                     _LATD0          set	31840
   987   007CA7                     _TRISC7         set	31911
   988   007E2C                     _ACKEN          set	32300
   989   007E2D                     _ACKDT          set	32301
   990   007E2B                     _RCEN           set	32299
   991   007E38                     _BF             set	32312
   992   007E2A                     _PEN            set	32298
   993   007E28                     _SEN            set	32296
   994   007C99                     _TRISB1         set	31897
   995   007C98                     _TRISB0         set	31896
   996   000F8C                     _LATD           set	3980
   997   000F95                     _TRISD          set	3989
   998   000F92                     _TRISAbits      set	3986
   999   000F80                     _PORTAbits      set	3968
  1000   000FAB                     _RCSTAbits      set	4011
  1001   000F9E                     _PIR1bits       set	3998
  1002   000FAE                     _RCREG          set	4014
  1003   000FAF                     _SPBRG          set	4015
  1004   000FAB                     _RCSTA          set	4011
  1005   000FAC                     _TXSTA          set	4012
  1006   000FB8                     _BAUDCON        set	4024
  1007   000FC5                     _SSPCON2        set	4037
  1008   000FC9                     _SSPBUF         set	4041
  1009   000FC7                     _SSPSTAT        set	4039
  1010   000FC8                     _SSPADD         set	4040
  1011   000FC6                     _SSPCON1        set	4038
  1012                           
  1013                           	psect	smallconst
  1014   000800                     __psmallconst:
  1015                           	callstack 0
  1016   000800  00                 	db	0
  1017   000801                     STR_8:
  1018   000801  48                 	db	72	;'H'
  1019   000802  6F                 	db	111	;'o'
  1020   000803  72                 	db	114	;'r'
  1021   000804  61                 	db	97	;'a'
  1022   000805  3A                 	db	58	;':'
  1023   000806  20                 	db	32
  1024   000807  25                 	db	37
  1025   000808  30                 	db	48	;'0'
  1026   000809  32                 	db	50	;'2'
  1027   00080A  75                 	db	117	;'u'
  1028   00080B  3A                 	db	58	;':'
  1029   00080C  25                 	db	37
  1030   00080D  30                 	db	48	;'0'
  1031   00080E  32                 	db	50	;'2'
  1032   00080F  75                 	db	117	;'u'
  1033   000810  3A                 	db	58	;':'
  1034   000811  25                 	db	37
  1035   000812  30                 	db	48	;'0'
  1036   000813  32                 	db	50	;'2'
  1037   000814  75                 	db	117	;'u'
  1038   000815  00                 	db	0
  1039   000816  20                 	db	32
  1040   000817  20                 	db	32
  1041   000818  20                 	db	32
  1042   000819  20                 	db	32
  1043   00081A  20                 	db	32
  1044   00081B  20                 	db	32
  1045   00081C  20                 	db	32
  1046   00081D  20                 	db	32
  1047   00081E  20                 	db	32
  1048   00081F  20                 	db	32
  1049   000820  20                 	db	32
  1050   000821  20                 	db	32
  1051   000822  20                 	db	32
  1052   000823  20                 	db	32
  1053   000824  20                 	db	32
  1054   000825  20                 	db	32
  1055   000826  00                 	db	0
  1056   000827                     STR_7:
  1057   000827  46                 	db	70	;'F'
  1058   000828  65                 	db	101	;'e'
  1059   000829  63                 	db	99	;'c'
  1060   00082A  68                 	db	104	;'h'
  1061   00082B  61                 	db	97	;'a'
  1062   00082C  3A                 	db	58	;':'
  1063   00082D  20                 	db	32
  1064   00082E  25                 	db	37
  1065   00082F  30                 	db	48	;'0'
  1066   000830  32                 	db	50	;'2'
  1067   000831  75                 	db	117	;'u'
  1068   000832  2F                 	db	47
  1069   000833  25                 	db	37
  1070   000834  30                 	db	48	;'0'
  1071   000835  32                 	db	50	;'2'
  1072   000836  75                 	db	117	;'u'
  1073   000837  00                 	db	0
  1074   000838                     STR_12:
  1075   000838  52                 	db	82	;'R'
  1076   000839  65                 	db	101	;'e'
  1077   00083A  69                 	db	105	;'i'
  1078   00083B  6E                 	db	110	;'n'
  1079   00083C  74                 	db	116	;'t'
  1080   00083D  65                 	db	101	;'e'
  1081   00083E  6E                 	db	110	;'n'
  1082   00083F  74                 	db	116	;'t'
  1083   000840  61                 	db	97	;'a'
  1084   000841  6E                 	db	110	;'n'
  1085   000842  64                 	db	100	;'d'
  1086   000843  6F                 	db	111	;'o'
  1087   000844  2E                 	db	46
  1088   000845  2E                 	db	46
  1089   000846  2E                 	db	46
  1090   000847  00                 	db	0
  1091   000848                     STR_17:
  1092   000848  47                 	db	71	;'G'
  1093   000849  50                 	db	80	;'P'
  1094   00084A  53                 	db	83	;'S'
  1095   00084B  3A                 	db	58	;':'
  1096   00084C  20                 	db	32
  1097   00084D  53                 	db	83	;'S'
  1098   00084E  69                 	db	105	;'i'
  1099   00084F  6E                 	db	110	;'n'
  1100   000850  20                 	db	32
  1101   000851  73                 	db	115	;'s'
  1102   000852  65                 	db	101	;'e'
  1103   000853  6E                 	db	110	;'n'
  1104   000854  61                 	db	97	;'a'
  1105   000855  6C                 	db	108	;'l'
  1106   000856  00                 	db	0
  1107   000857                     STR_6:
  1108   000857  49                 	db	73	;'I'
  1109   000858  6E                 	db	110	;'n'
  1110   000859  69                 	db	105	;'i'
  1111   00085A  63                 	db	99	;'c'
  1112   00085B  69                 	db	105	;'i'
  1113   00085C  61                 	db	97	;'a'
  1114   00085D  6E                 	db	110	;'n'
  1115   00085E  64                 	db	100	;'d'
  1116   00085F  6F                 	db	111	;'o'
  1117   000860  2E                 	db	46
  1118   000861  2E                 	db	46
  1119   000862  2E                 	db	46
  1120   000863  00                 	db	0
  1121   000864                     STR_5:
  1122   000864  45                 	db	69	;'E'
  1123   000865  73                 	db	115	;'s'
  1124   000866  74                 	db	116	;'t'
  1125   000867  61                 	db	97	;'a'
  1126   000868  63                 	db	99	;'c'
  1127   000869  69                 	db	105	;'i'
  1128   00086A  6F                 	db	111	;'o'
  1129   00086B  6E                 	db	110	;'n'
  1130   00086C  20                 	db	32
  1131   00086D  4D                 	db	77	;'M'
  1132   00086E  65                 	db	101	;'e'
  1133   00086F  74                 	db	116	;'t'
  1134   000870  00                 	db	0
  1135   000871                     STR_18:
  1136   000871  42                 	db	66	;'B'
  1137   000872  75                 	db	117	;'u'
  1138   000873  73                 	db	115	;'s'
  1139   000874  63                 	db	99	;'c'
  1140   000875  61                 	db	97	;'a'
  1141   000876  6E                 	db	110	;'n'
  1142   000877  64                 	db	100	;'d'
  1143   000878  6F                 	db	111	;'o'
  1144   000879  2E                 	db	46
  1145   00087A  2E                 	db	46
  1146   00087B  2E                 	db	46
  1147   00087C  00                 	db	0
  1148   00087D                     STR_11:
  1149   00087D  45                 	db	69	;'E'
  1150   00087E  72                 	db	114	;'r'
  1151   00087F  72                 	db	114	;'r'
  1152   000880  6F                 	db	111	;'o'
  1153   000881  72                 	db	114	;'r'
  1154   000882  20                 	db	32
  1155   000883  44                 	db	68	;'D'
  1156   000884  48                 	db	72	;'H'
  1157   000885  54                 	db	84	;'T'
  1158   000886  31                 	db	49	;'1'
  1159   000887  31                 	db	49	;'1'
  1160   000888  00                 	db	0
  1161   000889                     STR_9:
  1162   000889  54                 	db	84	;'T'
  1163   00088A  65                 	db	101	;'e'
  1164   00088B  6D                 	db	109	;'m'
  1165   00088C  70                 	db	112	;'p'
  1166   00088D  3A                 	db	58	;':'
  1167   00088E  20                 	db	32
  1168   00088F  25                 	db	37
  1169   000890  75                 	db	117	;'u'
  1170   000891  DF                 	db	-33
  1171   000892  43                 	db	67	;'C'
  1172   000893  00                 	db	0
  1173   000894                     STR_10:
  1174   000894  48                 	db	72	;'H'
  1175   000895  75                 	db	117	;'u'
  1176   000896  6D                 	db	109	;'m'
  1177   000897  3A                 	db	58	;':'
  1178   000898  20                 	db	32
  1179   000899  25                 	db	37
  1180   00089A  75                 	db	117	;'u'
  1181   00089B  25                 	db	37
  1182   00089C  25                 	db	37
  1183   00089D  00                 	db	0
  1184   00089E                     STR_16:
  1185   00089E  4C                 	db	76	;'L'
  1186   00089F  6F                 	db	111	;'o'
  1187   0008A0  6E                 	db	110	;'n'
  1188   0008A1  3A                 	db	58	;':'
  1189   0008A2  25                 	db	37
  1190   0008A3  73                 	db	115	;'s'
  1191   0008A4  25                 	db	37
  1192   0008A5  73                 	db	115	;'s'
  1193   0008A6  00                 	db	0
  1194   0008A7                     STR_15:
  1195   0008A7  4C                 	db	76	;'L'
  1196   0008A8  61                 	db	97	;'a'
  1197   0008A9  74                 	db	116	;'t'
  1198   0008AA  3A                 	db	58	;':'
  1199   0008AB  25                 	db	37
  1200   0008AC  73                 	db	115	;'s'
  1201   0008AD  25                 	db	37
  1202   0008AE  73                 	db	115	;'s'
  1203   0008AF  00                 	db	0
  1204   0008B0                     STR_19:
  1205   0008B0  28                 	db	40
  1206   0008B1  6E                 	db	110	;'n'
  1207   0008B2  75                 	db	117	;'u'
  1208   0008B3  6C                 	db	108	;'l'
  1209   0008B4  6C                 	db	108	;'l'
  1210   0008B5  29                 	db	41
  1211   0008B6  00                 	db	0
  1212   0008B7                     STR_1:
  1213   0008B7  24                 	db	36
  1214   0008B8  47                 	db	71	;'G'
  1215   0008B9  50                 	db	80	;'P'
  1216   0008BA  52                 	db	82	;'R'
  1217   0008BB  4D                 	db	77	;'M'
  1218   0008BC  43                 	db	67	;'C'
  1219   0008BD  00                 	db	0
  1220   0008BE                     STR_2:
  1221   0008BE  2C                 	db	44
  1222   0008BF  00                 	db	0
  1223   0008B7                     STR_13          equ	STR_1
  1224   0008B7                     STR_14          equ	STR_1
  1225   0008BE                     STR_3           equ	STR_2
  1226   0008C0  00                 	db	0	; dummy byte at the end
  1227   000002                     __activetblptr  equ	2
  1228                           
  1229                           ; #config settings
  1230                           
  1231                           	psect	cinit
  1232   0020F8                     __pcinit:
  1233                           	callstack 0
  1234   0020F8                     start_initialization:
  1235                           	callstack 0
  1236   0020F8                     __initialization:
  1237                           	callstack 0
  1238                           
  1239                           ; Clear objects allocated to BANK1 (21 bytes)
  1240   0020F8  EE01  F095         	lfsr	0,__pbssBANK1
  1241   0020FC  0E15               	movlw	21
  1242   0020FE                     clear_0:
  1243   0020FE  6AEE               	clrf	postinc0,c
  1244   002100  06E8               	decf	wreg,f,c
  1245   002102  E1FD               	bnz	clear_0
  1246                           
  1247                           ; Clear objects allocated to BANK0 (32 bytes)
  1248   002104  EE00  F0C8         	lfsr	0,__pbssBANK0
  1249   002108  0E20               	movlw	32
  1250   00210A                     clear_1:
  1251   00210A  6AEE               	clrf	postinc0,c
  1252   00210C  06E8               	decf	wreg,f,c
  1253   00210E  E1FD               	bnz	clear_1
  1254                           
  1255                           ; Clear objects allocated to COMRAM (6 bytes)
  1256   002110  6A48               	clrf	(__pbssCOMRAM+5)& (0+255),c
  1257   002112  6A47               	clrf	(__pbssCOMRAM+4)& (0+255),c
  1258   002114  6A46               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1259   002116  6A45               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1260   002118  6A44               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1261   00211A  6A43               	clrf	__pbssCOMRAM& (0+255),c
  1262   00211C                     end_of_initialization:
  1263                           	callstack 0
  1264   00211C                     __end_of__initialization:
  1265                           	callstack 0
  1266   00211C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1267   00211E  6EF8               	movwf	tblptru,c
  1268   002120  0100               	movlb	0
  1269   002122  EF61  F004         	goto	_main	;jump to C main() function
  1270                           
  1271                           	psect	bssCOMRAM
  1272   000043                     __pbssCOMRAM:
  1273                           	callstack 0
  1274   000043                     _width:
  1275                           	callstack 0
  1276   000043                     	ds	2
  1277   000045                     _prec:
  1278                           	callstack 0
  1279   000045                     	ds	2
  1280   000047                     strtok@p:
  1281                           	callstack 0
  1282   000047                     	ds	1
  1283   000048                     _flags:
  1284                           	callstack 0
  1285   000048                     	ds	1
  1286                           
  1287                           	psect	bssBANK0
  1288   0000C8                     __pbssBANK0:
  1289                           	callstack 0
  1290   0000C8                     _dbuf:
  1291                           	callstack 0
  1292   0000C8                     	ds	32
  1293                           
  1294                           	psect	bssBANK1
  1295   000195                     __pbssBANK1:
  1296                           	callstack 0
  1297   000195                     	ds	9
  1298   00019E                     	ds	8
  1299   0001A6                     	ds	2
  1300   0001A8                     	ds	2
  1301                           
  1302                           	psect	cstackBANK1
  1303   000100                     __pcstackBANK1:
  1304                           	callstack 0
  1305   000100                     main@nmea:
  1306                           	callstack 0
  1307                           
  1308                           ; 100 bytes @ 0x0
  1309   000100                     	ds	100
  1310   000164                     main@lon:
  1311                           	callstack 0
  1312                           
  1313                           ; 9 bytes @ 0x64
  1314   000164                     	ds	9
  1315   00016D                     main@lat:
  1316                           	callstack 0
  1317                           
  1318                           ; 8 bytes @ 0x6D
  1319   00016D                     	ds	8
  1320   000175                     main@buffer:
  1321                           	callstack 0
  1322                           
  1323                           ; 17 bytes @ 0x75
  1324   000175                     	ds	17
  1325   000186                     main@year:
  1326                           	callstack 0
  1327                           
  1328                           ; 1 bytes @ 0x86
  1329   000186                     	ds	1
  1330   000187                     main@ns:
  1331                           	callstack 0
  1332                           
  1333                           ; 2 bytes @ 0x87
  1334   000187                     	ds	2
  1335   000189                     main@ew:
  1336                           	callstack 0
  1337                           
  1338                           ; 2 bytes @ 0x89
  1339   000189                     	ds	2
  1340   00018B                     main@intento:
  1341                           	callstack 0
  1342                           
  1343                           ; 1 bytes @ 0x8B
  1344   00018B                     	ds	1
  1345   00018C                     main@h:
  1346                           	callstack 0
  1347                           
  1348                           ; 1 bytes @ 0x8C
  1349   00018C                     	ds	1
  1350   00018D                     main@m:
  1351                           	callstack 0
  1352                           
  1353                           ; 1 bytes @ 0x8D
  1354   00018D                     	ds	1
  1355   00018E                     main@s:
  1356                           	callstack 0
  1357                           
  1358                           ; 1 bytes @ 0x8E
  1359   00018E                     	ds	1
  1360   00018F                     main@day:
  1361                           	callstack 0
  1362                           
  1363                           ; 1 bytes @ 0x8F
  1364   00018F                     	ds	1
  1365   000190                     main@month:
  1366                           	callstack 0
  1367                           
  1368                           ; 1 bytes @ 0x90
  1369   000190                     	ds	1
  1370   000191                     main@success:
  1371                           	callstack 0
  1372                           
  1373                           ; 1 bytes @ 0x91
  1374   000191                     	ds	1
  1375   000192                     main@hum:
  1376                           	callstack 0
  1377                           
  1378                           ; 1 bytes @ 0x92
  1379   000192                     	ds	1
  1380   000193                     main@temp:
  1381                           	callstack 0
  1382                           
  1383                           ; 1 bytes @ 0x93
  1384   000193                     	ds	1
  1385   000194                     main@estado:
  1386                           	callstack 0
  1387                           
  1388                           ; 1 bytes @ 0x94
  1389   000194                     	ds	1
  1390                           
  1391                           	psect	cstackBANK0
  1392   000060                     __pcstackBANK0:
  1393                           	callstack 0
  1394   000060                     GPS_ParseGPRMC@buf:
  1395                           	callstack 0
  1396                           
  1397                           ; 100 bytes @ 0x0
  1398   000060                     	ds	100
  1399   0000C4                     _GPS_ParseGPRMC$237:
  1400                           	callstack 0
  1401                           
  1402                           ; 1 bytes @ 0x64
  1403   0000C4                     	ds	1
  1404   0000C5                     GPS_ParseGPRMC@field:
  1405                           	callstack 0
  1406                           
  1407                           ; 1 bytes @ 0x65
  1408   0000C5                     	ds	1
  1409   0000C6                     GPS_ParseGPRMC@data_valid:
  1410                           	callstack 0
  1411                           
  1412                           ; 1 bytes @ 0x66
  1413   0000C6                     	ds	1
  1414   0000C7                     GPS_ParseGPRMC@token:
  1415                           	callstack 0
  1416                           
  1417                           ; 1 bytes @ 0x67
  1418   0000C7                     	ds	1
  1419                           
  1420                           	psect	cstackCOMRAM
  1421   000001                     __pcstackCOMRAM:
  1422                           	callstack 0
  1423   000001                     ?_strlen:
  1424                           	callstack 0
  1425   000001                     ?_strncmp:
  1426                           	callstack 0
  1427   000001                     ?_strchr:
  1428                           	callstack 0
  1429   000001                     ?___awmod:
  1430                           	callstack 0
  1431   000001                     ?___lwdiv:
  1432                           	callstack 0
  1433   000001                     ?___lwmod:
  1434                           	callstack 0
  1435   000001                     ?_read_prec_or_width:
  1436                           	callstack 0
  1437   000001                     I2C_Read@ack:
  1438                           	callstack 0
  1439   000001                     GPS_Init@dummy:
  1440                           	callstack 0
  1441   000001                     DHT11_ReadByte@data:
  1442                           	callstack 0
  1443   000001                     read_prec_or_width@fmt:
  1444                           	callstack 0
  1445   000001                     strlen@s:
  1446                           	callstack 0
  1447   000001                     GPS_ReadSentence@buffer:
  1448                           	callstack 0
  1449   000001                     ___awmod@dividend:
  1450                           	callstack 0
  1451   000001                     ___lwdiv@dividend:
  1452                           	callstack 0
  1453   000001                     ___lwmod@dividend:
  1454                           	callstack 0
  1455   000001                     fputc@c:
  1456                           	callstack 0
  1457   000001                     strncpy@d:
  1458                           	callstack 0
  1459   000001                     strchr@s:
  1460                           	callstack 0
  1461   000001                     strncmp@l:
  1462                           	callstack 0
  1463   000001                     ??_LCD_Command:
  1464   000001                     ??_I2C_Write:
  1465   000001                     ??_bcdToDec:
  1466   000001                     ??_LCD_Char:
  1467                           
  1468                           ; 1 bytes @ 0x0
  1469   000001                     	ds	1
  1470   000002                     I2C_Write@data:
  1471                           	callstack 0
  1472   000002                     I2C_Read@data:
  1473                           	callstack 0
  1474   000002                     bcdToDec@val:
  1475                           	callstack 0
  1476   000002                     DHT11_ReadByte@i:
  1477                           	callstack 0
  1478   000002                     LCD_Command@cmd:
  1479                           	callstack 0
  1480   000002                     LCD_Char@dat:
  1481                           	callstack 0
  1482   000002                     read_prec_or_width@ap:
  1483                           	callstack 0
  1484                           
  1485                           ; 1 bytes @ 0x1
  1486   000002                     	ds	1
  1487   000003                     fputc@fp:
  1488                           	callstack 0
  1489   000003                     strlen@a:
  1490                           	callstack 0
  1491   000003                     strncmp@r:
  1492                           	callstack 0
  1493   000003                     RTC_GetTime@hour:
  1494                           	callstack 0
  1495   000003                     RTC_GetDate@date:
  1496                           	callstack 0
  1497   000003                     GPS_ReadSentence@max_len:
  1498                           	callstack 0
  1499   000003                     DHT11_Read@humidity:
  1500                           	callstack 0
  1501   000003                     LCD_String@msg:
  1502                           	callstack 0
  1503   000003                     ___awmod@divisor:
  1504                           	callstack 0
  1505   000003                     ___lwdiv@divisor:
  1506                           	callstack 0
  1507   000003                     ___lwmod@divisor:
  1508                           	callstack 0
  1509   000003                     strncpy@s:
  1510                           	callstack 0
  1511   000003                     strchr@c:
  1512                           	callstack 0
  1513   000003                     ??_LCD_Init:
  1514   000003                     ??_LCD_Clear:
  1515   000003                     ??_read_prec_or_width:
  1516                           
  1517                           ; 1 bytes @ 0x2
  1518   000003                     	ds	1
  1519   000004                     strncmp@n:
  1520                           	callstack 0
  1521   000004                     ??_fputc:
  1522                           
  1523                           ; 1 bytes @ 0x3
  1524   000004                     	ds	1
  1525   000005                     LCD_String_xy@pos:
  1526                           	callstack 0
  1527   000005                     ___awmod@counter:
  1528                           	callstack 0
  1529   000005                     ___lwmod@counter:
  1530                           	callstack 0
  1531   000005                     read_prec_or_width@c:
  1532                           	callstack 0
  1533   000005                     RTC_GetTime@min:
  1534                           	callstack 0
  1535   000005                     RTC_GetDate@month:
  1536                           	callstack 0
  1537   000005                     GPS_ReadSentence@timeout_ms:
  1538                           	callstack 0
  1539   000005                     DHT11_Read@temperature:
  1540                           	callstack 0
  1541   000005                     ___lwdiv@quotient:
  1542                           	callstack 0
  1543   000005                     strncpy@n:
  1544                           	callstack 0
  1545   000005                     ??_strchr:
  1546   000005                     
  1547                           ; 1 bytes @ 0x4
  1548   000005                     	ds	1
  1549   000006                     ___awmod@sign:
  1550                           	callstack 0
  1551   000006                     LCD_String_xy@msg:
  1552                           	callstack 0
  1553   000006                     read_prec_or_width@n:
  1554                           	callstack 0
  1555   000006                     ??_strncmp:
  1556                           
  1557                           ; 1 bytes @ 0x5
  1558   000006                     	ds	1
  1559   000007                     ?_strstr:
  1560                           	callstack 0
  1561   000007                     ?_strspn:
  1562                           	callstack 0
  1563   000007                     ?_strcspn:
  1564                           	callstack 0
  1565   000007                     ___lwdiv@counter:
  1566                           	callstack 0
  1567   000007                     strcspn@s:
  1568                           	callstack 0
  1569   000007                     strspn@s:
  1570                           	callstack 0
  1571   000007                     RTC_GetTime@sec:
  1572                           	callstack 0
  1573   000007                     RTC_GetDate@year:
  1574                           	callstack 0
  1575   000007                     strncpy@cp:
  1576                           	callstack 0
  1577   000007                     strstr@h:
  1578                           	callstack 0
  1579   000007                     ??_GPS_ReadSentence:
  1580   000007                     ??_DHT11_Read:
  1581                           
  1582                           ; 1 bytes @ 0x6
  1583   000007                     	ds	1
  1584   000008                     strcspn@c:
  1585                           	callstack 0
  1586   000008                     strspn@c:
  1587                           	callstack 0
  1588   000008                     ??_LCD_String_xy:
  1589                           
  1590                           ; 1 bytes @ 0x7
  1591   000008                     	ds	1
  1592   000009                     stoa@fp:
  1593                           	callstack 0
  1594   000009                     fputs@s:
  1595                           	callstack 0
  1596   000009                     strstr@n:
  1597                           	callstack 0
  1598   000009                     GPS_ReadSentence@t:
  1599                           	callstack 0
  1600   000009                     ??_strspn:
  1601   000009                     ??_strcspn:
  1602   000009                     
  1603                           ; 1 bytes @ 0x8
  1604   000009                     	ds	1
  1605   00000A                     LCD_String_xy@row:
  1606                           	callstack 0
  1607   00000A                     fputs@fp:
  1608                           	callstack 0
  1609   00000A                     stoa@s:
  1610                           	callstack 0
  1611   00000A                     strstr@nl:
  1612                           	callstack 0
  1613   00000A                     strcspn@i:
  1614                           	callstack 0
  1615   00000A                     strspn@i:
  1616                           	callstack 0
  1617   00000A                     
  1618                           ; 1 bytes @ 0x9
  1619   00000A                     	ds	1
  1620   00000B                     GPS_ReadSentence@dummy:
  1621                           	callstack 0
  1622   00000B                     fputs@c:
  1623                           	callstack 0
  1624   00000B                     _LCD_String_xy$466:
  1625                           	callstack 0
  1626   00000B                     DHT11_Read@data:
  1627                           	callstack 0
  1628   00000B                     
  1629                           ; 1 bytes @ 0xA
  1630   00000B                     	ds	1
  1631   00000C                     GPS_ReadSentence@started:
  1632                           	callstack 0
  1633   00000C                     strtok@s:
  1634                           	callstack 0
  1635   00000C                     fputs@i:
  1636                           	callstack 0
  1637   00000C                     ??_stoa:
  1638                           
  1639                           ; 1 bytes @ 0xB
  1640   00000C                     	ds	1
  1641   00000D                     LCD_String_xy@location:
  1642                           	callstack 0
  1643   00000D                     strtok@sep:
  1644                           	callstack 0
  1645   00000D                     GPS_ReadSentence@i:
  1646                           	callstack 0
  1647                           
  1648                           ; 2 bytes @ 0xC
  1649   00000D                     	ds	1
  1650   00000E                     pad@fp:
  1651                           	callstack 0
  1652   00000E                     GPS_ParseGPRMC@msg:
  1653                           	callstack 0
  1654   00000E                     stoa@p:
  1655                           	callstack 0
  1656   00000E                     
  1657                           ; 1 bytes @ 0xD
  1658   00000E                     	ds	1
  1659   00000F                     GPS_ReadSentence@c:
  1660                           	callstack 0
  1661   00000F                     pad@buf:
  1662                           	callstack 0
  1663                           
  1664                           ; 1 bytes @ 0xE
  1665   00000F                     	ds	1
  1666   000010                     DHT11_Read@i:
  1667                           	callstack 0
  1668   000010                     GPS_ParseGPRMC@lat:
  1669                           	callstack 0
  1670   000010                     pad@p:
  1671                           	callstack 0
  1672   000010                     stoa@w:
  1673                           	callstack 0
  1674                           
  1675                           ; 2 bytes @ 0xF
  1676   000010                     	ds	2
  1677   000012                     GPS_ParseGPRMC@ns:
  1678                           	callstack 0
  1679   000012                     stoa@cp:
  1680                           	callstack 0
  1681   000012                     ??_pad:
  1682                           
  1683                           ; 1 bytes @ 0x11
  1684   000012                     	ds	1
  1685   000013                     pad@i:
  1686                           	callstack 0
  1687                           
  1688                           ; 2 bytes @ 0x12
  1689   000013                     	ds	1
  1690   000014                     GPS_ParseGPRMC@lon:
  1691                           	callstack 0
  1692   000014                     stoa@l:
  1693                           	callstack 0
  1694                           
  1695                           ; 2 bytes @ 0x13
  1696   000014                     	ds	1
  1697   000015                     utoa@fp:
  1698                           	callstack 0
  1699                           
  1700                           ; 1 bytes @ 0x14
  1701   000015                     	ds	1
  1702   000016                     GPS_ParseGPRMC@ew:
  1703                           	callstack 0
  1704   000016                     utoa@d:
  1705                           	callstack 0
  1706                           
  1707                           ; 2 bytes @ 0x15
  1708   000016                     	ds	2
  1709   000018                     utoa@p:
  1710                           	callstack 0
  1711   000018                     
  1712                           ; 1 bytes @ 0x17
  1713   000018                     	ds	1
  1714   000019                     utoa@w:
  1715                           	callstack 0
  1716                           
  1717                           ; 2 bytes @ 0x18
  1718   000019                     	ds	2
  1719   00001B                     utoa@i:
  1720                           	callstack 0
  1721                           
  1722                           ; 2 bytes @ 0x1A
  1723   00001B                     	ds	2
  1724   00001D                     vfpfcnvrt@fp:
  1725                           	callstack 0
  1726                           
  1727                           ; 1 bytes @ 0x1C
  1728   00001D                     	ds	1
  1729   00001E                     vfpfcnvrt@fmt:
  1730                           	callstack 0
  1731                           
  1732                           ; 1 bytes @ 0x1D
  1733   00001E                     	ds	1
  1734   00001F                     vfpfcnvrt@ap:
  1735                           	callstack 0
  1736                           
  1737                           ; 2 bytes @ 0x1E
  1738   00001F                     	ds	2
  1739   000021                     ??_vfpfcnvrt:
  1740                           
  1741                           ; 1 bytes @ 0x20
  1742   000021                     	ds	1
  1743   000022                     vfpfcnvrt@convarg:
  1744                           	callstack 0
  1745                           
  1746                           ; 4 bytes @ 0x21
  1747   000022                     	ds	4
  1748   000026                     vfpfcnvrt@cp:
  1749                           	callstack 0
  1750                           
  1751                           ; 1 bytes @ 0x25
  1752   000026                     	ds	1
  1753   000027                     vfpfcnvrt@done:
  1754                           	callstack 0
  1755                           
  1756                           ; 1 bytes @ 0x26
  1757   000027                     	ds	1
  1758   000028                     ?_vfprintf:
  1759                           	callstack 0
  1760   000028                     vfprintf@fp:
  1761                           	callstack 0
  1762                           
  1763                           ; 1 bytes @ 0x27
  1764   000028                     	ds	1
  1765   000029                     vfprintf@fmt:
  1766                           	callstack 0
  1767                           
  1768                           ; 1 bytes @ 0x28
  1769   000029                     	ds	1
  1770   00002A                     vfprintf@ap:
  1771                           	callstack 0
  1772                           
  1773                           ; 1 bytes @ 0x29
  1774   00002A                     	ds	1
  1775   00002B                     vfprintf@cfmt:
  1776                           	callstack 0
  1777   00002B                     
  1778                           ; 1 bytes @ 0x2A
  1779   00002B                     	ds	1
  1780   00002C                     ?_sprintf:
  1781                           	callstack 0
  1782   00002C                     sprintf@s:
  1783                           	callstack 0
  1784                           
  1785                           ; 2 bytes @ 0x2B
  1786   00002C                     	ds	2
  1787   00002E                     sprintf@fmt:
  1788                           	callstack 0
  1789                           
  1790                           ; 1 bytes @ 0x2D
  1791   00002E                     	ds	7
  1792   000035                     sprintf@ap:
  1793                           	callstack 0
  1794   000035                     
  1795                           ; 1 bytes @ 0x34
  1796   000035                     	ds	1
  1797   000036                     sprintf@f:
  1798                           	callstack 0
  1799                           
  1800                           ; 11 bytes @ 0x35
  1801   000036                     	ds	11
  1802   000041                     ??_main:
  1803                           
  1804                           ; 1 bytes @ 0x40
  1805   000041                     	ds	2
  1806                           
  1807 ;;
  1808 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1809 ;;
  1810 ;; *************** function _main *****************
  1811 ;; Defined at:
  1812 ;;		line 14 in file "MAIN.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  success         1  145[BANK1 ] unsigned char 
  1817 ;;  intento         1  139[BANK1 ] unsigned char 
  1818 ;;  nmea          100    0[BANK1 ] unsigned char [100]
  1819 ;;  buffer         17  117[BANK1 ] unsigned char [17]
  1820 ;;  lon             9  100[BANK1 ] unsigned char [9]
  1821 ;;  lat             8  109[BANK1 ] unsigned char [8]
  1822 ;;  ew              2  137[BANK1 ] unsigned char [2]
  1823 ;;  ns              2  135[BANK1 ] unsigned char [2]
  1824 ;;  estado          1  148[BANK1 ] unsigned char 
  1825 ;;  temp            1  147[BANK1 ] unsigned char 
  1826 ;;  hum             1  146[BANK1 ] unsigned char 
  1827 ;;  month           1  144[BANK1 ] unsigned char 
  1828 ;;  day             1  143[BANK1 ] unsigned char 
  1829 ;;  s               1  142[BANK1 ] unsigned char 
  1830 ;;  m               1  141[BANK1 ] unsigned char 
  1831 ;;  h               1  140[BANK1 ] unsigned char 
  1832 ;;  year            1  134[BANK1 ] unsigned char 
  1833 ;; Return value:  Size  Location     Type
  1834 ;;                  1    wreg      void 
  1835 ;; Registers used:
  1836 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1837 ;; Tracked objects:
  1838 ;;		On entry : 0/0
  1839 ;;		On exit  : 0/0
  1840 ;;		Unchanged: 0/0
  1841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1842 ;;      Params:         0       0       0       0       0       0       0       0       0
  1843 ;;      Locals:         0       0     149       0       0       0       0       0       0
  1844 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1845 ;;      Totals:         2       0     149       0       0       0       0       0       0
  1846 ;;Total ram usage:      151 bytes
  1847 ;; Hardware stack levels required when called: 8
  1848 ;; This function calls:
  1849 ;;		_DHT11_Read
  1850 ;;		_GPS_Init
  1851 ;;		_GPS_ParseGPRMC
  1852 ;;		_GPS_ReadSentence
  1853 ;;		_LCD_Clear
  1854 ;;		_LCD_Init
  1855 ;;		_LCD_String_xy
  1856 ;;		_RTC_GetDate
  1857 ;;		_RTC_GetTime
  1858 ;;		_RTC_Init
  1859 ;;		___awmod
  1860 ;;		_sprintf
  1861 ;;		_strstr
  1862 ;; This function is called by:
  1863 ;;		Startup code after reset
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           	psect	text0
  1868   0008C2                     __ptext0:
  1869                           	callstack 0
  1870   0008C2                     _main:
  1871                           	callstack 23
  1872   0008C2                     
  1873                           ;MAIN.c: 16:     LCD_Init();
  1874   0008C2  EC63  F010         	call	_LCD_Init	;wreg free
  1875                           
  1876                           ;MAIN.c: 17:     RTC_Init();
  1877   0008C6  ECBF  F010         	call	_RTC_Init	;wreg free
  1878   0008CA                     
  1879                           ;MAIN.c: 18:     GPS_Init();
  1880   0008CA  ECA9  F010         	call	_GPS_Init	;wreg free
  1881   0008CE                     
  1882                           ;MAIN.c: 19:     _delay((unsigned long)((1000)*(8000000/4000.0)));
  1883   0008CE  0E0B               	movlw	11
  1884   0008D0  6E42               	movwf	(??_main+1)^0,c
  1885   0008D2  0E26               	movlw	38
  1886   0008D4  6E41               	movwf	??_main^0,c
  1887   0008D6  0E5E               	movlw	94
  1888   0008D8                     u2757:
  1889   0008D8  2EE8               	decfsz	wreg,f,c
  1890   0008DA  D7FE               	bra	u2757
  1891   0008DC  2E41               	decfsz	??_main^0,f,c
  1892   0008DE  D7FC               	bra	u2757
  1893   0008E0  2E42               	decfsz	(??_main+1)^0,f,c
  1894   0008E2  D7FA               	bra	u2757
  1895   0008E4                     
  1896                           ;MAIN.c: 21:     LCD_Clear();
  1897   0008E4  ECCF  F010         	call	_LCD_Clear	;wreg free
  1898   0008E8                     
  1899                           ;MAIN.c: 22:     LCD_String_xy(0, 0, "Estacion Met");
  1900   0008E8  0E00               	movlw	0
  1901   0008EA  6E05               	movwf	LCD_String_xy@pos^0,c
  1902   0008EC  0E64               	movlw	low STR_5
  1903   0008EE  6E06               	movwf	LCD_String_xy@msg^0,c
  1904   0008F0  5006               	movf	LCD_String_xy@msg^0,w,c
  1905   0008F2  A4D8               	btfss	status,2,c
  1906   0008F4  0E08               	movlw	high __smallconst
  1907   0008F6  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1908   0008F8  0E00               	movlw	0
  1909   0008FA  EC7C  F00F         	call	_LCD_String_xy
  1910   0008FE                     
  1911                           ;MAIN.c: 23:     LCD_String_xy(1, 0, "Iniciando...");
  1912   0008FE  0E00               	movlw	0
  1913   000900  6E05               	movwf	LCD_String_xy@pos^0,c
  1914   000902  0E57               	movlw	low STR_6
  1915   000904  6E06               	movwf	LCD_String_xy@msg^0,c
  1916   000906  5006               	movf	LCD_String_xy@msg^0,w,c
  1917   000908  A4D8               	btfss	status,2,c
  1918   00090A  0E08               	movlw	high __smallconst
  1919   00090C  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1920   00090E  0E01               	movlw	1
  1921   000910  EC7C  F00F         	call	_LCD_String_xy
  1922   000914                     
  1923                           ;MAIN.c: 24:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1924   000914  0E15               	movlw	21
  1925   000916  6E42               	movwf	(??_main+1)^0,c
  1926   000918  0E4B               	movlw	75
  1927   00091A  6E41               	movwf	??_main^0,c
  1928   00091C  0EBE               	movlw	190
  1929   00091E                     u2767:
  1930   00091E  2EE8               	decfsz	wreg,f,c
  1931   000920  D7FE               	bra	u2767
  1932   000922  2E41               	decfsz	??_main^0,f,c
  1933   000924  D7FC               	bra	u2767
  1934   000926  2E42               	decfsz	(??_main+1)^0,f,c
  1935   000928  D7FA               	bra	u2767
  1936   00092A  D000               	nop2	
  1937   00092C                     
  1938                           ;MAIN.c: 27:     uint8_t h, m, s, day, month, year;;MAIN.c: 28:     uint8_t hum = 0, tem
      +                          p = 0;
  1939   00092C  0101               	movlb	1	; () banked
  1940   00092E  6B92               	clrf	main@hum& (0+255),b
  1941   000930                     
  1942                           ; BSR set to: 1
  1943   000930  6B93               	clrf	main@temp& (0+255),b
  1944   000932                     
  1945                           ; BSR set to: 1
  1946                           ;MAIN.c: 29:     char lat[8] = "", ns[2] = "", lon[9] = "", ew[2] = "";
  1947   000932  EE21  F06D         	lfsr	2,main@lat
  1948   000936  0E07               	movlw	7
  1949   000938                     u2611:
  1950   000938  6ADE               	clrf	postinc2,c
  1951   00093A  06E8               	decf	wreg,f,c
  1952   00093C  E2FD               	bc	u2611
  1953   00093E                     
  1954                           ; BSR set to: 1
  1955   00093E  0E00               	movlw	0
  1956   000940  6F88               	movwf	(main@ns+1)& (0+255),b
  1957   000942  0E00               	movlw	0
  1958   000944  6F87               	movwf	main@ns& (0+255),b
  1959   000946                     
  1960                           ; BSR set to: 1
  1961   000946  EE21  F064         	lfsr	2,main@lon
  1962   00094A  0E08               	movlw	8
  1963   00094C                     u2621:
  1964   00094C  6ADE               	clrf	postinc2,c
  1965   00094E  06E8               	decf	wreg,f,c
  1966   000950  E2FD               	bc	u2621
  1967   000952                     
  1968                           ; BSR set to: 1
  1969   000952  0E00               	movlw	0
  1970   000954  6F8A               	movwf	(main@ew+1)& (0+255),b
  1971   000956  0E00               	movlw	0
  1972   000958  6F89               	movwf	main@ew& (0+255),b
  1973   00095A                     
  1974                           ; BSR set to: 1
  1975                           ;MAIN.c: 30:     char nmea[100];;MAIN.c: 31:     char buffer[17];;MAIN.c: 32:     uint8_
      +                          t estado = 0;
  1976   00095A  6B94               	clrf	main@estado& (0+255),b
  1977   00095C                     l2858:
  1978                           
  1979                           ; BSR set to: 1
  1980                           ;MAIN.c: 35:         LCD_Clear();
  1981   00095C  ECCF  F010         	call	_LCD_Clear	;wreg free
  1982   000960                     
  1983                           ;MAIN.c: 37:         if (estado == 0) {
  1984   000960  0101               	movlb	1	; () banked
  1985   000962  5194               	movf	main@estado& (0+255),w,b
  1986   000964  A4D8               	btfss	status,2,c
  1987   000966  EFB7  F004         	goto	u2631
  1988   00096A  EFB9  F004         	goto	u2630
  1989   00096E                     u2631:
  1990   00096E  EF14  F005         	goto	l2874
  1991   000972                     u2630:
  1992   000972                     
  1993                           ; BSR set to: 1
  1994                           ;MAIN.c: 38:             RTC_GetTime(&h, &m, &s);
  1995   000972  0E8C               	movlw	low main@h
  1996   000974  6E03               	movwf	RTC_GetTime@hour^0,c
  1997   000976  0E01               	movlw	high main@h
  1998   000978  6E04               	movwf	(RTC_GetTime@hour+1)^0,c
  1999   00097A  0E8D               	movlw	low main@m
  2000   00097C  6E05               	movwf	RTC_GetTime@min^0,c
  2001   00097E  0E01               	movlw	high main@m
  2002   000980  6E06               	movwf	(RTC_GetTime@min+1)^0,c
  2003   000982  0E8E               	movlw	low main@s
  2004   000984  6E07               	movwf	RTC_GetTime@sec^0,c
  2005   000986  0E01               	movlw	high main@s
  2006   000988  6E08               	movwf	(RTC_GetTime@sec+1)^0,c
  2007   00098A  EC9B  F00E         	call	_RTC_GetTime	;wreg free
  2008                           
  2009                           ;MAIN.c: 39:             RTC_GetDate(&day, &month, &year);
  2010   00098E  0E8F               	movlw	low main@day
  2011   000990  6E03               	movwf	RTC_GetDate@date^0,c
  2012   000992  0E01               	movlw	high main@day
  2013   000994  6E04               	movwf	(RTC_GetDate@date+1)^0,c
  2014   000996  0E90               	movlw	low main@month
  2015   000998  6E05               	movwf	RTC_GetDate@month^0,c
  2016   00099A  0E01               	movlw	high main@month
  2017   00099C  6E06               	movwf	(RTC_GetDate@month+1)^0,c
  2018   00099E  0E86               	movlw	low main@year
  2019   0009A0  6E07               	movwf	RTC_GetDate@year^0,c
  2020   0009A2  0E01               	movlw	high main@year
  2021   0009A4  6E08               	movwf	(RTC_GetDate@year+1)^0,c
  2022   0009A6  ECFA  F00E         	call	_RTC_GetDate	;wreg free
  2023   0009AA                     
  2024                           ;MAIN.c: 41:             sprintf(buffer, "Fecha: %02u/%02u", day, month);
  2025   0009AA  0E75               	movlw	low main@buffer
  2026   0009AC  6E2C               	movwf	sprintf@s^0,c
  2027   0009AE  0E01               	movlw	high main@buffer
  2028   0009B0  6E2D               	movwf	(sprintf@s+1)^0,c
  2029   0009B2  0E27               	movlw	low STR_7
  2030   0009B4  6E2E               	movwf	sprintf@fmt^0,c
  2031   0009B6  C18F  F02F         	movff	main@day,?_sprintf+3
  2032   0009BA  6A30               	clrf	(?_sprintf+4)^0,c
  2033   0009BC  C190  F031         	movff	main@month,?_sprintf+5
  2034   0009C0  6A32               	clrf	(?_sprintf+6)^0,c
  2035   0009C2  EC0D  F010         	call	_sprintf	;wreg free
  2036   0009C6                     
  2037                           ;MAIN.c: 42:             LCD_String_xy(0, 0, buffer);
  2038   0009C6  0E00               	movlw	0
  2039   0009C8  6E05               	movwf	LCD_String_xy@pos^0,c
  2040   0009CA  0E75               	movlw	low main@buffer
  2041   0009CC  6E06               	movwf	LCD_String_xy@msg^0,c
  2042   0009CE  0E01               	movlw	high main@buffer
  2043   0009D0  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2044   0009D2  0E00               	movlw	0
  2045   0009D4  EC7C  F00F         	call	_LCD_String_xy
  2046   0009D8                     
  2047                           ;MAIN.c: 43:             sprintf(buffer, "Hora: %02u:%02u:%02u", h, m, s);
  2048   0009D8  0E75               	movlw	low main@buffer
  2049   0009DA  6E2C               	movwf	sprintf@s^0,c
  2050   0009DC  0E01               	movlw	high main@buffer
  2051   0009DE  6E2D               	movwf	(sprintf@s+1)^0,c
  2052   0009E0  0E01               	movlw	low STR_8
  2053   0009E2  6E2E               	movwf	sprintf@fmt^0,c
  2054   0009E4  C18C  F02F         	movff	main@h,?_sprintf+3
  2055   0009E8  6A30               	clrf	(?_sprintf+4)^0,c
  2056   0009EA  C18D  F031         	movff	main@m,?_sprintf+5
  2057   0009EE  6A32               	clrf	(?_sprintf+6)^0,c
  2058   0009F0  C18E  F033         	movff	main@s,?_sprintf+7
  2059   0009F4  6A34               	clrf	(?_sprintf+8)^0,c
  2060   0009F6  EC0D  F010         	call	_sprintf	;wreg free
  2061   0009FA                     
  2062                           ;MAIN.c: 44:             LCD_String_xy(1, 0, buffer);
  2063   0009FA  0E00               	movlw	0
  2064   0009FC  6E05               	movwf	LCD_String_xy@pos^0,c
  2065   0009FE  0E75               	movlw	low main@buffer
  2066   000A00  6E06               	movwf	LCD_String_xy@msg^0,c
  2067   000A02  0E01               	movlw	high main@buffer
  2068   000A04  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2069   000A06  0E01               	movlw	1
  2070   000A08  EC7C  F00F         	call	_LCD_String_xy
  2071   000A0C                     l2872:
  2072                           
  2073                           ;MAIN.c: 45:             _delay((unsigned long)((3000)*(8000000/4000.0)));
  2074   000A0C  0E1F               	movlw	31
  2075   000A0E  6E42               	movwf	(??_main+1)^0,c
  2076   000A10  0E71               	movlw	113
  2077   000A12  6E41               	movwf	??_main^0,c
  2078   000A14  0E1E               	movlw	30
  2079   000A16                     u2777:
  2080   000A16  2EE8               	decfsz	wreg,f,c
  2081   000A18  D7FE               	bra	u2777
  2082   000A1A  2E41               	decfsz	??_main^0,f,c
  2083   000A1C  D7FC               	bra	u2777
  2084   000A1E  2E42               	decfsz	(??_main+1)^0,f,c
  2085   000A20  D7FA               	bra	u2777
  2086   000A22  D000               	nop2	
  2087                           
  2088                           ;MAIN.c: 46:         }
  2089   000A24  EF41  F006         	goto	l2920
  2090   000A28                     l2874:
  2091                           
  2092                           ; BSR set to: 1
  2093   000A28  0594               	decf	main@estado& (0+255),w,b
  2094   000A2A  A4D8               	btfss	status,2,c
  2095   000A2C  EF1A  F005         	goto	u2641
  2096   000A30  EF1C  F005         	goto	u2640
  2097   000A34                     u2641:
  2098   000A34  EF70  F005         	goto	l2888
  2099   000A38                     u2640:
  2100   000A38                     
  2101                           ; BSR set to: 1
  2102                           ;MAIN.c: 49:             if (DHT11_Read(&hum, &temp)) {
  2103   000A38  0E92               	movlw	low main@hum
  2104   000A3A  6E03               	movwf	DHT11_Read@humidity^0,c
  2105   000A3C  0E01               	movlw	high main@hum
  2106   000A3E  6E04               	movwf	(DHT11_Read@humidity+1)^0,c
  2107   000A40  0E93               	movlw	low main@temp
  2108   000A42  6E05               	movwf	DHT11_Read@temperature^0,c
  2109   000A44  0E01               	movlw	high main@temp
  2110   000A46  6E06               	movwf	(DHT11_Read@temperature+1)^0,c
  2111   000A48  EC50  F00B         	call	_DHT11_Read	;wreg free
  2112   000A4C  0900               	iorlw	0
  2113   000A4E  B4D8               	btfsc	status,2,c
  2114   000A50  EF2C  F005         	goto	u2651
  2115   000A54  EF2E  F005         	goto	u2650
  2116   000A58                     u2651:
  2117   000A58  EF58  F005         	goto	l2884
  2118   000A5C                     u2650:
  2119   000A5C                     
  2120                           ;MAIN.c: 50:                 sprintf(buffer, "Temp: %u\xDF""C", temp);
  2121   000A5C  0E75               	movlw	low main@buffer
  2122   000A5E  6E2C               	movwf	sprintf@s^0,c
  2123   000A60  0E01               	movlw	high main@buffer
  2124   000A62  6E2D               	movwf	(sprintf@s+1)^0,c
  2125   000A64  0E89               	movlw	low STR_9
  2126   000A66  6E2E               	movwf	sprintf@fmt^0,c
  2127   000A68  C193  F02F         	movff	main@temp,?_sprintf+3
  2128   000A6C  6A30               	clrf	(?_sprintf+4)^0,c
  2129   000A6E  EC0D  F010         	call	_sprintf	;wreg free
  2130   000A72                     
  2131                           ;MAIN.c: 51:                 LCD_String_xy(0, 0, buffer);
  2132   000A72  0E00               	movlw	0
  2133   000A74  6E05               	movwf	LCD_String_xy@pos^0,c
  2134   000A76  0E75               	movlw	low main@buffer
  2135   000A78  6E06               	movwf	LCD_String_xy@msg^0,c
  2136   000A7A  0E01               	movlw	high main@buffer
  2137   000A7C  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2138   000A7E  0E00               	movlw	0
  2139   000A80  EC7C  F00F         	call	_LCD_String_xy
  2140   000A84                     
  2141                           ;MAIN.c: 52:                 sprintf(buffer, "Hum: %u%%", hum);
  2142   000A84  0E75               	movlw	low main@buffer
  2143   000A86  6E2C               	movwf	sprintf@s^0,c
  2144   000A88  0E01               	movlw	high main@buffer
  2145   000A8A  6E2D               	movwf	(sprintf@s+1)^0,c
  2146   000A8C  0E94               	movlw	low STR_10
  2147   000A8E  6E2E               	movwf	sprintf@fmt^0,c
  2148   000A90  C192  F02F         	movff	main@hum,?_sprintf+3
  2149   000A94  6A30               	clrf	(?_sprintf+4)^0,c
  2150   000A96  EC0D  F010         	call	_sprintf	;wreg free
  2151                           
  2152                           ;MAIN.c: 53:                 LCD_String_xy(1, 0, buffer);
  2153   000A9A  0E00               	movlw	0
  2154   000A9C  6E05               	movwf	LCD_String_xy@pos^0,c
  2155   000A9E  0E75               	movlw	low main@buffer
  2156   000AA0  6E06               	movwf	LCD_String_xy@msg^0,c
  2157   000AA2  0E01               	movlw	high main@buffer
  2158   000AA4  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2159   000AA6  0E01               	movlw	1
  2160   000AA8  EC7C  F00F         	call	_LCD_String_xy
  2161                           
  2162                           ;MAIN.c: 54:             } else {
  2163   000AAC  EF06  F005         	goto	l2872
  2164   000AB0                     l2884:
  2165                           
  2166                           ;MAIN.c: 55:                 LCD_String_xy(0, 0, "Error DHT11");
  2167   000AB0  0E00               	movlw	0
  2168   000AB2  6E05               	movwf	LCD_String_xy@pos^0,c
  2169   000AB4  0E7D               	movlw	low STR_11
  2170   000AB6  6E06               	movwf	LCD_String_xy@msg^0,c
  2171   000AB8  5006               	movf	LCD_String_xy@msg^0,w,c
  2172   000ABA  A4D8               	btfss	status,2,c
  2173   000ABC  0E08               	movlw	high __smallconst
  2174   000ABE  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2175   000AC0  0E00               	movlw	0
  2176   000AC2  EC7C  F00F         	call	_LCD_String_xy
  2177                           
  2178                           ;MAIN.c: 56:                 LCD_String_xy(1, 0, "Reintentando...");
  2179   000AC6  0E00               	movlw	0
  2180   000AC8  6E05               	movwf	LCD_String_xy@pos^0,c
  2181   000ACA  0E38               	movlw	low STR_12
  2182   000ACC  6E06               	movwf	LCD_String_xy@msg^0,c
  2183   000ACE  5006               	movf	LCD_String_xy@msg^0,w,c
  2184   000AD0  A4D8               	btfss	status,2,c
  2185   000AD2  0E08               	movlw	high __smallconst
  2186   000AD4  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2187   000AD6  0E01               	movlw	1
  2188   000AD8  EC7C  F00F         	call	_LCD_String_xy
  2189   000ADC  EF06  F005         	goto	l2872
  2190   000AE0                     l2888:
  2191                           
  2192                           ; BSR set to: 1
  2193   000AE0  0E02               	movlw	2
  2194   000AE2  1994               	xorwf	main@estado& (0+255),w,b
  2195   000AE4  A4D8               	btfss	status,2,c
  2196   000AE6  EF77  F005         	goto	u2661
  2197   000AEA  EF79  F005         	goto	u2660
  2198   000AEE                     u2661:
  2199   000AEE  EF41  F006         	goto	l2920
  2200   000AF2                     u2660:
  2201   000AF2                     
  2202                           ; BSR set to: 1
  2203                           ;MAIN.c: 62:             uint8_t intento = 0, success = 0;
  2204   000AF2  6B8B               	clrf	main@intento& (0+255),b
  2205   000AF4  6B91               	clrf	main@success& (0+255),b
  2206                           
  2207                           ;MAIN.c: 64:             for (intento = 0; intento < 10 && !success; intento++) {
  2208   000AF6  6B8B               	clrf	main@intento& (0+255),b
  2209   000AF8  EFD4  F005         	goto	l2904
  2210   000AFC                     l2892:
  2211                           
  2212                           ; BSR set to: 1
  2213                           ;MAIN.c: 65:                 if (GPS_ReadSentence(nmea, sizeof(nmea), 200)) {
  2214   000AFC  0E00               	movlw	low main@nmea
  2215   000AFE  6E01               	movwf	GPS_ReadSentence@buffer^0,c
  2216   000B00  0E01               	movlw	high main@nmea
  2217   000B02  6E02               	movwf	(GPS_ReadSentence@buffer+1)^0,c
  2218   000B04  0E00               	movlw	0
  2219   000B06  6E04               	movwf	(GPS_ReadSentence@max_len+1)^0,c
  2220   000B08  0E64               	movlw	100
  2221   000B0A  6E03               	movwf	GPS_ReadSentence@max_len^0,c
  2222   000B0C  0E00               	movlw	0
  2223   000B0E  6E06               	movwf	(GPS_ReadSentence@timeout_ms+1)^0,c
  2224   000B10  0EC8               	movlw	200
  2225   000B12  6E05               	movwf	GPS_ReadSentence@timeout_ms^0,c
  2226   000B14  EC61  F009         	call	_GPS_ReadSentence	;wreg free
  2227   000B18  0900               	iorlw	0
  2228   000B1A  B4D8               	btfsc	status,2,c
  2229   000B1C  EF92  F005         	goto	u2671
  2230   000B20  EF94  F005         	goto	u2670
  2231   000B24                     u2671:
  2232   000B24  EFC6  F005         	goto	l2900
  2233   000B28                     u2670:
  2234   000B28                     
  2235                           ;MAIN.c: 66:                     if (strstr(nmea, "$GPRMC") && GPS_ParseGPRMC(nmea, lat,
      +                           ns, lon, ew)) {
  2236   000B28  0E00               	movlw	low main@nmea
  2237   000B2A  6E07               	movwf	strstr@h^0,c
  2238   000B2C  0E01               	movlw	high main@nmea
  2239   000B2E  6E08               	movwf	(strstr@h+1)^0,c
  2240   000B30  0EB7               	movlw	low STR_1
  2241   000B32  6E09               	movwf	strstr@n^0,c
  2242   000B34  ECE9  F00A         	call	_strstr	;wreg free
  2243   000B38  5007               	movf	?_strstr^0,w,c
  2244   000B3A  1008               	iorwf	(?_strstr+1)^0,w,c
  2245   000B3C  B4D8               	btfsc	status,2,c
  2246   000B3E  EFA3  F005         	goto	u2681
  2247   000B42  EFA5  F005         	goto	u2680
  2248   000B46                     u2681:
  2249   000B46  EFC6  F005         	goto	l2900
  2250   000B4A                     u2680:
  2251   000B4A  0E00               	movlw	low main@nmea
  2252   000B4C  6E0E               	movwf	GPS_ParseGPRMC@msg^0,c
  2253   000B4E  0E01               	movlw	high main@nmea
  2254   000B50  6E0F               	movwf	(GPS_ParseGPRMC@msg+1)^0,c
  2255   000B52  0E6D               	movlw	low main@lat
  2256   000B54  6E10               	movwf	GPS_ParseGPRMC@lat^0,c
  2257   000B56  0E01               	movlw	high main@lat
  2258   000B58  6E11               	movwf	(GPS_ParseGPRMC@lat+1)^0,c
  2259   000B5A  0E87               	movlw	low main@ns
  2260   000B5C  6E12               	movwf	GPS_ParseGPRMC@ns^0,c
  2261   000B5E  0E01               	movlw	high main@ns
  2262   000B60  6E13               	movwf	(GPS_ParseGPRMC@ns+1)^0,c
  2263   000B62  0E64               	movlw	low main@lon
  2264   000B64  6E14               	movwf	GPS_ParseGPRMC@lon^0,c
  2265   000B66  0E01               	movlw	high main@lon
  2266   000B68  6E15               	movwf	(GPS_ParseGPRMC@lon+1)^0,c
  2267   000B6A  0E89               	movlw	low main@ew
  2268   000B6C  6E16               	movwf	GPS_ParseGPRMC@ew^0,c
  2269   000B6E  0E01               	movlw	high main@ew
  2270   000B70  6E17               	movwf	(GPS_ParseGPRMC@ew+1)^0,c
  2271   000B72  EC98  F007         	call	_GPS_ParseGPRMC	;wreg free
  2272   000B76  0900               	iorlw	0
  2273   000B78  B4D8               	btfsc	status,2,c
  2274   000B7A  EFC1  F005         	goto	u2691
  2275   000B7E  EFC3  F005         	goto	u2690
  2276   000B82                     u2691:
  2277   000B82  EFC6  F005         	goto	l2900
  2278   000B86                     u2690:
  2279   000B86                     
  2280                           ;MAIN.c: 67:                         success = 1;
  2281   000B86  0E01               	movlw	1
  2282   000B88  0101               	movlb	1	; () banked
  2283   000B8A  6F91               	movwf	main@success& (0+255),b
  2284   000B8C                     l2900:
  2285                           
  2286                           ;MAIN.c: 70:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  2287   000B8C  0E02               	movlw	2
  2288   000B8E  6E42               	movwf	(??_main+1)^0,c
  2289   000B90  0E04               	movlw	4
  2290   000B92  6E41               	movwf	??_main^0,c
  2291   000B94  0EBA               	movlw	186
  2292   000B96                     u2787:
  2293   000B96  2EE8               	decfsz	wreg,f,c
  2294   000B98  D7FE               	bra	u2787
  2295   000B9A  2E41               	decfsz	??_main^0,f,c
  2296   000B9C  D7FC               	bra	u2787
  2297   000B9E  2E42               	decfsz	(??_main+1)^0,f,c
  2298   000BA0  D7FA               	bra	u2787
  2299   000BA2  D000               	nop2	
  2300   000BA4                     
  2301                           ;MAIN.c: 71:             }
  2302   000BA4  0101               	movlb	1	; () banked
  2303   000BA6  2B8B               	incf	main@intento& (0+255),f,b
  2304   000BA8                     l2904:
  2305                           
  2306                           ; BSR set to: 1
  2307   000BA8  0E0A               	movlw	10
  2308   000BAA  618B               	cpfslt	main@intento& (0+255),b
  2309   000BAC  EFDA  F005         	goto	u2701
  2310   000BB0  EFDC  F005         	goto	u2700
  2311   000BB4                     u2701:
  2312   000BB4  EFE4  F005         	goto	l2908
  2313   000BB8                     u2700:
  2314   000BB8                     
  2315                           ; BSR set to: 1
  2316   000BB8  5191               	movf	main@success& (0+255),w,b
  2317   000BBA  B4D8               	btfsc	status,2,c
  2318   000BBC  EFE2  F005         	goto	u2711
  2319   000BC0  EFE4  F005         	goto	u2710
  2320   000BC4                     u2711:
  2321   000BC4  EF7E  F005         	goto	l2892
  2322   000BC8                     u2710:
  2323   000BC8                     l2908:
  2324                           
  2325                           ; BSR set to: 1
  2326                           ;MAIN.c: 73:             if (success) {
  2327   000BC8  5191               	movf	main@success& (0+255),w,b
  2328   000BCA  B4D8               	btfsc	status,2,c
  2329   000BCC  EFEA  F005         	goto	u2721
  2330   000BD0  EFEC  F005         	goto	u2720
  2331   000BD4                     u2721:
  2332   000BD4  EF20  F006         	goto	l2916
  2333   000BD8                     u2720:
  2334   000BD8                     
  2335                           ; BSR set to: 1
  2336                           ;MAIN.c: 74:                 sprintf(buffer, "Lat:%s%s", lat, ns);
  2337   000BD8  0E75               	movlw	low main@buffer
  2338   000BDA  6E2C               	movwf	sprintf@s^0,c
  2339   000BDC  0E01               	movlw	high main@buffer
  2340   000BDE  6E2D               	movwf	(sprintf@s+1)^0,c
  2341   000BE0  0EA7               	movlw	low STR_15
  2342   000BE2  6E2E               	movwf	sprintf@fmt^0,c
  2343   000BE4  0E6D               	movlw	low main@lat
  2344   000BE6  6E2F               	movwf	(?_sprintf+3)^0,c
  2345   000BE8  0E01               	movlw	high main@lat
  2346   000BEA  6E30               	movwf	(?_sprintf+4)^0,c
  2347   000BEC  0E87               	movlw	low main@ns
  2348   000BEE  6E31               	movwf	(?_sprintf+5)^0,c
  2349   000BF0  0E01               	movlw	high main@ns
  2350   000BF2  6E32               	movwf	(?_sprintf+6)^0,c
  2351   000BF4  EC0D  F010         	call	_sprintf	;wreg free
  2352   000BF8                     
  2353                           ;MAIN.c: 75:                 LCD_String_xy(0, 0, buffer);
  2354   000BF8  0E00               	movlw	0
  2355   000BFA  6E05               	movwf	LCD_String_xy@pos^0,c
  2356   000BFC  0E75               	movlw	low main@buffer
  2357   000BFE  6E06               	movwf	LCD_String_xy@msg^0,c
  2358   000C00  0E01               	movlw	high main@buffer
  2359   000C02  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2360   000C04  0E00               	movlw	0
  2361   000C06  EC7C  F00F         	call	_LCD_String_xy
  2362   000C0A                     
  2363                           ;MAIN.c: 76:                 sprintf(buffer, "Lon:%s%s", lon, ew);
  2364   000C0A  0E75               	movlw	low main@buffer
  2365   000C0C  6E2C               	movwf	sprintf@s^0,c
  2366   000C0E  0E01               	movlw	high main@buffer
  2367   000C10  6E2D               	movwf	(sprintf@s+1)^0,c
  2368   000C12  0E9E               	movlw	low STR_16
  2369   000C14  6E2E               	movwf	sprintf@fmt^0,c
  2370   000C16  0E64               	movlw	low main@lon
  2371   000C18  6E2F               	movwf	(?_sprintf+3)^0,c
  2372   000C1A  0E01               	movlw	high main@lon
  2373   000C1C  6E30               	movwf	(?_sprintf+4)^0,c
  2374   000C1E  0E89               	movlw	low main@ew
  2375   000C20  6E31               	movwf	(?_sprintf+5)^0,c
  2376   000C22  0E01               	movlw	high main@ew
  2377   000C24  6E32               	movwf	(?_sprintf+6)^0,c
  2378   000C26  EC0D  F010         	call	_sprintf	;wreg free
  2379                           
  2380                           ;MAIN.c: 77:                 LCD_String_xy(1, 0, buffer);
  2381   000C2A  0E00               	movlw	0
  2382   000C2C  6E05               	movwf	LCD_String_xy@pos^0,c
  2383   000C2E  0E75               	movlw	low main@buffer
  2384   000C30  6E06               	movwf	LCD_String_xy@msg^0,c
  2385   000C32  0E01               	movlw	high main@buffer
  2386   000C34  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2387   000C36  0E01               	movlw	1
  2388   000C38  EC7C  F00F         	call	_LCD_String_xy
  2389                           
  2390                           ;MAIN.c: 78:             } else {
  2391   000C3C  EF36  F006         	goto	l2918
  2392   000C40                     l2916:
  2393                           
  2394                           ; BSR set to: 1
  2395                           ;MAIN.c: 79:                 LCD_String_xy(0, 0, "GPS: Sin senal");
  2396   000C40  0E00               	movlw	0
  2397   000C42  6E05               	movwf	LCD_String_xy@pos^0,c
  2398   000C44  0E48               	movlw	low STR_17
  2399   000C46  6E06               	movwf	LCD_String_xy@msg^0,c
  2400   000C48  5006               	movf	LCD_String_xy@msg^0,w,c
  2401   000C4A  A4D8               	btfss	status,2,c
  2402   000C4C  0E08               	movlw	high __smallconst
  2403   000C4E  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2404   000C50  0E00               	movlw	0
  2405   000C52  EC7C  F00F         	call	_LCD_String_xy
  2406                           
  2407                           ;MAIN.c: 80:                 LCD_String_xy(1, 0, "Buscando...");
  2408   000C56  0E00               	movlw	0
  2409   000C58  6E05               	movwf	LCD_String_xy@pos^0,c
  2410   000C5A  0E71               	movlw	low STR_18
  2411   000C5C  6E06               	movwf	LCD_String_xy@msg^0,c
  2412   000C5E  5006               	movf	LCD_String_xy@msg^0,w,c
  2413   000C60  A4D8               	btfss	status,2,c
  2414   000C62  0E08               	movlw	high __smallconst
  2415   000C64  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2416   000C66  0E01               	movlw	1
  2417   000C68  EC7C  F00F         	call	_LCD_String_xy
  2418   000C6C                     l2918:
  2419                           
  2420                           ;MAIN.c: 82:             _delay((unsigned long)((5000)*(8000000/4000.0)));
  2421   000C6C  0E33               	movlw	51
  2422   000C6E  6E42               	movwf	(??_main+1)^0,c
  2423   000C70  0EBB               	movlw	187
  2424   000C72  6E41               	movwf	??_main^0,c
  2425   000C74  0EE0               	movlw	224
  2426   000C76                     u2797:
  2427   000C76  2EE8               	decfsz	wreg,f,c
  2428   000C78  D7FE               	bra	u2797
  2429   000C7A  2E41               	decfsz	??_main^0,f,c
  2430   000C7C  D7FC               	bra	u2797
  2431   000C7E  2E42               	decfsz	(??_main+1)^0,f,c
  2432   000C80  D7FA               	bra	u2797
  2433   000C82                     l2920:
  2434                           
  2435                           ;MAIN.c: 85:         estado = (estado + 1) % 3;
  2436   000C82  0E01               	movlw	1
  2437   000C84  0101               	movlb	1	; () banked
  2438   000C86  2594               	addwf	main@estado& (0+255),w,b
  2439   000C88  6E01               	movwf	___awmod@dividend^0,c
  2440   000C8A  6A02               	clrf	(___awmod@dividend+1)^0,c
  2441   000C8C  0E00               	movlw	0
  2442   000C8E  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2443   000C90  0E00               	movlw	0
  2444   000C92  6E04               	movwf	(___awmod@divisor+1)^0,c
  2445   000C94  0E03               	movlw	3
  2446   000C96  6E03               	movwf	___awmod@divisor^0,c
  2447   000C98  EC10  F00C         	call	___awmod	;wreg free
  2448   000C9C  5001               	movf	?___awmod^0,w,c
  2449   000C9E  0101               	movlb	1	; () banked
  2450   000CA0  6F94               	movwf	main@estado& (0+255),b
  2451   000CA2  EFAE  F004         	goto	l2858
  2452   000CA6  EF00  F000         	goto	start
  2453   000CAA                     __end_of_main:
  2454                           	callstack 0
  2455                           
  2456 ;; *************** function _sprintf *****************
  2457 ;; Defined at:
  2458 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  s               2   43[COMRAM] PTR unsigned char 
  2461 ;;		 -> main@buffer(17), 
  2462 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  2463 ;;		 -> STR_16(9), STR_15(9), STR_10(10), STR_9(11), 
  2464 ;;		 -> STR_8(21), STR_7(17), 
  2465 ;; Auto vars:     Size  Location     Type
  2466 ;;  f              11   53[COMRAM] struct _IO_FILE
  2467 ;;  ret             2    0        int 
  2468 ;;  ap              1   52[COMRAM] PTR void [1]
  2469 ;;		 -> ?_sprintf(2), 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  2   43[COMRAM] int 
  2472 ;; Registers used:
  2473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2479 ;;      Params:         9       0       0       0       0       0       0       0       0
  2480 ;;      Locals:        12       0       0       0       0       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2482 ;;      Totals:        21       0       0       0       0       0       0       0       0
  2483 ;;Total ram usage:       21 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; Hardware stack levels required when called: 7
  2486 ;; This function calls:
  2487 ;;		_vfprintf
  2488 ;; This function is called by:
  2489 ;;		_main
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text1
  2494   00201A                     __ptext1:
  2495                           	callstack 0
  2496   00201A                     _sprintf:
  2497                           	callstack 23
  2498   00201A  0E2F               	movlw	low (?_sprintf+3)
  2499   00201C  6E35               	movwf	sprintf@ap^0,c
  2500   00201E  C02C  F036         	movff	sprintf@s,sprintf@f
  2501   002022  C02D  F037         	movff	sprintf@s+1,sprintf@f+1
  2502   002026  0E00               	movlw	0
  2503   002028  6E39               	movwf	(sprintf@f+3)^0,c
  2504   00202A  0E00               	movlw	0
  2505   00202C  6E38               	movwf	(sprintf@f+2)^0,c
  2506   00202E  0E00               	movlw	0
  2507   002030  6E40               	movwf	(sprintf@f+10)^0,c
  2508   002032  0E00               	movlw	0
  2509   002034  6E3F               	movwf	(sprintf@f+9)^0,c
  2510   002036  0E36               	movlw	low sprintf@f
  2511   002038  6E28               	movwf	vfprintf@fp^0,c
  2512   00203A  C02E  F029         	movff	sprintf@fmt,vfprintf@fmt
  2513   00203E  0E35               	movlw	low sprintf@ap
  2514   002040  6E2A               	movwf	vfprintf@ap^0,c
  2515   002042  ECCE  F00F         	call	_vfprintf	;wreg free
  2516   002046  5038               	movf	(sprintf@f+2)^0,w,c
  2517   002048  242C               	addwf	sprintf@s^0,w,c
  2518   00204A  6ED9               	movwf	fsr2l,c
  2519   00204C  5039               	movf	(sprintf@f+3)^0,w,c
  2520   00204E  202D               	addwfc	(sprintf@s+1)^0,w,c
  2521   002050  6EDA               	movwf	fsr2h,c
  2522   002052  6ADF               	clrf	indf2,c
  2523   002054  0012               	return		;funcret
  2524   002056                     __end_of_sprintf:
  2525                           	callstack 0
  2526                           
  2527 ;; *************** function _vfprintf *****************
  2528 ;; Defined at:
  2529 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;  fp              1   39[COMRAM] PTR struct _IO_FILE
  2532 ;;		 -> sprintf@f(11), 
  2533 ;;  fmt             1   40[COMRAM] PTR const unsigned char 
  2534 ;;		 -> STR_16(9), STR_15(9), STR_10(10), STR_9(11), 
  2535 ;;		 -> STR_8(21), STR_7(17), 
  2536 ;;  ap              1   41[COMRAM] PTR PTR void 
  2537 ;;		 -> sprintf@ap(1), 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  cfmt            1   42[COMRAM] PTR unsigned char 
  2540 ;;		 -> STR_16(9), STR_15(9), STR_10(10), STR_9(11), 
  2541 ;;		 -> STR_8(21), STR_7(17), 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  2   39[COMRAM] int 
  2544 ;; Registers used:
  2545 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2551 ;;      Params:         3       0       0       0       0       0       0       0       0
  2552 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2554 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2555 ;;Total ram usage:        4 bytes
  2556 ;; Hardware stack levels used: 1
  2557 ;; Hardware stack levels required when called: 6
  2558 ;; This function calls:
  2559 ;;		_vfpfcnvrt
  2560 ;; This function is called by:
  2561 ;;		_sprintf
  2562 ;; This function uses a non-reentrant model
  2563 ;;
  2564                           
  2565                           	psect	text2
  2566   001F9C                     __ptext2:
  2567                           	callstack 0
  2568   001F9C                     _vfprintf:
  2569                           	callstack 23
  2570   001F9C                     
  2571                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2572   001F9C  C029  F02B         	movff	vfprintf@fmt,vfprintf@cfmt
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2575   001FA0  EFDB  F00F         	goto	l2508
  2576   001FA4                     l2506:
  2577                           
  2578                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2579   001FA4  C028  F01D         	movff	vfprintf@fp,vfpfcnvrt@fp
  2580   001FA8  0E2B               	movlw	low vfprintf@cfmt
  2581   001FAA  6E1E               	movwf	vfpfcnvrt@fmt^0,c
  2582   001FAC  C02A  F01F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2583   001FB0  6A20               	clrf	(vfpfcnvrt@ap+1)^0,c
  2584   001FB2  EC55  F006         	call	_vfpfcnvrt	;wreg free
  2585   001FB6                     l2508:
  2586                           
  2587                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2588   001FB6  C02B  FFF6         	movff	vfprintf@cfmt,tblptrl
  2589   001FBA                     	if	1	;There is more than 1 active tblptr byte
  2590   001FBA  0E08               	movlw	high __smallconst
  2591   001FBC  6EF7               	movwf	tblptrh,c
  2592   001FBE                     	endif
  2593   001FBE                     	if	0	;tblptru may be non-zero
  2594   001FBE                     	endif
  2595   001FBE                     	if	0	;tblptru may be non-zero
  2596   001FBE                     	endif
  2597   001FBE  0008               	tblrd		*
  2598   001FC0  50F5               	movf	tablat,w,c
  2599   001FC2  0900               	iorlw	0
  2600   001FC4  A4D8               	btfss	status,2,c
  2601   001FC6  EFE7  F00F         	goto	u2221
  2602   001FCA  EFE9  F00F         	goto	u2220
  2603   001FCE                     u2221:
  2604   001FCE  EFD2  F00F         	goto	l2506
  2605   001FD2                     u2220:
  2606   001FD2                     
  2607                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2608   001FD2  0E00               	movlw	0
  2609   001FD4  6E29               	movwf	(?_vfprintf+1)^0,c
  2610   001FD6  0E00               	movlw	0
  2611   001FD8  6E28               	movwf	?_vfprintf^0,c
  2612   001FDA  0012               	return		;funcret
  2613   001FDC                     __end_of_vfprintf:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _vfpfcnvrt *****************
  2617 ;; Defined at:
  2618 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  fp              1   28[COMRAM] PTR struct _IO_FILE
  2621 ;;		 -> sprintf@f(11), 
  2622 ;;  fmt             1   29[COMRAM] PTR PTR unsigned char 
  2623 ;;		 -> vfprintf@cfmt(1), 
  2624 ;;  ap              2   30[COMRAM] PTR PTR void 
  2625 ;;		 -> sprintf@ap(1), 
  2626 ;; Auto vars:     Size  Location     Type
  2627 ;;  convarg         4   33[COMRAM] struct .
  2628 ;;  done            1   38[COMRAM] _Bool 
  2629 ;;  cp              1   37[COMRAM] PTR unsigned char 
  2630 ;;		 -> STR_16(9), STR_15(9), STR_10(10), STR_9(11), 
  2631 ;;		 -> STR_8(21), STR_7(17), 
  2632 ;;  c               1    0        unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  1    wreg      void 
  2635 ;; Registers used:
  2636 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2642 ;;      Params:         4       0       0       0       0       0       0       0       0
  2643 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2644 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2645 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2646 ;;Total ram usage:       11 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 5
  2649 ;; This function calls:
  2650 ;;		_fputc
  2651 ;;		_read_prec_or_width
  2652 ;;		_stoa
  2653 ;;		_utoa
  2654 ;; This function is called by:
  2655 ;;		_vfprintf
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text3
  2660   000CAA                     __ptext3:
  2661                           	callstack 0
  2662   000CAA                     _vfpfcnvrt:
  2663                           	callstack 23
  2664   000CAA                     
  2665                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2666   000CAA  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2667   000CAC  6ED9               	movwf	fsr2l,c
  2668   000CAE  6ADA               	clrf	fsr2h,c
  2669   000CB0  CFDF FFF6          	movff	indf2,tblptrl
  2670   000CB4                     	if	1	;There is more than 1 active tblptr byte
  2671   000CB4  0E08               	movlw	high __smallconst
  2672   000CB6  6EF7               	movwf	tblptrh,c
  2673   000CB8                     	endif
  2674   000CB8                     	if	0	;tblptru may be non-zero
  2675   000CB8                     	endif
  2676   000CB8                     	if	0	;tblptru may be non-zero
  2677   000CB8                     	endif
  2678   000CB8  0008               	tblrd		*
  2679   000CBA  50F5               	movf	tablat,w,c
  2680   000CBC  0A25               	xorlw	37
  2681   000CBE  A4D8               	btfss	status,2,c
  2682   000CC0  EF64  F006         	goto	u1731
  2683   000CC4  EF66  F006         	goto	u1730
  2684   000CC8                     u1731:
  2685   000CC8  EF86  F007         	goto	l2316
  2686   000CCC                     u1730:
  2687   000CCC                     
  2688                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2689   000CCC  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2690   000CCE  6ED9               	movwf	fsr2l,c
  2691   000CD0  6ADA               	clrf	fsr2h,c
  2692   000CD2  2ADF               	incf	indf2,f,c
  2693   000CD4                     
  2694                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2695   000CD4  0E00               	movlw	0
  2696   000CD6  6E44               	movwf	(_width+1)^0,c
  2697   000CD8  0E00               	movlw	0
  2698   000CDA  6E43               	movwf	_width^0,c
  2699   000CDC  C043  F048         	movff	_width,_flags
  2700   000CE0                     
  2701                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2702   000CE0  6845               	setf	_prec^0,c
  2703   000CE2  6846               	setf	(_prec+1)^0,c
  2704   000CE4                     
  2705                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  2706   000CE4  6A27               	clrf	vfpfcnvrt@done^0,c
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2709   000CE6  EF8F  F006         	goto	l2258
  2710   000CEA                     l2248:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  2713   000CEA  8248               	bsf	_flags^0,1,c
  2714   000CEC                     
  2715                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  2716   000CEC  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2717   000CEE  6ED9               	movwf	fsr2l,c
  2718   000CF0  6ADA               	clrf	fsr2h,c
  2719   000CF2  2ADF               	incf	indf2,f,c
  2720                           
  2721                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  2722   000CF4  EF8F  F006         	goto	l2258
  2723   000CF8                     l2252:
  2724                           
  2725                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  2726   000CF8  0E01               	movlw	1
  2727   000CFA  6E27               	movwf	vfpfcnvrt@done^0,c
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  2730   000CFC  EF8F  F006         	goto	l2258
  2731   000D00                     l2256:
  2732   000D00  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2733   000D02  6ED9               	movwf	fsr2l,c
  2734   000D04  6ADA               	clrf	fsr2h,c
  2735   000D06  CFDF FFF6          	movff	indf2,tblptrl
  2736   000D0A                     	if	1	;There is more than 1 active tblptr byte
  2737   000D0A  0E08               	movlw	high __smallconst
  2738   000D0C  6EF7               	movwf	tblptrh,c
  2739   000D0E                     	endif
  2740   000D0E                     	if	0	;tblptru may be non-zero
  2741   000D0E                     	endif
  2742   000D0E                     	if	0	;tblptru may be non-zero
  2743   000D0E                     	endif
  2744   000D0E  0008               	tblrd		*
  2745   000D10  50F5               	movf	tablat,w,c
  2746                           
  2747                           ; Switch size 1, requested type "simple"
  2748                           ; Number of cases is 1, Range of values is 48 to 48
  2749                           ; switch strategies available:
  2750                           ; Name         Instructions Cycles
  2751                           ; simple_byte            4     3 (average)
  2752                           ;	Chosen strategy is simple_byte
  2753   000D12  0A30               	xorlw	48	; case 48
  2754   000D14  B4D8               	btfsc	status,2,c
  2755   000D16  EF75  F006         	goto	l2248
  2756   000D1A  EF7C  F006         	goto	l2252
  2757   000D1E                     l2258:
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  2760   000D1E  5027               	movf	vfpfcnvrt@done^0,w,c
  2761   000D20  B4D8               	btfsc	status,2,c
  2762   000D22  EF95  F006         	goto	u1741
  2763   000D26  EF97  F006         	goto	u1740
  2764   000D2A                     u1741:
  2765   000D2A  EF80  F006         	goto	l2256
  2766   000D2E                     u1740:
  2767   000D2E                     
  2768                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  2769   000D2E  C01E  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2770   000D32  C01F  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2771   000D36  EC67  F00C         	call	_read_prec_or_width	;wreg free
  2772   000D3A  C001  F043         	movff	?_read_prec_or_width,_width
  2773   000D3E  C002  F044         	movff	?_read_prec_or_width+1,_width+1
  2774   000D42                     
  2775                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  2776   000D42  BE44               	btfsc	(_width+1)^0,7,c
  2777   000D44  EFA8  F006         	goto	u1750
  2778   000D48  EFA6  F006         	goto	u1751
  2779   000D4C                     u1751:
  2780   000D4C  EFAD  F006         	goto	l2266
  2781   000D50                     u1750:
  2782   000D50                     
  2783                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  2784   000D50  8048               	bsf	_flags^0,0,c
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  2787   000D52  6C43               	negf	_width^0,c
  2788   000D54  1E44               	comf	(_width+1)^0,f,c
  2789   000D56  B0D8               	btfsc	status,0,c
  2790   000D58  2A44               	incf	(_width+1)^0,f,c
  2791   000D5A                     l2266:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1439:   if (0
  2794   000D5A  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2795   000D5C  6ED9               	movwf	fsr2l,c
  2796   000D5E  6ADA               	clrf	fsr2h,c
  2797   000D60  50DF               	movf	indf2,w,c
  2798   000D62  6E26               	movwf	vfpfcnvrt@cp^0,c
  2799   000D64  C026  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2800   000D68                     	if	1	;There is more than 1 active tblptr byte
  2801   000D68  0E08               	movlw	high __smallconst
  2802   000D6A  6EF7               	movwf	tblptrh,c
  2803   000D6C                     	endif
  2804   000D6C                     	if	0	;tblptru may be non-zero
  2805   000D6C                     	endif
  2806   000D6C                     	if	0	;tblptru may be non-zero
  2807   000D6C                     	endif
  2808   000D6C  0008               	tblrd		*
  2809   000D6E  50F5               	movf	tablat,w,c
  2810   000D70  0A75               	xorlw	117
  2811   000D72  A4D8               	btfss	status,2,c
  2812   000D74  EFBE  F006         	goto	u1761
  2813   000D78  EFC0  F006         	goto	u1760
  2814   000D7C                     u1761:
  2815   000D7C  EFEA  F006         	goto	l1046
  2816   000D80                     u1760:
  2817   000D80                     
  2818                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  2819   000D80  C01F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2820   000D84  C020  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2821   000D88  0E02               	movlw	2
  2822   000D8A  26DF               	addwf	indf2,f,c
  2823   000D8C  5CDF               	subwf	indf2,w,c
  2824   000D8E  6ED9               	movwf	fsr2l,c
  2825   000D90  6ADA               	clrf	fsr2h,c
  2826   000D92  CFDE F022          	movff	postinc2,vfpfcnvrt@convarg
  2827   000D96  CFDE F023          	movff	postinc2,vfpfcnvrt@convarg+1
  2828   000D9A                     
  2829                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  2830   000D9A  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2831   000D9C  6ED9               	movwf	fsr2l,c
  2832   000D9E  6ADA               	clrf	fsr2h,c
  2833   000DA0  2826               	incf	vfpfcnvrt@cp^0,w,c
  2834   000DA2  6EDF               	movwf	indf2,c
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  2837   000DA4  EFDE  F006         	goto	l2280
  2838   000DA8                     l2274:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  2841   000DA8  C01D  F015         	movff	vfpfcnvrt@fp,utoa@fp
  2842   000DAC  C022  F016         	movff	vfpfcnvrt@convarg,utoa@d
  2843   000DB0  C023  F017         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  2844   000DB4  EC7B  F00A         	call	_utoa	;wreg free
  2845   000DB8  EF97  F007         	goto	l1051
  2846   000DBC                     l2280:
  2847   000DBC  C026  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2848   000DC0                     	if	1	;There is more than 1 active tblptr byte
  2849   000DC0  0E08               	movlw	high __smallconst
  2850   000DC2  6EF7               	movwf	tblptrh,c
  2851   000DC4                     	endif
  2852   000DC4                     	if	0	;tblptru may be non-zero
  2853   000DC4                     	endif
  2854   000DC4                     	if	0	;tblptru may be non-zero
  2855   000DC4                     	endif
  2856   000DC4  0008               	tblrd		*
  2857   000DC6  50F5               	movf	tablat,w,c
  2858                           
  2859                           ; Switch size 1, requested type "simple"
  2860                           ; Number of cases is 1, Range of values is 117 to 117
  2861                           ; switch strategies available:
  2862                           ; Name         Instructions Cycles
  2863                           ; simple_byte            4     3 (average)
  2864                           ;	Chosen strategy is simple_byte
  2865   000DC8  0A75               	xorlw	117	; case 117
  2866   000DCA  B4D8               	btfsc	status,2,c
  2867   000DCC  EFD4  F006         	goto	l2274
  2868   000DD0  EFEA  F006         	goto	l1046
  2869   000DD4                     l1046:
  2870                           
  2871                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  2872   000DD4  6A27               	clrf	vfpfcnvrt@done^0,c
  2873   000DD6                     
  2874                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  2875   000DD6  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2876   000DD8  6ED9               	movwf	fsr2l,c
  2877   000DDA  6ADA               	clrf	fsr2h,c
  2878   000DDC  CFDF FFF6          	movff	indf2,tblptrl
  2879   000DE0                     	if	1	;There is more than 1 active tblptr byte
  2880   000DE0  0E08               	movlw	high __smallconst
  2881   000DE2  6EF7               	movwf	tblptrh,c
  2882   000DE4                     	endif
  2883   000DE4                     	if	0	;tblptru may be non-zero
  2884   000DE4                     	endif
  2885   000DE4                     	if	0	;tblptru may be non-zero
  2886   000DE4                     	endif
  2887   000DE4  0008               	tblrd		*
  2888   000DE6  50F5               	movf	tablat,w,c
  2889   000DE8  0A73               	xorlw	115
  2890   000DEA  A4D8               	btfss	status,2,c
  2891   000DEC  EFFA  F006         	goto	u1771
  2892   000DF0  EFFC  F006         	goto	u1770
  2893   000DF4                     u1771:
  2894   000DF4  EF04  F007         	goto	l2288
  2895   000DF8                     u1770:
  2896   000DF8                     
  2897                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  2898   000DF8  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2899   000DFA  6ED9               	movwf	fsr2l,c
  2900   000DFC  6ADA               	clrf	fsr2h,c
  2901   000DFE  2ADF               	incf	indf2,f,c
  2902   000E00                     l2286:
  2903                           
  2904                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  2905   000E00  0E01               	movlw	1
  2906   000E02  6E27               	movwf	vfpfcnvrt@done^0,c
  2907                           
  2908                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
  2909   000E04  EF46  F007         	goto	l2298
  2910   000E08                     l2288:
  2911   000E08  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2912   000E0A  6ED9               	movwf	fsr2l,c
  2913   000E0C  6ADA               	clrf	fsr2h,c
  2914   000E0E  CFDF FFF6          	movff	indf2,tblptrl
  2915   000E12                     	if	1	;There is more than 1 active tblptr byte
  2916   000E12  0E08               	movlw	high __smallconst
  2917   000E14  6EF7               	movwf	tblptrh,c
  2918   000E16                     	endif
  2919   000E16                     	if	0	;tblptru may be non-zero
  2920   000E16                     	endif
  2921   000E16                     	if	0	;tblptru may be non-zero
  2922   000E16                     	endif
  2923   000E16  0008               	tblrd		*
  2924   000E18  50F5               	movf	tablat,w,c
  2925   000E1A  0A6C               	xorlw	108
  2926   000E1C  A4D8               	btfss	status,2,c
  2927   000E1E  EF13  F007         	goto	u1781
  2928   000E22  EF15  F007         	goto	u1780
  2929   000E26                     u1781:
  2930   000E26  EF46  F007         	goto	l2298
  2931   000E2A                     u1780:
  2932   000E2A  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2933   000E2C  6ED9               	movwf	fsr2l,c
  2934   000E2E  6ADA               	clrf	fsr2h,c
  2935   000E30  50DF               	movf	indf2,w,c
  2936   000E32  6E21               	movwf	??_vfpfcnvrt^0,c
  2937   000E34  0E01               	movlw	1
  2938   000E36  2621               	addwf	??_vfpfcnvrt^0,f,c
  2939   000E38  C021  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2940   000E3C                     	if	1	;There is more than 1 active tblptr byte
  2941   000E3C  0E08               	movlw	high __smallconst
  2942   000E3E  6EF7               	movwf	tblptrh,c
  2943   000E40                     	endif
  2944   000E40                     	if	0	;tblptru may be non-zero
  2945   000E40                     	endif
  2946   000E40                     	if	0	;tblptru may be non-zero
  2947   000E40                     	endif
  2948   000E40  0008               	tblrd		*
  2949   000E42  50F5               	movf	tablat,w,c
  2950   000E44  0A6C               	xorlw	108
  2951   000E46  A4D8               	btfss	status,2,c
  2952   000E48  EF28  F007         	goto	u1791
  2953   000E4C  EF2A  F007         	goto	u1790
  2954   000E50                     u1791:
  2955   000E50  EF46  F007         	goto	l2298
  2956   000E54                     u1790:
  2957   000E54  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2958   000E56  6ED9               	movwf	fsr2l,c
  2959   000E58  6ADA               	clrf	fsr2h,c
  2960   000E5A  50DF               	movf	indf2,w,c
  2961   000E5C  6E21               	movwf	??_vfpfcnvrt^0,c
  2962   000E5E  0E02               	movlw	2
  2963   000E60  2621               	addwf	??_vfpfcnvrt^0,f,c
  2964   000E62  C021  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2965   000E66                     	if	1	;There is more than 1 active tblptr byte
  2966   000E66  0E08               	movlw	high __smallconst
  2967   000E68  6EF7               	movwf	tblptrh,c
  2968   000E6A                     	endif
  2969   000E6A                     	if	0	;tblptru may be non-zero
  2970   000E6A                     	endif
  2971   000E6A                     	if	0	;tblptru may be non-zero
  2972   000E6A                     	endif
  2973   000E6A  0008               	tblrd		*
  2974   000E6C  50F5               	movf	tablat,w,c
  2975   000E6E  0A73               	xorlw	115
  2976   000E70  A4D8               	btfss	status,2,c
  2977   000E72  EF3D  F007         	goto	u1801
  2978   000E76  EF3F  F007         	goto	u1800
  2979   000E7A                     u1801:
  2980   000E7A  EF46  F007         	goto	l2298
  2981   000E7E                     u1800:
  2982   000E7E                     
  2983                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  2984   000E7E  501E               	movf	vfpfcnvrt@fmt^0,w,c
  2985   000E80  6ED9               	movwf	fsr2l,c
  2986   000E82  6ADA               	clrf	fsr2h,c
  2987   000E84  0E03               	movlw	3
  2988   000E86  26DF               	addwf	indf2,f,c
  2989   000E88  EF00  F007         	goto	l2286
  2990   000E8C                     l2298:
  2991                           
  2992                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  2993   000E8C  5027               	movf	vfpfcnvrt@done^0,w,c
  2994   000E8E  B4D8               	btfsc	status,2,c
  2995   000E90  EF4C  F007         	goto	u1811
  2996   000E94  EF4E  F007         	goto	u1810
  2997   000E98                     u1811:
  2998   000E98  EF61  F007         	goto	l2304
  2999   000E9C                     u1810:
  3000   000E9C                     
  3001                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
  3002   000E9C  C01D  F009         	movff	vfpfcnvrt@fp,stoa@fp
  3003   000EA0  C01F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3004   000EA4  C020  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3005   000EA8  0E02               	movlw	2
  3006   000EAA  26DF               	addwf	indf2,f,c
  3007   000EAC  5CDF               	subwf	indf2,w,c
  3008   000EAE  6ED9               	movwf	fsr2l,c
  3009   000EB0  6ADA               	clrf	fsr2h,c
  3010   000EB2  CFDE F00A          	movff	postinc2,stoa@s
  3011   000EB6  CFDE F00B          	movff	postinc2,stoa@s+1
  3012   000EBA  ECB2  F008         	call	_stoa	;wreg free
  3013   000EBE  EF97  F007         	goto	l1051
  3014   000EC2                     l2304:
  3015                           
  3016                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  3017   000EC2  501E               	movf	vfpfcnvrt@fmt^0,w,c
  3018   000EC4  6ED9               	movwf	fsr2l,c
  3019   000EC6  6ADA               	clrf	fsr2h,c
  3020   000EC8  CFDF FFF6          	movff	indf2,tblptrl
  3021   000ECC                     	if	1	;There is more than 1 active tblptr byte
  3022   000ECC  0E08               	movlw	high __smallconst
  3023   000ECE  6EF7               	movwf	tblptrh,c
  3024   000ED0                     	endif
  3025   000ED0                     	if	0	;tblptru may be non-zero
  3026   000ED0                     	endif
  3027   000ED0                     	if	0	;tblptru may be non-zero
  3028   000ED0                     	endif
  3029   000ED0  0008               	tblrd		*
  3030   000ED2  50F5               	movf	tablat,w,c
  3031   000ED4  0A25               	xorlw	37
  3032   000ED6  A4D8               	btfss	status,2,c
  3033   000ED8  EF70  F007         	goto	u1821
  3034   000EDC  EF72  F007         	goto	u1820
  3035   000EE0                     u1821:
  3036   000EE0  EF80  F007         	goto	l2312
  3037   000EE4                     u1820:
  3038   000EE4                     
  3039                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  3040   000EE4  501E               	movf	vfpfcnvrt@fmt^0,w,c
  3041   000EE6  6ED9               	movwf	fsr2l,c
  3042   000EE8  6ADA               	clrf	fsr2h,c
  3043   000EEA  2ADF               	incf	indf2,f,c
  3044   000EEC                     
  3045                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  3046   000EEC  0E00               	movlw	0
  3047   000EEE  6E02               	movwf	(fputc@c+1)^0,c
  3048   000EF0  0E25               	movlw	37
  3049   000EF2  6E01               	movwf	fputc@c^0,c
  3050   000EF4  C01D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3051   000EF8  ECB3  F00B         	call	_fputc	;wreg free
  3052   000EFC  EF97  F007         	goto	l1051
  3053   000F00                     l2312:
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3056   000F00  501E               	movf	vfpfcnvrt@fmt^0,w,c
  3057   000F02  6ED9               	movwf	fsr2l,c
  3058   000F04  6ADA               	clrf	fsr2h,c
  3059   000F06  2ADF               	incf	indf2,f,c
  3060   000F08  EF97  F007         	goto	l1051
  3061   000F0C                     l2316:
  3062                           
  3063                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3064   000F0C  501E               	movf	vfpfcnvrt@fmt^0,w,c
  3065   000F0E  6ED9               	movwf	fsr2l,c
  3066   000F10  6ADA               	clrf	fsr2h,c
  3067   000F12  CFDF FFF6          	movff	indf2,tblptrl
  3068   000F16                     	if	1	;There is more than 1 active tblptr byte
  3069   000F16  0E08               	movlw	high __smallconst
  3070   000F18  6EF7               	movwf	tblptrh,c
  3071   000F1A                     	endif
  3072   000F1A                     	if	0	;tblptru may be non-zero
  3073   000F1A                     	endif
  3074   000F1A                     	if	0	;tblptru may be non-zero
  3075   000F1A                     	endif
  3076   000F1A  0008               	tblrd		*
  3077   000F1C  50F5               	movf	tablat,w,c
  3078   000F1E  6E01               	movwf	fputc@c^0,c
  3079   000F20  6A02               	clrf	(fputc@c+1)^0,c
  3080   000F22  C01D  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3081   000F26  ECB3  F00B         	call	_fputc	;wreg free
  3082   000F2A  EF80  F007         	goto	l2312
  3083   000F2E                     l1051:
  3084   000F2E  0012               	return		;funcret
  3085   000F30                     __end_of_vfpfcnvrt:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _utoa *****************
  3089 ;; Defined at:
  3090 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  3093 ;;		 -> sprintf@f(11), 
  3094 ;;  d               2   21[COMRAM] unsigned int 
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  i               2   26[COMRAM] int 
  3097 ;;  w               2   24[COMRAM] int 
  3098 ;;  p               1   23[COMRAM] _Bool 
  3099 ;; Return value:  Size  Location     Type
  3100 ;;                  1    wreg      void 
  3101 ;; Registers used:
  3102 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3103 ;; Tracked objects:
  3104 ;;		On entry : 0/0
  3105 ;;		On exit  : 0/0
  3106 ;;		Unchanged: 0/0
  3107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3108 ;;      Params:         3       0       0       0       0       0       0       0       0
  3109 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3110 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3111 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3112 ;;Total ram usage:        8 bytes
  3113 ;; Hardware stack levels used: 1
  3114 ;; Hardware stack levels required when called: 4
  3115 ;; This function calls:
  3116 ;;		___lwdiv
  3117 ;;		___lwmod
  3118 ;;		_pad
  3119 ;; This function is called by:
  3120 ;;		_vfpfcnvrt
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text4
  3125   0014F6                     __ptext4:
  3126                           	callstack 0
  3127   0014F6                     _utoa:
  3128                           	callstack 23
  3129   0014F6                     
  3130                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
  3131   0014F6  0E01               	movlw	1
  3132   0014F8  6E18               	movwf	utoa@p^0,c
  3133   0014FA                     
  3134                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  3135   0014FA  C043  F019         	movff	_width,utoa@w
  3136   0014FE  C044  F01A         	movff	_width+1,utoa@w+1
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  3139   001502  0E00               	movlw	0
  3140   001504  6E1C               	movwf	(utoa@i+1)^0,c
  3141   001506  0E1F               	movlw	31
  3142   001508  6E1B               	movwf	utoa@i^0,c
  3143   00150A                     
  3144                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  3145   00150A  0100               	movlb	0	; () banked
  3146   00150C  6BE7               	clrf	(_dbuf+31)& (0+255),b
  3147                           
  3148                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3149   00150E  EFAF  F00A         	goto	l2178
  3150   001512                     l2168:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1034:         --i;
  3153   001512  061B               	decf	utoa@i^0,f,c
  3154   001514  A0D8               	btfss	status,0,c
  3155   001516  061C               	decf	(utoa@i+1)^0,f,c
  3156   001518                     
  3157                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  3158   001518  501B               	movf	utoa@i^0,w,c
  3159   00151A  0FC8               	addlw	low _dbuf
  3160   00151C  6ED9               	movwf	fsr2l,c
  3161   00151E  6ADA               	clrf	fsr2h,c
  3162   001520  C016  F001         	movff	utoa@d,___lwmod@dividend
  3163   001524  C017  F002         	movff	utoa@d+1,___lwmod@dividend+1
  3164   001528  0E00               	movlw	0
  3165   00152A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  3166   00152C  0E0A               	movlw	10
  3167   00152E  6E03               	movwf	___lwmod@divisor^0,c
  3168   001530  EC05  F00E         	call	___lwmod	;wreg free
  3169   001534  5001               	movf	?___lwmod^0,w,c
  3170   001536  0F30               	addlw	48
  3171   001538  6EDF               	movwf	indf2,c
  3172   00153A                     
  3173                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
  3174   00153A  6A18               	clrf	utoa@p^0,c
  3175   00153C                     
  3176                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  3177   00153C  0619               	decf	utoa@w^0,f,c
  3178   00153E  A0D8               	btfss	status,0,c
  3179   001540  061A               	decf	(utoa@w+1)^0,f,c
  3180   001542                     
  3181                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  3182   001542  C016  F001         	movff	utoa@d,___lwdiv@dividend
  3183   001546  C017  F002         	movff	utoa@d+1,___lwdiv@dividend+1
  3184   00154A  0E00               	movlw	0
  3185   00154C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  3186   00154E  0E0A               	movlw	10
  3187   001550  6E03               	movwf	___lwdiv@divisor^0,c
  3188   001552  ECCB  F00D         	call	___lwdiv	;wreg free
  3189   001556  C001  F016         	movff	?___lwdiv,utoa@d
  3190   00155A  C002  F017         	movff	?___lwdiv+1,utoa@d+1
  3191   00155E                     l2178:
  3192                           
  3193                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  3194   00155E  501B               	movf	utoa@i^0,w,c
  3195   001560  101C               	iorwf	(utoa@i+1)^0,w,c
  3196   001562  B4D8               	btfsc	status,2,c
  3197   001564  EFB6  F00A         	goto	u1621
  3198   001568  EFB8  F00A         	goto	u1620
  3199   00156C                     u1621:
  3200   00156C  EFDD  F00A         	goto	l2188
  3201   001570                     u1620:
  3202   001570  5016               	movf	utoa@d^0,w,c
  3203   001572  1017               	iorwf	(utoa@d+1)^0,w,c
  3204   001574  A4D8               	btfss	status,2,c
  3205   001576  EFBF  F00A         	goto	u1631
  3206   00157A  EFC1  F00A         	goto	u1630
  3207   00157E                     u1631:
  3208   00157E  EF89  F00A         	goto	l2168
  3209   001582                     u1630:
  3210   001582  5018               	movf	utoa@p^0,w,c
  3211   001584  A4D8               	btfss	status,2,c
  3212   001586  EFC7  F00A         	goto	u1641
  3213   00158A  EFC9  F00A         	goto	u1640
  3214   00158E                     u1641:
  3215   00158E  EF89  F00A         	goto	l2168
  3216   001592                     u1640:
  3217   001592  BE1A               	btfsc	(utoa@w+1)^0,7,c
  3218   001594  EFD4  F00A         	goto	u1651
  3219   001598  501A               	movf	(utoa@w+1)^0,w,c
  3220   00159A  E108               	bnz	u1650
  3221   00159C  0419               	decf	utoa@w^0,w,c
  3222   00159E  A0D8               	btfss	status,0,c
  3223   0015A0  EFD4  F00A         	goto	u1651
  3224   0015A4  EFD6  F00A         	goto	u1650
  3225   0015A8                     u1651:
  3226   0015A8  EFDD  F00A         	goto	l2188
  3227   0015AC                     u1650:
  3228   0015AC  B248               	btfsc	_flags^0,1,c
  3229   0015AE  EFDB  F00A         	goto	u1661
  3230   0015B2  EFDD  F00A         	goto	u1660
  3231   0015B6                     u1661:
  3232   0015B6  EF89  F00A         	goto	l2168
  3233   0015BA                     u1660:
  3234   0015BA                     l2188:
  3235                           
  3236                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  3237   0015BA  C015  F00E         	movff	utoa@fp,pad@fp
  3238   0015BE  501B               	movf	utoa@i^0,w,c
  3239   0015C0  0FC8               	addlw	low _dbuf
  3240   0015C2  6E0F               	movwf	pad@buf^0,c
  3241   0015C4  C019  F010         	movff	utoa@w,pad@p
  3242   0015C8  C01A  F011         	movff	utoa@w+1,pad@p+1
  3243   0015CC  EC04  F00D         	call	_pad	;wreg free
  3244   0015D0  0012               	return		;funcret
  3245   0015D2                     __end_of_utoa:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function _pad *****************
  3249 ;; Defined at:
  3250 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  3253 ;;		 -> sprintf@f(11), 
  3254 ;;  buf             1   14[COMRAM] PTR unsigned char 
  3255 ;;		 -> dbuf(32), 
  3256 ;;  p               2   15[COMRAM] int 
  3257 ;; Auto vars:     Size  Location     Type
  3258 ;;  i               2   18[COMRAM] int 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  1    wreg      void 
  3261 ;; Registers used:
  3262 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3268 ;;      Params:         4       0       0       0       0       0       0       0       0
  3269 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3270 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3271 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3272 ;;Total ram usage:        7 bytes
  3273 ;; Hardware stack levels used: 1
  3274 ;; Hardware stack levels required when called: 3
  3275 ;; This function calls:
  3276 ;;		_fputc
  3277 ;;		_fputs
  3278 ;; This function is called by:
  3279 ;;		_utoa
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text5
  3284   001A08                     __ptext5:
  3285                           	callstack 0
  3286   001A08                     _pad:
  3287                           	callstack 23
  3288   001A08                     
  3289                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  3290   001A08  A048               	btfss	_flags^0,0,c
  3291   001A0A  EF09  F00D         	goto	u1491
  3292   001A0E  EF0B  F00D         	goto	u1490
  3293   001A12                     u1491:
  3294   001A12  EF11  F00D         	goto	l2118
  3295   001A16                     u1490:
  3296   001A16                     
  3297                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  3298   001A16  C00F  F009         	movff	pad@buf,fputs@s
  3299   001A1A  C00E  F00A         	movff	pad@fp,fputs@fp
  3300   001A1E  EC2B  F010         	call	_fputs	;wreg free
  3301   001A22                     l2118:
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  3304   001A22  BE11               	btfsc	(pad@p+1)^0,7,c
  3305   001A24  EF18  F00D         	goto	u1500
  3306   001A28  EF16  F00D         	goto	u1501
  3307   001A2C                     u1501:
  3308   001A2C  EF1C  F00D         	goto	l992
  3309   001A30                     u1500:
  3310   001A30                     
  3311                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  3312   001A30  0E00               	movlw	0
  3313   001A32  6E11               	movwf	(pad@p+1)^0,c
  3314   001A34  0E00               	movlw	0
  3315   001A36  6E10               	movwf	pad@p^0,c
  3316   001A38                     l992:
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  3319   001A38  0E00               	movlw	0
  3320   001A3A  6E14               	movwf	(pad@i+1)^0,c
  3321   001A3C  0E00               	movlw	0
  3322   001A3E  6E13               	movwf	pad@i^0,c
  3323                           
  3324                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3325   001A40  EF2C  F00D         	goto	l2126
  3326   001A44                     l2122:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  3329   001A44  0E00               	movlw	0
  3330   001A46  6E02               	movwf	(fputc@c+1)^0,c
  3331   001A48  0E20               	movlw	32
  3332   001A4A  6E01               	movwf	fputc@c^0,c
  3333   001A4C  C00E  F003         	movff	pad@fp,fputc@fp
  3334   001A50  ECB3  F00B         	call	_fputc	;wreg free
  3335   001A54                     
  3336                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  3337   001A54  4A13               	infsnz	pad@i^0,f,c
  3338   001A56  2A14               	incf	(pad@i+1)^0,f,c
  3339   001A58                     l2126:
  3340                           
  3341                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  3342   001A58  5010               	movf	pad@p^0,w,c
  3343   001A5A  5C13               	subwf	pad@i^0,w,c
  3344   001A5C  5014               	movf	(pad@i+1)^0,w,c
  3345   001A5E  0A80               	xorlw	128
  3346   001A60  6E12               	movwf	??_pad^0,c
  3347   001A62  5011               	movf	(pad@p+1)^0,w,c
  3348   001A64  0A80               	xorlw	128
  3349   001A66  5812               	subwfb	??_pad^0,w,c
  3350   001A68  A0D8               	btfss	status,0,c
  3351   001A6A  EF39  F00D         	goto	u1511
  3352   001A6E  EF3B  F00D         	goto	u1510
  3353   001A72                     u1511:
  3354   001A72  EF22  F00D         	goto	l2122
  3355   001A76                     u1510:
  3356   001A76                     
  3357                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  3358   001A76  B048               	btfsc	_flags^0,0,c
  3359   001A78  EF40  F00D         	goto	u1521
  3360   001A7C  EF42  F00D         	goto	u1520
  3361   001A80                     u1521:
  3362   001A80  EF48  F00D         	goto	l997
  3363   001A84                     u1520:
  3364   001A84                     
  3365                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  3366   001A84  C00F  F009         	movff	pad@buf,fputs@s
  3367   001A88  C00E  F00A         	movff	pad@fp,fputs@fp
  3368   001A8C  EC2B  F010         	call	_fputs	;wreg free
  3369   001A90                     l997:
  3370   001A90  0012               	return		;funcret
  3371   001A92                     __end_of_pad:
  3372                           	callstack 0
  3373                           
  3374 ;; *************** function _fputs *****************
  3375 ;; Defined at:
  3376 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;  s               1    8[COMRAM] PTR const unsigned char 
  3379 ;;		 -> dbuf(32), 
  3380 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  3381 ;;		 -> sprintf@f(11), 
  3382 ;; Auto vars:     Size  Location     Type
  3383 ;;  i               2   11[COMRAM] int 
  3384 ;;  c               1   10[COMRAM] unsigned char 
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  2    8[COMRAM] int 
  3387 ;; Registers used:
  3388 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3394 ;;      Params:         2       0       0       0       0       0       0       0       0
  3395 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3397 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3398 ;;Total ram usage:        5 bytes
  3399 ;; Hardware stack levels used: 1
  3400 ;; Hardware stack levels required when called: 2
  3401 ;; This function calls:
  3402 ;;		_fputc
  3403 ;; This function is called by:
  3404 ;;		_pad
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text6
  3409   002056                     __ptext6:
  3410                           	callstack 0
  3411   002056                     _fputs:
  3412                           	callstack 23
  3413   002056  0E00               	movlw	0
  3414   002058  6E0D               	movwf	(fputs@i+1)^0,c
  3415   00205A  0E00               	movlw	0
  3416   00205C  6E0C               	movwf	fputs@i^0,c
  3417   00205E  EF3A  F010         	goto	l2074
  3418   002062                     l2070:
  3419   002062  C00B  F001         	movff	fputs@c,fputc@c
  3420   002066  6A02               	clrf	(fputc@c+1)^0,c
  3421   002068  C00A  F003         	movff	fputs@fp,fputc@fp
  3422   00206C  ECB3  F00B         	call	_fputc	;wreg free
  3423   002070  4A0C               	infsnz	fputs@i^0,f,c
  3424   002072  2A0D               	incf	(fputs@i+1)^0,f,c
  3425   002074                     l2074:
  3426   002074  5009               	movf	fputs@s^0,w,c
  3427   002076  240C               	addwf	fputs@i^0,w,c
  3428   002078  6ED9               	movwf	fsr2l,c
  3429   00207A  6ADA               	clrf	fsr2h,c
  3430   00207C  50DF               	movf	indf2,w,c
  3431   00207E  6E0B               	movwf	fputs@c^0,c
  3432   002080  500B               	movf	fputs@c^0,w,c
  3433   002082  A4D8               	btfss	status,2,c
  3434   002084  EF46  F010         	goto	u1421
  3435   002088  EF48  F010         	goto	u1420
  3436   00208C                     u1421:
  3437   00208C  EF31  F010         	goto	l2070
  3438   002090                     u1420:
  3439   002090  0012               	return		;funcret
  3440   002092                     __end_of_fputs:
  3441                           	callstack 0
  3442                           
  3443 ;; *************** function ___lwmod *****************
  3444 ;; Defined at:
  3445 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  dividend        2    0[COMRAM] unsigned int 
  3448 ;;  divisor         2    2[COMRAM] unsigned int 
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  counter         1    4[COMRAM] unsigned char 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  2    0[COMRAM] unsigned int 
  3453 ;; Registers used:
  3454 ;;		wreg, status,2, status,0
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3460 ;;      Params:         4       0       0       0       0       0       0       0       0
  3461 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3462 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3463 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3464 ;;Total ram usage:        5 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; This function calls:
  3467 ;;		Nothing
  3468 ;; This function is called by:
  3469 ;;		_utoa
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473                           	psect	text7
  3474   001C0A                     __ptext7:
  3475                           	callstack 0
  3476   001C0A                     ___lwmod:
  3477                           	callstack 26
  3478   001C0A  5003               	movf	___lwmod@divisor^0,w,c
  3479   001C0C  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  3480   001C0E  B4D8               	btfsc	status,2,c
  3481   001C10  EF0C  F00E         	goto	u1461
  3482   001C14  EF0E  F00E         	goto	u1460
  3483   001C18                     u1461:
  3484   001C18  EF32  F00E         	goto	l797
  3485   001C1C                     u1460:
  3486   001C1C  0E01               	movlw	1
  3487   001C1E  6E05               	movwf	___lwmod@counter^0,c
  3488   001C20  EF16  F00E         	goto	l2104
  3489   001C24                     l2102:
  3490   001C24  90D8               	bcf	status,0,c
  3491   001C26  3603               	rlcf	___lwmod@divisor^0,f,c
  3492   001C28  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  3493   001C2A  2A05               	incf	___lwmod@counter^0,f,c
  3494   001C2C                     l2104:
  3495   001C2C  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  3496   001C2E  EF1B  F00E         	goto	u1471
  3497   001C32  EF1D  F00E         	goto	u1470
  3498   001C36                     u1471:
  3499   001C36  EF12  F00E         	goto	l2102
  3500   001C3A                     u1470:
  3501   001C3A                     l2106:
  3502   001C3A  5003               	movf	___lwmod@divisor^0,w,c
  3503   001C3C  5C01               	subwf	___lwmod@dividend^0,w,c
  3504   001C3E  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3505   001C40  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  3506   001C42  A0D8               	btfss	status,0,c
  3507   001C44  EF26  F00E         	goto	u1481
  3508   001C48  EF28  F00E         	goto	u1480
  3509   001C4C                     u1481:
  3510   001C4C  EF2C  F00E         	goto	l2110
  3511   001C50                     u1480:
  3512   001C50  5003               	movf	___lwmod@divisor^0,w,c
  3513   001C52  5E01               	subwf	___lwmod@dividend^0,f,c
  3514   001C54  5004               	movf	(___lwmod@divisor+1)^0,w,c
  3515   001C56  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  3516   001C58                     l2110:
  3517   001C58  90D8               	bcf	status,0,c
  3518   001C5A  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  3519   001C5C  3203               	rrcf	___lwmod@divisor^0,f,c
  3520   001C5E  2E05               	decfsz	___lwmod@counter^0,f,c
  3521   001C60  EF1D  F00E         	goto	l2106
  3522   001C64                     l797:
  3523   001C64  C001  F001         	movff	___lwmod@dividend,?___lwmod
  3524   001C68  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  3525   001C6C  0012               	return		;funcret
  3526   001C6E                     __end_of___lwmod:
  3527                           	callstack 0
  3528                           
  3529 ;; *************** function ___lwdiv *****************
  3530 ;; Defined at:
  3531 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwdiv.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  dividend        2    0[COMRAM] unsigned int 
  3534 ;;  divisor         2    2[COMRAM] unsigned int 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  quotient        2    4[COMRAM] unsigned int 
  3537 ;;  counter         1    6[COMRAM] unsigned char 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  2    0[COMRAM] unsigned int 
  3540 ;; Registers used:
  3541 ;;		wreg, status,2, status,0
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3547 ;;      Params:         4       0       0       0       0       0       0       0       0
  3548 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3549 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3550 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3551 ;;Total ram usage:        7 bytes
  3552 ;; Hardware stack levels used: 1
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_utoa
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text8
  3561   001B96                     __ptext8:
  3562                           	callstack 0
  3563   001B96                     ___lwdiv:
  3564                           	callstack 26
  3565   001B96  0E00               	movlw	0
  3566   001B98  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  3567   001B9A  0E00               	movlw	0
  3568   001B9C  6E05               	movwf	___lwdiv@quotient^0,c
  3569   001B9E  5003               	movf	___lwdiv@divisor^0,w,c
  3570   001BA0  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3571   001BA2  B4D8               	btfsc	status,2,c
  3572   001BA4  EFD6  F00D         	goto	u1431
  3573   001BA8  EFD8  F00D         	goto	u1430
  3574   001BAC                     u1431:
  3575   001BAC  EF00  F00E         	goto	l787
  3576   001BB0                     u1430:
  3577   001BB0  0E01               	movlw	1
  3578   001BB2  6E07               	movwf	___lwdiv@counter^0,c
  3579   001BB4  EFE0  F00D         	goto	l2084
  3580   001BB8                     l2082:
  3581   001BB8  90D8               	bcf	status,0,c
  3582   001BBA  3603               	rlcf	___lwdiv@divisor^0,f,c
  3583   001BBC  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3584   001BBE  2A07               	incf	___lwdiv@counter^0,f,c
  3585   001BC0                     l2084:
  3586   001BC0  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  3587   001BC2  EFE5  F00D         	goto	u1441
  3588   001BC6  EFE7  F00D         	goto	u1440
  3589   001BCA                     u1441:
  3590   001BCA  EFDC  F00D         	goto	l2082
  3591   001BCE                     u1440:
  3592   001BCE                     l2086:
  3593   001BCE  90D8               	bcf	status,0,c
  3594   001BD0  3605               	rlcf	___lwdiv@quotient^0,f,c
  3595   001BD2  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3596   001BD4  5003               	movf	___lwdiv@divisor^0,w,c
  3597   001BD6  5C01               	subwf	___lwdiv@dividend^0,w,c
  3598   001BD8  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3599   001BDA  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3600   001BDC  A0D8               	btfss	status,0,c
  3601   001BDE  EFF3  F00D         	goto	u1451
  3602   001BE2  EFF5  F00D         	goto	u1450
  3603   001BE6                     u1451:
  3604   001BE6  EFFA  F00D         	goto	l2094
  3605   001BEA                     u1450:
  3606   001BEA  5003               	movf	___lwdiv@divisor^0,w,c
  3607   001BEC  5E01               	subwf	___lwdiv@dividend^0,f,c
  3608   001BEE  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  3609   001BF0  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3610   001BF2  8005               	bsf	___lwdiv@quotient^0,0,c
  3611   001BF4                     l2094:
  3612   001BF4  90D8               	bcf	status,0,c
  3613   001BF6  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3614   001BF8  3203               	rrcf	___lwdiv@divisor^0,f,c
  3615   001BFA  2E07               	decfsz	___lwdiv@counter^0,f,c
  3616   001BFC  EFE7  F00D         	goto	l2086
  3617   001C00                     l787:
  3618   001C00  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  3619   001C04  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3620   001C08  0012               	return		;funcret
  3621   001C0A                     __end_of___lwdiv:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _stoa *****************
  3625 ;; Defined at:
  3626 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
  3629 ;;		 -> sprintf@f(11), 
  3630 ;;  s               2    9[COMRAM] PTR unsigned char 
  3631 ;;		 -> ?_sprintf(2), main@ew(2), main@lon(9), main@ns(2), 
  3632 ;;		 -> main@lat(8), 
  3633 ;; Auto vars:     Size  Location     Type
  3634 ;;  l               2   19[COMRAM] int 
  3635 ;;  cp              2   17[COMRAM] PTR unsigned char 
  3636 ;;		 -> STR_19(7), ?_sprintf(2), main@ew(2), main@lon(9), 
  3637 ;;		 -> main@ns(2), main@lat(8), 
  3638 ;;  w               2   15[COMRAM] int 
  3639 ;;  p               2   13[COMRAM] int 
  3640 ;; Return value:  Size  Location     Type
  3641 ;;                  1    wreg      void 
  3642 ;; Registers used:
  3643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3644 ;; Tracked objects:
  3645 ;;		On entry : 0/0
  3646 ;;		On exit  : 0/0
  3647 ;;		Unchanged: 0/0
  3648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3649 ;;      Params:         3       0       0       0       0       0       0       0       0
  3650 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3651 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3652 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3653 ;;Total ram usage:       13 bytes
  3654 ;; Hardware stack levels used: 1
  3655 ;; Hardware stack levels required when called: 2
  3656 ;; This function calls:
  3657 ;;		_fputc
  3658 ;; This function is called by:
  3659 ;;		_vfpfcnvrt
  3660 ;; This function uses a non-reentrant model
  3661 ;;
  3662                           
  3663                           	psect	text9
  3664   001164                     __ptext9:
  3665                           	callstack 0
  3666   001164                     _stoa:
  3667                           	callstack 25
  3668   001164                     
  3669                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
  3670   001164  C00A  F012         	movff	stoa@s,stoa@cp
  3671   001168  C00B  F013         	movff	stoa@s+1,stoa@cp+1
  3672                           
  3673                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
  3674   00116C  5012               	movf	stoa@cp^0,w,c
  3675   00116E  1013               	iorwf	(stoa@cp+1)^0,w,c
  3676   001170  A4D8               	btfss	status,2,c
  3677   001172  EFBD  F008         	goto	u1531
  3678   001176  EFBF  F008         	goto	u1530
  3679   00117A                     u1531:
  3680   00117A  EFC5  F008         	goto	l2134
  3681   00117E                     u1530:
  3682   00117E                     
  3683                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
  3684   00117E  0EB0               	movlw	low STR_19
  3685   001180  6E12               	movwf	stoa@cp^0,c
  3686   001182  5012               	movf	stoa@cp^0,w,c
  3687   001184  A4D8               	btfss	status,2,c
  3688   001186  0E08               	movlw	high __smallconst
  3689   001188  6E13               	movwf	(stoa@cp+1)^0,c
  3690   00118A                     l2134:
  3691                           
  3692                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
  3693   00118A  0E00               	movlw	0
  3694   00118C  6E15               	movwf	(stoa@l+1)^0,c
  3695   00118E  0E00               	movlw	0
  3696   001190  6E14               	movwf	stoa@l^0,c
  3697   001192  EFCD  F008         	goto	l2138
  3698   001196                     l2136:
  3699   001196  4A14               	infsnz	stoa@l^0,f,c
  3700   001198  2A15               	incf	(stoa@l+1)^0,f,c
  3701   00119A                     l2138:
  3702   00119A  5014               	movf	stoa@l^0,w,c
  3703   00119C  2412               	addwf	stoa@cp^0,w,c
  3704   00119E  6E0C               	movwf	??_stoa^0,c
  3705   0011A0  5015               	movf	(stoa@l+1)^0,w,c
  3706   0011A2  2013               	addwfc	(stoa@cp+1)^0,w,c
  3707   0011A4  6E0D               	movwf	(??_stoa+1)^0,c
  3708   0011A6  C00C  FFF6         	movff	??_stoa,tblptrl
  3709   0011AA  C00D  FFF7         	movff	??_stoa+1,tblptrh
  3710   0011AE  6AF8               	clrf	tblptru,c
  3711   0011B0  0E07               	movlw	(high __ramtop+-1)
  3712   0011B2  64F7               	cpfsgt	tblptrh,c
  3713   0011B4  D003               	bra	u1547
  3714   0011B6  0008               	tblrd		*
  3715   0011B8  50F5               	movf	tablat,w,c
  3716   0011BA  D005               	bra	u1540
  3717   0011BC                     u1547:
  3718   0011BC  CFF6 FFE9          	movff	tblptrl,fsr0l
  3719   0011C0  CFF7 FFEA          	movff	tblptrh,fsr0h
  3720   0011C4  50EF               	movf	indf0,w,c
  3721   0011C6                     u1540:
  3722   0011C6  0900               	iorlw	0
  3723   0011C8  A4D8               	btfss	status,2,c
  3724   0011CA  EFE9  F008         	goto	u1551
  3725   0011CE  EFEB  F008         	goto	u1550
  3726   0011D2                     u1551:
  3727   0011D2  EFCB  F008         	goto	l2136
  3728   0011D6                     u1550:
  3729   0011D6                     
  3730                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 965:     p = l;
  3731   0011D6  C014  F00E         	movff	stoa@l,stoa@p
  3732   0011DA  C015  F00F         	movff	stoa@l+1,stoa@p+1
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
  3735   0011DE  C043  F010         	movff	_width,stoa@w
  3736   0011E2  C044  F011         	movff	_width+1,stoa@w+1
  3737                           
  3738                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
  3739   0011E6  B048               	btfsc	_flags^0,0,c
  3740   0011E8  EFF8  F008         	goto	u1561
  3741   0011EC  EFFA  F008         	goto	u1560
  3742   0011F0                     u1561:
  3743   0011F0  EF31  F009         	goto	l2152
  3744   0011F4                     u1560:
  3745   0011F4  EF06  F009         	goto	l2146
  3746   0011F8                     l2142:
  3747                           
  3748                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
  3749   0011F8  0E00               	movlw	0
  3750   0011FA  6E02               	movwf	(fputc@c+1)^0,c
  3751   0011FC  0E20               	movlw	32
  3752   0011FE  6E01               	movwf	fputc@c^0,c
  3753   001200  C009  F003         	movff	stoa@fp,fputc@fp
  3754   001204  ECB3  F00B         	call	_fputc	;wreg free
  3755   001208                     
  3756                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
  3757   001208  4A14               	infsnz	stoa@l^0,f,c
  3758   00120A  2A15               	incf	(stoa@l+1)^0,f,c
  3759   00120C                     l2146:
  3760                           
  3761                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
  3762   00120C  5010               	movf	stoa@w^0,w,c
  3763   00120E  5C14               	subwf	stoa@l^0,w,c
  3764   001210  5015               	movf	(stoa@l+1)^0,w,c
  3765   001212  0A80               	xorlw	128
  3766   001214  6E0C               	movwf	??_stoa^0,c
  3767   001216  5011               	movf	(stoa@w+1)^0,w,c
  3768   001218  0A80               	xorlw	128
  3769   00121A  580C               	subwfb	??_stoa^0,w,c
  3770   00121C  A0D8               	btfss	status,0,c
  3771   00121E  EF13  F009         	goto	u1571
  3772   001222  EF15  F009         	goto	u1570
  3773   001226                     u1571:
  3774   001226  EFFC  F008         	goto	l2142
  3775   00122A                     u1570:
  3776   00122A  EF31  F009         	goto	l2152
  3777   00122E                     l2148:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
  3780   00122E  C012  FFF6         	movff	stoa@cp,tblptrl
  3781   001232  C013  FFF7         	movff	stoa@cp+1,tblptrh
  3782   001236  6AF8               	clrf	tblptru,c
  3783   001238  0E07               	movlw	(high __ramtop+-1)
  3784   00123A  64F7               	cpfsgt	tblptrh,c
  3785   00123C  D003               	bra	u1587
  3786   00123E  0008               	tblrd		*
  3787   001240  50F5               	movf	tablat,w,c
  3788   001242  D005               	bra	u1580
  3789   001244                     u1587:
  3790   001244  CFF6 FFE9          	movff	tblptrl,fsr0l
  3791   001248  CFF7 FFEA          	movff	tblptrh,fsr0h
  3792   00124C  50EF               	movf	indf0,w,c
  3793   00124E                     u1580:
  3794   00124E  6E0C               	movwf	??_stoa^0,c
  3795   001250  500C               	movf	??_stoa^0,w,c
  3796   001252  6E01               	movwf	fputc@c^0,c
  3797   001254  6A02               	clrf	(fputc@c+1)^0,c
  3798   001256  C009  F003         	movff	stoa@fp,fputc@fp
  3799   00125A  ECB3  F00B         	call	_fputc	;wreg free
  3800   00125E                     
  3801                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
  3802   00125E  4A12               	infsnz	stoa@cp^0,f,c
  3803   001260  2A13               	incf	(stoa@cp+1)^0,f,c
  3804   001262                     l2152:
  3805                           
  3806                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
  3807   001262  060E               	decf	stoa@p^0,f,c
  3808   001264  A0D8               	btfss	status,0,c
  3809   001266  060F               	decf	(stoa@p+1)^0,f,c
  3810   001268  280E               	incf	stoa@p^0,w,c
  3811   00126A  E106               	bnz	u1591
  3812   00126C  280F               	incf	(stoa@p+1)^0,w,c
  3813   00126E  A4D8               	btfss	status,2,c
  3814   001270  EF3C  F009         	goto	u1591
  3815   001274  EF3E  F009         	goto	u1590
  3816   001278                     u1591:
  3817   001278  EF17  F009         	goto	l2148
  3818   00127C                     u1590:
  3819   00127C                     
  3820                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
  3821   00127C  A048               	btfss	_flags^0,0,c
  3822   00127E  EF43  F009         	goto	u1601
  3823   001282  EF45  F009         	goto	u1600
  3824   001286                     u1601:
  3825   001286  EF60  F009         	goto	l1016
  3826   00128A                     u1600:
  3827   00128A  EF51  F009         	goto	l2160
  3828   00128E                     l2156:
  3829                           
  3830                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
  3831   00128E  0E00               	movlw	0
  3832   001290  6E02               	movwf	(fputc@c+1)^0,c
  3833   001292  0E20               	movlw	32
  3834   001294  6E01               	movwf	fputc@c^0,c
  3835   001296  C009  F003         	movff	stoa@fp,fputc@fp
  3836   00129A  ECB3  F00B         	call	_fputc	;wreg free
  3837   00129E                     
  3838                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
  3839   00129E  4A14               	infsnz	stoa@l^0,f,c
  3840   0012A0  2A15               	incf	(stoa@l+1)^0,f,c
  3841   0012A2                     l2160:
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
  3844   0012A2  5010               	movf	stoa@w^0,w,c
  3845   0012A4  5C14               	subwf	stoa@l^0,w,c
  3846   0012A6  5015               	movf	(stoa@l+1)^0,w,c
  3847   0012A8  0A80               	xorlw	128
  3848   0012AA  6E0C               	movwf	??_stoa^0,c
  3849   0012AC  5011               	movf	(stoa@w+1)^0,w,c
  3850   0012AE  0A80               	xorlw	128
  3851   0012B0  580C               	subwfb	??_stoa^0,w,c
  3852   0012B2  A0D8               	btfss	status,0,c
  3853   0012B4  EF5E  F009         	goto	u1611
  3854   0012B8  EF60  F009         	goto	u1610
  3855   0012BC                     u1611:
  3856   0012BC  EF47  F009         	goto	l2156
  3857   0012C0                     u1610:
  3858   0012C0                     l1016:
  3859   0012C0  0012               	return		;funcret
  3860   0012C2                     __end_of_stoa:
  3861                           	callstack 0
  3862                           
  3863 ;; *************** function _fputc *****************
  3864 ;; Defined at:
  3865 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  c               2    0[COMRAM] int 
  3868 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  3869 ;;		 -> sprintf@f(11), 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;		None
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  2    0[COMRAM] int 
  3874 ;; Registers used:
  3875 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3881 ;;      Params:         3       0       0       0       0       0       0       0       0
  3882 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3883 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3884 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3885 ;;Total ram usage:        8 bytes
  3886 ;; Hardware stack levels used: 1
  3887 ;; Hardware stack levels required when called: 1
  3888 ;; This function calls:
  3889 ;;		_putch
  3890 ;; This function is called by:
  3891 ;;		_pad
  3892 ;;		_stoa
  3893 ;;		_vfpfcnvrt
  3894 ;;		_fputs
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           	psect	text10
  3899   001766                     __ptext10:
  3900                           	callstack 0
  3901   001766                     _fputc:
  3902                           	callstack 23
  3903   001766  5003               	movf	fputc@fp^0,w,c
  3904   001768  B4D8               	btfsc	status,2,c
  3905   00176A  EFB9  F00B         	goto	u1381
  3906   00176E  EFBB  F00B         	goto	u1380
  3907   001772                     u1381:
  3908   001772  EFC3  F00B         	goto	l2058
  3909   001776                     u1380:
  3910   001776  5003               	movf	fputc@fp^0,w,c
  3911   001778  A4D8               	btfss	status,2,c
  3912   00177A  EFC1  F00B         	goto	u1391
  3913   00177E  EFC3  F00B         	goto	u1390
  3914   001782                     u1391:
  3915   001782  EFC8  F00B         	goto	l2060
  3916   001786                     u1390:
  3917   001786                     l2058:
  3918   001786  5001               	movf	fputc@c^0,w,c
  3919   001788  EC01  F011         	call	_putch
  3920   00178C  EF0F  F00C         	goto	l1075
  3921   001790                     l2060:
  3922   001790  5003               	movf	fputc@fp^0,w,c
  3923   001792  6ED9               	movwf	fsr2l,c
  3924   001794  6ADA               	clrf	fsr2h,c
  3925   001796  0E09               	movlw	9
  3926   001798  26D9               	addwf	fsr2l,f,c
  3927   00179A  50DE               	movf	postinc2,w,c
  3928   00179C  10DE               	iorwf	postinc2,w,c
  3929   00179E  B4D8               	btfsc	status,2,c
  3930   0017A0  EFD4  F00B         	goto	u1401
  3931   0017A4  EFD6  F00B         	goto	u1400
  3932   0017A8                     u1401:
  3933   0017A8  EFEF  F00B         	goto	l2064
  3934   0017AC                     u1400:
  3935   0017AC  5003               	movf	fputc@fp^0,w,c
  3936   0017AE  6ED9               	movwf	fsr2l,c
  3937   0017B0  6ADA               	clrf	fsr2h,c
  3938   0017B2  0E09               	movlw	9
  3939   0017B4  26D9               	addwf	fsr2l,f,c
  3940   0017B6  5003               	movf	fputc@fp^0,w,c
  3941   0017B8  6EE1               	movwf	fsr1l,c
  3942   0017BA  6AE2               	clrf	fsr1h,c
  3943   0017BC  0E02               	movlw	2
  3944   0017BE  26E1               	addwf	fsr1l,f,c
  3945   0017C0  50DE               	movf	postinc2,w,c
  3946   0017C2  5CE6               	subwf	postinc1,w,c
  3947   0017C4  50E6               	movf	postinc1,w,c
  3948   0017C6  0A80               	xorlw	128
  3949   0017C8  6E08               	movwf	(??_fputc+4)^0,c
  3950   0017CA  50DE               	movf	postinc2,w,c
  3951   0017CC  0A80               	xorlw	128
  3952   0017CE  5808               	subwfb	(??_fputc+4)^0,w,c
  3953   0017D0  B0D8               	btfsc	status,0,c
  3954   0017D2  EFED  F00B         	goto	u1411
  3955   0017D6  EFEF  F00B         	goto	u1410
  3956   0017DA                     u1411:
  3957   0017DA  EF0F  F00C         	goto	l1075
  3958   0017DE                     u1410:
  3959   0017DE                     l2064:
  3960   0017DE  5003               	movf	fputc@fp^0,w,c
  3961   0017E0  6ED9               	movwf	fsr2l,c
  3962   0017E2  6ADA               	clrf	fsr2h,c
  3963   0017E4  0E02               	movlw	2
  3964   0017E6  26D9               	addwf	fsr2l,f,c
  3965   0017E8  CFDE F004          	movff	postinc2,??_fputc
  3966   0017EC  CFDD F005          	movff	postdec2,??_fputc+1
  3967   0017F0  5003               	movf	fputc@fp^0,w,c
  3968   0017F2  6ED9               	movwf	fsr2l,c
  3969   0017F4  6ADA               	clrf	fsr2h,c
  3970   0017F6  CFDE F006          	movff	postinc2,??_fputc+2
  3971   0017FA  CFDD F007          	movff	postdec2,??_fputc+3
  3972   0017FE  5004               	movf	??_fputc^0,w,c
  3973   001800  2406               	addwf	(??_fputc+2)^0,w,c
  3974   001802  6ED9               	movwf	fsr2l,c
  3975   001804  5005               	movf	(??_fputc+1)^0,w,c
  3976   001806  2007               	addwfc	(??_fputc+3)^0,w,c
  3977   001808  6EDA               	movwf	fsr2h,c
  3978   00180A  C001  FFDF         	movff	fputc@c,indf2
  3979   00180E  5003               	movf	fputc@fp^0,w,c
  3980   001810  6ED9               	movwf	fsr2l,c
  3981   001812  6ADA               	clrf	fsr2h,c
  3982   001814  0E02               	movlw	2
  3983   001816  26D9               	addwf	fsr2l,f,c
  3984   001818  2ADE               	incf	postinc2,f,c
  3985   00181A  0E00               	movlw	0
  3986   00181C  22DD               	addwfc	postdec2,f,c
  3987   00181E                     l1075:
  3988   00181E  0012               	return		;funcret
  3989   001820                     __end_of_fputc:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function _putch *****************
  3993 ;; Defined at:
  3994 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;  c               1    wreg     unsigned char 
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  c               1    0[COMRAM] unsigned char 
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4008 ;;      Params:         0       0       0       0       0       0       0       0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4010 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4011 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4012 ;;Total ram usage:        0 bytes
  4013 ;; Hardware stack levels used: 1
  4014 ;; This function calls:
  4015 ;;		Nothing
  4016 ;; This function is called by:
  4017 ;;		_fputc
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text11
  4022   002202                     __ptext11:
  4023                           	callstack 0
  4024   002202                     _putch:
  4025                           	callstack 23
  4026   002202  0012               	return		;funcret
  4027   002204                     __end_of_putch:
  4028                           	callstack 0
  4029                           
  4030 ;; *************** function _read_prec_or_width *****************
  4031 ;; Defined at:
  4032 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  4035 ;;		 -> vfprintf@cfmt(1), 
  4036 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  4037 ;;		 -> sprintf@ap(1), 
  4038 ;; Auto vars:     Size  Location     Type
  4039 ;;  c               1    4[COMRAM] unsigned char 
  4040 ;;  n               2    5[COMRAM] int 
  4041 ;; Return value:  Size  Location     Type
  4042 ;;                  2    0[COMRAM] int 
  4043 ;; Registers used:
  4044 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  4045 ;; Tracked objects:
  4046 ;;		On entry : 0/0
  4047 ;;		On exit  : 0/0
  4048 ;;		Unchanged: 0/0
  4049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4050 ;;      Params:         2       0       0       0       0       0       0       0       0
  4051 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4052 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4053 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4054 ;;Total ram usage:        7 bytes
  4055 ;; Hardware stack levels used: 1
  4056 ;; This function calls:
  4057 ;;		Nothing
  4058 ;; This function is called by:
  4059 ;;		_vfpfcnvrt
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text12
  4064   0018CE                     __ptext12:
  4065                           	callstack 0
  4066   0018CE                     _read_prec_or_width:
  4067                           	callstack 27
  4068   0018CE                     
  4069                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  4070   0018CE  0E00               	movlw	0
  4071   0018D0  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  4072   0018D2  0E00               	movlw	0
  4073   0018D4  6E06               	movwf	read_prec_or_width@n^0,c
  4074   0018D6                     
  4075                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  4076   0018D6  5001               	movf	read_prec_or_width@fmt^0,w,c
  4077   0018D8  6ED9               	movwf	fsr2l,c
  4078   0018DA  6ADA               	clrf	fsr2h,c
  4079   0018DC  CFDF FFF6          	movff	indf2,tblptrl
  4080   0018E0                     	if	1	;There is more than 1 active tblptr byte
  4081   0018E0  0E08               	movlw	high __smallconst
  4082   0018E2  6EF7               	movwf	tblptrh,c
  4083   0018E4                     	endif
  4084   0018E4                     	if	0	;tblptru may be non-zero
  4085   0018E4                     	endif
  4086   0018E4                     	if	0	;tblptru may be non-zero
  4087   0018E4                     	endif
  4088   0018E4  0008               	tblrd		*
  4089   0018E6  50F5               	movf	tablat,w,c
  4090   0018E8  0A2A               	xorlw	42
  4091   0018EA  A4D8               	btfss	status,2,c
  4092   0018EC  EF7A  F00C         	goto	u1671
  4093   0018F0  EF7C  F00C         	goto	u1670
  4094   0018F4                     u1671:
  4095   0018F4  EFA1  F00C         	goto	l2204
  4096   0018F8                     u1670:
  4097   0018F8                     
  4098                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  4099   0018F8  5001               	movf	read_prec_or_width@fmt^0,w,c
  4100   0018FA  6ED9               	movwf	fsr2l,c
  4101   0018FC  6ADA               	clrf	fsr2h,c
  4102   0018FE  2ADF               	incf	indf2,f,c
  4103   001900                     
  4104                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  4105   001900  5002               	movf	read_prec_or_width@ap^0,w,c
  4106   001902  6ED9               	movwf	fsr2l,c
  4107   001904  6ADA               	clrf	fsr2h,c
  4108   001906  0E02               	movlw	2
  4109   001908  26DF               	addwf	indf2,f,c
  4110   00190A  5CDF               	subwf	indf2,w,c
  4111   00190C  6ED9               	movwf	fsr2l,c
  4112   00190E  6ADA               	clrf	fsr2h,c
  4113   001910  CFDE F006          	movff	postinc2,read_prec_or_width@n
  4114   001914  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  4115                           
  4116                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  4117   001918  EFB4  F00C         	goto	l1030
  4118   00191C                     l2200:
  4119                           
  4120                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  4121   00191C  0E0A               	movlw	10
  4122   00191E  0206               	mulwf	read_prec_or_width@n^0,c
  4123   001920  CFF3 F003          	movff	prodl,??_read_prec_or_width
  4124   001924  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  4125   001928  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  4126   00192A  50F3               	movf	prodl,w,c
  4127   00192C  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  4128   00192E  5005               	movf	read_prec_or_width@c^0,w,c
  4129   001930  2403               	addwf	??_read_prec_or_width^0,w,c
  4130   001932  6E06               	movwf	read_prec_or_width@n^0,c
  4131   001934  0E00               	movlw	0
  4132   001936  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  4133   001938  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  4134   00193A                     
  4135                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  4136   00193A  5001               	movf	read_prec_or_width@fmt^0,w,c
  4137   00193C  6ED9               	movwf	fsr2l,c
  4138   00193E  6ADA               	clrf	fsr2h,c
  4139   001940  2ADF               	incf	indf2,f,c
  4140   001942                     l2204:
  4141                           
  4142                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  4143   001942  5001               	movf	read_prec_or_width@fmt^0,w,c
  4144   001944  6ED9               	movwf	fsr2l,c
  4145   001946  6ADA               	clrf	fsr2h,c
  4146   001948  CFDF FFF6          	movff	indf2,tblptrl
  4147   00194C                     	if	1	;There is more than 1 active tblptr byte
  4148   00194C  0E08               	movlw	high __smallconst
  4149   00194E  6EF7               	movwf	tblptrh,c
  4150   001950                     	endif
  4151   001950                     	if	0	;tblptru may be non-zero
  4152   001950                     	endif
  4153   001950                     	if	0	;tblptru may be non-zero
  4154   001950                     	endif
  4155   001950  0008               	tblrd		*
  4156   001952  50F5               	movf	tablat,w,c
  4157   001954  0FD0               	addlw	208
  4158   001956  6E05               	movwf	read_prec_or_width@c^0,c
  4159   001958  0E09               	movlw	9
  4160   00195A  6405               	cpfsgt	read_prec_or_width@c^0,c
  4161   00195C  EFB2  F00C         	goto	u1681
  4162   001960  EFB4  F00C         	goto	u1680
  4163   001964                     u1681:
  4164   001964  EF8E  F00C         	goto	l2200
  4165   001968                     u1680:
  4166   001968                     l1030:
  4167                           
  4168                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  4169   001968  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  4170   00196C  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  4171   001970  0012               	return		;funcret
  4172   001972                     __end_of_read_prec_or_width:
  4173                           	callstack 0
  4174                           
  4175 ;; *************** function ___awmod *****************
  4176 ;; Defined at:
  4177 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;  dividend        2    0[COMRAM] int 
  4180 ;;  divisor         2    2[COMRAM] int 
  4181 ;; Auto vars:     Size  Location     Type
  4182 ;;  sign            1    5[COMRAM] unsigned char 
  4183 ;;  counter         1    4[COMRAM] unsigned char 
  4184 ;; Return value:  Size  Location     Type
  4185 ;;                  2    0[COMRAM] int 
  4186 ;; Registers used:
  4187 ;;		wreg, status,2, status,0
  4188 ;; Tracked objects:
  4189 ;;		On entry : 0/0
  4190 ;;		On exit  : 0/0
  4191 ;;		Unchanged: 0/0
  4192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4193 ;;      Params:         4       0       0       0       0       0       0       0       0
  4194 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4195 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4196 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4197 ;;Total ram usage:        6 bytes
  4198 ;; Hardware stack levels used: 1
  4199 ;; This function calls:
  4200 ;;		Nothing
  4201 ;; This function is called by:
  4202 ;;		_main
  4203 ;;		_decToBcd
  4204 ;; This function uses a non-reentrant model
  4205 ;;
  4206                           
  4207                           	psect	text13
  4208   001820                     __ptext13:
  4209                           	callstack 0
  4210   001820                     ___awmod:
  4211                           	callstack 30
  4212   001820  6A06               	clrf	___awmod@sign^0,c
  4213   001822  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4214   001824  EF18  F00C         	goto	u2550
  4215   001828  EF16  F00C         	goto	u2551
  4216   00182C                     u2551:
  4217   00182C  EF1E  F00C         	goto	l2772
  4218   001830                     u2550:
  4219   001830  6C01               	negf	___awmod@dividend^0,c
  4220   001832  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4221   001834  B0D8               	btfsc	status,0,c
  4222   001836  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4223   001838  0E01               	movlw	1
  4224   00183A  6E06               	movwf	___awmod@sign^0,c
  4225   00183C                     l2772:
  4226   00183C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4227   00183E  EF25  F00C         	goto	u2560
  4228   001842  EF23  F00C         	goto	u2561
  4229   001846                     u2561:
  4230   001846  EF29  F00C         	goto	l2776
  4231   00184A                     u2560:
  4232   00184A  6C03               	negf	___awmod@divisor^0,c
  4233   00184C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4234   00184E  B0D8               	btfsc	status,0,c
  4235   001850  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4236   001852                     l2776:
  4237   001852  5003               	movf	___awmod@divisor^0,w,c
  4238   001854  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4239   001856  B4D8               	btfsc	status,2,c
  4240   001858  EF30  F00C         	goto	u2571
  4241   00185C  EF32  F00C         	goto	u2570
  4242   001860                     u2571:
  4243   001860  EF56  F00C         	goto	l2792
  4244   001864                     u2570:
  4245   001864  0E01               	movlw	1
  4246   001866  6E05               	movwf	___awmod@counter^0,c
  4247   001868  EF3A  F00C         	goto	l2782
  4248   00186C                     l2780:
  4249   00186C  90D8               	bcf	status,0,c
  4250   00186E  3603               	rlcf	___awmod@divisor^0,f,c
  4251   001870  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4252   001872  2A05               	incf	___awmod@counter^0,f,c
  4253   001874                     l2782:
  4254   001874  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4255   001876  EF3F  F00C         	goto	u2581
  4256   00187A  EF41  F00C         	goto	u2580
  4257   00187E                     u2581:
  4258   00187E  EF36  F00C         	goto	l2780
  4259   001882                     u2580:
  4260   001882                     l2784:
  4261   001882  5003               	movf	___awmod@divisor^0,w,c
  4262   001884  5C01               	subwf	___awmod@dividend^0,w,c
  4263   001886  5004               	movf	(___awmod@divisor+1)^0,w,c
  4264   001888  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4265   00188A  A0D8               	btfss	status,0,c
  4266   00188C  EF4A  F00C         	goto	u2591
  4267   001890  EF4C  F00C         	goto	u2590
  4268   001894                     u2591:
  4269   001894  EF50  F00C         	goto	l2788
  4270   001898                     u2590:
  4271   001898  5003               	movf	___awmod@divisor^0,w,c
  4272   00189A  5E01               	subwf	___awmod@dividend^0,f,c
  4273   00189C  5004               	movf	(___awmod@divisor+1)^0,w,c
  4274   00189E  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4275   0018A0                     l2788:
  4276   0018A0  90D8               	bcf	status,0,c
  4277   0018A2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4278   0018A4  3203               	rrcf	___awmod@divisor^0,f,c
  4279   0018A6  2E05               	decfsz	___awmod@counter^0,f,c
  4280   0018A8  EF41  F00C         	goto	l2784
  4281   0018AC                     l2792:
  4282   0018AC  5006               	movf	___awmod@sign^0,w,c
  4283   0018AE  B4D8               	btfsc	status,2,c
  4284   0018B0  EF5C  F00C         	goto	u2601
  4285   0018B4  EF5E  F00C         	goto	u2600
  4286   0018B8                     u2601:
  4287   0018B8  EF62  F00C         	goto	l2796
  4288   0018BC                     u2600:
  4289   0018BC  6C01               	negf	___awmod@dividend^0,c
  4290   0018BE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4291   0018C0  B0D8               	btfsc	status,0,c
  4292   0018C2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4293   0018C4                     l2796:
  4294   0018C4  C001  F001         	movff	___awmod@dividend,?___awmod
  4295   0018C8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4296   0018CC  0012               	return		;funcret
  4297   0018CE                     __end_of___awmod:
  4298                           	callstack 0
  4299                           
  4300 ;; *************** function _RTC_Init *****************
  4301 ;; Defined at:
  4302 ;;		line 49 in file "RTC.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, status,2, status,0, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4319 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4320 ;;Total ram usage:        0 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; Hardware stack levels required when called: 1
  4323 ;; This function calls:
  4324 ;;		_I2C_Init
  4325 ;;		_I2C_Start
  4326 ;;		_I2C_Stop
  4327 ;;		_I2C_Write
  4328 ;; This function is called by:
  4329 ;;		_main
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           	psect	text14
  4334   00217E                     __ptext14:
  4335                           	callstack 0
  4336   00217E                     _RTC_Init:
  4337                           	callstack 29
  4338   00217E                     
  4339                           ;RTC.c: 50:     I2C_Init();
  4340   00217E  ECE6  F010         	call	_I2C_Init	;wreg free
  4341   002182                     
  4342                           ;RTC.c: 52:     I2C_Start();
  4343   002182  ECF8  F010         	call	_I2C_Start	;wreg free
  4344   002186                     
  4345                           ;RTC.c: 53:     I2C_Write(0x68 << 1);
  4346   002186  0ED0               	movlw	208
  4347   002188  EC93  F010         	call	_I2C_Write
  4348   00218C                     
  4349                           ;RTC.c: 54:     I2C_Write(0x00);
  4350   00218C  0E00               	movlw	0
  4351   00218E  EC93  F010         	call	_I2C_Write
  4352   002192                     
  4353                           ;RTC.c: 55:     I2C_Write(0x00);
  4354   002192  0E00               	movlw	0
  4355   002194  EC93  F010         	call	_I2C_Write
  4356   002198                     
  4357                           ;RTC.c: 56:     I2C_Stop();
  4358   002198  ECEF  F010         	call	_I2C_Stop	;wreg free
  4359   00219C  0012               	return		;funcret
  4360   00219E                     __end_of_RTC_Init:
  4361                           	callstack 0
  4362                           
  4363 ;; *************** function _I2C_Init *****************
  4364 ;; Defined at:
  4365 ;;		line 7 in file "RTC.c"
  4366 ;; Parameters:    Size  Location     Type
  4367 ;;		None
  4368 ;; Auto vars:     Size  Location     Type
  4369 ;;		None
  4370 ;; Return value:  Size  Location     Type
  4371 ;;                  1    wreg      void 
  4372 ;; Registers used:
  4373 ;;		wreg, status,2
  4374 ;; Tracked objects:
  4375 ;;		On entry : 0/0
  4376 ;;		On exit  : 0/0
  4377 ;;		Unchanged: 0/0
  4378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4379 ;;      Params:         0       0       0       0       0       0       0       0       0
  4380 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4381 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4382 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4383 ;;Total ram usage:        0 bytes
  4384 ;; Hardware stack levels used: 1
  4385 ;; This function calls:
  4386 ;;		Nothing
  4387 ;; This function is called by:
  4388 ;;		_RTC_Init
  4389 ;; This function uses a non-reentrant model
  4390 ;;
  4391                           
  4392                           	psect	text15
  4393   0021CC                     __ptext15:
  4394                           	callstack 0
  4395   0021CC                     _I2C_Init:
  4396                           	callstack 29
  4397   0021CC                     
  4398                           ;RTC.c: 8:     TRISB0 = 1;
  4399   0021CC  8093               	bsf	3987,0,c	;volatile
  4400                           
  4401                           ;RTC.c: 9:     TRISB1 = 1;
  4402   0021CE  8293               	bsf	3987,1,c	;volatile
  4403   0021D0                     
  4404                           ;RTC.c: 10:     SSPCON1 = 0x28;
  4405   0021D0  0E28               	movlw	40
  4406   0021D2  6EC6               	movwf	198,c	;volatile
  4407                           
  4408                           ;RTC.c: 11:     SSPADD = 19;
  4409   0021D4  0E13               	movlw	19
  4410   0021D6  6EC8               	movwf	200,c	;volatile
  4411                           
  4412                           ;RTC.c: 12:     SSPSTAT = 0x80;
  4413   0021D8  0E80               	movlw	128
  4414   0021DA  6EC7               	movwf	199,c	;volatile
  4415   0021DC  0012               	return		;funcret
  4416   0021DE                     __end_of_I2C_Init:
  4417                           	callstack 0
  4418                           
  4419 ;; *************** function _RTC_GetTime *****************
  4420 ;; Defined at:
  4421 ;;		line 81 in file "RTC.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;  hour            2    2[COMRAM] PTR unsigned char 
  4424 ;;		 -> main@h(1), 
  4425 ;;  min             2    4[COMRAM] PTR unsigned char 
  4426 ;;		 -> main@m(1), 
  4427 ;;  sec             2    6[COMRAM] PTR unsigned char 
  4428 ;;		 -> main@s(1), 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;		None
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4440 ;;      Params:         6       0       0       0       0       0       0       0       0
  4441 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4442 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4443 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4444 ;;Total ram usage:        6 bytes
  4445 ;; Hardware stack levels used: 1
  4446 ;; Hardware stack levels required when called: 1
  4447 ;; This function calls:
  4448 ;;		_I2C_Read
  4449 ;;		_I2C_Start
  4450 ;;		_I2C_Stop
  4451 ;;		_I2C_Write
  4452 ;;		_bcdToDec
  4453 ;; This function is called by:
  4454 ;;		_main
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           	psect	text16
  4459   001D36                     __ptext16:
  4460                           	callstack 0
  4461   001D36                     _RTC_GetTime:
  4462                           	callstack 29
  4463   001D36                     
  4464                           ;RTC.c: 82:     I2C_Start();
  4465   001D36  ECF8  F010         	call	_I2C_Start	;wreg free
  4466   001D3A                     
  4467                           ;RTC.c: 83:     I2C_Write(0x68 << 1);
  4468   001D3A  0ED0               	movlw	208
  4469   001D3C  EC93  F010         	call	_I2C_Write
  4470   001D40                     
  4471                           ;RTC.c: 84:     I2C_Write(0x00);
  4472   001D40  0E00               	movlw	0
  4473   001D42  EC93  F010         	call	_I2C_Write
  4474                           
  4475                           ;RTC.c: 85:     I2C_Start();
  4476   001D46  ECF8  F010         	call	_I2C_Start	;wreg free
  4477   001D4A                     
  4478                           ;RTC.c: 86:     I2C_Write((0x68 << 1) | 1);
  4479   001D4A  0ED1               	movlw	209
  4480   001D4C  EC93  F010         	call	_I2C_Write
  4481   001D50                     
  4482                           ;RTC.c: 88:     *sec = bcdToDec(I2C_Read(1) & 0x7F);
  4483   001D50  0E01               	movlw	1
  4484   001D52  ECEE  F00F         	call	_I2C_Read
  4485   001D56  0B7F               	andlw	127
  4486   001D58  ECDB  F010         	call	_bcdToDec
  4487   001D5C  C007  FFD9         	movff	RTC_GetTime@sec,fsr2l
  4488   001D60  C008  FFDA         	movff	RTC_GetTime@sec+1,fsr2h
  4489   001D64  6EDF               	movwf	indf2,c
  4490   001D66                     
  4491                           ;RTC.c: 89:     *min = bcdToDec(I2C_Read(1));
  4492   001D66  0E01               	movlw	1
  4493   001D68  ECEE  F00F         	call	_I2C_Read
  4494   001D6C  ECDB  F010         	call	_bcdToDec
  4495   001D70  C005  FFD9         	movff	RTC_GetTime@min,fsr2l
  4496   001D74  C006  FFDA         	movff	RTC_GetTime@min+1,fsr2h
  4497   001D78  6EDF               	movwf	indf2,c
  4498   001D7A                     
  4499                           ;RTC.c: 90:     *hour = bcdToDec(I2C_Read(0) & 0x3F);
  4500   001D7A  0E00               	movlw	0
  4501   001D7C  ECEE  F00F         	call	_I2C_Read
  4502   001D80  0B3F               	andlw	63
  4503   001D82  ECDB  F010         	call	_bcdToDec
  4504   001D86  C003  FFD9         	movff	RTC_GetTime@hour,fsr2l
  4505   001D8A  C004  FFDA         	movff	RTC_GetTime@hour+1,fsr2h
  4506   001D8E  6EDF               	movwf	indf2,c
  4507   001D90                     
  4508                           ;RTC.c: 92:     I2C_Stop();
  4509   001D90  ECEF  F010         	call	_I2C_Stop	;wreg free
  4510   001D94  0012               	return		;funcret
  4511   001D96                     __end_of_RTC_GetTime:
  4512                           	callstack 0
  4513                           
  4514 ;; *************** function _RTC_GetDate *****************
  4515 ;; Defined at:
  4516 ;;		line 96 in file "RTC.c"
  4517 ;; Parameters:    Size  Location     Type
  4518 ;;  date            2    2[COMRAM] PTR unsigned char 
  4519 ;;		 -> main@day(1), 
  4520 ;;  month           2    4[COMRAM] PTR unsigned char 
  4521 ;;		 -> main@month(1), 
  4522 ;;  year            2    6[COMRAM] PTR unsigned char 
  4523 ;;		 -> main@year(1), 
  4524 ;; Auto vars:     Size  Location     Type
  4525 ;;		None
  4526 ;; Return value:  Size  Location     Type
  4527 ;;                  1    wreg      void 
  4528 ;; Registers used:
  4529 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4530 ;; Tracked objects:
  4531 ;;		On entry : 0/0
  4532 ;;		On exit  : 0/0
  4533 ;;		Unchanged: 0/0
  4534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4535 ;;      Params:         6       0       0       0       0       0       0       0       0
  4536 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4537 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4538 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4539 ;;Total ram usage:        6 bytes
  4540 ;; Hardware stack levels used: 1
  4541 ;; Hardware stack levels required when called: 1
  4542 ;; This function calls:
  4543 ;;		_I2C_Read
  4544 ;;		_I2C_Start
  4545 ;;		_I2C_Stop
  4546 ;;		_I2C_Write
  4547 ;;		_bcdToDec
  4548 ;; This function is called by:
  4549 ;;		_main
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text17
  4554   001DF4                     __ptext17:
  4555                           	callstack 0
  4556   001DF4                     _RTC_GetDate:
  4557                           	callstack 29
  4558   001DF4                     
  4559                           ;RTC.c: 97:     I2C_Start();
  4560   001DF4  ECF8  F010         	call	_I2C_Start	;wreg free
  4561   001DF8                     
  4562                           ;RTC.c: 98:     I2C_Write(0x68 << 1);
  4563   001DF8  0ED0               	movlw	208
  4564   001DFA  EC93  F010         	call	_I2C_Write
  4565   001DFE                     
  4566                           ;RTC.c: 99:     I2C_Write(0x04);
  4567   001DFE  0E04               	movlw	4
  4568   001E00  EC93  F010         	call	_I2C_Write
  4569                           
  4570                           ;RTC.c: 100:     I2C_Start();
  4571   001E04  ECF8  F010         	call	_I2C_Start	;wreg free
  4572   001E08                     
  4573                           ;RTC.c: 101:     I2C_Write((0x68 << 1) | 1);
  4574   001E08  0ED1               	movlw	209
  4575   001E0A  EC93  F010         	call	_I2C_Write
  4576   001E0E                     
  4577                           ;RTC.c: 103:     *date = bcdToDec(I2C_Read(1));
  4578   001E0E  0E01               	movlw	1
  4579   001E10  ECEE  F00F         	call	_I2C_Read
  4580   001E14  ECDB  F010         	call	_bcdToDec
  4581   001E18  C003  FFD9         	movff	RTC_GetDate@date,fsr2l
  4582   001E1C  C004  FFDA         	movff	RTC_GetDate@date+1,fsr2h
  4583   001E20  6EDF               	movwf	indf2,c
  4584   001E22                     
  4585                           ;RTC.c: 104:     *month = bcdToDec(I2C_Read(1));
  4586   001E22  0E01               	movlw	1
  4587   001E24  ECEE  F00F         	call	_I2C_Read
  4588   001E28  ECDB  F010         	call	_bcdToDec
  4589   001E2C  C005  FFD9         	movff	RTC_GetDate@month,fsr2l
  4590   001E30  C006  FFDA         	movff	RTC_GetDate@month+1,fsr2h
  4591   001E34  6EDF               	movwf	indf2,c
  4592   001E36                     
  4593                           ;RTC.c: 105:     *year = bcdToDec(I2C_Read(0));
  4594   001E36  0E00               	movlw	0
  4595   001E38  ECEE  F00F         	call	_I2C_Read
  4596   001E3C  ECDB  F010         	call	_bcdToDec
  4597   001E40  C007  FFD9         	movff	RTC_GetDate@year,fsr2l
  4598   001E44  C008  FFDA         	movff	RTC_GetDate@year+1,fsr2h
  4599   001E48  6EDF               	movwf	indf2,c
  4600   001E4A                     
  4601                           ;RTC.c: 107:     I2C_Stop();
  4602   001E4A  ECEF  F010         	call	_I2C_Stop	;wreg free
  4603   001E4E  0012               	return		;funcret
  4604   001E50                     __end_of_RTC_GetDate:
  4605                           	callstack 0
  4606                           
  4607 ;; *************** function _bcdToDec *****************
  4608 ;; Defined at:
  4609 ;;		line 45 in file "RTC.c"
  4610 ;; Parameters:    Size  Location     Type
  4611 ;;  val             1    wreg     unsigned char 
  4612 ;; Auto vars:     Size  Location     Type
  4613 ;;  val             1    1[COMRAM] unsigned char 
  4614 ;; Return value:  Size  Location     Type
  4615 ;;                  1    wreg      unsigned char 
  4616 ;; Registers used:
  4617 ;;		wreg, status,2, status,0, prodl, prodh
  4618 ;; Tracked objects:
  4619 ;;		On entry : 0/0
  4620 ;;		On exit  : 0/0
  4621 ;;		Unchanged: 0/0
  4622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4623 ;;      Params:         0       0       0       0       0       0       0       0       0
  4624 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4625 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4626 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4627 ;;Total ram usage:        2 bytes
  4628 ;; Hardware stack levels used: 1
  4629 ;; This function calls:
  4630 ;;		Nothing
  4631 ;; This function is called by:
  4632 ;;		_RTC_GetTime
  4633 ;;		_RTC_GetDate
  4634 ;; This function uses a non-reentrant model
  4635 ;;
  4636                           
  4637                           	psect	text18
  4638   0021B6                     __ptext18:
  4639                           	callstack 0
  4640   0021B6                     _bcdToDec:
  4641                           	callstack 29
  4642                           
  4643                           ;incstack = 0
  4644                           ;bcdToDec@val stored from wreg
  4645   0021B6  6E02               	movwf	bcdToDec@val^0,c
  4646   0021B8                     
  4647                           ;RTC.c: 46:     return (uint8_t)(((val >> 4) * 10) + (val & 0x0F));
  4648   0021B8  C002  F001         	movff	bcdToDec@val,??_bcdToDec
  4649   0021BC  0E0F               	movlw	15
  4650   0021BE  1601               	andwf	??_bcdToDec^0,f,c
  4651   0021C0  3802               	swapf	bcdToDec@val^0,w,c
  4652   0021C2  0B0F               	andlw	15
  4653   0021C4  0D0A               	mullw	10
  4654   0021C6  50F3               	movf	243,w,c
  4655   0021C8  2401               	addwf	??_bcdToDec^0,w,c
  4656   0021CA  0012               	return		;funcret
  4657   0021CC                     __end_of_bcdToDec:
  4658                           	callstack 0
  4659                           
  4660 ;; *************** function _I2C_Write *****************
  4661 ;; Defined at:
  4662 ;;		line 25 in file "RTC.c"
  4663 ;; Parameters:    Size  Location     Type
  4664 ;;  data            1    wreg     unsigned char 
  4665 ;; Auto vars:     Size  Location     Type
  4666 ;;  data            1    1[COMRAM] unsigned char 
  4667 ;; Return value:  Size  Location     Type
  4668 ;;                  1    wreg      void 
  4669 ;; Registers used:
  4670 ;;		wreg, status,2, status,0
  4671 ;; Tracked objects:
  4672 ;;		On entry : 0/0
  4673 ;;		On exit  : 0/0
  4674 ;;		Unchanged: 0/0
  4675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4676 ;;      Params:         0       0       0       0       0       0       0       0       0
  4677 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4678 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4679 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4680 ;;Total ram usage:        2 bytes
  4681 ;; Hardware stack levels used: 1
  4682 ;; This function calls:
  4683 ;;		Nothing
  4684 ;; This function is called by:
  4685 ;;		_RTC_Init
  4686 ;;		_RTC_GetTime
  4687 ;;		_RTC_GetDate
  4688 ;;		_RTC_SetTime
  4689 ;;		_RTC_SetDate
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693                           	psect	text19
  4694   002126                     __ptext19:
  4695                           	callstack 0
  4696   002126                     _I2C_Write:
  4697                           	callstack 29
  4698                           
  4699                           ;incstack = 0
  4700                           ;I2C_Write@data stored from wreg
  4701   002126  6E02               	movwf	I2C_Write@data^0,c
  4702   002128                     
  4703                           ;RTC.c: 26:     SSPBUF = data;
  4704   002128  C002  FFC9         	movff	I2C_Write@data,4041	;volatile
  4705   00212C                     l44:
  4706   00212C  B0C7               	btfsc	4039,0,c	;volatile
  4707   00212E  EF9B  F010         	goto	u1971
  4708   002132  EF9D  F010         	goto	u1970
  4709   002136                     u1971:
  4710   002136  EF96  F010         	goto	l44
  4711   00213A                     u1970:
  4712   00213A                     l2378:
  4713   00213A  CFC5 F001          	movff	4037,??_I2C_Write	;volatile
  4714   00213E  0E1F               	movlw	31
  4715   002140  1601               	andwf	??_I2C_Write^0,f,c
  4716   002142  A4D8               	btfss	status,2,c
  4717   002144  EFA6  F010         	goto	u1981
  4718   002148  EFA8  F010         	goto	u1980
  4719   00214C                     u1981:
  4720   00214C  EF9D  F010         	goto	l2378
  4721   002150                     u1980:
  4722   002150  0012               	return		;funcret
  4723   002152                     __end_of_I2C_Write:
  4724                           	callstack 0
  4725                           
  4726 ;; *************** function _I2C_Stop *****************
  4727 ;; Defined at:
  4728 ;;		line 20 in file "RTC.c"
  4729 ;; Parameters:    Size  Location     Type
  4730 ;;		None
  4731 ;; Auto vars:     Size  Location     Type
  4732 ;;		None
  4733 ;; Return value:  Size  Location     Type
  4734 ;;                  1    wreg      void 
  4735 ;; Registers used:
  4736 ;;		None
  4737 ;; Tracked objects:
  4738 ;;		On entry : 0/0
  4739 ;;		On exit  : 0/0
  4740 ;;		Unchanged: 0/0
  4741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4742 ;;      Params:         0       0       0       0       0       0       0       0       0
  4743 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4744 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4745 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4746 ;;Total ram usage:        0 bytes
  4747 ;; Hardware stack levels used: 1
  4748 ;; This function calls:
  4749 ;;		Nothing
  4750 ;; This function is called by:
  4751 ;;		_RTC_Init
  4752 ;;		_RTC_GetTime
  4753 ;;		_RTC_GetDate
  4754 ;;		_RTC_SetTime
  4755 ;;		_RTC_SetDate
  4756 ;; This function uses a non-reentrant model
  4757 ;;
  4758                           
  4759                           	psect	text20
  4760   0021DE                     __ptext20:
  4761                           	callstack 0
  4762   0021DE                     _I2C_Stop:
  4763                           	callstack 29
  4764   0021DE                     
  4765                           ;RTC.c: 21:     PEN = 1;
  4766   0021DE  84C5               	bsf	4037,2,c	;volatile
  4767   0021E0                     l38:
  4768   0021E0  B4C5               	btfsc	4037,2,c	;volatile
  4769   0021E2  EFF5  F010         	goto	u1961
  4770   0021E6  EFF7  F010         	goto	u1960
  4771   0021EA                     u1961:
  4772   0021EA  EFF0  F010         	goto	l38
  4773   0021EE                     u1960:
  4774   0021EE  0012               	return		;funcret
  4775   0021F0                     __end_of_I2C_Stop:
  4776                           	callstack 0
  4777                           
  4778 ;; *************** function _I2C_Start *****************
  4779 ;; Defined at:
  4780 ;;		line 15 in file "RTC.c"
  4781 ;; Parameters:    Size  Location     Type
  4782 ;;		None
  4783 ;; Auto vars:     Size  Location     Type
  4784 ;;		None
  4785 ;; Return value:  Size  Location     Type
  4786 ;;                  1    wreg      void 
  4787 ;; Registers used:
  4788 ;;		None
  4789 ;; Tracked objects:
  4790 ;;		On entry : 0/0
  4791 ;;		On exit  : 0/0
  4792 ;;		Unchanged: 0/0
  4793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4794 ;;      Params:         0       0       0       0       0       0       0       0       0
  4795 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4796 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4797 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4798 ;;Total ram usage:        0 bytes
  4799 ;; Hardware stack levels used: 1
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_RTC_Init
  4804 ;;		_RTC_GetTime
  4805 ;;		_RTC_GetDate
  4806 ;;		_RTC_SetTime
  4807 ;;		_RTC_SetDate
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text21
  4812   0021F0                     __ptext21:
  4813                           	callstack 0
  4814   0021F0                     _I2C_Start:
  4815                           	callstack 29
  4816   0021F0                     
  4817                           ;RTC.c: 16:     SEN = 1;
  4818   0021F0  80C5               	bsf	4037,0,c	;volatile
  4819   0021F2                     l32:
  4820   0021F2  B0C5               	btfsc	4037,0,c	;volatile
  4821   0021F4  EFFE  F010         	goto	u1951
  4822   0021F8  EF00  F011         	goto	u1950
  4823   0021FC                     u1951:
  4824   0021FC  EFF9  F010         	goto	l32
  4825   002200                     u1950:
  4826   002200  0012               	return		;funcret
  4827   002202                     __end_of_I2C_Start:
  4828                           	callstack 0
  4829                           
  4830 ;; *************** function _I2C_Read *****************
  4831 ;; Defined at:
  4832 ;;		line 31 in file "RTC.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  ack             1    wreg     unsigned char 
  4835 ;; Auto vars:     Size  Location     Type
  4836 ;;  ack             1    0[COMRAM] unsigned char 
  4837 ;;  data            1    1[COMRAM] unsigned char 
  4838 ;; Return value:  Size  Location     Type
  4839 ;;                  1    wreg      unsigned char 
  4840 ;; Registers used:
  4841 ;;		wreg, status,2
  4842 ;; Tracked objects:
  4843 ;;		On entry : 0/0
  4844 ;;		On exit  : 0/0
  4845 ;;		Unchanged: 0/0
  4846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4847 ;;      Params:         0       0       0       0       0       0       0       0       0
  4848 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4850 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4851 ;;Total ram usage:        2 bytes
  4852 ;; Hardware stack levels used: 1
  4853 ;; This function calls:
  4854 ;;		Nothing
  4855 ;; This function is called by:
  4856 ;;		_RTC_GetTime
  4857 ;;		_RTC_GetDate
  4858 ;; This function uses a non-reentrant model
  4859 ;;
  4860                           
  4861                           	psect	text22
  4862   001FDC                     __ptext22:
  4863                           	callstack 0
  4864   001FDC                     _I2C_Read:
  4865                           	callstack 29
  4866                           
  4867                           ;incstack = 0
  4868                           ;I2C_Read@ack stored from wreg
  4869   001FDC  6E01               	movwf	I2C_Read@ack^0,c
  4870   001FDE                     
  4871                           ;RTC.c: 32:     RCEN = 1;
  4872   001FDE  86C5               	bsf	4037,3,c	;volatile
  4873   001FE0                     l53:
  4874   001FE0  A0C7               	btfss	4039,0,c	;volatile
  4875   001FE2  EFF5  F00F         	goto	u1991
  4876   001FE6  EFF7  F00F         	goto	u1990
  4877   001FEA                     u1991:
  4878   001FEA  EFF0  F00F         	goto	l53
  4879   001FEE                     u1990:
  4880   001FEE                     
  4881                           ;RTC.c: 34:     uint8_t data = SSPBUF;
  4882   001FEE  CFC9 F002          	movff	4041,I2C_Read@data	;volatile
  4883   001FF2                     
  4884                           ;RTC.c: 35:     ACKDT = (ack) ? 0 : 1;
  4885   001FF2  5001               	movf	I2C_Read@ack^0,w,c
  4886   001FF4  B4D8               	btfsc	status,2,c
  4887   001FF6  EFFF  F00F         	goto	u2001
  4888   001FFA  EF02  F010         	goto	u2000
  4889   001FFE                     u2001:
  4890   001FFE  8AC5               	bsf	4037,5,c	;volatile
  4891   002000  EF03  F010         	goto	u2015
  4892   002004                     u2000:
  4893   002004  9AC5               	bcf	4037,5,c	;volatile
  4894   002006                     u2015:
  4895   002006                     
  4896                           ;RTC.c: 36:     ACKEN = 1;
  4897   002006  88C5               	bsf	4037,4,c	;volatile
  4898   002008                     l56:
  4899   002008  B8C5               	btfsc	4037,4,c	;volatile
  4900   00200A  EF09  F010         	goto	u2021
  4901   00200E  EF0B  F010         	goto	u2020
  4902   002012                     u2021:
  4903   002012  EF04  F010         	goto	l56
  4904   002016                     u2020:
  4905   002016                     
  4906                           ;RTC.c: 38:     return data;
  4907   002016  5002               	movf	I2C_Read@data^0,w,c
  4908   002018  0012               	return		;funcret
  4909   00201A                     __end_of_I2C_Read:
  4910                           	callstack 0
  4911                           
  4912 ;; *************** function _LCD_String_xy *****************
  4913 ;; Defined at:
  4914 ;;		line 50 in file "LCD.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;  row             1    wreg     unsigned char 
  4917 ;;  pos             1    4[COMRAM] unsigned char 
  4918 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  4919 ;;		 -> STR_18(12), STR_17(15), STR_12(16), STR_11(12), 
  4920 ;;		 -> main@buffer(17), STR_6(13), STR_5(13), STR_4(17), 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  row             1    9[COMRAM] unsigned char 
  4923 ;;  location        1   12[COMRAM] unsigned char 
  4924 ;; Return value:  Size  Location     Type
  4925 ;;                  1    wreg      void 
  4926 ;; Registers used:
  4927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4928 ;; Tracked objects:
  4929 ;;		On entry : 0/0
  4930 ;;		On exit  : 0/0
  4931 ;;		Unchanged: 0/0
  4932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4933 ;;      Params:         3       0       0       0       0       0       0       0       0
  4934 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4935 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4936 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4937 ;;Total ram usage:        9 bytes
  4938 ;; Hardware stack levels used: 1
  4939 ;; Hardware stack levels required when called: 2
  4940 ;; This function calls:
  4941 ;;		_LCD_Command
  4942 ;;		_LCD_String
  4943 ;; This function is called by:
  4944 ;;		_main
  4945 ;;		_Clear_Line
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text23
  4950   001EF8                     __ptext23:
  4951                           	callstack 0
  4952   001EF8                     _LCD_String_xy:
  4953                           	callstack 28
  4954                           
  4955                           ;incstack = 0
  4956                           ;LCD_String_xy@row stored from wreg
  4957   001EF8  6E0A               	movwf	LCD_String_xy@row^0,c
  4958   001EFA                     
  4959                           ;LCD.c: 51:     char location = (row == 0) ? (0x80 | (pos & 0x0F)) : (0xC0 | (pos & 0x0F
      +                          ));
  4960   001EFA  500A               	movf	LCD_String_xy@row^0,w,c
  4961   001EFC  B4D8               	btfsc	status,2,c
  4962   001EFE  EF83  F00F         	goto	u2541
  4963   001F02  EF85  F00F         	goto	u2540
  4964   001F06                     u2541:
  4965   001F06  EF90  F00F         	goto	l2726
  4966   001F0A                     u2540:
  4967   001F0A  5005               	movf	LCD_String_xy@pos^0,w,c
  4968   001F0C  0B0F               	andlw	15
  4969   001F0E  6E08               	movwf	??_LCD_String_xy^0,c
  4970   001F10  6A09               	clrf	(??_LCD_String_xy+1)^0,c
  4971   001F12  0EC0               	movlw	192
  4972   001F14  1008               	iorwf	??_LCD_String_xy^0,w,c
  4973   001F16  6E0B               	movwf	_LCD_String_xy$466^0,c
  4974   001F18  5009               	movf	(??_LCD_String_xy+1)^0,w,c
  4975   001F1A  6E0C               	movwf	(_LCD_String_xy$466+1)^0,c
  4976   001F1C  EF99  F00F         	goto	l2728
  4977   001F20                     l2726:
  4978   001F20  5005               	movf	LCD_String_xy@pos^0,w,c
  4979   001F22  0B0F               	andlw	15
  4980   001F24  6E08               	movwf	??_LCD_String_xy^0,c
  4981   001F26  6A09               	clrf	(??_LCD_String_xy+1)^0,c
  4982   001F28  0E80               	movlw	128
  4983   001F2A  1008               	iorwf	??_LCD_String_xy^0,w,c
  4984   001F2C  6E0B               	movwf	_LCD_String_xy$466^0,c
  4985   001F2E  5009               	movf	(??_LCD_String_xy+1)^0,w,c
  4986   001F30  6E0C               	movwf	(_LCD_String_xy$466+1)^0,c
  4987   001F32                     l2728:
  4988   001F32  C00B  F00D         	movff	_LCD_String_xy$466,LCD_String_xy@location
  4989   001F36                     
  4990                           ;LCD.c: 52:     LCD_Command(location);
  4991   001F36  500D               	movf	LCD_String_xy@location^0,w,c
  4992   001F38  EC52  F00F         	call	_LCD_Command
  4993   001F3C                     
  4994                           ;LCD.c: 53:     LCD_String(msg);
  4995   001F3C  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  4996   001F40  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  4997   001F44  ECCB  F00E         	call	_LCD_String	;wreg free
  4998   001F48  0012               	return		;funcret
  4999   001F4A                     __end_of_LCD_String_xy:
  5000                           	callstack 0
  5001                           
  5002 ;; *************** function _LCD_String *****************
  5003 ;; Defined at:
  5004 ;;		line 43 in file "LCD.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  5007 ;;		 -> STR_18(12), STR_17(15), STR_12(16), STR_11(12), 
  5008 ;;		 -> main@buffer(17), STR_6(13), STR_5(13), STR_4(17), 
  5009 ;; Auto vars:     Size  Location     Type
  5010 ;;		None
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5020 ;;      Params:         2       0       0       0       0       0       0       0       0
  5021 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5023 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5024 ;;Total ram usage:        2 bytes
  5025 ;; Hardware stack levels used: 1
  5026 ;; Hardware stack levels required when called: 1
  5027 ;; This function calls:
  5028 ;;		_LCD_Char
  5029 ;; This function is called by:
  5030 ;;		_LCD_String_xy
  5031 ;; This function uses a non-reentrant model
  5032 ;;
  5033                           
  5034                           	psect	text24
  5035   001D96                     __ptext24:
  5036                           	callstack 0
  5037   001D96                     _LCD_String:
  5038                           	callstack 28
  5039   001D96                     
  5040                           ;LCD.c: 44:     while(*msg != '\0') {
  5041   001D96  EFE1  F00E         	goto	l2502
  5042   001D9A                     l2498:
  5043                           
  5044                           ;LCD.c: 45:         LCD_Char(*msg);
  5045   001D9A  C003  FFF6         	movff	LCD_String@msg,tblptrl
  5046   001D9E  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  5047   001DA2  6AF8               	clrf	tblptru,c
  5048   001DA4  0E07               	movlw	(high __ramtop+-1)
  5049   001DA6  64F7               	cpfsgt	tblptrh,c
  5050   001DA8  D003               	bra	u2197
  5051   001DAA  0008               	tblrd		*
  5052   001DAC  50F5               	movf	tablat,w,c
  5053   001DAE  D005               	bra	u2190
  5054   001DB0                     u2197:
  5055   001DB0  CFF6 FFE9          	movff	tblptrl,fsr0l
  5056   001DB4  CFF7 FFEA          	movff	tblptrh,fsr0h
  5057   001DB8  50EF               	movf	indf0,w,c
  5058   001DBA                     u2190:
  5059   001DBA  EC28  F00F         	call	_LCD_Char
  5060   001DBE                     
  5061                           ;LCD.c: 46:         msg++;
  5062   001DBE  4A03               	infsnz	LCD_String@msg^0,f,c
  5063   001DC0  2A04               	incf	(LCD_String@msg+1)^0,f,c
  5064   001DC2                     l2502:
  5065                           
  5066                           ;LCD.c: 44:     while(*msg != '\0') {
  5067   001DC2  C003  FFF6         	movff	LCD_String@msg,tblptrl
  5068   001DC6  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  5069   001DCA  6AF8               	clrf	tblptru,c
  5070   001DCC  0E07               	movlw	(high __ramtop+-1)
  5071   001DCE  64F7               	cpfsgt	tblptrh,c
  5072   001DD0  D003               	bra	u2207
  5073   001DD2  0008               	tblrd		*
  5074   001DD4  50F5               	movf	tablat,w,c
  5075   001DD6  D005               	bra	u2200
  5076   001DD8                     u2207:
  5077   001DD8  CFF6 FFE9          	movff	tblptrl,fsr0l
  5078   001DDC  CFF7 FFEA          	movff	tblptrh,fsr0h
  5079   001DE0  50EF               	movf	indf0,w,c
  5080   001DE2                     u2200:
  5081   001DE2  0900               	iorlw	0
  5082   001DE4  A4D8               	btfss	status,2,c
  5083   001DE6  EFF7  F00E         	goto	u2211
  5084   001DEA  EFF9  F00E         	goto	u2210
  5085   001DEE                     u2211:
  5086   001DEE  EFCD  F00E         	goto	l2498
  5087   001DF2                     u2210:
  5088   001DF2  0012               	return		;funcret
  5089   001DF4                     __end_of_LCD_String:
  5090                           	callstack 0
  5091                           
  5092 ;; *************** function _LCD_Char *****************
  5093 ;; Defined at:
  5094 ;;		line 28 in file "LCD.c"
  5095 ;; Parameters:    Size  Location     Type
  5096 ;;  dat             1    wreg     unsigned char 
  5097 ;; Auto vars:     Size  Location     Type
  5098 ;;  dat             1    1[COMRAM] unsigned char 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  1    wreg      void 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5108 ;;      Params:         0       0       0       0       0       0       0       0       0
  5109 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5110 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5111 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5112 ;;Total ram usage:        2 bytes
  5113 ;; Hardware stack levels used: 1
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_LCD_String
  5118 ;;		_LCD_ClearLine
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text25
  5123   001E50                     __ptext25:
  5124                           	callstack 0
  5125   001E50                     _LCD_Char:
  5126                           	callstack 28
  5127                           
  5128                           ;incstack = 0
  5129                           ;LCD_Char@dat stored from wreg
  5130   001E50  6E02               	movwf	LCD_Char@dat^0,c
  5131   001E52                     
  5132                           ;LCD.c: 29:     LATD = (unsigned char)((LATD & 0x0F) | (0xF0 & dat));
  5133   001E52  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  5134   001E56  0EF0               	movlw	240
  5135   001E58  1601               	andwf	??_LCD_Char^0,f,c
  5136   001E5A  508C               	movf	140,w,c	;volatile
  5137   001E5C  0B0F               	andlw	15
  5138   001E5E  1001               	iorwf	??_LCD_Char^0,w,c
  5139   001E60  6E8C               	movwf	140,c	;volatile
  5140   001E62                     
  5141                           ;LCD.c: 30:     LATD0 = 1;
  5142   001E62  808C               	bsf	3980,0,c	;volatile
  5143   001E64                     
  5144                           ;LCD.c: 31:     LATD1 = 1;
  5145   001E64  828C               	bsf	3980,1,c	;volatile
  5146   001E66                     
  5147                           ;LCD.c: 32:     __nop();
  5148   001E66  0000               	nop	
  5149   001E68                     
  5150                           ;LCD.c: 33:     LATD1 = 0;
  5151   001E68  928C               	bcf	3980,1,c	;volatile
  5152   001E6A                     
  5153                           ;LCD.c: 34:     _delay((unsigned long)((1)*(8000000/4000.0)));
  5154   001E6A  0E03               	movlw	3
  5155   001E6C  6E01               	movwf	??_LCD_Char^0,c
  5156   001E6E  0E98               	movlw	152
  5157   001E70                     u2807:
  5158   001E70  2EE8               	decfsz	wreg,f,c
  5159   001E72  D7FE               	bra	u2807
  5160   001E74  2E01               	decfsz	??_LCD_Char^0,f,c
  5161   001E76  D7FC               	bra	u2807
  5162   001E78                     
  5163                           ;LCD.c: 36:     LATD = (unsigned char)((LATD & 0x0F) | ((dat & 0x0F) << 4));
  5164   001E78  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  5165   001E7C  0E0F               	movlw	15
  5166   001E7E  1601               	andwf	??_LCD_Char^0,f,c
  5167   001E80  3A01               	swapf	??_LCD_Char^0,f,c
  5168   001E82  0EF0               	movlw	240
  5169   001E84  1601               	andwf	??_LCD_Char^0,f,c
  5170   001E86  508C               	movf	140,w,c	;volatile
  5171   001E88  0B0F               	andlw	15
  5172   001E8A  1001               	iorwf	??_LCD_Char^0,w,c
  5173   001E8C  6E8C               	movwf	140,c	;volatile
  5174   001E8E                     
  5175                           ;LCD.c: 37:     LATD1 = 1;
  5176   001E8E  828C               	bsf	3980,1,c	;volatile
  5177   001E90                     
  5178                           ;LCD.c: 38:     __nop();
  5179   001E90  0000               	nop	
  5180   001E92                     
  5181                           ;LCD.c: 39:     LATD1 = 0;
  5182   001E92  928C               	bcf	3980,1,c	;volatile
  5183                           
  5184                           ;LCD.c: 40:     _delay((unsigned long)((3)*(8000000/4000.0)));
  5185   001E94  0E08               	movlw	8
  5186   001E96  6E01               	movwf	??_LCD_Char^0,c
  5187   001E98  0ECA               	movlw	202
  5188   001E9A                     u2817:
  5189   001E9A  2EE8               	decfsz	wreg,f,c
  5190   001E9C  D7FE               	bra	u2817
  5191   001E9E  2E01               	decfsz	??_LCD_Char^0,f,c
  5192   001EA0  D7FC               	bra	u2817
  5193   001EA2  0012               	return		;funcret
  5194   001EA4                     __end_of_LCD_Char:
  5195                           	callstack 0
  5196                           
  5197 ;; *************** function _LCD_Init *****************
  5198 ;; Defined at:
  5199 ;;		line 3 in file "LCD.c"
  5200 ;; Parameters:    Size  Location     Type
  5201 ;;		None
  5202 ;; Auto vars:     Size  Location     Type
  5203 ;;		None
  5204 ;; Return value:  Size  Location     Type
  5205 ;;                  1    wreg      void 
  5206 ;; Registers used:
  5207 ;;		wreg, status,2, status,0, cstack
  5208 ;; Tracked objects:
  5209 ;;		On entry : 0/0
  5210 ;;		On exit  : 0/0
  5211 ;;		Unchanged: 0/0
  5212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5213 ;;      Params:         0       0       0       0       0       0       0       0       0
  5214 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5215 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5216 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5217 ;;Total ram usage:        1 bytes
  5218 ;; Hardware stack levels used: 1
  5219 ;; Hardware stack levels required when called: 1
  5220 ;; This function calls:
  5221 ;;		_LCD_Command
  5222 ;; This function is called by:
  5223 ;;		_main
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           	psect	text26
  5228   0020C6                     __ptext26:
  5229                           	callstack 0
  5230   0020C6                     _LCD_Init:
  5231                           	callstack 29
  5232   0020C6                     
  5233                           ;LCD.c: 4:     TRISD = 0;
  5234   0020C6  6A95               	clrf	149,c	;volatile
  5235   0020C8                     
  5236                           ;LCD.c: 5:     _delay((unsigned long)((15)*(8000000/4000.0)));
  5237   0020C8  0E27               	movlw	39
  5238   0020CA  6E03               	movwf	??_LCD_Init^0,c
  5239   0020CC  0EF5               	movlw	245
  5240   0020CE                     u2827:
  5241   0020CE  2EE8               	decfsz	wreg,f,c
  5242   0020D0  D7FE               	bra	u2827
  5243   0020D2  2E03               	decfsz	??_LCD_Init^0,f,c
  5244   0020D4  D7FC               	bra	u2827
  5245   0020D6  0000               	nop	
  5246   0020D8                     
  5247                           ;LCD.c: 6:     LCD_Command(0x02);
  5248   0020D8  0E02               	movlw	2
  5249   0020DA  EC52  F00F         	call	_LCD_Command
  5250   0020DE                     
  5251                           ;LCD.c: 7:     LCD_Command(0x28);
  5252   0020DE  0E28               	movlw	40
  5253   0020E0  EC52  F00F         	call	_LCD_Command
  5254   0020E4                     
  5255                           ;LCD.c: 8:     LCD_Command(0x01);
  5256   0020E4  0E01               	movlw	1
  5257   0020E6  EC52  F00F         	call	_LCD_Command
  5258   0020EA                     
  5259                           ;LCD.c: 9:     LCD_Command(0x0C);
  5260   0020EA  0E0C               	movlw	12
  5261   0020EC  EC52  F00F         	call	_LCD_Command
  5262   0020F0                     
  5263                           ;LCD.c: 10:     LCD_Command(0x06);
  5264   0020F0  0E06               	movlw	6
  5265   0020F2  EC52  F00F         	call	_LCD_Command
  5266   0020F6  0012               	return		;funcret
  5267   0020F8                     __end_of_LCD_Init:
  5268                           	callstack 0
  5269                           
  5270 ;; *************** function _LCD_Clear *****************
  5271 ;; Defined at:
  5272 ;;		line 56 in file "LCD.c"
  5273 ;; Parameters:    Size  Location     Type
  5274 ;;		None
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;		None
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      void 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5286 ;;      Params:         0       0       0       0       0       0       0       0       0
  5287 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5288 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5289 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5290 ;;Total ram usage:        1 bytes
  5291 ;; Hardware stack levels used: 1
  5292 ;; Hardware stack levels required when called: 1
  5293 ;; This function calls:
  5294 ;;		_LCD_Command
  5295 ;; This function is called by:
  5296 ;;		_main
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text27
  5301   00219E                     __ptext27:
  5302                           	callstack 0
  5303   00219E                     _LCD_Clear:
  5304                           	callstack 29
  5305   00219E                     
  5306                           ;LCD.c: 57:     LCD_Command(0x01);
  5307   00219E  0E01               	movlw	1
  5308   0021A0  EC52  F00F         	call	_LCD_Command
  5309   0021A4                     
  5310                           ;LCD.c: 58:     _delay((unsigned long)((2)*(8000000/4000.0)));
  5311   0021A4  0E06               	movlw	6
  5312   0021A6  6E03               	movwf	??_LCD_Clear^0,c
  5313   0021A8  0E30               	movlw	48
  5314   0021AA                     u2837:
  5315   0021AA  2EE8               	decfsz	wreg,f,c
  5316   0021AC  D7FE               	bra	u2837
  5317   0021AE  2E03               	decfsz	??_LCD_Clear^0,f,c
  5318   0021B0  D7FC               	bra	u2837
  5319   0021B2  D000               	nop2	
  5320   0021B4  0012               	return		;funcret
  5321   0021B6                     __end_of_LCD_Clear:
  5322                           	callstack 0
  5323                           
  5324 ;; *************** function _LCD_Command *****************
  5325 ;; Defined at:
  5326 ;;		line 13 in file "LCD.c"
  5327 ;; Parameters:    Size  Location     Type
  5328 ;;  cmd             1    wreg     unsigned char 
  5329 ;; Auto vars:     Size  Location     Type
  5330 ;;  cmd             1    1[COMRAM] unsigned char 
  5331 ;; Return value:  Size  Location     Type
  5332 ;;                  1    wreg      void 
  5333 ;; Registers used:
  5334 ;;		wreg, status,2, status,0
  5335 ;; Tracked objects:
  5336 ;;		On entry : 0/0
  5337 ;;		On exit  : 0/0
  5338 ;;		Unchanged: 0/0
  5339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5340 ;;      Params:         0       0       0       0       0       0       0       0       0
  5341 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5342 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5343 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5344 ;;Total ram usage:        2 bytes
  5345 ;; Hardware stack levels used: 1
  5346 ;; This function calls:
  5347 ;;		Nothing
  5348 ;; This function is called by:
  5349 ;;		_LCD_Init
  5350 ;;		_LCD_String_xy
  5351 ;;		_LCD_Clear
  5352 ;;		_LCD_ClearLine
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text28
  5357   001EA4                     __ptext28:
  5358                           	callstack 0
  5359   001EA4                     _LCD_Command:
  5360                           	callstack 29
  5361                           
  5362                           ;incstack = 0
  5363                           ;LCD_Command@cmd stored from wreg
  5364   001EA4  6E02               	movwf	LCD_Command@cmd^0,c
  5365   001EA6                     
  5366                           ;LCD.c: 14:     LATD = (unsigned char)((LATD & 0x0F) | (0xF0 & cmd));
  5367   001EA6  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  5368   001EAA  0EF0               	movlw	240
  5369   001EAC  1601               	andwf	??_LCD_Command^0,f,c
  5370   001EAE  508C               	movf	140,w,c	;volatile
  5371   001EB0  0B0F               	andlw	15
  5372   001EB2  1001               	iorwf	??_LCD_Command^0,w,c
  5373   001EB4  6E8C               	movwf	140,c	;volatile
  5374   001EB6                     
  5375                           ;LCD.c: 15:     LATD0 = 0;
  5376   001EB6  908C               	bcf	3980,0,c	;volatile
  5377   001EB8                     
  5378                           ;LCD.c: 16:     LATD1 = 1;
  5379   001EB8  828C               	bsf	3980,1,c	;volatile
  5380   001EBA                     
  5381                           ;LCD.c: 17:     __nop();
  5382   001EBA  0000               	nop	
  5383   001EBC                     
  5384                           ;LCD.c: 18:     LATD1 = 0;
  5385   001EBC  928C               	bcf	3980,1,c	;volatile
  5386   001EBE                     
  5387                           ;LCD.c: 19:     _delay((unsigned long)((1)*(8000000/4000.0)));
  5388   001EBE  0E03               	movlw	3
  5389   001EC0  6E01               	movwf	??_LCD_Command^0,c
  5390   001EC2  0E98               	movlw	152
  5391   001EC4                     u2847:
  5392   001EC4  2EE8               	decfsz	wreg,f,c
  5393   001EC6  D7FE               	bra	u2847
  5394   001EC8  2E01               	decfsz	??_LCD_Command^0,f,c
  5395   001ECA  D7FC               	bra	u2847
  5396   001ECC                     
  5397                           ;LCD.c: 21:     LATD = (unsigned char)((LATD & 0x0F) | ((cmd & 0x0F) << 4));
  5398   001ECC  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  5399   001ED0  0E0F               	movlw	15
  5400   001ED2  1601               	andwf	??_LCD_Command^0,f,c
  5401   001ED4  3A01               	swapf	??_LCD_Command^0,f,c
  5402   001ED6  0EF0               	movlw	240
  5403   001ED8  1601               	andwf	??_LCD_Command^0,f,c
  5404   001EDA  508C               	movf	140,w,c	;volatile
  5405   001EDC  0B0F               	andlw	15
  5406   001EDE  1001               	iorwf	??_LCD_Command^0,w,c
  5407   001EE0  6E8C               	movwf	140,c	;volatile
  5408   001EE2                     
  5409                           ;LCD.c: 22:     LATD1 = 1;
  5410   001EE2  828C               	bsf	3980,1,c	;volatile
  5411   001EE4                     
  5412                           ;LCD.c: 23:     __nop();
  5413   001EE4  0000               	nop	
  5414   001EE6                     
  5415                           ;LCD.c: 24:     LATD1 = 0;
  5416   001EE6  928C               	bcf	3980,1,c	;volatile
  5417                           
  5418                           ;LCD.c: 25:     _delay((unsigned long)((3)*(8000000/4000.0)));
  5419   001EE8  0E08               	movlw	8
  5420   001EEA  6E01               	movwf	??_LCD_Command^0,c
  5421   001EEC  0ECA               	movlw	202
  5422   001EEE                     u2857:
  5423   001EEE  2EE8               	decfsz	wreg,f,c
  5424   001EF0  D7FE               	bra	u2857
  5425   001EF2  2E01               	decfsz	??_LCD_Command^0,f,c
  5426   001EF4  D7FC               	bra	u2857
  5427   001EF6  0012               	return		;funcret
  5428   001EF8                     __end_of_LCD_Command:
  5429                           	callstack 0
  5430                           
  5431 ;; *************** function _GPS_ReadSentence *****************
  5432 ;; Defined at:
  5433 ;;		line 24 in file "GPS.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;  buffer          2    0[COMRAM] PTR unsigned char 
  5436 ;;		 -> main@nmea(100), 
  5437 ;;  max_len         2    2[COMRAM] unsigned short 
  5438 ;;  timeout_ms      2    4[COMRAM] unsigned short 
  5439 ;; Auto vars:     Size  Location     Type
  5440 ;;  t               2    8[COMRAM] unsigned short 
  5441 ;;  dummy           1   10[COMRAM] volatile unsigned char 
  5442 ;;  i               2   12[COMRAM] unsigned short 
  5443 ;;  c               1   14[COMRAM] unsigned char 
  5444 ;;  started         1   11[COMRAM] unsigned char 
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      unsigned char 
  5447 ;; Registers used:
  5448 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5454 ;;      Params:         6       0       0       0       0       0       0       0       0
  5455 ;;      Locals:         7       0       0       0       0       0       0       0       0
  5456 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5457 ;;      Totals:        15       0       0       0       0       0       0       0       0
  5458 ;;Total ram usage:       15 bytes
  5459 ;; Hardware stack levels used: 1
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_main
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text29
  5468   0012C2                     __ptext29:
  5469                           	callstack 0
  5470   0012C2                     _GPS_ReadSentence:
  5471                           	callstack 30
  5472   0012C2                     
  5473                           ;GPS.c: 25:     uint16_t i = 0;
  5474   0012C2  0E00               	movlw	0
  5475   0012C4  6E0E               	movwf	(GPS_ReadSentence@i+1)^0,c
  5476   0012C6  0E00               	movlw	0
  5477   0012C8  6E0D               	movwf	GPS_ReadSentence@i^0,c
  5478   0012CA                     
  5479                           ;GPS.c: 26:     char c;;GPS.c: 27:     uint8_t started = 0;
  5480   0012CA  6A0C               	clrf	GPS_ReadSentence@started^0,c
  5481   0012CC                     
  5482                           ;GPS.c: 30:     RCSTAbits.CREN = 0;
  5483   0012CC  98AB               	bcf	171,4,c	;volatile
  5484   0012CE                     
  5485                           ;GPS.c: 31:     __nop();
  5486   0012CE  0000               	nop	
  5487   0012D0                     
  5488                           ;GPS.c: 32:     RCSTAbits.CREN = 1;
  5489   0012D0  88AB               	bsf	171,4,c	;volatile
  5490                           
  5491                           ;GPS.c: 35:     while(PIR1bits.RCIF) {
  5492   0012D2  EF6D  F009         	goto	l115
  5493   0012D6                     l116:
  5494                           
  5495                           ;GPS.c: 36:         volatile char dummy = RCREG;
  5496   0012D6  CFAE F00B          	movff	4014,GPS_ReadSentence@dummy	;volatile
  5497   0012DA                     l115:
  5498                           
  5499                           ;GPS.c: 35:     while(PIR1bits.RCIF) {
  5500   0012DA  BA9E               	btfsc	158,5,c	;volatile
  5501   0012DC  EF72  F009         	goto	u2241
  5502   0012E0  EF74  F009         	goto	u2240
  5503   0012E4                     u2241:
  5504   0012E4  EF6B  F009         	goto	l116
  5505   0012E8                     u2240:
  5506   0012E8                     
  5507                           ;GPS.c: 41:     for(uint16_t t = 0; t < timeout_ms; t++) {
  5508   0012E8  0E00               	movlw	0
  5509   0012EA  6E0A               	movwf	(GPS_ReadSentence@t+1)^0,c
  5510   0012EC  0E00               	movlw	0
  5511   0012EE  6E09               	movwf	GPS_ReadSentence@t^0,c
  5512   0012F0  EFEA  F009         	goto	l2614
  5513   0012F4                     l119:
  5514                           
  5515                           ;GPS.c: 42:         if(PIR1bits.RCIF) {
  5516   0012F4  AA9E               	btfss	158,5,c	;volatile
  5517   0012F6  EF7F  F009         	goto	u2251
  5518   0012FA  EF81  F009         	goto	u2250
  5519   0012FE                     u2251:
  5520   0012FE  EFE4  F009         	goto	l2610
  5521   001302                     u2250:
  5522   001302                     
  5523                           ;GPS.c: 43:             c = RCREG;
  5524   001302  CFAE F00F          	movff	4014,GPS_ReadSentence@c	;volatile
  5525                           
  5526                           ;GPS.c: 46:             if(RCSTAbits.OERR) {
  5527   001306  A2AB               	btfss	171,1,c	;volatile
  5528   001308  EF88  F009         	goto	u2261
  5529   00130C  EF8A  F009         	goto	u2260
  5530   001310                     u2261:
  5531   001310  EF8E  F009         	goto	l2582
  5532   001314                     u2260:
  5533   001314                     
  5534                           ;GPS.c: 47:                 RCSTAbits.CREN = 0;
  5535   001314  98AB               	bcf	171,4,c	;volatile
  5536                           
  5537                           ;GPS.c: 48:                 RCSTAbits.CREN = 1;
  5538   001316  88AB               	bsf	171,4,c	;volatile
  5539                           
  5540                           ;GPS.c: 49:                 continue;
  5541   001318  EFE8  F009         	goto	l2612
  5542   00131C                     l2582:
  5543                           
  5544                           ;GPS.c: 53:             if(!started && c == '$') {
  5545   00131C  500C               	movf	GPS_ReadSentence@started^0,w,c
  5546   00131E  A4D8               	btfss	status,2,c
  5547   001320  EF94  F009         	goto	u2271
  5548   001324  EF96  F009         	goto	u2270
  5549   001328                     u2271:
  5550   001328  EFAD  F009         	goto	l2592
  5551   00132C                     u2270:
  5552   00132C  0E24               	movlw	36
  5553   00132E  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  5554   001330  A4D8               	btfss	status,2,c
  5555   001332  EF9D  F009         	goto	u2281
  5556   001336  EF9F  F009         	goto	u2280
  5557   00133A                     u2281:
  5558   00133A  EFAD  F009         	goto	l2592
  5559   00133E                     u2280:
  5560   00133E                     
  5561                           ;GPS.c: 54:                 started = 1;
  5562   00133E  0E01               	movlw	1
  5563   001340  6E0C               	movwf	GPS_ReadSentence@started^0,c
  5564   001342                     l2588:
  5565                           
  5566                           ;GPS.c: 55:                 buffer[i++] = c;
  5567   001342  500D               	movf	GPS_ReadSentence@i^0,w,c
  5568   001344  2401               	addwf	GPS_ReadSentence@buffer^0,w,c
  5569   001346  6ED9               	movwf	fsr2l,c
  5570   001348  500E               	movf	(GPS_ReadSentence@i+1)^0,w,c
  5571   00134A  2002               	addwfc	(GPS_ReadSentence@buffer+1)^0,w,c
  5572   00134C  6EDA               	movwf	fsr2h,c
  5573   00134E  C00F  FFDF         	movff	GPS_ReadSentence@c,indf2
  5574   001352  4A0D               	infsnz	GPS_ReadSentence@i^0,f,c
  5575   001354  2A0E               	incf	(GPS_ReadSentence@i+1)^0,f,c
  5576                           
  5577                           ;GPS.c: 56:             }
  5578   001356  EFE4  F009         	goto	l2610
  5579   00135A                     l2592:
  5580   00135A  500C               	movf	GPS_ReadSentence@started^0,w,c
  5581   00135C  B4D8               	btfsc	status,2,c
  5582   00135E  EFB3  F009         	goto	u2291
  5583   001362  EFB5  F009         	goto	u2290
  5584   001366                     u2291:
  5585   001366  EFE4  F009         	goto	l2610
  5586   00136A                     u2290:
  5587   00136A                     
  5588                           ;GPS.c: 59:                 if(c == '\n' || i >= max_len-1) {
  5589   00136A  0E0A               	movlw	10
  5590   00136C  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  5591   00136E  B4D8               	btfsc	status,2,c
  5592   001370  EFBC  F009         	goto	u2301
  5593   001374  EFBE  F009         	goto	u2300
  5594   001378                     u2301:
  5595   001378  EFCF  F009         	goto	l2598
  5596   00137C                     u2300:
  5597   00137C  0EFF               	movlw	255
  5598   00137E  2403               	addwf	GPS_ReadSentence@max_len^0,w,c
  5599   001380  6E07               	movwf	??_GPS_ReadSentence^0,c
  5600   001382  0EFF               	movlw	255
  5601   001384  2004               	addwfc	(GPS_ReadSentence@max_len+1)^0,w,c
  5602   001386  6E08               	movwf	(??_GPS_ReadSentence+1)^0,c
  5603   001388  5007               	movf	??_GPS_ReadSentence^0,w,c
  5604   00138A  5C0D               	subwf	GPS_ReadSentence@i^0,w,c
  5605   00138C  5008               	movf	(??_GPS_ReadSentence+1)^0,w,c
  5606   00138E  580E               	subwfb	(GPS_ReadSentence@i+1)^0,w,c
  5607   001390  A0D8               	btfss	status,0,c
  5608   001392  EFCD  F009         	goto	u2311
  5609   001396  EFCF  F009         	goto	u2310
  5610   00139A                     u2311:
  5611   00139A  EFD9  F009         	goto	l2604
  5612   00139E                     u2310:
  5613   00139E                     l2598:
  5614                           
  5615                           ;GPS.c: 60:                     buffer[i] = '\0';
  5616   00139E  500D               	movf	GPS_ReadSentence@i^0,w,c
  5617   0013A0  2401               	addwf	GPS_ReadSentence@buffer^0,w,c
  5618   0013A2  6ED9               	movwf	fsr2l,c
  5619   0013A4  500E               	movf	(GPS_ReadSentence@i+1)^0,w,c
  5620   0013A6  2002               	addwfc	(GPS_ReadSentence@buffer+1)^0,w,c
  5621   0013A8  6EDA               	movwf	fsr2h,c
  5622   0013AA  6ADF               	clrf	indf2,c
  5623   0013AC                     
  5624                           ;GPS.c: 61:                     return 1;
  5625   0013AC  0E01               	movlw	1
  5626   0013AE  EFF6  F009         	goto	l129
  5627   0013B2                     l2604:
  5628                           
  5629                           ;GPS.c: 63:                 if(c != '\r') buffer[i++] = c;
  5630   0013B2  0E0D               	movlw	13
  5631   0013B4  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  5632   0013B6  B4D8               	btfsc	status,2,c
  5633   0013B8  EFE0  F009         	goto	u2321
  5634   0013BC  EFE2  F009         	goto	u2320
  5635   0013C0                     u2321:
  5636   0013C0  EFE4  F009         	goto	l124
  5637   0013C4                     u2320:
  5638   0013C4  EFA1  F009         	goto	l2588
  5639   0013C8                     l124:
  5640   0013C8                     l2610:
  5641                           
  5642                           ;GPS.c: 66:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  5643   0013C8  0E42               	movlw	66
  5644   0013CA                     u2867:
  5645   0013CA  2EE8               	decfsz	wreg,f,c
  5646   0013CC  D7FE               	bra	u2867
  5647   0013CE  D000               	nop2	
  5648   0013D0                     l2612:
  5649   0013D0  4A09               	infsnz	GPS_ReadSentence@t^0,f,c
  5650   0013D2  2A0A               	incf	(GPS_ReadSentence@t+1)^0,f,c
  5651   0013D4                     l2614:
  5652   0013D4  5005               	movf	GPS_ReadSentence@timeout_ms^0,w,c
  5653   0013D6  5C09               	subwf	GPS_ReadSentence@t^0,w,c
  5654   0013D8  5006               	movf	(GPS_ReadSentence@timeout_ms+1)^0,w,c
  5655   0013DA  580A               	subwfb	(GPS_ReadSentence@t+1)^0,w,c
  5656   0013DC  A0D8               	btfss	status,0,c
  5657   0013DE  EFF3  F009         	goto	u2331
  5658   0013E2  EFF5  F009         	goto	u2330
  5659   0013E6                     u2331:
  5660   0013E6  EF7A  F009         	goto	l119
  5661   0013EA                     u2330:
  5662   0013EA                     
  5663                           ;GPS.c: 68:     return 0;
  5664   0013EA  0E00               	movlw	0
  5665   0013EC                     l129:
  5666   0013EC  0012               	return		;funcret
  5667   0013EE                     __end_of_GPS_ReadSentence:
  5668                           	callstack 0
  5669                           
  5670 ;; *************** function _GPS_ParseGPRMC *****************
  5671 ;; Defined at:
  5672 ;;		line 72 in file "GPS.c"
  5673 ;; Parameters:    Size  Location     Type
  5674 ;;  msg             2   13[COMRAM] PTR const unsigned char 
  5675 ;;		 -> main@nmea(100), 
  5676 ;;  lat             2   15[COMRAM] PTR unsigned char 
  5677 ;;		 -> main@lat(8), 
  5678 ;;  ns              2   17[COMRAM] PTR unsigned char 
  5679 ;;		 -> main@ns(2), 
  5680 ;;  lon             2   19[COMRAM] PTR unsigned char 
  5681 ;;		 -> main@lon(9), 
  5682 ;;  ew              2   21[COMRAM] PTR unsigned char 
  5683 ;;		 -> main@ew(2), 
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;  buf           100    0[BANK0 ] unsigned char [100]
  5686 ;;  token           1  103[BANK0 ] PTR unsigned char 
  5687 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  5688 ;;  data_valid      1  102[BANK0 ] unsigned char 
  5689 ;;  field           1  101[BANK0 ] unsigned char 
  5690 ;; Return value:  Size  Location     Type
  5691 ;;                  1    wreg      unsigned char 
  5692 ;; Registers used:
  5693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5694 ;; Tracked objects:
  5695 ;;		On entry : 0/0
  5696 ;;		On exit  : 0/0
  5697 ;;		Unchanged: 0/0
  5698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5699 ;;      Params:        10       0       0       0       0       0       0       0       0
  5700 ;;      Locals:         0     104       0       0       0       0       0       0       0
  5701 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5702 ;;      Totals:        11     104       0       0       0       0       0       0       0
  5703 ;;Total ram usage:      115 bytes
  5704 ;; Hardware stack levels used: 1
  5705 ;; Hardware stack levels required when called: 3
  5706 ;; This function calls:
  5707 ;;		_strncpy
  5708 ;;		_strstr
  5709 ;;		_strtok
  5710 ;; This function is called by:
  5711 ;;		_main
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text30
  5716   000F30                     __ptext30:
  5717                           	callstack 0
  5718   000F30                     _GPS_ParseGPRMC:
  5719                           	callstack 27
  5720   000F30                     
  5721                           ;GPS.c: 73:     char buf[100];;GPS.c: 74:     char *token;;GPS.c: 75:     uint8_t field 
      +                          = 0;
  5722   000F30  0100               	movlb	0	; () banked
  5723   000F32  6BC5               	clrf	GPS_ParseGPRMC@field& (0+255),b
  5724                           
  5725                           ;GPS.c: 76:     uint8_t data_valid = 0;
  5726   000F34  6BC6               	clrf	GPS_ParseGPRMC@data_valid& (0+255),b
  5727   000F36                     
  5728                           ; BSR set to: 0
  5729                           ;GPS.c: 79:     if(strstr(msg, "$GPRMC") == ((void*)0)) return 0;
  5730   000F36  C00E  F007         	movff	GPS_ParseGPRMC@msg,strstr@h
  5731   000F3A  C00F  F008         	movff	GPS_ParseGPRMC@msg+1,strstr@h+1
  5732   000F3E  0EB7               	movlw	low STR_1
  5733   000F40  6E09               	movwf	strstr@n^0,c
  5734   000F42  ECE9  F00A         	call	_strstr	;wreg free
  5735   000F46  5007               	movf	?_strstr^0,w,c
  5736   000F48  1008               	iorwf	(?_strstr+1)^0,w,c
  5737   000F4A  A4D8               	btfss	status,2,c
  5738   000F4C  EFAA  F007         	goto	u2341
  5739   000F50  EFAC  F007         	goto	u2340
  5740   000F54                     u2341:
  5741   000F54  EFAF  F007         	goto	l2628
  5742   000F58                     u2340:
  5743   000F58  0E00               	movlw	0
  5744   000F5A  EFB1  F008         	goto	l135
  5745   000F5E                     l2628:
  5746                           
  5747                           ;GPS.c: 82:     strncpy(buf, msg, sizeof(buf)-1);
  5748   000F5E  0E60               	movlw	low GPS_ParseGPRMC@buf
  5749   000F60  6E01               	movwf	strncpy@d^0,c
  5750   000F62  6A02               	clrf	(strncpy@d+1)^0,c
  5751   000F64  C00E  F003         	movff	GPS_ParseGPRMC@msg,strncpy@s
  5752   000F68  C00F  F004         	movff	GPS_ParseGPRMC@msg+1,strncpy@s+1
  5753   000F6C  0E00               	movlw	0
  5754   000F6E  6E06               	movwf	(strncpy@n+1)^0,c
  5755   000F70  0E63               	movlw	99
  5756   000F72  6E05               	movwf	strncpy@n^0,c
  5757   000F74  EC8A  F00D         	call	_strncpy	;wreg free
  5758   000F78                     
  5759                           ;GPS.c: 83:     buf[sizeof(buf)-1] = '\0';
  5760   000F78  0100               	movlb	0	; () banked
  5761   000F7A  6BC3               	clrf	(GPS_ParseGPRMC@buf+99)& (0+255),b
  5762   000F7C                     
  5763                           ; BSR set to: 0
  5764                           ;GPS.c: 86:     token = strtok(buf, ",");
  5765   000F7C  0E60               	movlw	low GPS_ParseGPRMC@buf
  5766   000F7E  6E0C               	movwf	strtok@s^0,c
  5767   000F80  0EBE               	movlw	low STR_2
  5768   000F82  6E0D               	movwf	strtok@sep^0,c
  5769   000F84  ECB9  F00C         	call	_strtok	;wreg free
  5770   000F88  0100               	movlb	0	; () banked
  5771   000F8A  6FC7               	movwf	GPS_ParseGPRMC@token& (0+255),b
  5772                           
  5773                           ;GPS.c: 87:     while(token && field <= 6) {
  5774   000F8C  EF8D  F008         	goto	l2676
  5775   000F90                     l2634:
  5776                           
  5777                           ; BSR set to: 0
  5778                           ;GPS.c: 90:                 data_valid = (token[0] == 'A');
  5779   000F90  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  5780   000F92  6ED9               	movwf	fsr2l,c
  5781   000F94  6ADA               	clrf	fsr2h,c
  5782   000F96  0E41               	movlw	65
  5783   000F98  18DE               	xorwf	postinc2,w,c
  5784   000F9A  B4D8               	btfsc	status,2,c
  5785   000F9C  EFD2  F007         	goto	u2351
  5786   000FA0  EFD5  F007         	goto	u2350
  5787   000FA4                     u2351:
  5788   000FA4  0E01               	movlw	1
  5789   000FA6  EFD6  F007         	goto	u2360
  5790   000FAA                     u2350:
  5791   000FAA  0E00               	movlw	0
  5792   000FAC                     u2360:
  5793   000FAC  6FC6               	movwf	GPS_ParseGPRMC@data_valid& (0+255),b
  5794                           
  5795                           ;GPS.c: 91:                 break;
  5796   000FAE  EF84  F008         	goto	l2672
  5797   000FB2                     l2636:
  5798                           
  5799                           ; BSR set to: 0
  5800                           ;GPS.c: 93:                 if(lat && data_valid) {
  5801   000FB2  5010               	movf	GPS_ParseGPRMC@lat^0,w,c
  5802   000FB4  1011               	iorwf	(GPS_ParseGPRMC@lat+1)^0,w,c
  5803   000FB6  B4D8               	btfsc	status,2,c
  5804   000FB8  EFE0  F007         	goto	u2371
  5805   000FBC  EFE2  F007         	goto	u2370
  5806   000FC0                     u2371:
  5807   000FC0  EF84  F008         	goto	l2672
  5808   000FC4                     u2370:
  5809   000FC4                     
  5810                           ; BSR set to: 0
  5811   000FC4  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  5812   000FC6  B4D8               	btfsc	status,2,c
  5813   000FC8  EFE8  F007         	goto	u2381
  5814   000FCC  EFEA  F007         	goto	u2380
  5815   000FD0                     u2381:
  5816   000FD0  EF84  F008         	goto	l2672
  5817   000FD4                     u2380:
  5818   000FD4                     
  5819                           ; BSR set to: 0
  5820                           ;GPS.c: 94:                     strncpy(lat, token, 7);
  5821   000FD4  C010  F001         	movff	GPS_ParseGPRMC@lat,strncpy@d
  5822   000FD8  C011  F002         	movff	GPS_ParseGPRMC@lat+1,strncpy@d+1
  5823   000FDC  C0C7  F003         	movff	GPS_ParseGPRMC@token,strncpy@s
  5824   000FE0  6A04               	clrf	(strncpy@s+1)^0,c
  5825   000FE2  0E00               	movlw	0
  5826   000FE4  6E06               	movwf	(strncpy@n+1)^0,c
  5827   000FE6  0E07               	movlw	7
  5828   000FE8  6E05               	movwf	strncpy@n^0,c
  5829   000FEA  EC8A  F00D         	call	_strncpy	;wreg free
  5830   000FEE                     
  5831                           ;GPS.c: 95:                     lat[7] = '\0';
  5832   000FEE  EE20 F007          	lfsr	2,7
  5833   000FF2  5010               	movf	GPS_ParseGPRMC@lat^0,w,c
  5834   000FF4  26D9               	addwf	fsr2l,f,c
  5835   000FF6  5011               	movf	(GPS_ParseGPRMC@lat+1)^0,w,c
  5836   000FF8  22DA               	addwfc	fsr2h,f,c
  5837   000FFA  6ADF               	clrf	indf2,c
  5838   000FFC  EF84  F008         	goto	l2672
  5839   001000                     l2644:
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;GPS.c: 99:                 if(ns && data_valid) {
  5843   001000  5012               	movf	GPS_ParseGPRMC@ns^0,w,c
  5844   001002  1013               	iorwf	(GPS_ParseGPRMC@ns+1)^0,w,c
  5845   001004  B4D8               	btfsc	status,2,c
  5846   001006  EF07  F008         	goto	u2391
  5847   00100A  EF09  F008         	goto	u2390
  5848   00100E                     u2391:
  5849   00100E  EF84  F008         	goto	l2672
  5850   001012                     u2390:
  5851   001012                     
  5852                           ; BSR set to: 0
  5853   001012  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  5854   001014  B4D8               	btfsc	status,2,c
  5855   001016  EF0F  F008         	goto	u2401
  5856   00101A  EF11  F008         	goto	u2400
  5857   00101E                     u2401:
  5858   00101E  EF84  F008         	goto	l2672
  5859   001022                     u2400:
  5860   001022                     
  5861                           ; BSR set to: 0
  5862                           ;GPS.c: 100:                     ns[0] = token[0];
  5863   001022  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  5864   001024  6ED9               	movwf	fsr2l,c
  5865   001026  6ADA               	clrf	fsr2h,c
  5866   001028  C012  FFE1         	movff	GPS_ParseGPRMC@ns,fsr1l
  5867   00102C  C013  FFE2         	movff	GPS_ParseGPRMC@ns+1,fsr1h
  5868   001030  CFDF FFE7          	movff	indf2,indf1
  5869   001034                     
  5870                           ; BSR set to: 0
  5871                           ;GPS.c: 101:                     ns[1] = '\0';
  5872   001034  EE20 F001          	lfsr	2,1
  5873   001038  5012               	movf	GPS_ParseGPRMC@ns^0,w,c
  5874   00103A  26D9               	addwf	fsr2l,f,c
  5875   00103C  5013               	movf	(GPS_ParseGPRMC@ns+1)^0,w,c
  5876   00103E  22DA               	addwfc	fsr2h,f,c
  5877   001040  6ADF               	clrf	indf2,c
  5878   001042  EF84  F008         	goto	l2672
  5879   001046                     l2652:
  5880                           
  5881                           ; BSR set to: 0
  5882                           ;GPS.c: 105:                 if(lon && data_valid) {
  5883   001046  5014               	movf	GPS_ParseGPRMC@lon^0,w,c
  5884   001048  1015               	iorwf	(GPS_ParseGPRMC@lon+1)^0,w,c
  5885   00104A  B4D8               	btfsc	status,2,c
  5886   00104C  EF2A  F008         	goto	u2411
  5887   001050  EF2C  F008         	goto	u2410
  5888   001054                     u2411:
  5889   001054  EF84  F008         	goto	l2672
  5890   001058                     u2410:
  5891   001058                     
  5892                           ; BSR set to: 0
  5893   001058  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  5894   00105A  B4D8               	btfsc	status,2,c
  5895   00105C  EF32  F008         	goto	u2421
  5896   001060  EF34  F008         	goto	u2420
  5897   001064                     u2421:
  5898   001064  EF84  F008         	goto	l2672
  5899   001068                     u2420:
  5900   001068                     
  5901                           ; BSR set to: 0
  5902                           ;GPS.c: 106:                     strncpy(lon, token, 8);
  5903   001068  C014  F001         	movff	GPS_ParseGPRMC@lon,strncpy@d
  5904   00106C  C015  F002         	movff	GPS_ParseGPRMC@lon+1,strncpy@d+1
  5905   001070  C0C7  F003         	movff	GPS_ParseGPRMC@token,strncpy@s
  5906   001074  6A04               	clrf	(strncpy@s+1)^0,c
  5907   001076  0E00               	movlw	0
  5908   001078  6E06               	movwf	(strncpy@n+1)^0,c
  5909   00107A  0E08               	movlw	8
  5910   00107C  6E05               	movwf	strncpy@n^0,c
  5911   00107E  EC8A  F00D         	call	_strncpy	;wreg free
  5912   001082                     
  5913                           ;GPS.c: 107:                     lon[8] = '\0';
  5914   001082  EE20 F008          	lfsr	2,8
  5915   001086  5014               	movf	GPS_ParseGPRMC@lon^0,w,c
  5916   001088  26D9               	addwf	fsr2l,f,c
  5917   00108A  5015               	movf	(GPS_ParseGPRMC@lon+1)^0,w,c
  5918   00108C  22DA               	addwfc	fsr2h,f,c
  5919   00108E  6ADF               	clrf	indf2,c
  5920   001090  EF84  F008         	goto	l2672
  5921   001094                     l2660:
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;GPS.c: 111:                 if(ew && data_valid) {
  5925   001094  5016               	movf	GPS_ParseGPRMC@ew^0,w,c
  5926   001096  1017               	iorwf	(GPS_ParseGPRMC@ew+1)^0,w,c
  5927   001098  B4D8               	btfsc	status,2,c
  5928   00109A  EF51  F008         	goto	u2431
  5929   00109E  EF53  F008         	goto	u2430
  5930   0010A2                     u2431:
  5931   0010A2  EF84  F008         	goto	l2672
  5932   0010A6                     u2430:
  5933   0010A6                     
  5934                           ; BSR set to: 0
  5935   0010A6  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  5936   0010A8  B4D8               	btfsc	status,2,c
  5937   0010AA  EF59  F008         	goto	u2441
  5938   0010AE  EF5B  F008         	goto	u2440
  5939   0010B2                     u2441:
  5940   0010B2  EF84  F008         	goto	l2672
  5941   0010B6                     u2440:
  5942   0010B6                     
  5943                           ; BSR set to: 0
  5944                           ;GPS.c: 112:                     ew[0] = token[0];
  5945   0010B6  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  5946   0010B8  6ED9               	movwf	fsr2l,c
  5947   0010BA  6ADA               	clrf	fsr2h,c
  5948   0010BC  C016  FFE1         	movff	GPS_ParseGPRMC@ew,fsr1l
  5949   0010C0  C017  FFE2         	movff	GPS_ParseGPRMC@ew+1,fsr1h
  5950   0010C4  CFDF FFE7          	movff	indf2,indf1
  5951   0010C8                     
  5952                           ; BSR set to: 0
  5953                           ;GPS.c: 113:                     ew[1] = '\0';
  5954   0010C8  EE20 F001          	lfsr	2,1
  5955   0010CC  5016               	movf	GPS_ParseGPRMC@ew^0,w,c
  5956   0010CE  26D9               	addwf	fsr2l,f,c
  5957   0010D0  5017               	movf	(GPS_ParseGPRMC@ew+1)^0,w,c
  5958   0010D2  22DA               	addwfc	fsr2h,f,c
  5959   0010D4  6ADF               	clrf	indf2,c
  5960   0010D6  EF84  F008         	goto	l2672
  5961   0010DA                     l2670:
  5962                           
  5963                           ; BSR set to: 0
  5964   0010DA  51C5               	movf	GPS_ParseGPRMC@field& (0+255),w,b
  5965                           
  5966                           ; Switch size 1, requested type "simple"
  5967                           ; Number of cases is 5, Range of values is 2 to 6
  5968                           ; switch strategies available:
  5969                           ; Name         Instructions Cycles
  5970                           ; simple_byte           16     9 (average)
  5971                           ;	Chosen strategy is simple_byte
  5972   0010DC  0A02               	xorlw	2	; case 2
  5973   0010DE  B4D8               	btfsc	status,2,c
  5974   0010E0  EFC8  F007         	goto	l2634
  5975   0010E4  0A01               	xorlw	1	; case 3
  5976   0010E6  B4D8               	btfsc	status,2,c
  5977   0010E8  EFD9  F007         	goto	l2636
  5978   0010EC  0A07               	xorlw	7	; case 4
  5979   0010EE  B4D8               	btfsc	status,2,c
  5980   0010F0  EF00  F008         	goto	l2644
  5981   0010F4  0A01               	xorlw	1	; case 5
  5982   0010F6  B4D8               	btfsc	status,2,c
  5983   0010F8  EF23  F008         	goto	l2652
  5984   0010FC  0A03               	xorlw	3	; case 6
  5985   0010FE  B4D8               	btfsc	status,2,c
  5986   001100  EF4A  F008         	goto	l2660
  5987   001104  EF84  F008         	goto	l2672
  5988   001108                     l2672:
  5989                           
  5990                           ;GPS.c: 117:         token = strtok(((void*)0), ",");
  5991   001108  0E00               	movlw	0
  5992   00110A  6E0C               	movwf	strtok@s^0,c
  5993   00110C  0EBE               	movlw	low STR_2
  5994   00110E  6E0D               	movwf	strtok@sep^0,c
  5995   001110  ECB9  F00C         	call	_strtok	;wreg free
  5996   001114  0100               	movlb	0	; () banked
  5997   001116  6FC7               	movwf	GPS_ParseGPRMC@token& (0+255),b
  5998   001118                     
  5999                           ; BSR set to: 0
  6000                           ;GPS.c: 118:         field++;
  6001   001118  2BC5               	incf	GPS_ParseGPRMC@field& (0+255),f,b
  6002   00111A                     l2676:
  6003                           
  6004                           ; BSR set to: 0
  6005                           ;GPS.c: 87:     while(token && field <= 6) {
  6006   00111A  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  6007   00111C  B4D8               	btfsc	status,2,c
  6008   00111E  EF93  F008         	goto	u2451
  6009   001122  EF95  F008         	goto	u2450
  6010   001126                     u2451:
  6011   001126  EF9D  F008         	goto	l151
  6012   00112A                     u2450:
  6013   00112A                     
  6014                           ; BSR set to: 0
  6015   00112A  0E06               	movlw	6
  6016   00112C  65C5               	cpfsgt	GPS_ParseGPRMC@field& (0+255),b
  6017   00112E  EF9B  F008         	goto	u2461
  6018   001132  EF9D  F008         	goto	u2460
  6019   001136                     u2461:
  6020   001136  EF6D  F008         	goto	l2670
  6021   00113A                     u2460:
  6022   00113A                     l151:
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;GPS.c: 120:     return (data_valid && field >= 6);
  6026   00113A  6BC4               	clrf	_GPS_ParseGPRMC$237& (0+255),b
  6027   00113C                     
  6028                           ; BSR set to: 0
  6029   00113C  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  6030   00113E  B4D8               	btfsc	status,2,c
  6031   001140  EFA4  F008         	goto	u2471
  6032   001144  EFA6  F008         	goto	u2470
  6033   001148                     u2471:
  6034   001148  EFB0  F008         	goto	l153
  6035   00114C                     u2470:
  6036   00114C                     
  6037                           ; BSR set to: 0
  6038   00114C  0E05               	movlw	5
  6039   00114E  65C5               	cpfsgt	GPS_ParseGPRMC@field& (0+255),b
  6040   001150  EFAC  F008         	goto	u2481
  6041   001154  EFAE  F008         	goto	u2480
  6042   001158                     u2481:
  6043   001158  EFB0  F008         	goto	l153
  6044   00115C                     u2480:
  6045   00115C                     
  6046                           ; BSR set to: 0
  6047   00115C  0E01               	movlw	1
  6048   00115E  6FC4               	movwf	_GPS_ParseGPRMC$237& (0+255),b
  6049   001160                     l153:
  6050                           
  6051                           ; BSR set to: 0
  6052   001160  51C4               	movf	_GPS_ParseGPRMC$237& (0+255),w,b
  6053   001162                     l135:
  6054   001162  0012               	return		;funcret
  6055   001164                     __end_of_GPS_ParseGPRMC:
  6056                           	callstack 0
  6057                           
  6058 ;; *************** function _strtok *****************
  6059 ;; Defined at:
  6060 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strtok.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;  s               1   11[COMRAM] PTR unsigned char 
  6063 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  6064 ;;  sep             1   12[COMRAM] PTR const unsigned char 
  6065 ;;		 -> STR_3(2), STR_2(2), 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1   11[COMRAM] PTR unsigned char 
  6070 ;; Registers used:
  6071 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6077 ;;      Params:         2       0       0       0       0       0       0       0       0
  6078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6080 ;;      Totals:         2       0       0       0       0       0       0       0       0
  6081 ;;Total ram usage:        2 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; Hardware stack levels required when called: 2
  6084 ;; This function calls:
  6085 ;;		_strcspn
  6086 ;;		_strspn
  6087 ;; This function is called by:
  6088 ;;		_GPS_ParseGPRMC
  6089 ;; This function uses a non-reentrant model
  6090 ;;
  6091                           
  6092                           	psect	text31
  6093   001972                     __ptext31:
  6094                           	callstack 0
  6095   001972                     _strtok:
  6096                           	callstack 27
  6097   001972  500C               	movf	strtok@s^0,w,c
  6098   001974  A4D8               	btfss	status,2,c
  6099   001976  EFBF  F00C         	goto	u2111
  6100   00197A  EFC1  F00C         	goto	u2110
  6101   00197E                     u2111:
  6102   00197E  EFCE  F00C         	goto	l2434
  6103   001982                     u2110:
  6104   001982  C047  F00C         	movff	strtok@p,strtok@s
  6105   001986  500C               	movf	strtok@s^0,w,c
  6106   001988  A4D8               	btfss	status,2,c
  6107   00198A  EFC9  F00C         	goto	u2121
  6108   00198E  EFCB  F00C         	goto	u2120
  6109   001992                     u2121:
  6110   001992  EFCE  F00C         	goto	l2434
  6111   001996                     u2120:
  6112   001996  0E00               	movlw	0
  6113   001998  EF03  F00D         	goto	l1143
  6114   00199C                     l2434:
  6115   00199C  C00C  F007         	movff	strtok@s,strspn@s
  6116   0019A0  C00D  F008         	movff	strtok@sep,strspn@c
  6117   0019A4  EC37  F00E         	call	_strspn	;wreg free
  6118   0019A8  5007               	movf	?_strspn^0,w,c
  6119   0019AA  260C               	addwf	strtok@s^0,f,c
  6120   0019AC  500C               	movf	strtok@s^0,w,c
  6121   0019AE  6ED9               	movwf	fsr2l,c
  6122   0019B0  6ADA               	clrf	fsr2h,c
  6123   0019B2  50DF               	movf	indf2,w,c
  6124   0019B4  A4D8               	btfss	status,2,c
  6125   0019B6  EFDF  F00C         	goto	u2131
  6126   0019BA  EFE1  F00C         	goto	u2130
  6127   0019BE                     u2131:
  6128   0019BE  EFE6  F00C         	goto	l2442
  6129   0019C2                     u2130:
  6130   0019C2  0E00               	movlw	0
  6131   0019C4  6E47               	movwf	strtok@p^0,c
  6132   0019C6  5047               	movf	strtok@p^0,w,c
  6133   0019C8  EF03  F00D         	goto	l1143
  6134   0019CC                     l2442:
  6135   0019CC  C00C  F007         	movff	strtok@s,strcspn@s
  6136   0019D0  C00D  F008         	movff	strtok@sep,strcspn@c
  6137   0019D4  EC69  F00E         	call	_strcspn	;wreg free
  6138   0019D8  500C               	movf	strtok@s^0,w,c
  6139   0019DA  2407               	addwf	?_strcspn^0,w,c
  6140   0019DC  6E47               	movwf	strtok@p^0,c
  6141   0019DE  5047               	movf	strtok@p^0,w,c
  6142   0019E0  6ED9               	movwf	fsr2l,c
  6143   0019E2  6ADA               	clrf	fsr2h,c
  6144   0019E4  50DF               	movf	indf2,w,c
  6145   0019E6  B4D8               	btfsc	status,2,c
  6146   0019E8  EFF8  F00C         	goto	u2141
  6147   0019EC  EFFA  F00C         	goto	u2140
  6148   0019F0                     u2141:
  6149   0019F0  EF01  F00D         	goto	l1145
  6150   0019F4                     u2140:
  6151   0019F4  5047               	movf	strtok@p^0,w,c
  6152   0019F6  6ED9               	movwf	fsr2l,c
  6153   0019F8  6ADA               	clrf	fsr2h,c
  6154   0019FA  6ADF               	clrf	indf2,c
  6155   0019FC  2A47               	incf	strtok@p^0,f,c
  6156   0019FE  EF02  F00D         	goto	l2450
  6157   001A02                     l1145:
  6158   001A02  6A47               	clrf	strtok@p^0,c
  6159   001A04                     l2450:
  6160   001A04  500C               	movf	strtok@s^0,w,c
  6161   001A06                     l1143:
  6162   001A06  0012               	return		;funcret
  6163   001A08                     __end_of_strtok:
  6164                           	callstack 0
  6165                           
  6166 ;; *************** function _strspn *****************
  6167 ;; Defined at:
  6168 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strspn.c"
  6169 ;; Parameters:    Size  Location     Type
  6170 ;;  s               1    6[COMRAM] PTR const unsigned char 
  6171 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  6172 ;;  c               1    7[COMRAM] PTR const unsigned char 
  6173 ;;		 -> STR_3(2), STR_2(2), 
  6174 ;; Auto vars:     Size  Location     Type
  6175 ;;  i               2    9[COMRAM] unsigned int 
  6176 ;; Return value:  Size  Location     Type
  6177 ;;                  2    6[COMRAM] unsigned int 
  6178 ;; Registers used:
  6179 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6180 ;; Tracked objects:
  6181 ;;		On entry : 0/0
  6182 ;;		On exit  : 0/0
  6183 ;;		Unchanged: 0/0
  6184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6185 ;;      Params:         2       0       0       0       0       0       0       0       0
  6186 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6187 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6188 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6189 ;;Total ram usage:        5 bytes
  6190 ;; Hardware stack levels used: 1
  6191 ;; Hardware stack levels required when called: 1
  6192 ;; This function calls:
  6193 ;;		_strchr
  6194 ;; This function is called by:
  6195 ;;		_strtok
  6196 ;; This function uses a non-reentrant model
  6197 ;;
  6198                           
  6199                           	psect	text32
  6200   001C6E                     __ptext32:
  6201                           	callstack 0
  6202   001C6E                     _strspn:
  6203                           	callstack 27
  6204   001C6E  0E00               	movlw	0
  6205   001C70  6E0B               	movwf	(strspn@i+1)^0,c
  6206   001C72  0E00               	movlw	0
  6207   001C74  6E0A               	movwf	strspn@i^0,c
  6208   001C76  EF40  F00E         	goto	l2356
  6209   001C7A                     l2354:
  6210   001C7A  2A07               	incf	strspn@s^0,f,c
  6211   001C7C  4A0A               	infsnz	strspn@i^0,f,c
  6212   001C7E  2A0B               	incf	(strspn@i+1)^0,f,c
  6213   001C80                     l2356:
  6214   001C80  5007               	movf	strspn@s^0,w,c
  6215   001C82  6ED9               	movwf	fsr2l,c
  6216   001C84  6ADA               	clrf	fsr2h,c
  6217   001C86  50DF               	movf	indf2,w,c
  6218   001C88  B4D8               	btfsc	status,2,c
  6219   001C8A  EF49  F00E         	goto	u1911
  6220   001C8E  EF4B  F00E         	goto	u1910
  6221   001C92                     u1911:
  6222   001C92  EF64  F00E         	goto	l1165
  6223   001C96                     u1910:
  6224   001C96  C008  F001         	movff	strspn@c,strchr@s
  6225   001C9A  5001               	movf	strchr@s^0,w,c
  6226   001C9C  A4D8               	btfss	status,2,c
  6227   001C9E  0E08               	movlw	high __smallconst
  6228   001CA0  6E02               	movwf	(strchr@s+1)^0,c
  6229   001CA2  5007               	movf	strspn@s^0,w,c
  6230   001CA4  6ED9               	movwf	fsr2l,c
  6231   001CA6  6ADA               	clrf	fsr2h,c
  6232   001CA8  50DF               	movf	indf2,w,c
  6233   001CAA  6E09               	movwf	??_strspn^0,c
  6234   001CAC  5009               	movf	??_strspn^0,w,c
  6235   001CAE  6E03               	movwf	strchr@c^0,c
  6236   001CB0  6A04               	clrf	(strchr@c+1)^0,c
  6237   001CB2  EC49  F00D         	call	_strchr	;wreg free
  6238   001CB6  5001               	movf	?_strchr^0,w,c
  6239   001CB8  1002               	iorwf	(?_strchr+1)^0,w,c
  6240   001CBA  A4D8               	btfss	status,2,c
  6241   001CBC  EF62  F00E         	goto	u1921
  6242   001CC0  EF64  F00E         	goto	u1920
  6243   001CC4                     u1921:
  6244   001CC4  EF3D  F00E         	goto	l2354
  6245   001CC8                     u1920:
  6246   001CC8                     l1165:
  6247   001CC8  C00A  F007         	movff	strspn@i,?_strspn
  6248   001CCC  C00B  F008         	movff	strspn@i+1,?_strspn+1
  6249   001CD0  0012               	return		;funcret
  6250   001CD2                     __end_of_strspn:
  6251                           	callstack 0
  6252                           
  6253 ;; *************** function _strcspn *****************
  6254 ;; Defined at:
  6255 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcspn.c"
  6256 ;; Parameters:    Size  Location     Type
  6257 ;;  s               1    6[COMRAM] PTR const unsigned char 
  6258 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  6259 ;;  c               1    7[COMRAM] PTR const unsigned char 
  6260 ;;		 -> STR_3(2), STR_2(2), 
  6261 ;; Auto vars:     Size  Location     Type
  6262 ;;  i               2    9[COMRAM] unsigned int 
  6263 ;; Return value:  Size  Location     Type
  6264 ;;                  2    6[COMRAM] unsigned int 
  6265 ;; Registers used:
  6266 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6267 ;; Tracked objects:
  6268 ;;		On entry : 0/0
  6269 ;;		On exit  : 0/0
  6270 ;;		Unchanged: 0/0
  6271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6272 ;;      Params:         2       0       0       0       0       0       0       0       0
  6273 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6274 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6275 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6276 ;;Total ram usage:        5 bytes
  6277 ;; Hardware stack levels used: 1
  6278 ;; Hardware stack levels required when called: 1
  6279 ;; This function calls:
  6280 ;;		_strchr
  6281 ;; This function is called by:
  6282 ;;		_strtok
  6283 ;; This function uses a non-reentrant model
  6284 ;;
  6285                           
  6286                           	psect	text33
  6287   001CD2                     __ptext33:
  6288                           	callstack 0
  6289   001CD2                     _strcspn:
  6290                           	callstack 27
  6291   001CD2  0E00               	movlw	0
  6292   001CD4  6E0B               	movwf	(strcspn@i+1)^0,c
  6293   001CD6  0E00               	movlw	0
  6294   001CD8  6E0A               	movwf	strcspn@i^0,c
  6295   001CDA  EF72  F00E         	goto	l2364
  6296   001CDE                     l2362:
  6297   001CDE  2A07               	incf	strcspn@s^0,f,c
  6298   001CE0  4A0A               	infsnz	strcspn@i^0,f,c
  6299   001CE2  2A0B               	incf	(strcspn@i+1)^0,f,c
  6300   001CE4                     l2364:
  6301   001CE4  5007               	movf	strcspn@s^0,w,c
  6302   001CE6  6ED9               	movwf	fsr2l,c
  6303   001CE8  6ADA               	clrf	fsr2h,c
  6304   001CEA  50DF               	movf	indf2,w,c
  6305   001CEC  B4D8               	btfsc	status,2,c
  6306   001CEE  EF7B  F00E         	goto	u1931
  6307   001CF2  EF7D  F00E         	goto	u1930
  6308   001CF6                     u1931:
  6309   001CF6  EF96  F00E         	goto	l1155
  6310   001CFA                     u1930:
  6311   001CFA  C008  F001         	movff	strcspn@c,strchr@s
  6312   001CFE  5001               	movf	strchr@s^0,w,c
  6313   001D00  A4D8               	btfss	status,2,c
  6314   001D02  0E08               	movlw	high __smallconst
  6315   001D04  6E02               	movwf	(strchr@s+1)^0,c
  6316   001D06  5007               	movf	strcspn@s^0,w,c
  6317   001D08  6ED9               	movwf	fsr2l,c
  6318   001D0A  6ADA               	clrf	fsr2h,c
  6319   001D0C  50DF               	movf	indf2,w,c
  6320   001D0E  6E09               	movwf	??_strcspn^0,c
  6321   001D10  5009               	movf	??_strcspn^0,w,c
  6322   001D12  6E03               	movwf	strchr@c^0,c
  6323   001D14  6A04               	clrf	(strchr@c+1)^0,c
  6324   001D16  EC49  F00D         	call	_strchr	;wreg free
  6325   001D1A  5001               	movf	?_strchr^0,w,c
  6326   001D1C  1002               	iorwf	(?_strchr+1)^0,w,c
  6327   001D1E  B4D8               	btfsc	status,2,c
  6328   001D20  EF94  F00E         	goto	u1941
  6329   001D24  EF96  F00E         	goto	u1940
  6330   001D28                     u1941:
  6331   001D28  EF6F  F00E         	goto	l2362
  6332   001D2C                     u1940:
  6333   001D2C                     l1155:
  6334   001D2C  C00A  F007         	movff	strcspn@i,?_strcspn
  6335   001D30  C00B  F008         	movff	strcspn@i+1,?_strcspn+1
  6336   001D34  0012               	return		;funcret
  6337   001D36                     __end_of_strcspn:
  6338                           	callstack 0
  6339                           
  6340 ;; *************** function _strstr *****************
  6341 ;; Defined at:
  6342 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strstr.c"
  6343 ;; Parameters:    Size  Location     Type
  6344 ;;  h               2    6[COMRAM] PTR const unsigned char 
  6345 ;;		 -> main@nmea(100), STR_3(2), STR_2(2), NULL(0), 
  6346 ;;  n               1    8[COMRAM] PTR const unsigned char 
  6347 ;;		 -> STR_14(7), STR_1(7), 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;  nl              2    9[COMRAM] unsigned int 
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  2    6[COMRAM] PTR unsigned char 
  6352 ;; Registers used:
  6353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6359 ;;      Params:         3       0       0       0       0       0       0       0       0
  6360 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6362 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6363 ;;Total ram usage:        5 bytes
  6364 ;; Hardware stack levels used: 1
  6365 ;; Hardware stack levels required when called: 1
  6366 ;; This function calls:
  6367 ;;		_strchr
  6368 ;;		_strlen
  6369 ;;		_strncmp
  6370 ;; This function is called by:
  6371 ;;		_GPS_ParseGPRMC
  6372 ;;		_main
  6373 ;; This function uses a non-reentrant model
  6374 ;;
  6375                           
  6376                           	psect	text34
  6377   0015D2                     __ptext34:
  6378                           	callstack 0
  6379   0015D2                     _strstr:
  6380                           	callstack 29
  6381   0015D2  5009               	movf	strstr@n^0,w,c
  6382   0015D4  B4D8               	btfsc	status,2,c
  6383   0015D6  EFEF  F00A         	goto	u2031
  6384   0015DA  EFF1  F00A         	goto	u2030
  6385   0015DE                     u2031:
  6386   0015DE  EF4B  F00B         	goto	l2406
  6387   0015E2                     u2030:
  6388   0015E2  C009  F001         	movff	strstr@n,strlen@s
  6389   0015E6  EC49  F010         	call	_strlen	;wreg free
  6390   0015EA  C001  F00A         	movff	?_strlen,strstr@nl
  6391   0015EE  C002  F00B         	movff	?_strlen+1,strstr@nl+1
  6392   0015F2  EF2A  F00B         	goto	l2402
  6393   0015F6                     l2394:
  6394   0015F6  C007  F001         	movff	strstr@h,strncmp@l
  6395   0015FA  C008  F002         	movff	strstr@h+1,strncmp@l+1
  6396   0015FE  C009  F003         	movff	strstr@n,strncmp@r
  6397   001602  C00A  F004         	movff	strstr@nl,strncmp@n
  6398   001606  C00B  F005         	movff	strstr@nl+1,strncmp@n+1
  6399   00160A  ECF7  F009         	call	_strncmp	;wreg free
  6400   00160E  5001               	movf	?_strncmp^0,w,c
  6401   001610  1002               	iorwf	(?_strncmp+1)^0,w,c
  6402   001612  A4D8               	btfss	status,2,c
  6403   001614  EF0E  F00B         	goto	u2041
  6404   001618  EF10  F00B         	goto	u2040
  6405   00161C                     u2041:
  6406   00161C  EF16  F00B         	goto	l2400
  6407   001620                     u2040:
  6408   001620  C007  F007         	movff	strstr@h,?_strstr
  6409   001624  C008  F008         	movff	strstr@h+1,?_strstr+1
  6410   001628  EF4F  F00B         	goto	l1109
  6411   00162C                     l2400:
  6412   00162C  0E01               	movlw	1
  6413   00162E  2407               	addwf	strstr@h^0,w,c
  6414   001630  6E01               	movwf	strchr@s^0,c
  6415   001632  0E00               	movlw	0
  6416   001634  2008               	addwfc	(strstr@h+1)^0,w,c
  6417   001636  6E02               	movwf	(strchr@s+1)^0,c
  6418   001638  C009  FFF6         	movff	strstr@n,tblptrl
  6419   00163C                     	if	1	;There is more than 1 active tblptr byte
  6420   00163C  0E08               	movlw	high __smallconst
  6421   00163E  6EF7               	movwf	tblptrh,c
  6422   001640                     	endif
  6423   001640                     	if	0	;tblptru may be non-zero
  6424   001640                     	endif
  6425   001640                     	if	0	;tblptru may be non-zero
  6426   001640                     	endif
  6427   001640  0008               	tblrd		*
  6428   001642  50F5               	movf	tablat,w,c
  6429   001644  6E03               	movwf	strchr@c^0,c
  6430   001646  6A04               	clrf	(strchr@c+1)^0,c
  6431   001648  EC49  F00D         	call	_strchr	;wreg free
  6432   00164C  C001  F007         	movff	?_strchr,strstr@h
  6433   001650  C002  F008         	movff	?_strchr+1,strstr@h+1
  6434   001654                     l2402:
  6435   001654  5007               	movf	strstr@h^0,w,c
  6436   001656  1008               	iorwf	(strstr@h+1)^0,w,c
  6437   001658  B4D8               	btfsc	status,2,c
  6438   00165A  EF31  F00B         	goto	u2051
  6439   00165E  EF33  F00B         	goto	u2050
  6440   001662                     u2051:
  6441   001662  EF4B  F00B         	goto	l2406
  6442   001666                     u2050:
  6443   001666  C007  FFF6         	movff	strstr@h,tblptrl
  6444   00166A  C008  FFF7         	movff	strstr@h+1,tblptrh
  6445   00166E  6AF8               	clrf	tblptru,c
  6446   001670  0E07               	movlw	(high __ramtop+-1)
  6447   001672  64F7               	cpfsgt	tblptrh,c
  6448   001674  D003               	bra	u2067
  6449   001676  0008               	tblrd		*
  6450   001678  50F5               	movf	tablat,w,c
  6451   00167A  D005               	bra	u2060
  6452   00167C                     u2067:
  6453   00167C  CFF6 FFE9          	movff	tblptrl,fsr0l
  6454   001680  CFF7 FFEA          	movff	tblptrh,fsr0h
  6455   001684  50EF               	movf	indf0,w,c
  6456   001686                     u2060:
  6457   001686  0900               	iorlw	0
  6458   001688  A4D8               	btfss	status,2,c
  6459   00168A  EF49  F00B         	goto	u2071
  6460   00168E  EF4B  F00B         	goto	u2070
  6461   001692                     u2071:
  6462   001692  EFFB  F00A         	goto	l2394
  6463   001696                     u2070:
  6464   001696                     l2406:
  6465   001696  0E00               	movlw	0
  6466   001698  6E07               	movwf	?_strstr^0,c
  6467   00169A  0E00               	movlw	0
  6468   00169C  6E08               	movwf	(?_strstr+1)^0,c
  6469   00169E                     l1109:
  6470   00169E  0012               	return		;funcret
  6471   0016A0                     __end_of_strstr:
  6472                           	callstack 0
  6473                           
  6474 ;; *************** function _strncmp *****************
  6475 ;; Defined at:
  6476 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;  l               2    0[COMRAM] PTR const unsigned char 
  6479 ;;		 -> main@nmea(100), STR_3(2), STR_2(2), NULL(0), 
  6480 ;;  r               1    2[COMRAM] PTR const unsigned char 
  6481 ;;		 -> STR_14(7), STR_1(7), 
  6482 ;;  n               2    3[COMRAM] unsigned int 
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;		None
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  2    0[COMRAM] int 
  6487 ;; Registers used:
  6488 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6494 ;;      Params:         5       0       0       0       0       0       0       0       0
  6495 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6496 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6497 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6498 ;;Total ram usage:        6 bytes
  6499 ;; Hardware stack levels used: 1
  6500 ;; This function calls:
  6501 ;;		Nothing
  6502 ;; This function is called by:
  6503 ;;		_strstr
  6504 ;; This function uses a non-reentrant model
  6505 ;;
  6506                           
  6507                           	psect	text35
  6508   0013EE                     __ptext35:
  6509                           	callstack 0
  6510   0013EE                     _strncmp:
  6511                           	callstack 29
  6512   0013EE  0604               	decf	strncmp@n^0,f,c
  6513   0013F0  A0D8               	btfss	status,0,c
  6514   0013F2  0605               	decf	(strncmp@n+1)^0,f,c
  6515   0013F4  2804               	incf	strncmp@n^0,w,c
  6516   0013F6  E106               	bnz	u1841
  6517   0013F8  2805               	incf	(strncmp@n+1)^0,w,c
  6518   0013FA  A4D8               	btfss	status,2,c
  6519   0013FC  EF02  F00A         	goto	u1841
  6520   001400  EF04  F00A         	goto	u1840
  6521   001404                     u1841:
  6522   001404  EF10  F00A         	goto	l2340
  6523   001408                     u1840:
  6524   001408  0E00               	movlw	0
  6525   00140A  6E02               	movwf	(?_strncmp+1)^0,c
  6526   00140C  0E00               	movlw	0
  6527   00140E  6E01               	movwf	?_strncmp^0,c
  6528   001410  EF7A  F00A         	goto	l1128
  6529   001414                     l2338:
  6530   001414  4A01               	infsnz	strncmp@l^0,f,c
  6531   001416  2A02               	incf	(strncmp@l+1)^0,f,c
  6532   001418  2A03               	incf	strncmp@r^0,f,c
  6533   00141A  0604               	decf	strncmp@n^0,f,c
  6534   00141C  A0D8               	btfss	status,0,c
  6535   00141E  0605               	decf	(strncmp@n+1)^0,f,c
  6536   001420                     l2340:
  6537   001420  C001  FFF6         	movff	strncmp@l,tblptrl
  6538   001424  C002  FFF7         	movff	strncmp@l+1,tblptrh
  6539   001428  6AF8               	clrf	tblptru,c
  6540   00142A  0E07               	movlw	(high __ramtop+-1)
  6541   00142C  64F7               	cpfsgt	tblptrh,c
  6542   00142E  D003               	bra	u1857
  6543   001430  0008               	tblrd		*
  6544   001432  50F5               	movf	tablat,w,c
  6545   001434  D005               	bra	u1850
  6546   001436                     u1857:
  6547   001436  CFF6 FFE9          	movff	tblptrl,fsr0l
  6548   00143A  CFF7 FFEA          	movff	tblptrh,fsr0h
  6549   00143E  50EF               	movf	indf0,w,c
  6550   001440                     u1850:
  6551   001440  0900               	iorlw	0
  6552   001442  B4D8               	btfsc	status,2,c
  6553   001444  EF26  F00A         	goto	u1861
  6554   001448  EF28  F00A         	goto	u1860
  6555   00144C                     u1861:
  6556   00144C  EF5E  F00A         	goto	l2348
  6557   001450                     u1860:
  6558   001450  C003  FFF6         	movff	strncmp@r,tblptrl
  6559   001454                     	if	1	;There is more than 1 active tblptr byte
  6560   001454  0E08               	movlw	high __smallconst
  6561   001456  6EF7               	movwf	tblptrh,c
  6562   001458                     	endif
  6563   001458                     	if	0	;tblptru may be non-zero
  6564   001458                     	endif
  6565   001458                     	if	0	;tblptru may be non-zero
  6566   001458                     	endif
  6567   001458  0008               	tblrd		*
  6568   00145A  50F5               	movf	tablat,w,c
  6569   00145C  0900               	iorlw	0
  6570   00145E  B4D8               	btfsc	status,2,c
  6571   001460  EF34  F00A         	goto	u1871
  6572   001464  EF36  F00A         	goto	u1870
  6573   001468                     u1871:
  6574   001468  EF5E  F00A         	goto	l2348
  6575   00146C                     u1870:
  6576   00146C  5004               	movf	strncmp@n^0,w,c
  6577   00146E  1005               	iorwf	(strncmp@n+1)^0,w,c
  6578   001470  B4D8               	btfsc	status,2,c
  6579   001472  EF3D  F00A         	goto	u1881
  6580   001476  EF3F  F00A         	goto	u1880
  6581   00147A                     u1881:
  6582   00147A  EF5E  F00A         	goto	l2348
  6583   00147E                     u1880:
  6584   00147E  C003  FFF6         	movff	strncmp@r,tblptrl
  6585   001482                     	if	1	;There is more than 1 active tblptr byte
  6586   001482  0E08               	movlw	high __smallconst
  6587   001484  6EF7               	movwf	tblptrh,c
  6588   001486                     	endif
  6589   001486                     	if	0	;tblptru may be non-zero
  6590   001486                     	endif
  6591   001486                     	if	0	;tblptru may be non-zero
  6592   001486                     	endif
  6593   001486  0008               	tblrd		*
  6594   001488  CFF5 F006          	movff	tablat,??_strncmp
  6595   00148C  C001  FFF6         	movff	strncmp@l,tblptrl
  6596   001490  C002  FFF7         	movff	strncmp@l+1,tblptrh
  6597   001494  6AF8               	clrf	tblptru,c
  6598   001496  0E07               	movlw	(high __ramtop+-1)
  6599   001498  64F7               	cpfsgt	tblptrh,c
  6600   00149A  D003               	bra	u1897
  6601   00149C  0008               	tblrd		*
  6602   00149E  50F5               	movf	tablat,w,c
  6603   0014A0  D005               	bra	u1895
  6604   0014A2                     u1897:
  6605   0014A2  CFF6 FFE9          	movff	tblptrl,fsr0l
  6606   0014A6  CFF7 FFEA          	movff	tblptrh,fsr0h
  6607   0014AA  50EF               	movf	indf0,w,c
  6608   0014AC                     u1895:
  6609   0014AC  1806               	xorwf	??_strncmp^0,w,c
  6610   0014AE  B4D8               	btfsc	status,2,c
  6611   0014B0  EF5C  F00A         	goto	u1891
  6612   0014B4  EF5E  F00A         	goto	u1890
  6613   0014B8                     u1891:
  6614   0014B8  EF0A  F00A         	goto	l2338
  6615   0014BC                     u1890:
  6616   0014BC                     l2348:
  6617   0014BC  C001  FFF6         	movff	strncmp@l,tblptrl
  6618   0014C0  C002  FFF7         	movff	strncmp@l+1,tblptrh
  6619   0014C4  6AF8               	clrf	tblptru,c
  6620   0014C6  0E07               	movlw	(high __ramtop+-1)
  6621   0014C8  64F7               	cpfsgt	tblptrh,c
  6622   0014CA  D003               	bra	u1907
  6623   0014CC  0008               	tblrd		*
  6624   0014CE  50F5               	movf	tablat,w,c
  6625   0014D0  D005               	bra	u1900
  6626   0014D2                     u1907:
  6627   0014D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  6628   0014D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  6629   0014DA  50EF               	movf	indf0,w,c
  6630   0014DC                     u1900:
  6631   0014DC  6E06               	movwf	??_strncmp^0,c
  6632   0014DE  C003  FFF6         	movff	strncmp@r,tblptrl
  6633   0014E2                     	if	1	;There is more than 1 active tblptr byte
  6634   0014E2  0E08               	movlw	high __smallconst
  6635   0014E4  6EF7               	movwf	tblptrh,c
  6636   0014E6                     	endif
  6637   0014E6                     	if	0	;tblptru may be non-zero
  6638   0014E6                     	endif
  6639   0014E6                     	if	0	;tblptru may be non-zero
  6640   0014E6                     	endif
  6641   0014E6  0008               	tblrd		*
  6642   0014E8  50F5               	movf	tablat,w,c
  6643   0014EA  5C06               	subwf	??_strncmp^0,w,c
  6644   0014EC  6E01               	movwf	?_strncmp^0,c
  6645   0014EE  6A02               	clrf	(?_strncmp+1)^0,c
  6646   0014F0  A0D8               	btfss	status,0,c
  6647   0014F2  0602               	decf	(?_strncmp+1)^0,f,c
  6648   0014F4                     l1128:
  6649   0014F4  0012               	return		;funcret
  6650   0014F6                     __end_of_strncmp:
  6651                           	callstack 0
  6652                           
  6653 ;; *************** function _strlen *****************
  6654 ;; Defined at:
  6655 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  s               1    0[COMRAM] PTR const unsigned char 
  6658 ;;		 -> STR_14(7), STR_1(7), 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;  a               1    2[COMRAM] PTR const unsigned char 
  6661 ;;		 -> STR_14(7), STR_1(7), 
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  2    0[COMRAM] unsigned int 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6671 ;;      Params:         2       0       0       0       0       0       0       0       0
  6672 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6673 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6674 ;;      Totals:         3       0       0       0       0       0       0       0       0
  6675 ;;Total ram usage:        3 bytes
  6676 ;; Hardware stack levels used: 1
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_strstr
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text36
  6685   002092                     __ptext36:
  6686                           	callstack 0
  6687   002092                     _strlen:
  6688                           	callstack 29
  6689   002092  C001  F003         	movff	strlen@s,strlen@a
  6690   002096  EF4E  F010         	goto	l2326
  6691   00209A                     l2324:
  6692   00209A  2A01               	incf	strlen@s^0,f,c
  6693   00209C                     l2326:
  6694   00209C  C001  FFF6         	movff	strlen@s,tblptrl
  6695   0020A0                     	if	1	;There is more than 1 active tblptr byte
  6696   0020A0  0E08               	movlw	high __smallconst
  6697   0020A2  6EF7               	movwf	tblptrh,c
  6698   0020A4                     	endif
  6699   0020A4                     	if	0	;tblptru may be non-zero
  6700   0020A4                     	endif
  6701   0020A4                     	if	0	;tblptru may be non-zero
  6702   0020A4                     	endif
  6703   0020A4  0008               	tblrd		*
  6704   0020A6  50F5               	movf	tablat,w,c
  6705   0020A8  0900               	iorlw	0
  6706   0020AA  A4D8               	btfss	status,2,c
  6707   0020AC  EF5A  F010         	goto	u1831
  6708   0020B0  EF5C  F010         	goto	u1830
  6709   0020B4                     u1831:
  6710   0020B4  EF4D  F010         	goto	l2324
  6711   0020B8                     u1830:
  6712   0020B8  5003               	movf	strlen@a^0,w,c
  6713   0020BA  5C01               	subwf	strlen@s^0,w,c
  6714   0020BC  6E01               	movwf	?_strlen^0,c
  6715   0020BE  6A02               	clrf	(?_strlen+1)^0,c
  6716   0020C0  BE01               	btfsc	?_strlen^0,7,c
  6717   0020C2  0602               	decf	(?_strlen+1)^0,f,c
  6718   0020C4  0012               	return		;funcret
  6719   0020C6                     __end_of_strlen:
  6720                           	callstack 0
  6721                           
  6722 ;; *************** function _strchr *****************
  6723 ;; Defined at:
  6724 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strchr.c"
  6725 ;; Parameters:    Size  Location     Type
  6726 ;;  s               2    0[COMRAM] PTR const unsigned char 
  6727 ;;		 -> main@nmea(100), STR_3(2), STR_2(2), NULL(0), 
  6728 ;;  c               2    2[COMRAM] int 
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;		None
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  2    0[COMRAM] PTR unsigned char 
  6733 ;; Registers used:
  6734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6740 ;;      Params:         4       0       0       0       0       0       0       0       0
  6741 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6742 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6743 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6744 ;;Total ram usage:        6 bytes
  6745 ;; Hardware stack levels used: 1
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_strstr
  6750 ;;		_strcspn
  6751 ;;		_strspn
  6752 ;; This function uses a non-reentrant model
  6753 ;;
  6754                           
  6755                           	psect	text37
  6756   001A92                     __ptext37:
  6757                           	callstack 0
  6758   001A92                     _strchr:
  6759                           	callstack 29
  6760   001A92                     l1115:
  6761   001A92  C001  FFF6         	movff	strchr@s,tblptrl
  6762   001A96  C002  FFF7         	movff	strchr@s+1,tblptrh
  6763   001A9A  6AF8               	clrf	tblptru,c
  6764   001A9C  0E07               	movlw	(high __ramtop+-1)
  6765   001A9E  64F7               	cpfsgt	tblptrh,c
  6766   001AA0  D003               	bra	u1697
  6767   001AA2  0008               	tblrd		*
  6768   001AA4  50F5               	movf	tablat,w,c
  6769   001AA6  D005               	bra	u1690
  6770   001AA8                     u1697:
  6771   001AA8  CFF6 FFE9          	movff	tblptrl,fsr0l
  6772   001AAC  CFF7 FFEA          	movff	tblptrh,fsr0h
  6773   001AB0  50EF               	movf	indf0,w,c
  6774   001AB2                     u1690:
  6775   001AB2  1803               	xorwf	strchr@c^0,w,c
  6776   001AB4  A4D8               	btfss	status,2,c
  6777   001AB6  EF5F  F00D         	goto	u1701
  6778   001ABA  EF61  F00D         	goto	u1700
  6779   001ABE                     u1701:
  6780   001ABE  EF67  F00D         	goto	l2212
  6781   001AC2                     u1700:
  6782   001AC2  C001  F001         	movff	strchr@s,?_strchr
  6783   001AC6  C002  F002         	movff	strchr@s+1,?_strchr+1
  6784   001ACA  EF89  F00D         	goto	l1117
  6785   001ACE                     l2212:
  6786   001ACE  5001               	movf	strchr@s^0,w,c
  6787   001AD0  6E05               	movwf	??_strchr^0,c
  6788   001AD2  5002               	movf	(strchr@s+1)^0,w,c
  6789   001AD4  6E06               	movwf	(??_strchr+1)^0,c
  6790   001AD6  4A01               	infsnz	strchr@s^0,f,c
  6791   001AD8  2A02               	incf	(strchr@s+1)^0,f,c
  6792   001ADA  C005  FFF6         	movff	??_strchr,tblptrl
  6793   001ADE  C006  FFF7         	movff	??_strchr+1,tblptrh
  6794   001AE2  6AF8               	clrf	tblptru,c
  6795   001AE4  0E07               	movlw	(high __ramtop+-1)
  6796   001AE6  64F7               	cpfsgt	tblptrh,c
  6797   001AE8  D003               	bra	u1717
  6798   001AEA  0008               	tblrd		*
  6799   001AEC  50F5               	movf	tablat,w,c
  6800   001AEE  D005               	bra	u1710
  6801   001AF0                     u1717:
  6802   001AF0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6803   001AF4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6804   001AF8  50EF               	movf	indf0,w,c
  6805   001AFA                     u1710:
  6806   001AFA  0900               	iorlw	0
  6807   001AFC  A4D8               	btfss	status,2,c
  6808   001AFE  EF83  F00D         	goto	u1721
  6809   001B02  EF85  F00D         	goto	u1720
  6810   001B06                     u1721:
  6811   001B06  EF49  F00D         	goto	l1115
  6812   001B0A                     u1720:
  6813   001B0A  0E00               	movlw	0
  6814   001B0C  6E01               	movwf	?_strchr^0,c
  6815   001B0E  0E00               	movlw	0
  6816   001B10  6E02               	movwf	(?_strchr+1)^0,c
  6817   001B12                     l1117:
  6818   001B12  0012               	return		;funcret
  6819   001B14                     __end_of_strchr:
  6820                           	callstack 0
  6821                           
  6822 ;; *************** function _strncpy *****************
  6823 ;; Defined at:
  6824 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncpy.c"
  6825 ;; Parameters:    Size  Location     Type
  6826 ;;  d               2    0[COMRAM] PTR unsigned char 
  6827 ;;		 -> main@lon(9), main@lat(8), GPS_ParseGPRMC@buf(100), 
  6828 ;;  s               2    2[COMRAM] PTR const unsigned char 
  6829 ;;		 -> main@nmea(100), GPS_ParseGPRMC@buf(100), NULL(0), 
  6830 ;;  n               2    4[COMRAM] unsigned int 
  6831 ;; Auto vars:     Size  Location     Type
  6832 ;;  cp              2    6[COMRAM] PTR unsigned char 
  6833 ;;		 -> main@lon(9), main@lat(8), GPS_ParseGPRMC@buf(100), 
  6834 ;; Return value:  Size  Location     Type
  6835 ;;                  2    0[COMRAM] PTR unsigned char 
  6836 ;; Registers used:
  6837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6838 ;; Tracked objects:
  6839 ;;		On entry : 0/0
  6840 ;;		On exit  : 0/0
  6841 ;;		Unchanged: 0/0
  6842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6843 ;;      Params:         6       0       0       0       0       0       0       0       0
  6844 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6845 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6846 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6847 ;;Total ram usage:        8 bytes
  6848 ;; Hardware stack levels used: 1
  6849 ;; This function calls:
  6850 ;;		Nothing
  6851 ;; This function is called by:
  6852 ;;		_GPS_ParseGPRMC
  6853 ;; This function uses a non-reentrant model
  6854 ;;
  6855                           
  6856                           	psect	text38
  6857   001B14                     __ptext38:
  6858                           	callstack 0
  6859   001B14                     _strncpy:
  6860                           	callstack 29
  6861   001B14  C001  F007         	movff	strncpy@d,strncpy@cp
  6862   001B18  C002  F008         	movff	strncpy@d+1,strncpy@cp+1
  6863   001B1C  EFAB  F00D         	goto	l2418
  6864   001B20                     l2412:
  6865   001B20  0605               	decf	strncpy@n^0,f,c
  6866   001B22  A0D8               	btfss	status,0,c
  6867   001B24  0606               	decf	(strncpy@n+1)^0,f,c
  6868   001B26  C003  FFD9         	movff	strncpy@s,fsr2l
  6869   001B2A  C004  FFDA         	movff	strncpy@s+1,fsr2h
  6870   001B2E  4A03               	infsnz	strncpy@s^0,f,c
  6871   001B30  2A04               	incf	(strncpy@s+1)^0,f,c
  6872   001B32  C007  FFE1         	movff	strncpy@cp,fsr1l
  6873   001B36  C008  FFE2         	movff	strncpy@cp+1,fsr1h
  6874   001B3A  4A07               	infsnz	strncpy@cp^0,f,c
  6875   001B3C  2A08               	incf	(strncpy@cp+1)^0,f,c
  6876   001B3E  CFDF FFE7          	movff	indf2,indf1
  6877   001B42  50E7               	movf	indf1,w,c
  6878   001B44  A4D8               	btfss	status,2,c
  6879   001B46  EFA7  F00D         	goto	u2081
  6880   001B4A  EFA9  F00D         	goto	u2080
  6881   001B4E                     u2081:
  6882   001B4E  EFAB  F00D         	goto	l2418
  6883   001B52                     u2080:
  6884   001B52  EFBD  F00D         	goto	l2424
  6885   001B56                     l2418:
  6886   001B56  5005               	movf	strncpy@n^0,w,c
  6887   001B58  1006               	iorwf	(strncpy@n+1)^0,w,c
  6888   001B5A  A4D8               	btfss	status,2,c
  6889   001B5C  EFB2  F00D         	goto	u2091
  6890   001B60  EFB4  F00D         	goto	u2090
  6891   001B64                     u2091:
  6892   001B64  EF90  F00D         	goto	l2412
  6893   001B68                     u2090:
  6894   001B68  EFBD  F00D         	goto	l2424
  6895   001B6C                     l2420:
  6896   001B6C  C007  FFD9         	movff	strncpy@cp,fsr2l
  6897   001B70  C008  FFDA         	movff	strncpy@cp+1,fsr2h
  6898   001B74  6ADF               	clrf	indf2,c
  6899   001B76  4A07               	infsnz	strncpy@cp^0,f,c
  6900   001B78  2A08               	incf	(strncpy@cp+1)^0,f,c
  6901   001B7A                     l2424:
  6902   001B7A  0605               	decf	strncpy@n^0,f,c
  6903   001B7C  A0D8               	btfss	status,0,c
  6904   001B7E  0606               	decf	(strncpy@n+1)^0,f,c
  6905   001B80  2805               	incf	strncpy@n^0,w,c
  6906   001B82  E106               	bnz	u2101
  6907   001B84  2806               	incf	(strncpy@n+1)^0,w,c
  6908   001B86  A4D8               	btfss	status,2,c
  6909   001B88  EFC8  F00D         	goto	u2101
  6910   001B8C  EFCA  F00D         	goto	u2100
  6911   001B90                     u2101:
  6912   001B90  EFB6  F00D         	goto	l2420
  6913   001B94                     u2100:
  6914   001B94  0012               	return		;funcret
  6915   001B96                     __end_of_strncpy:
  6916                           	callstack 0
  6917                           
  6918 ;; *************** function _GPS_Init *****************
  6919 ;; Defined at:
  6920 ;;		line 6 in file "GPS.c"
  6921 ;; Parameters:    Size  Location     Type
  6922 ;;		None
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  dummy           1    0[COMRAM] volatile unsigned char 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  1    wreg      void 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6934 ;;      Params:         0       0       0       0       0       0       0       0       0
  6935 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6936 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6937 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6938 ;;Total ram usage:        1 bytes
  6939 ;; Hardware stack levels used: 1
  6940 ;; This function calls:
  6941 ;;		Nothing
  6942 ;; This function is called by:
  6943 ;;		_main
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           	psect	text39
  6948   002152                     __ptext39:
  6949                           	callstack 0
  6950   002152                     _GPS_Init:
  6951                           	callstack 30
  6952   002152                     
  6953                           ;GPS.c: 7:     TRISC7 = 1;
  6954   002152  8E94               	bsf	3988,7,c	;volatile
  6955   002154                     
  6956                           ;GPS.c: 10:     BAUDCON = 0x08;
  6957   002154  0E08               	movlw	8
  6958   002156  6EB8               	movwf	184,c	;volatile
  6959                           
  6960                           ;GPS.c: 11:     TXSTA = 0x24;
  6961   002158  0E24               	movlw	36
  6962   00215A  6EAC               	movwf	172,c	;volatile
  6963                           
  6964                           ;GPS.c: 12:     RCSTA = 0x90;
  6965   00215C  0E90               	movlw	144
  6966   00215E  6EAB               	movwf	171,c	;volatile
  6967                           
  6968                           ;GPS.c: 13:     SPBRG = 207;
  6969   002160  0ECF               	movlw	207
  6970   002162  6EAF               	movwf	175,c	;volatile
  6971                           
  6972                           ;GPS.c: 16:     while(PIR1bits.RCIF) {
  6973   002164  EFB6  F010         	goto	l109
  6974   002168                     l110:
  6975                           
  6976                           ;GPS.c: 17:         volatile char dummy = RCREG;
  6977   002168  CFAE F001          	movff	4014,GPS_Init@dummy	;volatile
  6978   00216C                     l109:
  6979                           
  6980                           ;GPS.c: 16:     while(PIR1bits.RCIF) {
  6981   00216C  BA9E               	btfsc	158,5,c	;volatile
  6982   00216E  EFBB  F010         	goto	u2231
  6983   002172  EFBD  F010         	goto	u2230
  6984   002176                     u2231:
  6985   002176  EFB4  F010         	goto	l110
  6986   00217A                     u2230:
  6987   00217A                     
  6988                           ;GPS.c: 20:     PIR1bits.RCIF = 0;
  6989   00217A  9A9E               	bcf	158,5,c	;volatile
  6990   00217C  0012               	return		;funcret
  6991   00217E                     __end_of_GPS_Init:
  6992                           	callstack 0
  6993                           
  6994 ;; *************** function _DHT11_Read *****************
  6995 ;; Defined at:
  6996 ;;		line 16 in file "DTH11.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  humidity        2    2[COMRAM] PTR unsigned char 
  6999 ;;		 -> main@hum(1), 
  7000 ;;  temperature     2    4[COMRAM] PTR unsigned char 
  7001 ;;		 -> main@temp(1), 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  i               1   15[COMRAM] unsigned char 
  7004 ;;  data            5   10[COMRAM] unsigned char [5]
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      unsigned char 
  7007 ;; Registers used:
  7008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7014 ;;      Params:         4       0       0       0       0       0       0       0       0
  7015 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7016 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7017 ;;      Totals:        14       0       0       0       0       0       0       0       0
  7018 ;;Total ram usage:       14 bytes
  7019 ;; Hardware stack levels used: 1
  7020 ;; Hardware stack levels required when called: 1
  7021 ;; This function calls:
  7022 ;;		_DHT11_ReadByte
  7023 ;; This function is called by:
  7024 ;;		_main
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text40
  7029   0016A0                     __ptext40:
  7030                           	callstack 0
  7031   0016A0                     _DHT11_Read:
  7032                           	callstack 29
  7033   0016A0                     
  7034                           ;DTH11.c: 17:     TRISAbits.TRISA0 = 0;
  7035   0016A0  9092               	bcf	146,0,c	;volatile
  7036                           
  7037                           ;DTH11.c: 18:     PORTAbits.RA0 = 0;
  7038   0016A2  9080               	bcf	128,0,c	;volatile
  7039   0016A4                     
  7040                           ;DTH11.c: 19:     _delay((unsigned long)((18)*(8000000/4000.0)));
  7041   0016A4  0E2F               	movlw	47
  7042   0016A6  6E07               	movwf	??_DHT11_Read^0,c
  7043   0016A8  0EC0               	movlw	192
  7044   0016AA                     u2877:
  7045   0016AA  2EE8               	decfsz	wreg,f,c
  7046   0016AC  D7FE               	bra	u2877
  7047   0016AE  2E07               	decfsz	??_DHT11_Read^0,f,c
  7048   0016B0  D7FC               	bra	u2877
  7049   0016B2                     
  7050                           ;DTH11.c: 20:     PORTAbits.RA0 = 1;
  7051   0016B2  8080               	bsf	128,0,c	;volatile
  7052                           
  7053                           ;DTH11.c: 21:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  7054   0016B4  0E14               	movlw	20
  7055   0016B6                     u2887:
  7056   0016B6  2EE8               	decfsz	wreg,f,c
  7057   0016B8  D7FE               	bra	u2887
  7058   0016BA                     
  7059                           ;DTH11.c: 22:     TRISAbits.TRISA0 = 1;
  7060   0016BA  8092               	bsf	146,0,c	;volatile
  7061   0016BC                     
  7062                           ;DTH11.c: 24:     if (PORTAbits.RA0 == 0) {
  7063   0016BC  B080               	btfsc	128,0,c	;volatile
  7064   0016BE  EF63  F00B         	goto	u2491
  7065   0016C2  EF65  F00B         	goto	u2490
  7066   0016C6                     u2491:
  7067   0016C6  EFB1  F00B         	goto	l2718
  7068   0016CA                     u2490:
  7069   0016CA                     l175:
  7070   0016CA  A080               	btfss	128,0,c	;volatile
  7071   0016CC  EF6A  F00B         	goto	u2501
  7072   0016D0  EF6C  F00B         	goto	u2500
  7073   0016D4                     u2501:
  7074   0016D4  EF65  F00B         	goto	l175
  7075   0016D8                     u2500:
  7076   0016D8                     l178:
  7077   0016D8  B080               	btfsc	128,0,c	;volatile
  7078   0016DA  EF71  F00B         	goto	u2511
  7079   0016DE  EF73  F00B         	goto	u2510
  7080   0016E2                     u2511:
  7081   0016E2  EF6C  F00B         	goto	l178
  7082   0016E6                     u2510:
  7083   0016E6                     
  7084                           ;DTH11.c: 29:         uint8_t data[5];;DTH11.c: 30:         for (uint8_t i = 0; i < 5; i
      +                          ++) {
  7085   0016E6  6A10               	clrf	DHT11_Read@i^0,c
  7086   0016E8                     l2704:
  7087                           
  7088                           ;DTH11.c: 31:             data[i] = DHT11_ReadByte();
  7089   0016E8  5010               	movf	DHT11_Read@i^0,w,c
  7090   0016EA  0F0B               	addlw	low DHT11_Read@data
  7091   0016EC  6ED9               	movwf	fsr2l,c
  7092   0016EE  6ADA               	clrf	fsr2h,c
  7093   0016F0  ECA5  F00F         	call	_DHT11_ReadByte	;wreg free
  7094   0016F4  6EDF               	movwf	indf2,c
  7095   0016F6                     
  7096                           ;DTH11.c: 32:         }
  7097   0016F6  2A10               	incf	DHT11_Read@i^0,f,c
  7098   0016F8  0E04               	movlw	4
  7099   0016FA  6410               	cpfsgt	DHT11_Read@i^0,c
  7100   0016FC  EF82  F00B         	goto	u2521
  7101   001700  EF84  F00B         	goto	u2520
  7102   001704                     u2521:
  7103   001704  EF74  F00B         	goto	l2704
  7104   001708                     u2520:
  7105   001708                     
  7106                           ;DTH11.c: 35:         if ((data[0] + data[1] + data[2] + data[3]) == data[4]) {
  7107   001708  500F               	movf	(DHT11_Read@data+4)^0,w,c
  7108   00170A  6E07               	movwf	??_DHT11_Read^0,c
  7109   00170C  6A08               	clrf	(??_DHT11_Read+1)^0,c
  7110   00170E  500C               	movf	(DHT11_Read@data+1)^0,w,c
  7111   001710  C00B  F009         	movff	DHT11_Read@data,??_DHT11_Read+2
  7112   001714  6A0A               	clrf	(??_DHT11_Read+3)^0,c
  7113   001716  2609               	addwf	(??_DHT11_Read+2)^0,f,c
  7114   001718  0E00               	movlw	0
  7115   00171A  220A               	addwfc	(??_DHT11_Read+3)^0,f,c
  7116   00171C  500D               	movf	(DHT11_Read@data+2)^0,w,c
  7117   00171E  2609               	addwf	(??_DHT11_Read+2)^0,f,c
  7118   001720  0E00               	movlw	0
  7119   001722  220A               	addwfc	(??_DHT11_Read+3)^0,f,c
  7120   001724  500E               	movf	(DHT11_Read@data+3)^0,w,c
  7121   001726  2609               	addwf	(??_DHT11_Read+2)^0,f,c
  7122   001728  0E00               	movlw	0
  7123   00172A  220A               	addwfc	(??_DHT11_Read+3)^0,f,c
  7124   00172C  5007               	movf	??_DHT11_Read^0,w,c
  7125   00172E  1809               	xorwf	(??_DHT11_Read+2)^0,w,c
  7126   001730  E107               	bnz	u2531
  7127   001732  5008               	movf	(??_DHT11_Read+1)^0,w,c
  7128   001734  180A               	xorwf	(??_DHT11_Read+3)^0,w,c
  7129   001736  A4D8               	btfss	status,2,c
  7130   001738  EFA0  F00B         	goto	u2531
  7131   00173C  EFA2  F00B         	goto	u2530
  7132   001740                     u2531:
  7133   001740  EFB1  F00B         	goto	l2718
  7134   001744                     u2530:
  7135   001744                     
  7136                           ;DTH11.c: 36:             *humidity = data[0];
  7137   001744  C003  FFD9         	movff	DHT11_Read@humidity,fsr2l
  7138   001748  C004  FFDA         	movff	DHT11_Read@humidity+1,fsr2h
  7139   00174C  C00B  FFDF         	movff	DHT11_Read@data,indf2
  7140                           
  7141                           ;DTH11.c: 37:             *temperature = data[2];
  7142   001750  C005  FFD9         	movff	DHT11_Read@temperature,fsr2l
  7143   001754  C006  FFDA         	movff	DHT11_Read@temperature+1,fsr2h
  7144   001758  C00D  FFDF         	movff	DHT11_Read@data+2,indf2
  7145   00175C                     
  7146                           ;DTH11.c: 38:             return 1;
  7147   00175C  0E01               	movlw	1
  7148   00175E  EFB2  F00B         	goto	l184
  7149   001762                     l2718:
  7150                           
  7151                           ;DTH11.c: 41:     return 0;
  7152   001762  0E00               	movlw	0
  7153   001764                     l184:
  7154   001764  0012               	return		;funcret
  7155   001766                     __end_of_DHT11_Read:
  7156                           	callstack 0
  7157                           
  7158 ;; *************** function _DHT11_ReadByte *****************
  7159 ;; Defined at:
  7160 ;;		line 4 in file "DTH11.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;		None
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;  i               1    1[COMRAM] unsigned char 
  7165 ;;  data            1    0[COMRAM] unsigned char 
  7166 ;; Return value:  Size  Location     Type
  7167 ;;                  1    wreg      unsigned char 
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7175 ;;      Params:         0       0       0       0       0       0       0       0       0
  7176 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7178 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7179 ;;Total ram usage:        2 bytes
  7180 ;; Hardware stack levels used: 1
  7181 ;; This function calls:
  7182 ;;		Nothing
  7183 ;; This function is called by:
  7184 ;;		_DHT11_Read
  7185 ;; This function uses a non-reentrant model
  7186 ;;
  7187                           
  7188                           	psect	text41
  7189   001F4A                     __ptext41:
  7190                           	callstack 0
  7191   001F4A                     _DHT11_ReadByte:
  7192                           	callstack 29
  7193   001F4A                     
  7194                           ;DTH11.c: 5:     uint8_t data = 0;
  7195   001F4A  6A01               	clrf	DHT11_ReadByte@data^0,c
  7196                           
  7197                           ;DTH11.c: 6:     for (uint8_t i = 0; i < 8; i++) {
  7198   001F4C  6A02               	clrf	DHT11_ReadByte@i^0,c
  7199   001F4E                     l164:
  7200   001F4E  A080               	btfss	128,0,c	;volatile
  7201   001F50  EFAC  F00F         	goto	u2151
  7202   001F54  EFAE  F00F         	goto	u2150
  7203   001F58                     u2151:
  7204   001F58  EFA7  F00F         	goto	l164
  7205   001F5C                     u2150:
  7206   001F5C                     
  7207                           ;DTH11.c: 8:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  7208   001F5C  0E21               	movlw	33
  7209   001F5E                     u2897:
  7210   001F5E  2EE8               	decfsz	wreg,f,c
  7211   001F60  D7FE               	bra	u2897
  7212   001F62  0000               	nop	
  7213   001F64                     
  7214                           ;DTH11.c: 9:         data <<= 1;
  7215   001F64  90D8               	bcf	status,0,c
  7216   001F66  3601               	rlcf	DHT11_ReadByte@data^0,f,c
  7217   001F68                     
  7218                           ;DTH11.c: 10:         if (PORTAbits.RA0) data |= 1;
  7219   001F68  A080               	btfss	128,0,c	;volatile
  7220   001F6A  EFB9  F00F         	goto	u2161
  7221   001F6E  EFBB  F00F         	goto	u2160
  7222   001F72                     u2161:
  7223   001F72  EFBC  F00F         	goto	l168
  7224   001F76                     u2160:
  7225   001F76  8001               	bsf	DHT11_ReadByte@data^0,0,c
  7226   001F78                     l168:
  7227   001F78  B080               	btfsc	128,0,c	;volatile
  7228   001F7A  EFC1  F00F         	goto	u2171
  7229   001F7E  EFC3  F00F         	goto	u2170
  7230   001F82                     u2171:
  7231   001F82  EFBC  F00F         	goto	l168
  7232   001F86                     u2170:
  7233   001F86                     
  7234                           ;DTH11.c: 12:     }
  7235   001F86  2A02               	incf	DHT11_ReadByte@i^0,f,c
  7236   001F88  0E07               	movlw	7
  7237   001F8A  6402               	cpfsgt	DHT11_ReadByte@i^0,c
  7238   001F8C  EFCA  F00F         	goto	u2181
  7239   001F90  EFCC  F00F         	goto	u2180
  7240   001F94                     u2181:
  7241   001F94  EFA7  F00F         	goto	l164
  7242   001F98                     u2180:
  7243   001F98                     
  7244                           ;DTH11.c: 13:     return data;
  7245   001F98  5001               	movf	DHT11_ReadByte@data^0,w,c
  7246   001F9A  0012               	return		;funcret
  7247   001F9C                     __end_of_DHT11_ReadByte:
  7248                           	callstack 0
  7249                           
  7250                           	psect	rparam
  7251   000001                     ___rparam_used  equ	1
  7252   000000                     ___param_bank   equ	0
  7253   000000                     __Lparam        equ	__Lrparam
  7254   000000                     __Hparam        equ	__Hrparam
  7255                           
  7256                           	psect	idloc
  7257                           
  7258                           ;Config register IDLOC0 @ 0x200000
  7259                           ;	unspecified, using default values
  7260   200000                     	org	2097152
  7261   200000  FF                 	db	255
  7262                           
  7263                           ;Config register IDLOC1 @ 0x200001
  7264                           ;	unspecified, using default values
  7265   200001                     	org	2097153
  7266   200001  FF                 	db	255
  7267                           
  7268                           ;Config register IDLOC2 @ 0x200002
  7269                           ;	unspecified, using default values
  7270   200002                     	org	2097154
  7271   200002  FF                 	db	255
  7272                           
  7273                           ;Config register IDLOC3 @ 0x200003
  7274                           ;	unspecified, using default values
  7275   200003                     	org	2097155
  7276   200003  FF                 	db	255
  7277                           
  7278                           ;Config register IDLOC4 @ 0x200004
  7279                           ;	unspecified, using default values
  7280   200004                     	org	2097156
  7281   200004  FF                 	db	255
  7282                           
  7283                           ;Config register IDLOC5 @ 0x200005
  7284                           ;	unspecified, using default values
  7285   200005                     	org	2097157
  7286   200005  FF                 	db	255
  7287                           
  7288                           ;Config register IDLOC6 @ 0x200006
  7289                           ;	unspecified, using default values
  7290   200006                     	org	2097158
  7291   200006  FF                 	db	255
  7292                           
  7293                           ;Config register IDLOC7 @ 0x200007
  7294                           ;	unspecified, using default values
  7295   200007                     	org	2097159
  7296   200007  FF                 	db	255
  7297                           
  7298                           	psect	config
  7299                           
  7300                           ;Config register CONFIG1L @ 0x300000
  7301                           ;	PLL Prescaler Selection bits
  7302                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7303                           ;	System Clock Postscaler Selection bits
  7304                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7305                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7306                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7307   300000                     	org	3145728
  7308   300000  00                 	db	0
  7309                           
  7310                           ;Config register CONFIG1H @ 0x300001
  7311                           ;	Oscillator Selection bits
  7312                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  7313                           ;	Fail-Safe Clock Monitor Enable bit
  7314                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7315                           ;	Internal/External Oscillator Switchover bit
  7316                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7317   300001                     	org	3145729
  7318   300001  09                 	db	9
  7319                           
  7320                           ;Config register CONFIG2L @ 0x300002
  7321                           ;	Power-up Timer Enable bit
  7322                           ;	PWRT = OFF, PWRT disabled
  7323                           ;	Brown-out Reset Enable bits
  7324                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7325                           ;	Brown-out Reset Voltage bits
  7326                           ;	BORV = 3, Minimum setting 2.05V
  7327                           ;	USB Voltage Regulator Enable bit
  7328                           ;	VREGEN = OFF, USB voltage regulator disabled
  7329   300002                     	org	3145730
  7330   300002  1F                 	db	31
  7331                           
  7332                           ;Config register CONFIG2H @ 0x300003
  7333                           ;	Watchdog Timer Enable bit
  7334                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7335                           ;	Watchdog Timer Postscale Select bits
  7336                           ;	WDTPS = 32768, 1:32768
  7337   300003                     	org	3145731
  7338   300003  1E                 	db	30
  7339                           
  7340                           ; Padding undefined space
  7341   300004                     	org	3145732
  7342   300004  FF                 	db	255
  7343                           
  7344                           ;Config register CONFIG3H @ 0x300005
  7345                           ;	CCP2 MUX bit
  7346                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  7347                           ;	PORTB A/D Enable bit
  7348                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7349                           ;	Low-Power Timer 1 Oscillator Enable bit
  7350                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7351                           ;	MCLR Pin Enable bit
  7352                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  7353   300005                     	org	3145733
  7354   300005  01                 	db	1
  7355                           
  7356                           ;Config register CONFIG4L @ 0x300006
  7357                           ;	Stack Full/Underflow Reset Enable bit
  7358                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7359                           ;	Single-Supply ICSP Enable bit
  7360                           ;	LVP = OFF, Single-Supply ICSP disabled
  7361                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7362                           ;	ICPRT = OFF, ICPORT disabled
  7363                           ;	Extended Instruction Set Enable bit
  7364                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7365                           ;	Background Debugger Enable bit
  7366                           ;	DEBUG = 0x1, unprogrammed default
  7367   300006                     	org	3145734
  7368   300006  81                 	db	129
  7369                           
  7370                           ; Padding undefined space
  7371   300007                     	org	3145735
  7372   300007  FF                 	db	255
  7373                           
  7374                           ;Config register CONFIG5L @ 0x300008
  7375                           ;	Code Protection bit
  7376                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  7377                           ;	Code Protection bit
  7378                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  7379                           ;	Code Protection bit
  7380                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  7381                           ;	Code Protection bit
  7382                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  7383   300008                     	org	3145736
  7384   300008  0F                 	db	15
  7385                           
  7386                           ;Config register CONFIG5H @ 0x300009
  7387                           ;	Boot Block Code Protection bit
  7388                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  7389                           ;	Data EEPROM Code Protection bit
  7390                           ;	CPD = OFF, Data EEPROM is not code-protected
  7391   300009                     	org	3145737
  7392   300009  C0                 	db	192
  7393                           
  7394                           ;Config register CONFIG6L @ 0x30000A
  7395                           ;	Write Protection bit
  7396                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  7397                           ;	Write Protection bit
  7398                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  7399                           ;	Write Protection bit
  7400                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  7401                           ;	Write Protection bit
  7402                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  7403   30000A                     	org	3145738
  7404   30000A  0F                 	db	15
  7405                           
  7406                           ;Config register CONFIG6H @ 0x30000B
  7407                           ;	Configuration Register Write Protection bit
  7408                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7409                           ;	Boot Block Write Protection bit
  7410                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  7411                           ;	Data EEPROM Write Protection bit
  7412                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7413   30000B                     	org	3145739
  7414   30000B  E0                 	db	224
  7415                           
  7416                           ;Config register CONFIG7L @ 0x30000C
  7417                           ;	Table Read Protection bit
  7418                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7419                           ;	Table Read Protection bit
  7420                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7421                           ;	Table Read Protection bit
  7422                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7423                           ;	Table Read Protection bit
  7424                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7425   30000C                     	org	3145740
  7426   30000C  0F                 	db	15
  7427                           
  7428                           ;Config register CONFIG7H @ 0x30000D
  7429                           ;	Boot Block Table Read Protection bit
  7430                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  7431   30000D                     	org	3145741
  7432   30000D  40                 	db	64
  7433                           tosu	equ	0xFFF
  7434                           tosh	equ	0xFFE
  7435                           tosl	equ	0xFFD
  7436                           stkptr	equ	0xFFC
  7437                           pclatu	equ	0xFFB
  7438                           pclath	equ	0xFFA
  7439                           pcl	equ	0xFF9
  7440                           tblptru	equ	0xFF8
  7441                           tblptrh	equ	0xFF7
  7442                           tblptrl	equ	0xFF6
  7443                           tablat	equ	0xFF5
  7444                           prodh	equ	0xFF4
  7445                           prodl	equ	0xFF3
  7446                           indf0	equ	0xFEF
  7447                           postinc0	equ	0xFEE
  7448                           postdec0	equ	0xFED
  7449                           preinc0	equ	0xFEC
  7450                           plusw0	equ	0xFEB
  7451                           fsr0h	equ	0xFEA
  7452                           fsr0l	equ	0xFE9
  7453                           wreg	equ	0xFE8
  7454                           indf1	equ	0xFE7
  7455                           postinc1	equ	0xFE6
  7456                           postdec1	equ	0xFE5
  7457                           preinc1	equ	0xFE4
  7458                           plusw1	equ	0xFE3
  7459                           fsr1h	equ	0xFE2
  7460                           fsr1l	equ	0xFE1
  7461                           bsr	equ	0xFE0
  7462                           indf2	equ	0xFDF
  7463                           postinc2	equ	0xFDE
  7464                           postdec2	equ	0xFDD
  7465                           preinc2	equ	0xFDC
  7466                           plusw2	equ	0xFDB
  7467                           fsr2h	equ	0xFDA
  7468                           fsr2l	equ	0xFD9
  7469                           status	equ	0xFD8

Data Sizes:
    Strings     191
    Constant    0
    Data        0
    BSS         59
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     66      72
    BANK0           160    104     136
    BANK1           256    149     170
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DHT11_Read@humidity	PTR unsigned char  size(2) Largest target is 1
		 -> main@hum(BANK1[1]), 

    DHT11_Read@temperature	PTR unsigned char  size(2) Largest target is 1
		 -> main@temp(BANK1[1]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@buffer(BANK1[17]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@buffer(BANK1[17]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    GPS_ParseGPRMC@ew	PTR unsigned char  size(2) Largest target is 2
		 -> main@ew(BANK1[2]), 

    GPS_ParseGPRMC@lat	PTR unsigned char  size(2) Largest target is 8
		 -> main@lat(BANK1[8]), 

    GPS_ParseGPRMC@lon	PTR unsigned char  size(2) Largest target is 9
		 -> main@lon(BANK1[9]), 

    GPS_ParseGPRMC@msg	PTR const unsigned char  size(2) Largest target is 100
		 -> main@nmea(BANK1[100]), 

    GPS_ParseGPRMC@ns	PTR unsigned char  size(2) Largest target is 2
		 -> main@ns(BANK1[2]), 

    GPS_ParseGPRMC@token	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    GPS_ReadSentence@buffer	PTR unsigned char  size(2) Largest target is 100
		 -> main@nmea(BANK1[100]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> main@buffer(BANK1[17]), STR_11(CODE[12]), STR_12(CODE[16]), STR_17(CODE[15]), 
		 -> STR_18(CODE[12]), STR_4(CODE[17]), STR_5(CODE[13]), STR_6(CODE[13]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> main@buffer(BANK1[17]), STR_11(CODE[12]), STR_12(CODE[16]), STR_17(CODE[15]), 
		 -> STR_18(CODE[12]), STR_4(CODE[17]), STR_5(CODE[13]), STR_6(CODE[13]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    RTC_GetDate@date	PTR unsigned char  size(2) Largest target is 1
		 -> main@day(BANK1[1]), 

    RTC_GetDate@month	PTR unsigned char  size(2) Largest target is 1
		 -> main@month(BANK1[1]), 

    RTC_GetDate@year	PTR unsigned char  size(2) Largest target is 1
		 -> main@year(BANK1[1]), 

    RTC_GetTime@hour	PTR unsigned char  size(2) Largest target is 1
		 -> main@h(BANK1[1]), 

    RTC_GetTime@min	PTR unsigned char  size(2) Largest target is 1
		 -> main@m(BANK1[1]), 

    RTC_GetTime@sec	PTR unsigned char  size(2) Largest target is 1
		 -> main@s(BANK1[1]), 

    S911$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> main@buffer(BANK1[17]), 

    S911$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(2) Largest target is 100
		 -> main@nmea(BANK1[100]), STR_2(CODE[2]), STR_3(CODE[2]), NULL(NULL[0]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), main@lat(BANK1[8]), main@lon(BANK1[9]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 100
		 -> main@nmea(BANK1[100]), STR_2(CODE[2]), STR_3(CODE[2]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_10(CODE[10]), STR_15(CODE[9]), STR_16(CODE[9]), STR_7(CODE[17]), 
		 -> STR_8(CODE[21]), STR_9(CODE[11]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> main@buffer(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 9
		 -> main@ew(BANK1[2]), main@lat(BANK1[8]), main@lon(BANK1[9]), main@ns(BANK1[2]), 
		 -> ?_sprintf(COMRAM[2]), STR_19(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 9
		 -> main@ew(BANK1[2]), main@lat(BANK1[8]), main@lon(BANK1[9]), main@ns(BANK1[2]), 
		 -> ?_sprintf(COMRAM[2]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 100
		 -> main@nmea(BANK1[100]), STR_2(CODE[2]), STR_3(CODE[2]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_3(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), STR_14(CODE[7]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), STR_14(CODE[7]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 100
		 -> main@nmea(BANK1[100]), STR_2(CODE[2]), STR_3(CODE[2]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), STR_14(CODE[7]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), main@lat(BANK1[8]), main@lon(BANK1[9]), 

    strncpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), main@lat(BANK1[8]), main@lon(BANK1[9]), 

    strncpy@s	PTR const unsigned char  size(2) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), main@nmea(BANK1[100]), NULL(NULL[0]), 

    strspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_3(CODE[2]), 

    strspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 100
		 -> main@nmea(BANK1[100]), STR_2(CODE[2]), STR_3(CODE[2]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_1(CODE[7]), STR_14(CODE[7]), 

    strtok@p	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strtok@sep	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_2(CODE[2]), STR_3(CODE[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 21
		 -> STR_10(CODE[10]), STR_15(CODE[9]), STR_16(CODE[9]), STR_7(CODE[17]), 
		 -> STR_8(CODE[21]), STR_9(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 21
		 -> STR_10(CODE[10]), STR_15(CODE[9]), STR_16(CODE[9]), STR_7(CODE[17]), 
		 -> STR_8(CODE[21]), STR_9(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 21
		 -> STR_10(CODE[10]), STR_15(CODE[9]), STR_16(CODE[9]), STR_7(CODE[17]), 
		 -> STR_8(CODE[21]), STR_9(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _stoa->_fputc
    _RTC_Init->_I2C_Write
    _RTC_GetTime->_I2C_Read
    _RTC_GetTime->_I2C_Write
    _RTC_GetTime->_bcdToDec
    _RTC_GetDate->_I2C_Read
    _RTC_GetDate->_I2C_Write
    _RTC_GetDate->_bcdToDec
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _GPS_ParseGPRMC->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strchr
    _strstr->_strncmp
    _DHT11_Read->_DHT11_ReadByte

Critical Paths under _main in BANK0

    _main->_GPS_ParseGPRMC

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               151   151      0    9011
                                             64 COMRAM     2     2      0
                                              0 BANK1    149   149      0
                         _DHT11_Read
                           _GPS_Init
                     _GPS_ParseGPRMC
                   _GPS_ReadSentence
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                        _RTC_GetDate
                        _RTC_GetTime
                           _RTC_Init
                            ___awmod
                            _sprintf
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             23    14      9    3372
                                             43 COMRAM    21    12      9
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    3157
                                             39 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12     8      4    3012
                                             28 COMRAM    11     7      4
                              _fputc
                 _read_prec_or_width
                               _stoa
                               _utoa
 ---------------------------------------------------------------------------------
 (4) _utoa                                                 8     5      3    1339
                                             20 COMRAM     8     5      3
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4     763
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2     341
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (5) ___lwmod                                              5     1      4     161
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              7     3      4     164
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (4) _stoa                                                13    10      3     559
                                              8 COMRAM    13    10      3
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                8     5      3     240
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     300
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             0     0      0      29
                           _I2C_Init
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _RTC_GetTime                                          6     0      6     208
                                              2 COMRAM     6     0      6
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                           _bcdToDec
 ---------------------------------------------------------------------------------
 (1) _RTC_GetDate                                          6     0      6     208
                                              2 COMRAM     6     0      6
                           _I2C_Read
                          _I2C_Start
                           _I2C_Stop
                          _I2C_Write
                           _bcdToDec
 ---------------------------------------------------------------------------------
 (2) _bcdToDec                                             2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Write                                            2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Read                                             2     2      0      52
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        9     6      3     330
                                              4 COMRAM     9     6      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     104
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      58
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0      58
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPS_ReadSentence                                    15     9      6     386
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (1) _GPS_ParseGPRMC                                     115   105     10    2034
                                             13 COMRAM    11     1     10
                                              0 BANK0    104   104      0
                            _strncpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               2     0      2     556
                                             11 COMRAM     2     0      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               5     3      2     187
                                              6 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              5     3      2     187
                                              6 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               5     2      3     593
                                              6 COMRAM     5     2      3
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     1      5     182
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               6     2      4      94
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _strncpy                                              8     2      6     150
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _GPS_Init                                             1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_Read                                          14    10      4     368
                                              2 COMRAM    14    10      4
                     _DHT11_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadByte                                       2     2      0      71
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_Read
     _DHT11_ReadByte
   _GPS_Init
   _GPS_ParseGPRMC
     _strncpy
     _strstr
       _strchr
       _strlen
       _strncmp
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _GPS_ReadSentence
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _RTC_GetDate
     _I2C_Read
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _bcdToDec
   _RTC_GetTime
     _I2C_Read
     _I2C_Start
     _I2C_Stop
     _I2C_Write
     _bcdToDec
   _RTC_Init
     _I2C_Init
     _I2C_Start
     _I2C_Stop
     _I2C_Write
   ___awmod
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _fputc
           _putch
         _read_prec_or_width
         _stoa
           _fputc
         _utoa
           ___lwdiv
           ___lwmod
           _pad
             _fputc
             _fputs
               _fputc
   _strstr

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256    149     170     66.4%
BITBANK0           160      0       0      0.0%
BANK0              160    104     136     85.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     66      72     75.8%
BITBIGSFRh          58      0       0      0.0%
BITBIGSFRlh         49      0       0      0.0%
BITBIGSFRlll        32      0       0      0.0%
BITBIGSFRllh        18      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     378      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Fri May 09 08:44:02 2025

         _LCD_String_xy$466 000B                ?_LCD_Command 0001                          _BF 7E38  
                        l32 21F2                          l41 21EE                          l50 2150  
                        l35 2200                          l44 212C                          l53 1FE0  
                        l29 21DC                          l38 21E0                          l55 1FEE  
                        l56 2008                          l80 1E4E                          l65 21CA  
                        l58 2016                          l59 2018                          l68 219C  
                        l77 1D94                 ?_LCD_String 0003                         l110 2168  
                       l111 217A                         l112 217C                         l115 12DA  
                       l124 13C8                         l116 12D6                         l109 216C  
                       l151 113A                         l135 1162                         l119 12F4  
                       l153 1160                         l129 13EC                         l171 1F9A  
                       l164 1F4E                         l180 16E6                         l262 20F6  
                       l175 16CA                         l168 1F78                         l184 1764  
                       l265 1EF6                         l281 1F48                         l178 16D8  
                       l274 1DF2                         l284 21B4                         l268 1EA2  
                       l540 18CC                         l804 1C6C                         l794 1C08  
                       l787 1C00                         l797 1C64                         l974 2054  
                       l992 1A38                         l995 1A76                         l997 1A90  
                       _PEN 7E2A                         _SEN 7E28                         _pad 1A08  
              ___awmod@sign 0006                         wreg 0FE8                 LCD_Char@dat 0002  
                      l1011 127C                        l1004 11D6                        l1030 1968  
                      l1016 12C0                        l1034 1970                        l1026 15D0  
                      l1115 1A92                        l1051 0F2E                        l1124 20C4  
                      l2100 1C1C                        l1117 1B12                        l1109 169E  
                      l2110 1C58                        l2102 1C24                        l1046 0DD4  
                      l1143 1A06                        l1063 1FDA                        l1128 14F4  
                      l2200 191C                        l2112 1C5E                        l2104 1C2C  
                      l2120 1A30                        l1145 1A02                        l2202 193A  
                      l2130 1164                        l2106 1C3A                        l2122 1A44  
                      l2114 1A08                        l1155 1D2C                        l1075 181E  
                      l1083 2090                        l2212 1ACE                        l1156 1D34  
                      l2220 1E62                        l2204 1942                        l2060 1790  
                      l2132 117E                        l2108 1C50                        l2124 1A54  
                      l2116 1A16                        l2300 0E9C                        l1165 1CC8  
                      l2214 1B0A                        l2206 1A92                        l1166 1CD0  
                      l2230 1E78                        l2222 1E64                        l1086 2202  
                      l2062 17AC                        l2054 1766                        l2150 125E  
                      l2142 11F8                        l2134 118A                        l2070 2062  
                      l2126 1A58                        l2118 1A22                        l1096 1B94  
                      l2208 1AC2                        l2400 162C                        l2232 1E8E  
                      l2224 1E66                        l2064 17DE                        l2056 1776  
                      l2160 12A2                        l2144 1208                        l2152 1262  
                      l2136 1196                        l2080 1BB0                        l2072 2070  
                      l2128 1A84                        l2312 0F00                        l2304 0EC2  
                      l2240 0CCC                        l2410 1B14                        l2322 2092  
                      l2402 1654                        l2234 1E90                        l2226 1E68  
                      l2218 1E52                        l2058 1786                        l2146 120C  
                      l2138 119A                        l2090 1BEA                        l2082 1BB8  
                      l2074 2074                        l2170 1518                        l2162 14F6  
                      l2306 0EE4                        l2250 0CEC                        l2242 0CD4  
                      l2420 1B6C                        l2412 1B20                        l2324 209A  
                      l2340 1420                        l2332 13EE                        l2404 1666  
                      l2236 1E92                        l2228 1E6A                        l2500 1DBE  
                      l2156 128E                        l2148 122E                        l2092 1BF2  
                      l2084 1BC0                        l2076 1B96                        l2068 2056  
                      l2180 1570                        l2172 153A                        l2164 14FA  
                      l2308 0EEC                        l2260 0D2E                        l2252 0CF8  
                      l2244 0CE0                        l2316 0F0C                        l2422 1B76  
                      l2414 1B26                        l2326 209C                        l2342 1450  
                      l2334 1408                        l2406 1696                        l2430 1996  
                      l2502 1DC2                        l2158 129E                        l2094 1BF4  
                      l2086 1BCE                        l2078 1B9E                        l2182 1582  
                      l2174 153C                        l2166 150A                        l2270 0D80  
                      l2262 0D42                        l2246 0CE4                        l2238 0CAA  
                      l2510 1FD2                        l2424 1B7A                        l2328 20B8  
                      l2344 146C                        l2360 1CD2                        l2352 1C6E  
                      l2600 13AC                        l2520 2182                        l2192 18CE  
                      l2096 1BFA                        l2088 1BD4                        l2184 1592  
                      l2176 1542                        l2168 1512                        l2280 0DBC  
                      l2272 0D9A                        l2264 0D50                        l2256 0D00  
                      l2248 0CEA                        l2504 1F9C                        l2418 1B56  
                      l2346 147E                        l2338 1414                        l2362 1CDE  
                      l2354 1C7A                        l2450 1A04                        l2442 19CC  
                      l2434 199C                        l2426 1972                        l2610 13C8  
                      l2530 1D36                        l2370 21D0                        l2522 2186  
                      l2194 18D6                        l2098 1C0A                        l2186 15AC  
                      l2178 155E                        l2290 0E2A                        l2282 0DD6  
                      l2274 0DA8                        l2266 0D5A                        l2258 0D1E  
                      l2506 1FA4                        l2460 1F5C                        l2348 14BC  
                      l2364 1CE4                        l2356 1C80                        l2444 19DE  
                      l2436 19AC                        l2428 1982                        l2620 0F30  
                      l2604 13B2                        l2612 13D0                        l2380 1FDE  
                      l2372 21F0                        l2540 1D66                        l2532 1D3A  
                      l2524 218C                        l2196 18F8                        l2188 15BA  
                      l2292 0E54                        l2284 0DF8                        l2268 0D64  
                      l2508 1FB6                        l2470 1F88                        l2462 1F64  
                      l2454 1F4A                        l2710 1708                        l2390 15D2  
                      l2366 1CFA                        l2358 1C96                        l2446 19F4  
                      l2438 19C2                        l2630 0F78                        l2622 0F36  
                      l2614 13D4                        l2382 1FF2                        l2374 21DE  
                      l2550 1DFE                        l2542 1D7A                        l2534 1D40  
                      l2526 2192                        l2518 217E                        l2198 1900  
                      l2294 0E7E                        l2286 0E00                        l2472 1F98  
                      l2464 1F68                        l2712 1744                        l2704 16E8  
                      l2392 15E2                        l2448 19FC                        l2640 0FD4  
                      l2632 0F7C                        l2624 0F58                        l2616 13EA  
                      l2480 1EB8                        l2384 2006                        l2376 2128  
                      l2560 1E4A                        l2552 1E08                        l2544 1D90  
                      l2536 1D4A                        l2368 21CC                        l2528 2198  
                      l2288 0E08                        l2466 1F76                        l2714 175C  
                      l2706 16F6                        l2562 2152                        l2394 15F6  
                      l2650 1034                        l2642 0FEE                        l2634 0F90  
                      l2570 12CC                        l2490 1EE2                        l2482 1EBA  
                      l2730 1F36                        l2722 1EFA                        l2378 213A  
                      l2386 21B8                        l2554 1E0E                        l2546 1DF4  
                      l2538 1D50                        l2298 0E8C                        l2468 1F86  
                      l2708 16F8                        l2564 2154                        l2396 1620  
                      l2660 1094                        l2652 1046                        l2644 1000  
                      l2636 0FB2                        l2628 0F5E                        l2580 1314  
                      l2572 12CE                        l2492 1EE4                        l2484 1EBC  
                      l2476 1EA6                        l2740 20DE                        l2732 1F3C  
                      l2724 1F0A                        l2556 1E22                        l2548 1DF8  
                      l2900 0B8C                        l2718 1762                        l2670 10DA  
                      l2662 10A6                        l2654 1058                        l2646 1012  
                      l2638 0FC4                        l2590 1352                        l2582 131C  
                      l2574 12D0                        l2566 12C2                        l2494 1EE6  
                      l2486 1EBE                        l2478 1EB6                        l2750 21A4  
                      l2742 20E4                        l2734 20C6                        l2726 1F20  
                      l2558 1E36                        l2910 0BD8                        l2902 0BA4  
                      l2830 08C2                        l2680 113C                        l2664 10B6  
                      l2656 1068                        l2648 1022                        l2672 1108  
                      l2584 132C                        l2592 135A                        l2576 12E8  
                      l2568 12CA                        l2488 1ECC                        l2744 20EA  
                      l2736 20C8                        l2496 1D96                        l2728 1F32  
                      l2760 2046                        l2752 201A                        l2912 0BF8  
                      l2904 0BA8                        l2920 0C82                        l2840 08FE  
                      l2832 08CA                        l2690 16A4                        l2682 114C  
                      l2674 1118                        l2666 10C8                        l2658 1082  
                      l2594 136A                        l2586 133E                        l2578 1302  
                      l2746 20F0                        l2738 20D8                        l2498 1D9A  
                      l2770 1838                        l2754 2026                        l2914 0C0A  
                      l2906 0BB8                        l2850 093E                        l2842 0914  
                      l2834 08CE                        l2692 16B2                        l2684 115C  
                      l2676 111A                        l2596 137C                        l2588 1342  
                      l2748 219E                        l2780 186C                        l2772 183C  
                      l2764 1820                        l2756 202E                        l2916 0C40  
                      l2908 0BC8                        l2860 0960                        l2852 0946  
                      l2844 092C                        l2836 08E4                        l2694 16BA  
                      l2678 112A                        l2598 139E                        l2790 18A6  
                      l2782 1874                        l2774 184A                        l2766 1822  
                      l2758 2036                        l2918 0C6C                        l2870 09FA  
                      l2862 0972                        l2854 0952                        l2846 0930  
                      l2838 08E8                        ?_pad 000E                        l2696 16BC  
                      l2688 16A0                        l2784 1882                        l2792 18AC  
                      l2776 1852                        l2768 1830                        l2880 0A72  
                      l2872 0A0C                        l2864 09AA                        l2856 095A  
                      l2848 0932                        l2794 18BC                        l2786 1898  
                      l2778 1864                        l2890 0AF2                        l2882 0A84  
                      l2866 09C6                        l2874 0A28                        l2858 095C  
                      l2796 18C4                        l2788 18A0                        l2892 0AFC  
                      l2884 0AB0                        l2876 0A38                        l2868 09D8  
                      l2894 0B28                        l2878 0A5C                        l2896 0B4A  
                      l2888 0AE0                        l2898 0B86                        STR_1 08B7  
                      STR_2 08BE                        STR_3 08BE                        STR_4 0816  
                      STR_5 0864                        STR_6 0857                        STR_7 0827  
                      STR_8 0801                        STR_9 0889                        u2000 2004  
                      u2001 1FFE                        u2100 1B94                        u2020 2016  
                      u2101 1B90                        u2021 2012                        u2030 15E2  
                      u2110 1982                        u2031 15DE                        u2111 197E  
                      u2015 2006                        u2040 1620                        u2120 1996  
                      u2200 1DE2                        u1400 17AC                        u2041 161C  
                      u2121 1992                        u1401 17A8                        u2050 1666  
                      u2130 19C2                        u2210 1DF2                        u1410 17DE  
                      u2051 1662                        u2131 19BE                        u2211 1DEE  
                      u1411 17DA                        u2060 1686                        u2140 19F4  
                      u2300 137C                        u1420 2090                        u1500 1A30  
                      u2220 1FD2                        u2141 19F0                        u2301 1378  
                      u1421 208C                        u1501 1A2C                        u2221 1FCE  
                      u2150 1F5C                        u2230 217A                        u2070 1696  
                      u2310 139E                        u1430 1BB0                        u1510 1A76  
                      u2151 1F58                        u2231 2176                        u2071 1692  
                      u2311 139A                        u2207 1DD8                        u1431 1BAC  
                      u1511 1A72                        u2160 1F76                        u2080 1B52  
                      u2400 1022                        u2320 13C4                        u2240 12E8  
                      u1600 128A                        u1440 1BCE                        u1520 1A84  
                      _LATD 0F8C                        u2161 1F72                        u2081 1B4E  
                      u2401 101E                        u2321 13C0                        u2241 12E4  
                      u1601 1286                        u1441 1BCA                        u1521 1A80  
                      u2170 1F86                        u2090 1B68                        u2410 1058  
                      u2330 13EA                        u2250 1302                        u1610 12C0  
                      u1530 117E                        u1450 1BEA                        u2171 1F82  
                      u2091 1B64                        u2067 167C                        u2411 1054  
                      u2331 13E6                        u2251 12FE                        u1611 12BC  
                      u1531 117A                        u1451 1BE6                        u2180 1F98  
                      u2500 16D8                        u1700 1AC2                        u2420 1068  
                      u2340 0F58                        u2260 1314                        u1380 1776  
                      u1540 11C6                        u1460 1C1C                        u1620 1570  
                      u2181 1F94                        u2501 16D4                        u1701 1ABE  
                      u2421 1064                        u2341 0F54                        u2261 1310  
                      u1381 1772                        u1461 1C18                        u1621 156C  
                      u2510 16E6                        u1710 1AFA                        u2430 10A6  
                      u2350 0FAA                        u2270 132C                        u2190 1DBA  
                      u1390 1786                        u1550 11D6                        u1470 1C3A  
                      u1630 1582                        u2511 16E2                        u2431 10A2  
                      u2351 0FA4                        u2271 1328                        u1391 1782  
                      u1551 11D2                        u1471 1C36                        u1631 157E  
                      u2520 1708                        u1720 1B0A                        u2440 10B6  
                      u2360 0FAC                        u2280 133E                        u2600 18BC  
                      u1560 11F4                        u1480 1C50                        u1640 1592  
                      u1800 0E7E                        u2521 1704                        u1721 1B06  
                      u2441 10B2                        u2281 133A                        u2601 18B8  
                      u1561 11F0                        u1481 1C4C                        u1641 158E  
                      u1801 0E7A                        u2530 1744                        u2450 112A  
                      u2370 0FC4                        u2290 136A                        u1570 122A  
                      u1490 1A16                        u1650 15AC                        u1810 0E9C  
                      u1730 0CCC                        u2531 1740                        u2451 1126  
                      u2371 0FC0                        u2291 1366                        u1571 1226  
                      u1547 11BC                        u1491 1A12                        u1651 15A8  
                      u1811 0E98                        u1731 0CC8                        u2611 0938  
                      u1900 14DC                        u2460 113A                        u2380 0FD4  
                      u2540 1F0A                        u1580 124E                        u1660 15BA  
                      u1820 0EE4                        u1740 0D2E                        u2700 0BB8  
                      u1717 1AF0                        u2461 1136                        u2381 0FD0  
                      u2197 1DB0                        u2541 1F06                        u1661 15B6  
                      u1821 0EE0                        u1741 0D2A                        u2701 0BB4  
                      u2621 094C                        u1830 20B8                        u1910 1C96  
                      u2470 114C                        u2390 1012                        u2550 1830  
                      u1670 18F8                        u1590 127C                        u1750 0D50  
                      u2710 0BC8                        u2630 0972                        u1831 20B4  
                      u1911 1C92                        u2471 1148                        u2391 100E  
                      u2551 182C                        u1671 18F4                        u1591 1278  
                      u1751 0D4C                        u2711 0BC4                        u2631 096E  
                      u1840 1408                        u1920 1CC8                        u2480 115C  
                      u2560 184A                        u1680 1968                        u1760 0D80  
                      u2720 0BD8                        u2640 0A38                        u1841 1404  
                      u1921 1CC4                        u2481 1158                        u2561 1846  
                      u1681 1964                        u1761 0D7C                        u2721 0BD4  
                      u2641 0A34                        u2490 16CA                        u1690 1AB2  
                      u1850 1440                        u1930 1CFA                        u2570 1864  
                      u1770 0DF8                        u2650 0A5C                        u2491 16C6  
                      u1907 14D2                        u1931 1CF6                        u2571 1860  
                      u1587 1244                        u1771 0DF4                        u2651 0A58  
                      u1860 1450                        u1940 1D2C                        u2580 1882  
                      u1780 0E2A                        u2660 0AF2                        u1861 144C  
                      u1941 1D28                        u2581 187E                        u1781 0E26  
                      u2661 0AEE                        u1870 146C                        u1950 2200  
                      u2590 1898                        u1790 0E54                        u2670 0B28  
                      u1871 1468                        u2807 1E70                        u1951 21FC  
                      u2591 1894                        u1791 0E50                        u2671 0B24  
                      u1880 147E                        u1960 21EE                        u2680 0B4A  
                      u1697 1AA8                        u1881 147A                        u1857 1436  
                      u2817 1E9A                        u1961 21EA                        u2681 0B46  
                      u1890 14BC                        u1970 213A                        u2690 0B86  
                      u1891 14B8                        u2827 20CE                        u1971 2136  
                      u2691 0B82                        u1980 2150                        u2837 21AA  
                      u1981 214C                        u2757 08D8                        u1990 1FEE  
                      u1895 14AC                        u2847 1EC4                        u1991 1FEA  
                      u2767 091E                        u1897 14A2                        u2857 1EEE  
                      u2777 0A16                        u2867 13CA                        u2787 0B96  
                      _RCEN 7E2B                        u2877 16AA                        u2797 0C76  
                      u2887 16B6                        u2897 1F5E                 main@intento 018B  
                      _dbuf 00C8                        _main 08C2                        _prec 0045  
          __end_of_I2C_Init 21DE            __end_of_I2C_Read 201A                        pad@i 0013  
                      pad@p 0010                        fsr0h 0FEA                        fsr1h 0FE2  
                      indf0 0FEF                        fsr2h 0FDA                        fsr0l 0FE9  
                      indf1 0FE7                        indf2 0FDF                        fsr1l 0FE1  
                      fsr2l 0FD9                        _stoa 1164                        _utoa 14F6  
          __end_of_I2C_Stop 21F0                 main@success 0191                        prodh 0FF4  
                      prodl 0FF3                        start 0000            ??_DHT11_ReadByte 0001  
             _LCD_String_xy 1EF8                ___param_bank 0000                       ??_pad 0012  
          __end_of_LCD_Char 1EA4            __end_of_LCD_Init 20F8    __end_of_GPS_ReadSentence 13EE  
                     ?_main 0001                       _ACKEN 7E2C                       _ACKDT 7E2D  
                     STR_10 0894                       STR_11 087D                       STR_12 0838  
                     STR_14 08B7                       STR_15 08A7                       STR_16 089E  
                     STR_17 0848                       STR_18 0871                       STR_19 08B0  
           __end_of___awmod 18CE                       ?_stoa 0009                       ?_utoa 0015  
                     _LATD0 7C60                       _LATD1 7C61             __end_of___lwdiv 1C0A  
          __end_of_GPS_Init 217E             __end_of___lwmod 1C6E                       _RCREG 0FAE  
                     _RCSTA 0FAB                vfpfcnvrt@fmt 001E                       _SPBRG 0FAF  
                     _TRISD 0F95                       _TXSTA 0FAC            ??_GPS_ParseGPRMC 0018  
                     _flags 0048         read_prec_or_width@c 0005         read_prec_or_width@n 0006  
                     _fputc 1766                       _fputs 2056            __end_of_RTC_Init 219E  
                     pad@fp 000E                       _width 0043                       _putch 2202  
                     main@h 018C                       main@m 018D                       main@s 018E  
         __end_of_I2C_Start 2202           __end_of_I2C_Write 2152                       tablat 0FF5  
                     stoa@l 0014                       stoa@p 000E                       stoa@s 000A  
                     stoa@w 0010                       utoa@d 0016                       utoa@i 001B  
                     utoa@p 0018                       utoa@w 0019                       status 0FD8  
           __end_of_sprintf 2056             __end_of_strcspn 1D36             __end_of_strncmp 14F6  
           __end_of_strncpy 1B96              ?_LCD_String_xy 0005             __initialization 20F8  
              __end_of_main 0CAA                __end_of_stoa 12C2                __end_of_utoa 15D2  
                    ??_main 0041                      ??_stoa 000C                      ??_utoa 0018  
         __end_of_LCD_Clear 21B6               __activetblptr 0002  __end_of_read_prec_or_width 1972  
                    ?_fputc 0001                      ?_fputs 0009            __end_of_bcdToDec 21CC  
                    ?_putch 0001            LCD_String_xy@msg 0006            LCD_String_xy@pos 0005  
          LCD_String_xy@row 000A               vfpfcnvrt@done 0027                      _SSPADD 0FC8  
                    _TRISB0 7C98                      _TRISB1 7C99                      _TRISC7 7CA7  
                    _SSPBUF 0FC9                ??_DHT11_Read 0007                vfprintf@cfmt 002B  
                 ??___awmod 0005                   ??___lwdiv 0005                   ??___lwmod 0005  
      read_prec_or_width@ap 0002                      clear_0 20FE                      clear_1 210A  
           ___awmod@divisor 0003                      isa$std 0001             ___awmod@counter 0005  
                    pad@buf 000F                      main@ew 0189                      main@ns 0187  
                    _strchr 1A92                      _strlen 2092                      _strtok 1972  
                    _strspn 1C6E                      _strstr 15D2                      fputc@c 0001  
                    fputs@c 000B                      fputs@i 000C                      fputs@s 0009  
                 ?_I2C_Init 0001                   ?_I2C_Read 0001                   ?_I2C_Stop 0001  
              __mediumconst 0000                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8          __end_of_DHT11_Read 1766                      stoa@cp 0012  
                    stoa@fp 0009                      putch@c 0001            __end_of_vfprintf 1FDC  
                    utoa@fp 0015                   ??_sprintf 0035                   ??_strcspn 0009  
                 ??_strncmp 0006                   ??_strncpy 0007                ?_RTC_GetDate 0003  
              ?_RTC_GetTime 0003                   ?_LCD_Char 0001                  __accesstop 0060  
   __end_of__initialization 211C                   ?_LCD_Init 0001             ??_LCD_String_xy 0008  
             ___rparam_used 0001                   ?_GPS_Init 0001              __pcstackCOMRAM 0001  
             __end_of_fputc 1820               __end_of_fputs 2092               __end_of_putch 2204  
            RTC_GetTime@min 0005              RTC_GetTime@sec 0007                ??_LCD_String 0005  
                 ?_RTC_Init 0001                  ??_I2C_Init 0001                  ??_I2C_Read 0001  
                ??_I2C_Stop 0001                     ??_fputc 0004                     ??_fputs 000B  
                   ??_putch 0001                  __pbssBANK0 00C8                  __pbssBANK1 0195  
                ??_LCD_Char 0001                  ??_LCD_Init 0003          __end_of_LCD_String 1DF4  
                ??_GPS_Init 0001                I2C_Read@data 0002                     _BAUDCON 0FB8  
                 ?_bcdToDec 0001                  ??_RTC_Init 0003           ?_GPS_ReadSentence 0001  
                   ?_strchr 0001                     ?_strlen 0001                     ?_strtok 000C  
                   ?_strspn 0007                     ?_strstr 0007       GPS_ReadSentence@dummy 000B  
        ??_GPS_ReadSentence 0007                     _SSPCON1 0FC6                     _SSPCON2 0FC5  
                   _SSPSTAT 0FC7                   _I2C_Start 21F0                   _I2C_Write 2126  
             LCD_String@msg 0003                     __Hparam 0000                     __Lparam 0000  
                   ___awmod 1820                     ___lwdiv 1B96                     ___lwmod 1C0A  
                 ?_vfprintf 0028                __psmallconst 0800                  ??_bcdToDec 0001  
                   __pcinit 20F8                     __ramtop 0800                     __ptext0 08C2  
                   __ptext1 201A                     __ptext2 1F9C                     __ptext3 0CAA  
                   __ptext4 14F6                     __ptext5 1A08                     __ptext6 2056  
                   __ptext7 1C0A                     __ptext8 1B96                     __ptext9 1164  
     read_prec_or_width@fmt 0001            ___awmod@dividend 0001     GPS_ReadSentence@max_len 0003  
                 _LCD_Clear 219E                     main@day 018F                     main@lat 016D  
                   _sprintf 201A                     main@hum 0192                     main@lon 0164  
                   _strcspn 1CD2                     _strncmp 13EE                     _strncpy 1B14  
      end_of_initialization 211C     GPS_ReadSentence@started 000C                     fputc@fp 0003  
            LCD_Command@cmd 0002               __Lmediumconst 0000                     fputs@fp 000A  
        _read_prec_or_width 18CE                  ?_I2C_Start 0001                  ?_I2C_Write 0001  
         __end_of_vfpfcnvrt 0F30                   _RCSTAbits 0FAB                     postdec2 0FDD  
       ?_read_prec_or_width 0001                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 0022       DHT11_Read@temperature 0005  
                ??_vfprintf 002B                     strchr@c 0003                     strchr@s 0001  
                   strlen@a 0003                     strlen@s 0001             RTC_GetDate@date 0003  
                   strspn@c 0008                     strspn@i 000A                     strtok@p 0047  
                   strtok@s 000C                     strspn@s 0007             RTC_GetDate@year 0007  
                   strstr@h 0007                     strstr@n 0009                   _PORTAbits 0F80  
                 _TRISAbits 0F92                  ?_LCD_Clear 0001        ??_read_prec_or_width 0003  
                main@buffer 0175                  main@estado 0194               ??_LCD_Command 0001  
               vfpfcnvrt@ap 001F                 vfpfcnvrt@cp 0026                 vfpfcnvrt@fp 001D  
        DHT11_Read@humidity 0003              __end_of_strchr 1B14              __end_of_strlen 20C6  
           RTC_GetTime@hour 0003              __end_of_strtok 1A08              __end_of_strspn 1CD2  
            __end_of_strstr 16A0         start_initialization 20F8          _GPS_ParseGPRMC$237 00C4  
               __end_of_pad 1A92          DHT11_ReadByte@data 0001         GPS_ParseGPRMC@field 00C5  
       GPS_ParseGPRMC@token 00C7                 ??_I2C_Start 0001                 ??_I2C_Write 0001  
     __end_of_LCD_String_xy 1F4A                 vfprintf@fmt 0029                 bcdToDec@val 0002  
                  ??_strchr 0005                    ??_strlen 0003                    ??_strtok 000E  
                  ??_strspn 0009                    ??_strstr 000A         __end_of_LCD_Command 1EF8  
               __pbssCOMRAM 0043               __pcstackBANK0 0060               __pcstackBANK1 0100  
               ??_LCD_Clear 0003            ___lwdiv@dividend 0001                 I2C_Read@ack 0001  
                  ?___awmod 0001                    ?___lwdiv 0001                    ?___lwmod 0001  
  GPS_ParseGPRMC@data_valid 00C6              _DHT11_ReadByte 1F4A                 __smallconst 0800  
                  _I2C_Init 21CC                    _I2C_Read 1FDC                    _I2C_Stop 21DE  
          ___lwdiv@quotient 0005       LCD_String_xy@location 000D                    ?_sprintf 002C  
                  ?_strcspn 0007                    ?_strncmp 0001                    ?_strncpy 0001  
         GPS_ReadSentence@c 000F           GPS_ReadSentence@i 000D           GPS_ReadSentence@t 0009  
GPS_ReadSentence@timeout_ms 0005      GPS_ReadSentence@buffer 0001                    _LCD_Char 1E50  
                  _LCD_Init 20C6              _GPS_ParseGPRMC 0F30                    _GPS_Init 2152  
                  _PIR1bits 0F9E                 DHT11_Read@i 0010                   main@F3761 01A6  
                 main@F3755 019E                   main@F3757 01A8                   main@F3759 0195  
    __end_of_DHT11_ReadByte 1F9C                 _LCD_Command 1EA4                   _vfpfcnvrt 0CAA  
                  _RTC_Init 217E                   main@month 0190               ??_RTC_GetDate 0009  
             ??_RTC_GetTime 0009      __end_of_GPS_ParseGPRMC 1164                  _DHT11_Read 16A0  
                  __Hrparam 0000                  vfprintf@ap 002A                    __Lrparam 0000  
                vfprintf@fp 0028               I2C_Write@data 0002             ?_DHT11_ReadByte 0001  
                ?_vfpfcnvrt 001D                    _bcdToDec 21B6             DHT11_ReadByte@i 0002  
                sprintf@fmt 002E             ___lwdiv@divisor 0003             ___lwdiv@counter 0007  
                  __ptext10 1766                    __ptext11 2202                    __ptext20 21DE  
                  __ptext12 18CE                    __ptext21 21F0                    __ptext13 1820  
                  __ptext30 0F30                    __ptext22 1FDC                    __ptext14 217E  
                  __ptext31 1972                    __ptext23 1EF8                    __ptext15 21CC  
                  __ptext40 16A0                    __ptext32 1C6E                    __ptext24 1D96  
                  __ptext16 1D36                    __ptext41 1F4A                    __ptext33 1CD2  
                  __ptext25 1E50                    __ptext17 1DF4                    __ptext34 15D2  
                  __ptext26 20C6                    __ptext18 21B6                    __ptext35 13EE  
                  __ptext27 219E                    __ptext19 2126                    __ptext36 2092  
                  __ptext28 1EA4                    __ptext37 1A92                    __ptext29 12C2  
                  __ptext38 1B14                    __ptext39 2152            _GPS_ReadSentence 12C2  
           ?_GPS_ParseGPRMC 000E         __end_of_RTC_GetDate 1E50         __end_of_RTC_GetTime 1D96  
                  isa$xinst 0000                    _vfprintf 1F9C                    main@nmea 0100  
                  main@temp 0193                    main@year 0186                  _LCD_String 1D96  
         GPS_ParseGPRMC@buf 0060           GPS_ParseGPRMC@lat 0010           GPS_ParseGPRMC@lon 0014  
         GPS_ParseGPRMC@msg 000E              DHT11_Read@data 000B                   sprintf@ap 0035  
          ___lwmod@dividend 0001                 ?_DHT11_Read 0003                   strncpy@cp 0007  
                 strtok@sep 000D                 ??_vfpfcnvrt 0021            GPS_ParseGPRMC@ew 0016  
          GPS_ParseGPRMC@ns 0012                    sprintf@f 0036                    sprintf@s 002C  
           ___lwmod@divisor 0003             ___lwmod@counter 0005                    strcspn@c 0008  
                  strcspn@i 000A                    strcspn@s 0007                    strncmp@l 0001  
                  strncmp@n 0004                    strncmp@r 0003                    strncpy@d 0001  
                  strncpy@n 0005                    strncpy@s 0003               GPS_Init@dummy 0001  
          RTC_GetDate@month 0005                    strstr@nl 000A                 _RTC_GetDate 1DF4  
               _RTC_GetTime 1D36  
