

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr 30 16:47:13 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=2
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=2
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    37   000000                     
    38                           ; Generated 05/12/2024 GMT
    39                           ; 
    40                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72   000FE0                     bsr             equ	4064
    73   000FE9                     fsr0            equ	4073
    74   000FEA                     fsr0h           equ	4074
    75   000FE9                     fsr0l           equ	4073
    76   000FE1                     fsr1            equ	4065
    77   000FE2                     fsr1h           equ	4066
    78   000FE1                     fsr1l           equ	4065
    79   000FD9                     fsr2            equ	4057
    80   000FDA                     fsr2h           equ	4058
    81   000FD9                     fsr2l           equ	4057
    82   000FEF                     indf0           equ	4079
    83   000FE7                     indf1           equ	4071
    84   000FDF                     indf2           equ	4063
    85   000FF2                     intcon          equ	4082
    86   000000                     nvmcon          equ	0
    87   000FF9                     pcl             equ	4089
    88   000FFA                     pclath          equ	4090
    89   000FFB                     pclatu          equ	4091
    90   000FEB                     plusw0          equ	4075
    91   000FE3                     plusw1          equ	4067
    92   000FDB                     plusw2          equ	4059
    93   000FED                     postdec0        equ	4077
    94   000FE5                     postdec1        equ	4069
    95   000FDD                     postdec2        equ	4061
    96   000FEE                     postinc0        equ	4078
    97   000FE6                     postinc1        equ	4070
    98   000FDE                     postinc2        equ	4062
    99   000FEC                     preinc0         equ	4076
   100   000FE4                     preinc1         equ	4068
   101   000FDC                     preinc2         equ	4060
   102   000FF3                     prod            equ	4083
   103   000FF4                     prodh           equ	4084
   104   000FF3                     prodl           equ	4083
   105   000FD8                     status          equ	4056
   106   000FF5                     tablat          equ	4085
   107   000FF6                     tblptr          equ	4086
   108   000FF7                     tblptrh         equ	4087
   109   000FF6                     tblptrl         equ	4086
   110   000FF8                     tblptru         equ	4088
   111   000FFD                     tosl            equ	4093
   112   000FE8                     wreg            equ	4072
   113   000F62                     SPPDATA         equ	3938	;# 
   114   000F63                     SPPCFG          equ	3939	;# 
   115   000F64                     SPPEPS          equ	3940	;# 
   116   000F65                     SPPCON          equ	3941	;# 
   117   000F66                     UFRM            equ	3942	;# 
   118   000F66                     UFRML           equ	3942	;# 
   119   000F67                     UFRMH           equ	3943	;# 
   120   000F68                     UIR             equ	3944	;# 
   121   000F69                     UIE             equ	3945	;# 
   122   000F6A                     UEIR            equ	3946	;# 
   123   000F6B                     UEIE            equ	3947	;# 
   124   000F6C                     USTAT           equ	3948	;# 
   125   000F6D                     UCON            equ	3949	;# 
   126   000F6E                     UADDR           equ	3950	;# 
   127   000F6F                     UCFG            equ	3951	;# 
   128   000F70                     UEP0            equ	3952	;# 
   129   000F71                     UEP1            equ	3953	;# 
   130   000F72                     UEP2            equ	3954	;# 
   131   000F73                     UEP3            equ	3955	;# 
   132   000F74                     UEP4            equ	3956	;# 
   133   000F75                     UEP5            equ	3957	;# 
   134   000F76                     UEP6            equ	3958	;# 
   135   000F77                     UEP7            equ	3959	;# 
   136   000F78                     UEP8            equ	3960	;# 
   137   000F79                     UEP9            equ	3961	;# 
   138   000F7A                     UEP10           equ	3962	;# 
   139   000F7B                     UEP11           equ	3963	;# 
   140   000F7C                     UEP12           equ	3964	;# 
   141   000F7D                     UEP13           equ	3965	;# 
   142   000F7E                     UEP14           equ	3966	;# 
   143   000F7F                     UEP15           equ	3967	;# 
   144   000F80                     PORTA           equ	3968	;# 
   145   000F81                     PORTB           equ	3969	;# 
   146   000F82                     PORTC           equ	3970	;# 
   147   000F83                     PORTD           equ	3971	;# 
   148   000F84                     PORTE           equ	3972	;# 
   149   000F89                     LATA            equ	3977	;# 
   150   000F8A                     LATB            equ	3978	;# 
   151   000F8B                     LATC            equ	3979	;# 
   152   000F8C                     LATD            equ	3980	;# 
   153   000F8D                     LATE            equ	3981	;# 
   154   000F92                     TRISA           equ	3986	;# 
   155   000F92                     DDRA            equ	3986	;# 
   156   000F93                     TRISB           equ	3987	;# 
   157   000F93                     DDRB            equ	3987	;# 
   158   000F94                     TRISC           equ	3988	;# 
   159   000F94                     DDRC            equ	3988	;# 
   160   000F95                     TRISD           equ	3989	;# 
   161   000F95                     DDRD            equ	3989	;# 
   162   000F96                     TRISE           equ	3990	;# 
   163   000F96                     DDRE            equ	3990	;# 
   164   000F9B                     OSCTUNE         equ	3995	;# 
   165   000F9D                     PIE1            equ	3997	;# 
   166   000F9E                     PIR1            equ	3998	;# 
   167   000F9F                     IPR1            equ	3999	;# 
   168   000FA0                     PIE2            equ	4000	;# 
   169   000FA1                     PIR2            equ	4001	;# 
   170   000FA2                     IPR2            equ	4002	;# 
   171   000FA6                     EECON1          equ	4006	;# 
   172   000FA7                     EECON2          equ	4007	;# 
   173   000FA8                     EEDATA          equ	4008	;# 
   174   000FA9                     EEADR           equ	4009	;# 
   175   000FAB                     RCSTA           equ	4011	;# 
   176   000FAB                     RCSTA1          equ	4011	;# 
   177   000FAC                     TXSTA           equ	4012	;# 
   178   000FAC                     TXSTA1          equ	4012	;# 
   179   000FAD                     TXREG           equ	4013	;# 
   180   000FAD                     TXREG1          equ	4013	;# 
   181   000FAE                     RCREG           equ	4014	;# 
   182   000FAE                     RCREG1          equ	4014	;# 
   183   000FAF                     SPBRG           equ	4015	;# 
   184   000FAF                     SPBRG1          equ	4015	;# 
   185   000FB0                     SPBRGH          equ	4016	;# 
   186   000FB1                     T3CON           equ	4017	;# 
   187   000FB2                     TMR3            equ	4018	;# 
   188   000FB2                     TMR3L           equ	4018	;# 
   189   000FB3                     TMR3H           equ	4019	;# 
   190   000FB4                     CMCON           equ	4020	;# 
   191   000FB5                     CVRCON          equ	4021	;# 
   192   000FB6                     ECCP1AS         equ	4022	;# 
   193   000FB6                     CCP1AS          equ	4022	;# 
   194   000FB7                     ECCP1DEL        equ	4023	;# 
   195   000FB7                     CCP1DEL         equ	4023	;# 
   196   000FB8                     BAUDCON         equ	4024	;# 
   197   000FB8                     BAUDCTL         equ	4024	;# 
   198   000FBA                     CCP2CON         equ	4026	;# 
   199   000FBB                     CCPR2           equ	4027	;# 
   200   000FBB                     CCPR2L          equ	4027	;# 
   201   000FBC                     CCPR2H          equ	4028	;# 
   202   000FBD                     CCP1CON         equ	4029	;# 
   203   000FBD                     ECCP1CON        equ	4029	;# 
   204   000FBE                     CCPR1           equ	4030	;# 
   205   000FBE                     CCPR1L          equ	4030	;# 
   206   000FBF                     CCPR1H          equ	4031	;# 
   207   000FC0                     ADCON2          equ	4032	;# 
   208   000FC1                     ADCON1          equ	4033	;# 
   209   000FC2                     ADCON0          equ	4034	;# 
   210   000FC3                     ADRES           equ	4035	;# 
   211   000FC3                     ADRESL          equ	4035	;# 
   212   000FC4                     ADRESH          equ	4036	;# 
   213   000FC5                     SSPCON2         equ	4037	;# 
   214   000FC6                     SSPCON1         equ	4038	;# 
   215   000FC7                     SSPSTAT         equ	4039	;# 
   216   000FC8                     SSPADD          equ	4040	;# 
   217   000FC9                     SSPBUF          equ	4041	;# 
   218   000FCA                     T2CON           equ	4042	;# 
   219   000FCB                     PR2             equ	4043	;# 
   220   000FCB                     MEMCON          equ	4043	;# 
   221   000FCC                     TMR2            equ	4044	;# 
   222   000FCD                     T1CON           equ	4045	;# 
   223   000FCE                     TMR1            equ	4046	;# 
   224   000FCE                     TMR1L           equ	4046	;# 
   225   000FCF                     TMR1H           equ	4047	;# 
   226   000FD0                     RCON            equ	4048	;# 
   227   000FD1                     WDTCON          equ	4049	;# 
   228   000FD2                     HLVDCON         equ	4050	;# 
   229   000FD2                     LVDCON          equ	4050	;# 
   230   000FD3                     OSCCON          equ	4051	;# 
   231   000FD5                     T0CON           equ	4053	;# 
   232   000FD6                     TMR0            equ	4054	;# 
   233   000FD6                     TMR0L           equ	4054	;# 
   234   000FD7                     TMR0H           equ	4055	;# 
   235   000FD8                     STATUS          equ	4056	;# 
   236   000FD9                     FSR2            equ	4057	;# 
   237   000FD9                     FSR2L           equ	4057	;# 
   238   000FDA                     FSR2H           equ	4058	;# 
   239   000FDB                     PLUSW2          equ	4059	;# 
   240   000FDC                     PREINC2         equ	4060	;# 
   241   000FDD                     POSTDEC2        equ	4061	;# 
   242   000FDE                     POSTINC2        equ	4062	;# 
   243   000FDF                     INDF2           equ	4063	;# 
   244   000FE0                     BSR             equ	4064	;# 
   245   000FE1                     FSR1            equ	4065	;# 
   246   000FE1                     FSR1L           equ	4065	;# 
   247   000FE2                     FSR1H           equ	4066	;# 
   248   000FE3                     PLUSW1          equ	4067	;# 
   249   000FE4                     PREINC1         equ	4068	;# 
   250   000FE5                     POSTDEC1        equ	4069	;# 
   251   000FE6                     POSTINC1        equ	4070	;# 
   252   000FE7                     INDF1           equ	4071	;# 
   253   000FE8                     WREG            equ	4072	;# 
   254   000FE9                     FSR0            equ	4073	;# 
   255   000FE9                     FSR0L           equ	4073	;# 
   256   000FEA                     FSR0H           equ	4074	;# 
   257   000FEB                     PLUSW0          equ	4075	;# 
   258   000FEC                     PREINC0         equ	4076	;# 
   259   000FED                     POSTDEC0        equ	4077	;# 
   260   000FEE                     POSTINC0        equ	4078	;# 
   261   000FEF                     INDF0           equ	4079	;# 
   262   000FF0                     INTCON3         equ	4080	;# 
   263   000FF1                     INTCON2         equ	4081	;# 
   264   000FF2                     INTCON          equ	4082	;# 
   265   000FF3                     PROD            equ	4083	;# 
   266   000FF3                     PRODL           equ	4083	;# 
   267   000FF4                     PRODH           equ	4084	;# 
   268   000FF5                     TABLAT          equ	4085	;# 
   269   000FF6                     TBLPTR          equ	4086	;# 
   270   000FF6                     TBLPTRL         equ	4086	;# 
   271   000FF7                     TBLPTRH         equ	4087	;# 
   272   000FF8                     TBLPTRU         equ	4088	;# 
   273   000FF9                     PCLAT           equ	4089	;# 
   274   000FF9                     PC              equ	4089	;# 
   275   000FF9                     PCL             equ	4089	;# 
   276   000FFA                     PCLATH          equ	4090	;# 
   277   000FFB                     PCLATU          equ	4091	;# 
   278   000FFC                     STKPTR          equ	4092	;# 
   279   000FFD                     TOS             equ	4093	;# 
   280   000FFD                     TOSL            equ	4093	;# 
   281   000FFE                     TOSH            equ	4094	;# 
   282   000FFF                     TOSU            equ	4095	;# 
   283   000F62                     SPPDATA         equ	3938	;# 
   284   000F63                     SPPCFG          equ	3939	;# 
   285   000F64                     SPPEPS          equ	3940	;# 
   286   000F65                     SPPCON          equ	3941	;# 
   287   000F66                     UFRM            equ	3942	;# 
   288   000F66                     UFRML           equ	3942	;# 
   289   000F67                     UFRMH           equ	3943	;# 
   290   000F68                     UIR             equ	3944	;# 
   291   000F69                     UIE             equ	3945	;# 
   292   000F6A                     UEIR            equ	3946	;# 
   293   000F6B                     UEIE            equ	3947	;# 
   294   000F6C                     USTAT           equ	3948	;# 
   295   000F6D                     UCON            equ	3949	;# 
   296   000F6E                     UADDR           equ	3950	;# 
   297   000F6F                     UCFG            equ	3951	;# 
   298   000F70                     UEP0            equ	3952	;# 
   299   000F71                     UEP1            equ	3953	;# 
   300   000F72                     UEP2            equ	3954	;# 
   301   000F73                     UEP3            equ	3955	;# 
   302   000F74                     UEP4            equ	3956	;# 
   303   000F75                     UEP5            equ	3957	;# 
   304   000F76                     UEP6            equ	3958	;# 
   305   000F77                     UEP7            equ	3959	;# 
   306   000F78                     UEP8            equ	3960	;# 
   307   000F79                     UEP9            equ	3961	;# 
   308   000F7A                     UEP10           equ	3962	;# 
   309   000F7B                     UEP11           equ	3963	;# 
   310   000F7C                     UEP12           equ	3964	;# 
   311   000F7D                     UEP13           equ	3965	;# 
   312   000F7E                     UEP14           equ	3966	;# 
   313   000F7F                     UEP15           equ	3967	;# 
   314   000F80                     PORTA           equ	3968	;# 
   315   000F81                     PORTB           equ	3969	;# 
   316   000F82                     PORTC           equ	3970	;# 
   317   000F83                     PORTD           equ	3971	;# 
   318   000F84                     PORTE           equ	3972	;# 
   319   000F89                     LATA            equ	3977	;# 
   320   000F8A                     LATB            equ	3978	;# 
   321   000F8B                     LATC            equ	3979	;# 
   322   000F8C                     LATD            equ	3980	;# 
   323   000F8D                     LATE            equ	3981	;# 
   324   000F92                     TRISA           equ	3986	;# 
   325   000F92                     DDRA            equ	3986	;# 
   326   000F93                     TRISB           equ	3987	;# 
   327   000F93                     DDRB            equ	3987	;# 
   328   000F94                     TRISC           equ	3988	;# 
   329   000F94                     DDRC            equ	3988	;# 
   330   000F95                     TRISD           equ	3989	;# 
   331   000F95                     DDRD            equ	3989	;# 
   332   000F96                     TRISE           equ	3990	;# 
   333   000F96                     DDRE            equ	3990	;# 
   334   000F9B                     OSCTUNE         equ	3995	;# 
   335   000F9D                     PIE1            equ	3997	;# 
   336   000F9E                     PIR1            equ	3998	;# 
   337   000F9F                     IPR1            equ	3999	;# 
   338   000FA0                     PIE2            equ	4000	;# 
   339   000FA1                     PIR2            equ	4001	;# 
   340   000FA2                     IPR2            equ	4002	;# 
   341   000FA6                     EECON1          equ	4006	;# 
   342   000FA7                     EECON2          equ	4007	;# 
   343   000FA8                     EEDATA          equ	4008	;# 
   344   000FA9                     EEADR           equ	4009	;# 
   345   000FAB                     RCSTA           equ	4011	;# 
   346   000FAB                     RCSTA1          equ	4011	;# 
   347   000FAC                     TXSTA           equ	4012	;# 
   348   000FAC                     TXSTA1          equ	4012	;# 
   349   000FAD                     TXREG           equ	4013	;# 
   350   000FAD                     TXREG1          equ	4013	;# 
   351   000FAE                     RCREG           equ	4014	;# 
   352   000FAE                     RCREG1          equ	4014	;# 
   353   000FAF                     SPBRG           equ	4015	;# 
   354   000FAF                     SPBRG1          equ	4015	;# 
   355   000FB0                     SPBRGH          equ	4016	;# 
   356   000FB1                     T3CON           equ	4017	;# 
   357   000FB2                     TMR3            equ	4018	;# 
   358   000FB2                     TMR3L           equ	4018	;# 
   359   000FB3                     TMR3H           equ	4019	;# 
   360   000FB4                     CMCON           equ	4020	;# 
   361   000FB5                     CVRCON          equ	4021	;# 
   362   000FB6                     ECCP1AS         equ	4022	;# 
   363   000FB6                     CCP1AS          equ	4022	;# 
   364   000FB7                     ECCP1DEL        equ	4023	;# 
   365   000FB7                     CCP1DEL         equ	4023	;# 
   366   000FB8                     BAUDCON         equ	4024	;# 
   367   000FB8                     BAUDCTL         equ	4024	;# 
   368   000FBA                     CCP2CON         equ	4026	;# 
   369   000FBB                     CCPR2           equ	4027	;# 
   370   000FBB                     CCPR2L          equ	4027	;# 
   371   000FBC                     CCPR2H          equ	4028	;# 
   372   000FBD                     CCP1CON         equ	4029	;# 
   373   000FBD                     ECCP1CON        equ	4029	;# 
   374   000FBE                     CCPR1           equ	4030	;# 
   375   000FBE                     CCPR1L          equ	4030	;# 
   376   000FBF                     CCPR1H          equ	4031	;# 
   377   000FC0                     ADCON2          equ	4032	;# 
   378   000FC1                     ADCON1          equ	4033	;# 
   379   000FC2                     ADCON0          equ	4034	;# 
   380   000FC3                     ADRES           equ	4035	;# 
   381   000FC3                     ADRESL          equ	4035	;# 
   382   000FC4                     ADRESH          equ	4036	;# 
   383   000FC5                     SSPCON2         equ	4037	;# 
   384   000FC6                     SSPCON1         equ	4038	;# 
   385   000FC7                     SSPSTAT         equ	4039	;# 
   386   000FC8                     SSPADD          equ	4040	;# 
   387   000FC9                     SSPBUF          equ	4041	;# 
   388   000FCA                     T2CON           equ	4042	;# 
   389   000FCB                     PR2             equ	4043	;# 
   390   000FCB                     MEMCON          equ	4043	;# 
   391   000FCC                     TMR2            equ	4044	;# 
   392   000FCD                     T1CON           equ	4045	;# 
   393   000FCE                     TMR1            equ	4046	;# 
   394   000FCE                     TMR1L           equ	4046	;# 
   395   000FCF                     TMR1H           equ	4047	;# 
   396   000FD0                     RCON            equ	4048	;# 
   397   000FD1                     WDTCON          equ	4049	;# 
   398   000FD2                     HLVDCON         equ	4050	;# 
   399   000FD2                     LVDCON          equ	4050	;# 
   400   000FD3                     OSCCON          equ	4051	;# 
   401   000FD5                     T0CON           equ	4053	;# 
   402   000FD6                     TMR0            equ	4054	;# 
   403   000FD6                     TMR0L           equ	4054	;# 
   404   000FD7                     TMR0H           equ	4055	;# 
   405   000FD8                     STATUS          equ	4056	;# 
   406   000FD9                     FSR2            equ	4057	;# 
   407   000FD9                     FSR2L           equ	4057	;# 
   408   000FDA                     FSR2H           equ	4058	;# 
   409   000FDB                     PLUSW2          equ	4059	;# 
   410   000FDC                     PREINC2         equ	4060	;# 
   411   000FDD                     POSTDEC2        equ	4061	;# 
   412   000FDE                     POSTINC2        equ	4062	;# 
   413   000FDF                     INDF2           equ	4063	;# 
   414   000FE0                     BSR             equ	4064	;# 
   415   000FE1                     FSR1            equ	4065	;# 
   416   000FE1                     FSR1L           equ	4065	;# 
   417   000FE2                     FSR1H           equ	4066	;# 
   418   000FE3                     PLUSW1          equ	4067	;# 
   419   000FE4                     PREINC1         equ	4068	;# 
   420   000FE5                     POSTDEC1        equ	4069	;# 
   421   000FE6                     POSTINC1        equ	4070	;# 
   422   000FE7                     INDF1           equ	4071	;# 
   423   000FE8                     WREG            equ	4072	;# 
   424   000FE9                     FSR0            equ	4073	;# 
   425   000FE9                     FSR0L           equ	4073	;# 
   426   000FEA                     FSR0H           equ	4074	;# 
   427   000FEB                     PLUSW0          equ	4075	;# 
   428   000FEC                     PREINC0         equ	4076	;# 
   429   000FED                     POSTDEC0        equ	4077	;# 
   430   000FEE                     POSTINC0        equ	4078	;# 
   431   000FEF                     INDF0           equ	4079	;# 
   432   000FF0                     INTCON3         equ	4080	;# 
   433   000FF1                     INTCON2         equ	4081	;# 
   434   000FF2                     INTCON          equ	4082	;# 
   435   000FF3                     PROD            equ	4083	;# 
   436   000FF3                     PRODL           equ	4083	;# 
   437   000FF4                     PRODH           equ	4084	;# 
   438   000FF5                     TABLAT          equ	4085	;# 
   439   000FF6                     TBLPTR          equ	4086	;# 
   440   000FF6                     TBLPTRL         equ	4086	;# 
   441   000FF7                     TBLPTRH         equ	4087	;# 
   442   000FF8                     TBLPTRU         equ	4088	;# 
   443   000FF9                     PCLAT           equ	4089	;# 
   444   000FF9                     PC              equ	4089	;# 
   445   000FF9                     PCL             equ	4089	;# 
   446   000FFA                     PCLATH          equ	4090	;# 
   447   000FFB                     PCLATU          equ	4091	;# 
   448   000FFC                     STKPTR          equ	4092	;# 
   449   000FFD                     TOS             equ	4093	;# 
   450   000FFD                     TOSL            equ	4093	;# 
   451   000FFE                     TOSH            equ	4094	;# 
   452   000FFF                     TOSU            equ	4095	;# 
   453   000F62                     SPPDATA         equ	3938	;# 
   454   000F63                     SPPCFG          equ	3939	;# 
   455   000F64                     SPPEPS          equ	3940	;# 
   456   000F65                     SPPCON          equ	3941	;# 
   457   000F66                     UFRM            equ	3942	;# 
   458   000F66                     UFRML           equ	3942	;# 
   459   000F67                     UFRMH           equ	3943	;# 
   460   000F68                     UIR             equ	3944	;# 
   461   000F69                     UIE             equ	3945	;# 
   462   000F6A                     UEIR            equ	3946	;# 
   463   000F6B                     UEIE            equ	3947	;# 
   464   000F6C                     USTAT           equ	3948	;# 
   465   000F6D                     UCON            equ	3949	;# 
   466   000F6E                     UADDR           equ	3950	;# 
   467   000F6F                     UCFG            equ	3951	;# 
   468   000F70                     UEP0            equ	3952	;# 
   469   000F71                     UEP1            equ	3953	;# 
   470   000F72                     UEP2            equ	3954	;# 
   471   000F73                     UEP3            equ	3955	;# 
   472   000F74                     UEP4            equ	3956	;# 
   473   000F75                     UEP5            equ	3957	;# 
   474   000F76                     UEP6            equ	3958	;# 
   475   000F77                     UEP7            equ	3959	;# 
   476   000F78                     UEP8            equ	3960	;# 
   477   000F79                     UEP9            equ	3961	;# 
   478   000F7A                     UEP10           equ	3962	;# 
   479   000F7B                     UEP11           equ	3963	;# 
   480   000F7C                     UEP12           equ	3964	;# 
   481   000F7D                     UEP13           equ	3965	;# 
   482   000F7E                     UEP14           equ	3966	;# 
   483   000F7F                     UEP15           equ	3967	;# 
   484   000F80                     PORTA           equ	3968	;# 
   485   000F81                     PORTB           equ	3969	;# 
   486   000F82                     PORTC           equ	3970	;# 
   487   000F83                     PORTD           equ	3971	;# 
   488   000F84                     PORTE           equ	3972	;# 
   489   000F89                     LATA            equ	3977	;# 
   490   000F8A                     LATB            equ	3978	;# 
   491   000F8B                     LATC            equ	3979	;# 
   492   000F8C                     LATD            equ	3980	;# 
   493   000F8D                     LATE            equ	3981	;# 
   494   000F92                     TRISA           equ	3986	;# 
   495   000F92                     DDRA            equ	3986	;# 
   496   000F93                     TRISB           equ	3987	;# 
   497   000F93                     DDRB            equ	3987	;# 
   498   000F94                     TRISC           equ	3988	;# 
   499   000F94                     DDRC            equ	3988	;# 
   500   000F95                     TRISD           equ	3989	;# 
   501   000F95                     DDRD            equ	3989	;# 
   502   000F96                     TRISE           equ	3990	;# 
   503   000F96                     DDRE            equ	3990	;# 
   504   000F9B                     OSCTUNE         equ	3995	;# 
   505   000F9D                     PIE1            equ	3997	;# 
   506   000F9E                     PIR1            equ	3998	;# 
   507   000F9F                     IPR1            equ	3999	;# 
   508   000FA0                     PIE2            equ	4000	;# 
   509   000FA1                     PIR2            equ	4001	;# 
   510   000FA2                     IPR2            equ	4002	;# 
   511   000FA6                     EECON1          equ	4006	;# 
   512   000FA7                     EECON2          equ	4007	;# 
   513   000FA8                     EEDATA          equ	4008	;# 
   514   000FA9                     EEADR           equ	4009	;# 
   515   000FAB                     RCSTA           equ	4011	;# 
   516   000FAB                     RCSTA1          equ	4011	;# 
   517   000FAC                     TXSTA           equ	4012	;# 
   518   000FAC                     TXSTA1          equ	4012	;# 
   519   000FAD                     TXREG           equ	4013	;# 
   520   000FAD                     TXREG1          equ	4013	;# 
   521   000FAE                     RCREG           equ	4014	;# 
   522   000FAE                     RCREG1          equ	4014	;# 
   523   000FAF                     SPBRG           equ	4015	;# 
   524   000FAF                     SPBRG1          equ	4015	;# 
   525   000FB0                     SPBRGH          equ	4016	;# 
   526   000FB1                     T3CON           equ	4017	;# 
   527   000FB2                     TMR3            equ	4018	;# 
   528   000FB2                     TMR3L           equ	4018	;# 
   529   000FB3                     TMR3H           equ	4019	;# 
   530   000FB4                     CMCON           equ	4020	;# 
   531   000FB5                     CVRCON          equ	4021	;# 
   532   000FB6                     ECCP1AS         equ	4022	;# 
   533   000FB6                     CCP1AS          equ	4022	;# 
   534   000FB7                     ECCP1DEL        equ	4023	;# 
   535   000FB7                     CCP1DEL         equ	4023	;# 
   536   000FB8                     BAUDCON         equ	4024	;# 
   537   000FB8                     BAUDCTL         equ	4024	;# 
   538   000FBA                     CCP2CON         equ	4026	;# 
   539   000FBB                     CCPR2           equ	4027	;# 
   540   000FBB                     CCPR2L          equ	4027	;# 
   541   000FBC                     CCPR2H          equ	4028	;# 
   542   000FBD                     CCP1CON         equ	4029	;# 
   543   000FBD                     ECCP1CON        equ	4029	;# 
   544   000FBE                     CCPR1           equ	4030	;# 
   545   000FBE                     CCPR1L          equ	4030	;# 
   546   000FBF                     CCPR1H          equ	4031	;# 
   547   000FC0                     ADCON2          equ	4032	;# 
   548   000FC1                     ADCON1          equ	4033	;# 
   549   000FC2                     ADCON0          equ	4034	;# 
   550   000FC3                     ADRES           equ	4035	;# 
   551   000FC3                     ADRESL          equ	4035	;# 
   552   000FC4                     ADRESH          equ	4036	;# 
   553   000FC5                     SSPCON2         equ	4037	;# 
   554   000FC6                     SSPCON1         equ	4038	;# 
   555   000FC7                     SSPSTAT         equ	4039	;# 
   556   000FC8                     SSPADD          equ	4040	;# 
   557   000FC9                     SSPBUF          equ	4041	;# 
   558   000FCA                     T2CON           equ	4042	;# 
   559   000FCB                     PR2             equ	4043	;# 
   560   000FCB                     MEMCON          equ	4043	;# 
   561   000FCC                     TMR2            equ	4044	;# 
   562   000FCD                     T1CON           equ	4045	;# 
   563   000FCE                     TMR1            equ	4046	;# 
   564   000FCE                     TMR1L           equ	4046	;# 
   565   000FCF                     TMR1H           equ	4047	;# 
   566   000FD0                     RCON            equ	4048	;# 
   567   000FD1                     WDTCON          equ	4049	;# 
   568   000FD2                     HLVDCON         equ	4050	;# 
   569   000FD2                     LVDCON          equ	4050	;# 
   570   000FD3                     OSCCON          equ	4051	;# 
   571   000FD5                     T0CON           equ	4053	;# 
   572   000FD6                     TMR0            equ	4054	;# 
   573   000FD6                     TMR0L           equ	4054	;# 
   574   000FD7                     TMR0H           equ	4055	;# 
   575   000FD8                     STATUS          equ	4056	;# 
   576   000FD9                     FSR2            equ	4057	;# 
   577   000FD9                     FSR2L           equ	4057	;# 
   578   000FDA                     FSR2H           equ	4058	;# 
   579   000FDB                     PLUSW2          equ	4059	;# 
   580   000FDC                     PREINC2         equ	4060	;# 
   581   000FDD                     POSTDEC2        equ	4061	;# 
   582   000FDE                     POSTINC2        equ	4062	;# 
   583   000FDF                     INDF2           equ	4063	;# 
   584   000FE0                     BSR             equ	4064	;# 
   585   000FE1                     FSR1            equ	4065	;# 
   586   000FE1                     FSR1L           equ	4065	;# 
   587   000FE2                     FSR1H           equ	4066	;# 
   588   000FE3                     PLUSW1          equ	4067	;# 
   589   000FE4                     PREINC1         equ	4068	;# 
   590   000FE5                     POSTDEC1        equ	4069	;# 
   591   000FE6                     POSTINC1        equ	4070	;# 
   592   000FE7                     INDF1           equ	4071	;# 
   593   000FE8                     WREG            equ	4072	;# 
   594   000FE9                     FSR0            equ	4073	;# 
   595   000FE9                     FSR0L           equ	4073	;# 
   596   000FEA                     FSR0H           equ	4074	;# 
   597   000FEB                     PLUSW0          equ	4075	;# 
   598   000FEC                     PREINC0         equ	4076	;# 
   599   000FED                     POSTDEC0        equ	4077	;# 
   600   000FEE                     POSTINC0        equ	4078	;# 
   601   000FEF                     INDF0           equ	4079	;# 
   602   000FF0                     INTCON3         equ	4080	;# 
   603   000FF1                     INTCON2         equ	4081	;# 
   604   000FF2                     INTCON          equ	4082	;# 
   605   000FF3                     PROD            equ	4083	;# 
   606   000FF3                     PRODL           equ	4083	;# 
   607   000FF4                     PRODH           equ	4084	;# 
   608   000FF5                     TABLAT          equ	4085	;# 
   609   000FF6                     TBLPTR          equ	4086	;# 
   610   000FF6                     TBLPTRL         equ	4086	;# 
   611   000FF7                     TBLPTRH         equ	4087	;# 
   612   000FF8                     TBLPTRU         equ	4088	;# 
   613   000FF9                     PCLAT           equ	4089	;# 
   614   000FF9                     PC              equ	4089	;# 
   615   000FF9                     PCL             equ	4089	;# 
   616   000FFA                     PCLATH          equ	4090	;# 
   617   000FFB                     PCLATU          equ	4091	;# 
   618   000FFC                     STKPTR          equ	4092	;# 
   619   000FFD                     TOS             equ	4093	;# 
   620   000FFD                     TOSL            equ	4093	;# 
   621   000FFE                     TOSH            equ	4094	;# 
   622   000FFF                     TOSU            equ	4095	;# 
   623   007CA7                     _TRISC7         set	31911
   624   007C61                     _LATD1          set	31841
   625   007C60                     _LATD0          set	31840
   626   000FAB                     _RCSTAbits      set	4011
   627   000F9E                     _PIR1bits       set	3998
   628   000FAE                     _RCREG          set	4014
   629   000FAF                     _SPBRG          set	4015
   630   000FAB                     _RCSTA          set	4011
   631   000FAC                     _TXSTA          set	4012
   632   000FB8                     _BAUDCON        set	4024
   633   000FD3                     _OSCCON         set	4051
   634   000F8C                     _LATD           set	3980
   635   000F95                     _TRISD          set	3989
   636                           
   637                           	psect	smallconst
   638   000800                     __psmallconst:
   639                           	callstack 0
   640   000800  00                 	db	0
   641   000801                     STR_10:
   642   000801  42                 	db	66	;'B'
   643   000802  75                 	db	117	;'u'
   644   000803  73                 	db	115	;'s'
   645   000804  63                 	db	99	;'c'
   646   000805  61                 	db	97	;'a'
   647   000806  6E                 	db	110	;'n'
   648   000807  64                 	db	100	;'d'
   649   000808  6F                 	db	111	;'o'
   650   000809  2E                 	db	46
   651   00080A  2E                 	db	46
   652   00080B  2E                 	db	46
   653   00080C  00                 	db	0
   654   00080D                     STR_1:
   655   00080D  47                 	db	71	;'G'
   656   00080E  50                 	db	80	;'P'
   657   00080F  53                 	db	83	;'S'
   658   000810  20                 	db	32
   659   000811  47                 	db	71	;'G'
   660   000812  50                 	db	80	;'P'
   661   000813  52                 	db	82	;'R'
   662   000814  4D                 	db	77	;'M'
   663   000815  43                 	db	67	;'C'
   664   000816  00                 	db	0
   665   000817                     STR_2:
   666   000817  24                 	db	36
   667   000818  47                 	db	71	;'G'
   668   000819  50                 	db	80	;'P'
   669   00081A  52                 	db	82	;'R'
   670   00081B  4D                 	db	77	;'M'
   671   00081C  43                 	db	67	;'C'
   672   00081D  00                 	db	0
   673   00081E                     STR_9:
   674   00081E  4C                 	db	76	;'L'
   675   00081F  6F                 	db	111	;'o'
   676   000820  6E                 	db	110	;'n'
   677   000821  3A                 	db	58	;':'
   678   000822  00                 	db	0
   679   000823                     STR_8:
   680   000823  4C                 	db	76	;'L'
   681   000824  61                 	db	97	;'a'
   682   000825  74                 	db	116	;'t'
   683   000826  3A                 	db	58	;':'
   684   000827  00                 	db	0
   685   000828                     STR_5:
   686   000828  27                 	db	39
   687   000829  20                 	db	32
   688   00082A  00                 	db	0
   689   00082B                     STR_12:
   690   00082B  2C                 	db	44
   691   00082C  00                 	db	0
   692   00082D                     STR_4:
   693   00082D  DF                 	db	-33
   694   00082E  00                 	db	0
   695   000817                     STR_3           equ	STR_2
   696   000817                     STR_11          equ	STR_2
   697   00082B                     STR_13          equ	STR_12
   698   000828                     STR_7           equ	STR_5
   699   00082D                     STR_6           equ	STR_4
   700   00082F  00                 	db	0	; dummy byte at the end
   701   000800                     __smallconst    set	__psmallconst
   702   000800                     __mediumconst   set	__psmallconst
   703   000002                     __activetblptr  equ	2
   704                           
   705                           ; #config settings
   706                           
   707                           	psect	cinit
   708   00164A                     __pcinit:
   709                           	callstack 0
   710   00164A                     start_initialization:
   711                           	callstack 0
   712   00164A                     __initialization:
   713                           	callstack 0
   714                           
   715                           ; Clear objects allocated to BANK1 (55 bytes)
   716   00164A  EE01  F09C         	lfsr	0,__pbssBANK1
   717   00164E  0E37               	movlw	55
   718   001650                     clear_0:
   719   001650  6AEE               	clrf	postinc0,c
   720   001652  06E8               	decf	wreg,f,c
   721   001654  E1FD               	bnz	clear_0
   722                           
   723                           ; Clear objects allocated to COMRAM (1 bytes)
   724   001656  6A1B               	clrf	__pbssCOMRAM& (0+255),c
   725   001658                     end_of_initialization:
   726                           	callstack 0
   727   001658                     __end_of__initialization:
   728                           	callstack 0
   729   001658  0E00               	movlw	low (__Lmediumconst shr (0+16))
   730   00165A  6EF8               	movwf	tblptru,c
   731   00165C  0100               	movlb	0
   732   00165E  EF18  F004         	goto	_main	;jump to C main() function
   733                           
   734                           	psect	bssCOMRAM
   735   00001B                     __pbssCOMRAM:
   736                           	callstack 0
   737   00001B                     strtok@p:
   738                           	callstack 0
   739   00001B                     	ds	1
   740                           
   741                           	psect	bssBANK1
   742   00019C                     __pbssBANK1:
   743                           	callstack 0
   744   00019C                     	ds	15
   745   0001AB                     	ds	15
   746   0001BA                     	ds	11
   747   0001C5                     	ds	10
   748   0001CF                     	ds	2
   749   0001D1                     	ds	2
   750                           
   751                           	psect	cstackBANK1
   752   000100                     __pcstackBANK1:
   753                           	callstack 0
   754   000100                     main@buffer:
   755                           	callstack 0
   756                           
   757                           ; 100 bytes @ 0x0
   758   000100                     	ds	100
   759   000164                     main@lon:
   760                           	callstack 0
   761                           
   762                           ; 11 bytes @ 0x64
   763   000164                     	ds	11
   764   00016F                     main@formatted_lat:
   765                           	callstack 0
   766                           
   767                           ; 15 bytes @ 0x6F
   768   00016F                     	ds	15
   769   00017E                     main@formatted_lon:
   770                           	callstack 0
   771                           
   772                           ; 15 bytes @ 0x7E
   773   00017E                     	ds	15
   774   00018D                     main@lat:
   775                           	callstack 0
   776                           
   777                           ; 10 bytes @ 0x8D
   778   00018D                     	ds	10
   779   000197                     main@last_valid:
   780                           	callstack 0
   781                           
   782                           ; 1 bytes @ 0x97
   783   000197                     	ds	1
   784   000198                     main@ns:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x98
   788   000198                     	ds	2
   789   00019A                     main@ew:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x9A
   793   00019A                     	ds	2
   794                           
   795                           	psect	cstackBANK0
   796   000060                     __pcstackBANK0:
   797                           	callstack 0
   798   000060                     GPS_ParseGPRMC@buf:
   799                           	callstack 0
   800                           
   801                           ; 100 bytes @ 0x0
   802   000060                     	ds	100
   803   0000C4                     _GPS_ParseGPRMC$296:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x64
   807   0000C4                     	ds	1
   808   0000C5                     GPS_ParseGPRMC@field:
   809                           	callstack 0
   810                           
   811                           ; 1 bytes @ 0x65
   812   0000C5                     	ds	1
   813   0000C6                     GPS_ParseGPRMC@data_valid:
   814                           	callstack 0
   815                           
   816                           ; 1 bytes @ 0x66
   817   0000C6                     	ds	1
   818   0000C7                     GPS_ParseGPRMC@token:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x67
   822   0000C7                     	ds	1
   823                           
   824                           	psect	cstackCOMRAM
   825   000001                     __pcstackCOMRAM:
   826                           	callstack 0
   827   000001                     ?_strlen:
   828                           	callstack 0
   829   000001                     ?_strncmp:
   830                           	callstack 0
   831   000001                     ?_strchr:
   832                           	callstack 0
   833   000001                     GPS_Init@dummy:
   834                           	callstack 0
   835   000001                     strlen@s:
   836                           	callstack 0
   837   000001                     GPS_ReadSentence@buffer:
   838                           	callstack 0
   839   000001                     memset@dest:
   840                           	callstack 0
   841   000001                     strcat@dest:
   842                           	callstack 0
   843   000001                     strncat@dest:
   844                           	callstack 0
   845   000001                     strncpy@d:
   846                           	callstack 0
   847   000001                     strchr@s:
   848                           	callstack 0
   849   000001                     strncmp@l:
   850                           	callstack 0
   851   000001                     ??_LCD_Command:
   852   000001                     ??_LCD_Char:
   853                           
   854                           ; 1 bytes @ 0x0
   855   000001                     	ds	1
   856   000002                     LCD_Command@cmd:
   857                           	callstack 0
   858   000002                     LCD_Char@dat:
   859                           	callstack 0
   860                           
   861                           ; 1 bytes @ 0x1
   862   000002                     	ds	1
   863   000003                     strlen@a:
   864                           	callstack 0
   865   000003                     strncmp@r:
   866                           	callstack 0
   867   000003                     LCD_String@msg:
   868                           	callstack 0
   869   000003                     GPS_ReadSentence@max_len:
   870                           	callstack 0
   871   000003                     memset@c:
   872                           	callstack 0
   873   000003                     strcat@src:
   874                           	callstack 0
   875   000003                     strncat@src:
   876                           	callstack 0
   877   000003                     strncpy@s:
   878                           	callstack 0
   879   000003                     strchr@c:
   880                           	callstack 0
   881   000003                     ??_LCD_Init:
   882   000003                     
   883                           ; 1 bytes @ 0x2
   884   000003                     	ds	1
   885   000004                     strncmp@n:
   886                           	callstack 0
   887                           
   888                           ; 2 bytes @ 0x3
   889   000004                     	ds	1
   890   000005                     LCD_String_xy@pos:
   891                           	callstack 0
   892   000005                     GPS_ReadSentence@timeout_ms:
   893                           	callstack 0
   894   000005                     memset@n:
   895                           	callstack 0
   896   000005                     strcat@i:
   897                           	callstack 0
   898   000005                     strncat@n:
   899                           	callstack 0
   900   000005                     strncpy@n:
   901                           	callstack 0
   902   000005                     ??_strchr:
   903   000005                     
   904                           ; 1 bytes @ 0x4
   905   000005                     	ds	1
   906   000006                     LCD_String_xy@msg:
   907                           	callstack 0
   908   000006                     ??_strncmp:
   909                           
   910                           ; 1 bytes @ 0x5
   911   000006                     	ds	1
   912   000007                     ?_strstr:
   913                           	callstack 0
   914   000007                     ?_strspn:
   915                           	callstack 0
   916   000007                     ?_strcspn:
   917                           	callstack 0
   918   000007                     strcspn@s:
   919                           	callstack 0
   920   000007                     strspn@s:
   921                           	callstack 0
   922   000007                     memset@p:
   923                           	callstack 0
   924   000007                     strncat@cp:
   925                           	callstack 0
   926   000007                     strncpy@cp:
   927                           	callstack 0
   928   000007                     strstr@h:
   929                           	callstack 0
   930   000007                     ??_GPS_ReadSentence:
   931   000007                     
   932                           ; 1 bytes @ 0x6
   933   000007                     	ds	1
   934   000008                     LCD_String_xy@row:
   935                           	callstack 0
   936   000008                     strcspn@c:
   937                           	callstack 0
   938   000008                     strspn@c:
   939                           	callstack 0
   940   000008                     
   941                           ; 1 bytes @ 0x7
   942   000008                     	ds	1
   943   000009                     strstr@n:
   944                           	callstack 0
   945   000009                     _LCD_String_xy$56:
   946                           	callstack 0
   947   000009                     GPS_ReadSentence@t:
   948                           	callstack 0
   949   000009                     ??_strspn:
   950   000009                     ??_strcspn:
   951                           
   952                           ; 1 bytes @ 0x8
   953   000009                     	ds	1
   954   00000A                     strstr@nl:
   955                           	callstack 0
   956   00000A                     strcspn@i:
   957                           	callstack 0
   958   00000A                     strspn@i:
   959                           	callstack 0
   960   00000A                     
   961                           ; 1 bytes @ 0x9
   962   00000A                     	ds	1
   963   00000B                     LCD_String_xy@location:
   964                           	callstack 0
   965   00000B                     GPS_ReadSentence@dummy:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0xA
   969   00000B                     	ds	1
   970   00000C                     GPS_ReadSentence@started:
   971                           	callstack 0
   972   00000C                     strtok@s:
   973                           	callstack 0
   974                           
   975                           ; 1 bytes @ 0xB
   976   00000C                     	ds	1
   977   00000D                     strtok@sep:
   978                           	callstack 0
   979   00000D                     GPS_ReadSentence@i:
   980                           	callstack 0
   981                           
   982                           ; 2 bytes @ 0xC
   983   00000D                     	ds	1
   984   00000E                     GPS_ParseGPRMC@msg:
   985                           	callstack 0
   986   00000E                     
   987                           ; 1 bytes @ 0xD
   988   00000E                     	ds	1
   989   00000F                     GPS_ReadSentence@c:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0xE
   993   00000F                     	ds	1
   994   000010                     GPS_ParseGPRMC@lat:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0xF
   998   000010                     	ds	2
   999   000012                     GPS_ParseGPRMC@ns:
  1000                           	callstack 0
  1001                           
  1002                           ; 2 bytes @ 0x11
  1003   000012                     	ds	2
  1004   000014                     GPS_ParseGPRMC@lon:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x13
  1008   000014                     	ds	2
  1009   000016                     GPS_ParseGPRMC@ew:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x15
  1013   000016                     	ds	2
  1014   000018                     
  1015                           ; 1 bytes @ 0x17
  1016   000018                     	ds	1
  1017   000019                     ??_main:
  1018                           
  1019                           ; 1 bytes @ 0x18
  1020   000019                     	ds	2
  1021                           
  1022 ;;
  1023 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1024 ;;
  1025 ;; *************** function _main *****************
  1026 ;; Defined at:
  1027 ;;		line 29 in file "main.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;		None
  1030 ;; Auto vars:     Size  Location     Type
  1031 ;;  formatted_lo   15  126[BANK1 ] unsigned char [15]
  1032 ;;  formatted_la   15  111[BANK1 ] unsigned char [15]
  1033 ;;  buffer        100    0[BANK1 ] unsigned char [100]
  1034 ;;  lon            11  100[BANK1 ] unsigned char [11]
  1035 ;;  lat            10  141[BANK1 ] unsigned char [10]
  1036 ;;  ew              2  154[BANK1 ] unsigned char [2]
  1037 ;;  ns              2  152[BANK1 ] unsigned char [2]
  1038 ;;  last_valid      1  151[BANK1 ] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;                  1    wreg      void 
  1041 ;; Registers used:
  1042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1048 ;;      Params:         0       0       0       0       0       0       0       0       0
  1049 ;;      Locals:         0       0     156       0       0       0       0       0       0
  1050 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1051 ;;      Totals:         2       0     156       0       0       0       0       0       0
  1052 ;;Total ram usage:      158 bytes
  1053 ;; Hardware stack levels required when called: 4
  1054 ;; This function calls:
  1055 ;;		_GPS_Init
  1056 ;;		_GPS_ParseGPRMC
  1057 ;;		_GPS_ReadSentence
  1058 ;;		_LCD_Clear
  1059 ;;		_LCD_Init
  1060 ;;		_LCD_String_xy
  1061 ;;		_memset
  1062 ;;		_strcat
  1063 ;;		_strncat
  1064 ;;		_strncpy
  1065 ;;		_strstr
  1066 ;; This function is called by:
  1067 ;;		Startup code after reset
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text0
  1072   000830                     __ptext0:
  1073                           	callstack 0
  1074   000830                     _main:
  1075                           	callstack 27
  1076   000830                     
  1077                           ;main.c: 31:     OSCCON = 0x72;
  1078   000830  0E72               	movlw	114
  1079   000832  6ED3               	movwf	211,c	;volatile
  1080   000834                     
  1081                           ;main.c: 33:     LCD_Init();
  1082   000834  ECF6  F00A         	call	_LCD_Init	;wreg free
  1083   000838                     
  1084                           ;main.c: 34:     LCD_String_xy(0, 0, "GPS GPRMC");
  1085   000838  0E00               	movlw	0
  1086   00083A  6E05               	movwf	LCD_String_xy@pos^0,c
  1087   00083C  0E0D               	movlw	low STR_1
  1088   00083E  6E06               	movwf	LCD_String_xy@msg^0,c
  1089   000840  5006               	movf	LCD_String_xy@msg^0,w,c
  1090   000842  A4D8               	btfss	status,2,c
  1091   000844  0E08               	movlw	high __smallconst
  1092   000846  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1093   000848  0E00               	movlw	0
  1094   00084A  EC3E  F00A         	call	_LCD_String_xy
  1095   00084E                     
  1096                           ;main.c: 35:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  1097   00084E  0E15               	movlw	21
  1098   000850  6E1A               	movwf	(??_main+1)^0,c
  1099   000852  0E4B               	movlw	75
  1100   000854  6E19               	movwf	??_main^0,c
  1101   000856  0EBE               	movlw	190
  1102   000858                     u1517:
  1103   000858  2EE8               	decfsz	wreg,f,c
  1104   00085A  D7FE               	bra	u1517
  1105   00085C  2E19               	decfsz	??_main^0,f,c
  1106   00085E  D7FC               	bra	u1517
  1107   000860  2E1A               	decfsz	(??_main+1)^0,f,c
  1108   000862  D7FA               	bra	u1517
  1109   000864  D000               	nop2	
  1110   000866                     
  1111                           ;main.c: 37:     GPS_Init();
  1112   000866  EC0F  F00B         	call	_GPS_Init	;wreg free
  1113   00086A                     
  1114                           ;main.c: 40:     char buffer[100];;main.c: 41:     char lat[10] = "";
  1115   00086A  EE21  F08D         	lfsr	2,main@lat
  1116   00086E  0E09               	movlw	9
  1117   000870                     u1431:
  1118   000870  6ADE               	clrf	postinc2,c
  1119   000872  06E8               	decf	wreg,f,c
  1120   000874  E2FD               	bc	u1431
  1121   000876                     
  1122                           ;main.c: 42:     char ns[2] = "";
  1123   000876  0E00               	movlw	0
  1124   000878  0101               	movlb	1	; () banked
  1125   00087A  6F99               	movwf	(main@ns+1)& (0+255),b
  1126   00087C  0E00               	movlw	0
  1127   00087E  6F98               	movwf	main@ns& (0+255),b
  1128   000880                     
  1129                           ; BSR set to: 1
  1130                           ;main.c: 43:     char lon[11] = "";
  1131   000880  EE21  F064         	lfsr	2,main@lon
  1132   000884  0E0A               	movlw	10
  1133   000886                     u1441:
  1134   000886  6ADE               	clrf	postinc2,c
  1135   000888  06E8               	decf	wreg,f,c
  1136   00088A  E2FD               	bc	u1441
  1137   00088C                     
  1138                           ; BSR set to: 1
  1139                           ;main.c: 44:     char ew[2] = "";
  1140   00088C  0E00               	movlw	0
  1141   00088E  6F9B               	movwf	(main@ew+1)& (0+255),b
  1142   000890  0E00               	movlw	0
  1143   000892  6F9A               	movwf	main@ew& (0+255),b
  1144   000894                     
  1145                           ; BSR set to: 1
  1146                           ;main.c: 45:     uint8_t last_valid = 0;
  1147   000894  6B97               	clrf	main@last_valid& (0+255),b
  1148   000896                     l1777:
  1149                           
  1150                           ;main.c: 50:         memset(buffer, 0, sizeof(buffer));
  1151   000896  0E00               	movlw	low main@buffer
  1152   000898  6E01               	movwf	memset@dest^0,c
  1153   00089A  0E01               	movlw	high main@buffer
  1154   00089C  6E02               	movwf	(memset@dest+1)^0,c
  1155   00089E  0E00               	movlw	0
  1156   0008A0  6E04               	movwf	(memset@c+1)^0,c
  1157   0008A2  0E00               	movlw	0
  1158   0008A4  6E03               	movwf	memset@c^0,c
  1159   0008A6  0E00               	movlw	0
  1160   0008A8  6E06               	movwf	(memset@n+1)^0,c
  1161   0008AA  0E64               	movlw	100
  1162   0008AC  6E05               	movwf	memset@n^0,c
  1163   0008AE  ECC0  F00A         	call	_memset	;wreg free
  1164   0008B2                     
  1165                           ;main.c: 51:         memset(lat, 0, sizeof(lat));
  1166   0008B2  0E8D               	movlw	low main@lat
  1167   0008B4  6E01               	movwf	memset@dest^0,c
  1168   0008B6  0E01               	movlw	high main@lat
  1169   0008B8  6E02               	movwf	(memset@dest+1)^0,c
  1170   0008BA  0E00               	movlw	0
  1171   0008BC  6E04               	movwf	(memset@c+1)^0,c
  1172   0008BE  0E00               	movlw	0
  1173   0008C0  6E03               	movwf	memset@c^0,c
  1174   0008C2  0E00               	movlw	0
  1175   0008C4  6E06               	movwf	(memset@n+1)^0,c
  1176   0008C6  0E0A               	movlw	10
  1177   0008C8  6E05               	movwf	memset@n^0,c
  1178   0008CA  ECC0  F00A         	call	_memset	;wreg free
  1179   0008CE                     
  1180                           ;main.c: 52:         memset(ns, 0, sizeof(ns));
  1181   0008CE  0E98               	movlw	low main@ns
  1182   0008D0  6E01               	movwf	memset@dest^0,c
  1183   0008D2  0E01               	movlw	high main@ns
  1184   0008D4  6E02               	movwf	(memset@dest+1)^0,c
  1185   0008D6  0E00               	movlw	0
  1186   0008D8  6E04               	movwf	(memset@c+1)^0,c
  1187   0008DA  0E00               	movlw	0
  1188   0008DC  6E03               	movwf	memset@c^0,c
  1189   0008DE  0E00               	movlw	0
  1190   0008E0  6E06               	movwf	(memset@n+1)^0,c
  1191   0008E2  0E02               	movlw	2
  1192   0008E4  6E05               	movwf	memset@n^0,c
  1193   0008E6  ECC0  F00A         	call	_memset	;wreg free
  1194   0008EA                     
  1195                           ;main.c: 53:         memset(lon, 0, sizeof(lon));
  1196   0008EA  0E64               	movlw	low main@lon
  1197   0008EC  6E01               	movwf	memset@dest^0,c
  1198   0008EE  0E01               	movlw	high main@lon
  1199   0008F0  6E02               	movwf	(memset@dest+1)^0,c
  1200   0008F2  0E00               	movlw	0
  1201   0008F4  6E04               	movwf	(memset@c+1)^0,c
  1202   0008F6  0E00               	movlw	0
  1203   0008F8  6E03               	movwf	memset@c^0,c
  1204   0008FA  0E00               	movlw	0
  1205   0008FC  6E06               	movwf	(memset@n+1)^0,c
  1206   0008FE  0E0B               	movlw	11
  1207   000900  6E05               	movwf	memset@n^0,c
  1208   000902  ECC0  F00A         	call	_memset	;wreg free
  1209   000906                     
  1210                           ;main.c: 54:         memset(ew, 0, sizeof(ew));
  1211   000906  0E9A               	movlw	low main@ew
  1212   000908  6E01               	movwf	memset@dest^0,c
  1213   00090A  0E01               	movlw	high main@ew
  1214   00090C  6E02               	movwf	(memset@dest+1)^0,c
  1215   00090E  0E00               	movlw	0
  1216   000910  6E04               	movwf	(memset@c+1)^0,c
  1217   000912  0E00               	movlw	0
  1218   000914  6E03               	movwf	memset@c^0,c
  1219   000916  0E00               	movlw	0
  1220   000918  6E06               	movwf	(memset@n+1)^0,c
  1221   00091A  0E02               	movlw	2
  1222   00091C  6E05               	movwf	memset@n^0,c
  1223   00091E  ECC0  F00A         	call	_memset	;wreg free
  1224   000922                     
  1225                           ;main.c: 57:         if(GPS_ReadSentence(buffer, sizeof(buffer), 1000)) {
  1226   000922  0E00               	movlw	low main@buffer
  1227   000924  6E01               	movwf	GPS_ReadSentence@buffer^0,c
  1228   000926  0E01               	movlw	high main@buffer
  1229   000928  6E02               	movwf	(GPS_ReadSentence@buffer+1)^0,c
  1230   00092A  0E00               	movlw	0
  1231   00092C  6E04               	movwf	(GPS_ReadSentence@max_len+1)^0,c
  1232   00092E  0E64               	movlw	100
  1233   000930  6E03               	movwf	GPS_ReadSentence@max_len^0,c
  1234   000932  0E03               	movlw	3
  1235   000934  6E06               	movwf	(GPS_ReadSentence@timeout_ms+1)^0,c
  1236   000936  0EE8               	movlw	232
  1237   000938  6E05               	movwf	GPS_ReadSentence@timeout_ms^0,c
  1238   00093A  ECDA  F006         	call	_GPS_ReadSentence	;wreg free
  1239   00093E  0900               	iorlw	0
  1240   000940  B4D8               	btfsc	status,2,c
  1241   000942  EFA5  F004         	goto	u1451
  1242   000946  EFA7  F004         	goto	u1450
  1243   00094A                     u1451:
  1244   00094A  EF98  F005         	goto	l1829
  1245   00094E                     u1450:
  1246   00094E                     
  1247                           ;main.c: 59:             if(strstr(buffer, "$GPRMC")) {
  1248   00094E  0E00               	movlw	low main@buffer
  1249   000950  6E07               	movwf	strstr@h^0,c
  1250   000952  0E01               	movlw	high main@buffer
  1251   000954  6E08               	movwf	(strstr@h+1)^0,c
  1252   000956  0E17               	movlw	low STR_2
  1253   000958  6E09               	movwf	strstr@n^0,c
  1254   00095A  ECF4  F007         	call	_strstr	;wreg free
  1255   00095E  5007               	movf	?_strstr^0,w,c
  1256   000960  1008               	iorwf	(?_strstr+1)^0,w,c
  1257   000962  B4D8               	btfsc	status,2,c
  1258   000964  EFB6  F004         	goto	u1461
  1259   000968  EFB8  F004         	goto	u1460
  1260   00096C                     u1461:
  1261   00096C  EF98  F005         	goto	l1829
  1262   000970                     u1460:
  1263   000970                     
  1264                           ;main.c: 61:                 if(GPS_ParseGPRMC(buffer, lat, ns, lon, ew)) {
  1265   000970  0E00               	movlw	low main@buffer
  1266   000972  6E0E               	movwf	GPS_ParseGPRMC@msg^0,c
  1267   000974  0E01               	movlw	high main@buffer
  1268   000976  6E0F               	movwf	(GPS_ParseGPRMC@msg+1)^0,c
  1269   000978  0E8D               	movlw	low main@lat
  1270   00097A  6E10               	movwf	GPS_ParseGPRMC@lat^0,c
  1271   00097C  0E01               	movlw	high main@lat
  1272   00097E  6E11               	movwf	(GPS_ParseGPRMC@lat+1)^0,c
  1273   000980  0E98               	movlw	low main@ns
  1274   000982  6E12               	movwf	GPS_ParseGPRMC@ns^0,c
  1275   000984  0E01               	movlw	high main@ns
  1276   000986  6E13               	movwf	(GPS_ParseGPRMC@ns+1)^0,c
  1277   000988  0E64               	movlw	low main@lon
  1278   00098A  6E14               	movwf	GPS_ParseGPRMC@lon^0,c
  1279   00098C  0E01               	movlw	high main@lon
  1280   00098E  6E15               	movwf	(GPS_ParseGPRMC@lon+1)^0,c
  1281   000990  0E9A               	movlw	low main@ew
  1282   000992  6E16               	movwf	GPS_ParseGPRMC@ew^0,c
  1283   000994  0E01               	movlw	high main@ew
  1284   000996  6E17               	movwf	(GPS_ParseGPRMC@ew+1)^0,c
  1285   000998  ECC0  F005         	call	_GPS_ParseGPRMC	;wreg free
  1286   00099C  0900               	iorlw	0
  1287   00099E  B4D8               	btfsc	status,2,c
  1288   0009A0  EFD4  F004         	goto	u1471
  1289   0009A4  EFD6  F004         	goto	u1470
  1290   0009A8                     u1471:
  1291   0009A8  EF98  F005         	goto	l1829
  1292   0009AC                     u1470:
  1293   0009AC                     
  1294                           ;main.c: 62:                     char formatted_lat[15] = {0};
  1295   0009AC  EE21  F06F         	lfsr	2,main@formatted_lat
  1296   0009B0  0E0E               	movlw	14
  1297   0009B2                     u1481:
  1298   0009B2  6ADE               	clrf	postinc2,c
  1299   0009B4  06E8               	decf	wreg,f,c
  1300   0009B6  E2FD               	bc	u1481
  1301                           
  1302                           ;main.c: 63:                     char formatted_lon[15] = {0};
  1303   0009B8  EE21  F07E         	lfsr	2,main@formatted_lon
  1304   0009BC  0E0E               	movlw	14
  1305   0009BE                     u1491:
  1306   0009BE  6ADE               	clrf	postinc2,c
  1307   0009C0  06E8               	decf	wreg,f,c
  1308   0009C2  E2FD               	bc	u1491
  1309   0009C4                     
  1310                           ;main.c: 66:                     strncpy(formatted_lat, lat, 2);
  1311   0009C4  0E6F               	movlw	low main@formatted_lat
  1312   0009C6  6E01               	movwf	strncpy@d^0,c
  1313   0009C8  0E01               	movlw	high main@formatted_lat
  1314   0009CA  6E02               	movwf	(strncpy@d+1)^0,c
  1315   0009CC  0E8D               	movlw	low main@lat
  1316   0009CE  6E03               	movwf	strncpy@s^0,c
  1317   0009D0  0E01               	movlw	high main@lat
  1318   0009D2  6E04               	movwf	(strncpy@s+1)^0,c
  1319   0009D4  0E00               	movlw	0
  1320   0009D6  6E06               	movwf	(strncpy@n+1)^0,c
  1321   0009D8  0E02               	movlw	2
  1322   0009DA  6E05               	movwf	strncpy@n^0,c
  1323   0009DC  EC2E  F009         	call	_strncpy	;wreg free
  1324   0009E0                     
  1325                           ;main.c: 67:                     strcat(formatted_lat, "\xDF");
  1326   0009E0  0E6F               	movlw	low main@formatted_lat
  1327   0009E2  6E01               	movwf	strcat@dest^0,c
  1328   0009E4  0E01               	movlw	high main@formatted_lat
  1329   0009E6  6E02               	movwf	(strcat@dest+1)^0,c
  1330   0009E8  0E2D               	movlw	low STR_4
  1331   0009EA  6E03               	movwf	strcat@src^0,c
  1332   0009EC  5003               	movf	strcat@src^0,w,c
  1333   0009EE  A4D8               	btfss	status,2,c
  1334   0009F0  0E08               	movlw	high __smallconst
  1335   0009F2  6E04               	movwf	(strcat@src+1)^0,c
  1336   0009F4  EC6F  F009         	call	_strcat	;wreg free
  1337   0009F8                     
  1338                           ;main.c: 68:                     strncat(formatted_lat, lat + 2, 5);
  1339   0009F8  0E6F               	movlw	low main@formatted_lat
  1340   0009FA  6E01               	movwf	strncat@dest^0,c
  1341   0009FC  0E01               	movlw	high main@formatted_lat
  1342   0009FE  6E02               	movwf	(strncat@dest+1)^0,c
  1343   000A00  0E8F               	movlw	low (main@lat+2)
  1344   000A02  6E03               	movwf	strncat@src^0,c
  1345   000A04  0E01               	movlw	high (main@lat+2)
  1346   000A06  6E04               	movwf	(strncat@src+1)^0,c
  1347   000A08  0E00               	movlw	0
  1348   000A0A  6E06               	movwf	(strncat@n+1)^0,c
  1349   000A0C  0E05               	movlw	5
  1350   000A0E  6E05               	movwf	strncat@n^0,c
  1351   000A10  ECA6  F008         	call	_strncat	;wreg free
  1352   000A14                     
  1353                           ;main.c: 69:                     strcat(formatted_lat, "' ");
  1354   000A14  0E6F               	movlw	low main@formatted_lat
  1355   000A16  6E01               	movwf	strcat@dest^0,c
  1356   000A18  0E01               	movlw	high main@formatted_lat
  1357   000A1A  6E02               	movwf	(strcat@dest+1)^0,c
  1358   000A1C  0E28               	movlw	low STR_5
  1359   000A1E  6E03               	movwf	strcat@src^0,c
  1360   000A20  5003               	movf	strcat@src^0,w,c
  1361   000A22  A4D8               	btfss	status,2,c
  1362   000A24  0E08               	movlw	high __smallconst
  1363   000A26  6E04               	movwf	(strcat@src+1)^0,c
  1364   000A28  EC6F  F009         	call	_strcat	;wreg free
  1365   000A2C                     
  1366                           ;main.c: 70:                     strcat(formatted_lat, ns);
  1367   000A2C  0E6F               	movlw	low main@formatted_lat
  1368   000A2E  6E01               	movwf	strcat@dest^0,c
  1369   000A30  0E01               	movlw	high main@formatted_lat
  1370   000A32  6E02               	movwf	(strcat@dest+1)^0,c
  1371   000A34  0E98               	movlw	low main@ns
  1372   000A36  6E03               	movwf	strcat@src^0,c
  1373   000A38  0E01               	movlw	high main@ns
  1374   000A3A  6E04               	movwf	(strcat@src+1)^0,c
  1375   000A3C  EC6F  F009         	call	_strcat	;wreg free
  1376   000A40                     
  1377                           ;main.c: 73:                     strncpy(formatted_lon, lon, 3);
  1378   000A40  0E7E               	movlw	low main@formatted_lon
  1379   000A42  6E01               	movwf	strncpy@d^0,c
  1380   000A44  0E01               	movlw	high main@formatted_lon
  1381   000A46  6E02               	movwf	(strncpy@d+1)^0,c
  1382   000A48  0E64               	movlw	low main@lon
  1383   000A4A  6E03               	movwf	strncpy@s^0,c
  1384   000A4C  0E01               	movlw	high main@lon
  1385   000A4E  6E04               	movwf	(strncpy@s+1)^0,c
  1386   000A50  0E00               	movlw	0
  1387   000A52  6E06               	movwf	(strncpy@n+1)^0,c
  1388   000A54  0E03               	movlw	3
  1389   000A56  6E05               	movwf	strncpy@n^0,c
  1390   000A58  EC2E  F009         	call	_strncpy	;wreg free
  1391   000A5C                     
  1392                           ;main.c: 74:                     strcat(formatted_lon, "\xDF");
  1393   000A5C  0E7E               	movlw	low main@formatted_lon
  1394   000A5E  6E01               	movwf	strcat@dest^0,c
  1395   000A60  0E01               	movlw	high main@formatted_lon
  1396   000A62  6E02               	movwf	(strcat@dest+1)^0,c
  1397   000A64  0E2D               	movlw	low STR_4
  1398   000A66  6E03               	movwf	strcat@src^0,c
  1399   000A68  5003               	movf	strcat@src^0,w,c
  1400   000A6A  A4D8               	btfss	status,2,c
  1401   000A6C  0E08               	movlw	high __smallconst
  1402   000A6E  6E04               	movwf	(strcat@src+1)^0,c
  1403   000A70  EC6F  F009         	call	_strcat	;wreg free
  1404   000A74                     
  1405                           ;main.c: 75:                     strncat(formatted_lon, lon + 3, 4);
  1406   000A74  0E7E               	movlw	low main@formatted_lon
  1407   000A76  6E01               	movwf	strncat@dest^0,c
  1408   000A78  0E01               	movlw	high main@formatted_lon
  1409   000A7A  6E02               	movwf	(strncat@dest+1)^0,c
  1410   000A7C  0E67               	movlw	low (main@lon+3)
  1411   000A7E  6E03               	movwf	strncat@src^0,c
  1412   000A80  0E01               	movlw	high (main@lon+3)
  1413   000A82  6E04               	movwf	(strncat@src+1)^0,c
  1414   000A84  0E00               	movlw	0
  1415   000A86  6E06               	movwf	(strncat@n+1)^0,c
  1416   000A88  0E04               	movlw	4
  1417   000A8A  6E05               	movwf	strncat@n^0,c
  1418   000A8C  ECA6  F008         	call	_strncat	;wreg free
  1419   000A90                     
  1420                           ;main.c: 76:                     strcat(formatted_lon, "' ");
  1421   000A90  0E7E               	movlw	low main@formatted_lon
  1422   000A92  6E01               	movwf	strcat@dest^0,c
  1423   000A94  0E01               	movlw	high main@formatted_lon
  1424   000A96  6E02               	movwf	(strcat@dest+1)^0,c
  1425   000A98  0E28               	movlw	low STR_5
  1426   000A9A  6E03               	movwf	strcat@src^0,c
  1427   000A9C  5003               	movf	strcat@src^0,w,c
  1428   000A9E  A4D8               	btfss	status,2,c
  1429   000AA0  0E08               	movlw	high __smallconst
  1430   000AA2  6E04               	movwf	(strcat@src+1)^0,c
  1431   000AA4  EC6F  F009         	call	_strcat	;wreg free
  1432   000AA8                     
  1433                           ;main.c: 77:                     strcat(formatted_lon, ew);
  1434   000AA8  0E7E               	movlw	low main@formatted_lon
  1435   000AAA  6E01               	movwf	strcat@dest^0,c
  1436   000AAC  0E01               	movlw	high main@formatted_lon
  1437   000AAE  6E02               	movwf	(strcat@dest+1)^0,c
  1438   000AB0  0E9A               	movlw	low main@ew
  1439   000AB2  6E03               	movwf	strcat@src^0,c
  1440   000AB4  0E01               	movlw	high main@ew
  1441   000AB6  6E04               	movwf	(strcat@src+1)^0,c
  1442   000AB8  EC6F  F009         	call	_strcat	;wreg free
  1443   000ABC                     
  1444                           ;main.c: 80:                     LCD_Clear();
  1445   000ABC  EC31  F00B         	call	_LCD_Clear	;wreg free
  1446   000AC0                     
  1447                           ;main.c: 81:                     LCD_String_xy(0, 0, "Lat:");
  1448   000AC0  0E00               	movlw	0
  1449   000AC2  6E05               	movwf	LCD_String_xy@pos^0,c
  1450   000AC4  0E23               	movlw	low STR_8
  1451   000AC6  6E06               	movwf	LCD_String_xy@msg^0,c
  1452   000AC8  5006               	movf	LCD_String_xy@msg^0,w,c
  1453   000ACA  A4D8               	btfss	status,2,c
  1454   000ACC  0E08               	movlw	high __smallconst
  1455   000ACE  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1456   000AD0  0E00               	movlw	0
  1457   000AD2  EC3E  F00A         	call	_LCD_String_xy
  1458   000AD6                     
  1459                           ;main.c: 82:                     LCD_String_xy(0, 5, formatted_lat);
  1460   000AD6  0E05               	movlw	5
  1461   000AD8  6E05               	movwf	LCD_String_xy@pos^0,c
  1462   000ADA  0E6F               	movlw	low main@formatted_lat
  1463   000ADC  6E06               	movwf	LCD_String_xy@msg^0,c
  1464   000ADE  0E01               	movlw	high main@formatted_lat
  1465   000AE0  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1466   000AE2  0E00               	movlw	0
  1467   000AE4  EC3E  F00A         	call	_LCD_String_xy
  1468   000AE8                     
  1469                           ;main.c: 83:                     LCD_String_xy(1, 0, "Lon:");
  1470   000AE8  0E00               	movlw	0
  1471   000AEA  6E05               	movwf	LCD_String_xy@pos^0,c
  1472   000AEC  0E1E               	movlw	low STR_9
  1473   000AEE  6E06               	movwf	LCD_String_xy@msg^0,c
  1474   000AF0  5006               	movf	LCD_String_xy@msg^0,w,c
  1475   000AF2  A4D8               	btfss	status,2,c
  1476   000AF4  0E08               	movlw	high __smallconst
  1477   000AF6  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1478   000AF8  0E01               	movlw	1
  1479   000AFA  EC3E  F00A         	call	_LCD_String_xy
  1480   000AFE                     
  1481                           ;main.c: 84:                     LCD_String_xy(1, 5, formatted_lon);
  1482   000AFE  0E05               	movlw	5
  1483   000B00  6E05               	movwf	LCD_String_xy@pos^0,c
  1484   000B02  0E7E               	movlw	low main@formatted_lon
  1485   000B04  6E06               	movwf	LCD_String_xy@msg^0,c
  1486   000B06  0E01               	movlw	high main@formatted_lon
  1487   000B08  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1488   000B0A  0E01               	movlw	1
  1489   000B0C  EC3E  F00A         	call	_LCD_String_xy
  1490   000B10                     
  1491                           ;main.c: 86:                     last_valid = 1;
  1492   000B10  0E01               	movlw	1
  1493   000B12  0101               	movlb	1	; () banked
  1494   000B14  6F97               	movwf	main@last_valid& (0+255),b
  1495   000B16                     l1827:
  1496                           
  1497                           ;main.c: 87:                     _delay((unsigned long)((500)*(8000000/4000.0)));
  1498   000B16  0E06               	movlw	6
  1499   000B18  6E1A               	movwf	(??_main+1)^0,c
  1500   000B1A  0E13               	movlw	19
  1501   000B1C  6E19               	movwf	??_main^0,c
  1502   000B1E  0EAE               	movlw	174
  1503   000B20                     u1527:
  1504   000B20  2EE8               	decfsz	wreg,f,c
  1505   000B22  D7FE               	bra	u1527
  1506   000B24  2E19               	decfsz	??_main^0,f,c
  1507   000B26  D7FC               	bra	u1527
  1508   000B28  2E1A               	decfsz	(??_main+1)^0,f,c
  1509   000B2A  D7FA               	bra	u1527
  1510                           
  1511                           ;main.c: 88:                     continue;
  1512   000B2C  EF4B  F004         	goto	l1777
  1513   000B30                     l1829:
  1514                           
  1515                           ;main.c: 94:         if(last_valid) {
  1516   000B30  0101               	movlb	1	; () banked
  1517   000B32  5197               	movf	main@last_valid& (0+255),w,b
  1518   000B34  B4D8               	btfsc	status,2,c
  1519   000B36  EF9F  F005         	goto	u1501
  1520   000B3A  EFA1  F005         	goto	u1500
  1521   000B3E                     u1501:
  1522   000B3E  EFAF  F005         	goto	l1833
  1523   000B42                     u1500:
  1524   000B42                     
  1525                           ; BSR set to: 1
  1526                           ;main.c: 95:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1527   000B42  0E02               	movlw	2
  1528   000B44  6E1A               	movwf	(??_main+1)^0,c
  1529   000B46  0E04               	movlw	4
  1530   000B48  6E19               	movwf	??_main^0,c
  1531   000B4A  0EBA               	movlw	186
  1532   000B4C                     u1537:
  1533   000B4C  2EE8               	decfsz	wreg,f,c
  1534   000B4E  D7FE               	bra	u1537
  1535   000B50  2E19               	decfsz	??_main^0,f,c
  1536   000B52  D7FC               	bra	u1537
  1537   000B54  2E1A               	decfsz	(??_main+1)^0,f,c
  1538   000B56  D7FA               	bra	u1537
  1539   000B58  D000               	nop2	
  1540                           
  1541                           ;main.c: 96:             continue;
  1542   000B5A  EF4B  F004         	goto	l1777
  1543   000B5E                     l1833:
  1544                           
  1545                           ; BSR set to: 1
  1546                           ;main.c: 100:         LCD_Clear();
  1547   000B5E  EC31  F00B         	call	_LCD_Clear	;wreg free
  1548   000B62                     
  1549                           ;main.c: 101:         LCD_String_xy(0, 0, "Buscando...");
  1550   000B62  0E00               	movlw	0
  1551   000B64  6E05               	movwf	LCD_String_xy@pos^0,c
  1552   000B66  0E01               	movlw	low STR_10
  1553   000B68  6E06               	movwf	LCD_String_xy@msg^0,c
  1554   000B6A  5006               	movf	LCD_String_xy@msg^0,w,c
  1555   000B6C  A4D8               	btfss	status,2,c
  1556   000B6E  0E08               	movlw	high __smallconst
  1557   000B70  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1558   000B72  0E00               	movlw	0
  1559   000B74  EC3E  F00A         	call	_LCD_String_xy
  1560   000B78  EF8B  F005         	goto	l1827
  1561   000B7C  EFFE  F03F         	goto	start
  1562   000B80                     __end_of_main:
  1563                           	callstack 0
  1564                           
  1565 ;; *************** function _strncat *****************
  1566 ;; Defined at:
  1567 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncat.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;  dest            2    0[COMRAM] PTR unsigned char 
  1570 ;;		 -> main@formatted_lon(15), main@formatted_lat(15), 
  1571 ;;  src             2    2[COMRAM] PTR const unsigned char 
  1572 ;;		 -> main@lon(11), main@lat(10), 
  1573 ;;  n               2    4[COMRAM] unsigned int 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  cp              2    6[COMRAM] PTR unsigned char 
  1576 ;;		 -> main@formatted_lon(15), main@formatted_lat(15), 
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  2    0[COMRAM] PTR unsigned char 
  1579 ;; Registers used:
  1580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1586 ;;      Params:         6       0       0       0       0       0       0       0       0
  1587 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1589 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1590 ;;Total ram usage:        8 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; This function calls:
  1593 ;;		Nothing
  1594 ;; This function is called by:
  1595 ;;		_main
  1596 ;; This function uses a non-reentrant model
  1597 ;;
  1598                           
  1599                           	psect	text1
  1600   00114C                     __ptext1:
  1601                           	callstack 0
  1602   00114C                     _strncat:
  1603                           	callstack 30
  1604   00114C  C001  F007         	movff	strncat@dest,strncat@cp
  1605   001150  C002  F008         	movff	strncat@dest+1,strncat@cp+1
  1606   001154  EFAE  F008         	goto	l1743
  1607   001158                     l1741:
  1608   001158  4A07               	infsnz	strncat@cp^0,f,c
  1609   00115A  2A08               	incf	(strncat@cp+1)^0,f,c
  1610   00115C                     l1743:
  1611   00115C  C007  FFD9         	movff	strncat@cp,fsr2l
  1612   001160  C008  FFDA         	movff	strncat@cp+1,fsr2h
  1613   001164  50DF               	movf	indf2,w,c
  1614   001166  A4D8               	btfss	status,2,c
  1615   001168  EFB8  F008         	goto	u1391
  1616   00116C  EFBA  F008         	goto	u1390
  1617   001170                     u1391:
  1618   001170  EFAC  F008         	goto	l1741
  1619   001174                     u1390:
  1620   001174  EFC3  F008         	goto	l1747
  1621   001178                     l1745:
  1622   001178  4A07               	infsnz	strncat@cp^0,f,c
  1623   00117A  2A08               	incf	(strncat@cp+1)^0,f,c
  1624   00117C  4A03               	infsnz	strncat@src^0,f,c
  1625   00117E  2A04               	incf	(strncat@src+1)^0,f,c
  1626   001180  0605               	decf	strncat@n^0,f,c
  1627   001182  A0D8               	btfss	status,0,c
  1628   001184  0606               	decf	(strncat@n+1)^0,f,c
  1629   001186                     l1747:
  1630   001186  5005               	movf	strncat@n^0,w,c
  1631   001188  1006               	iorwf	(strncat@n+1)^0,w,c
  1632   00118A  B4D8               	btfsc	status,2,c
  1633   00118C  EFCA  F008         	goto	u1401
  1634   001190  EFCC  F008         	goto	u1400
  1635   001194                     u1401:
  1636   001194  EFDE  F008         	goto	l1751
  1637   001198                     u1400:
  1638   001198  C003  FFD9         	movff	strncat@src,fsr2l
  1639   00119C  C004  FFDA         	movff	strncat@src+1,fsr2h
  1640   0011A0  C007  FFE1         	movff	strncat@cp,fsr1l
  1641   0011A4  C008  FFE2         	movff	strncat@cp+1,fsr1h
  1642   0011A8  CFDF FFE7          	movff	indf2,indf1
  1643   0011AC  50E7               	movf	indf1,w,c
  1644   0011AE  A4D8               	btfss	status,2,c
  1645   0011B0  EFDC  F008         	goto	u1411
  1646   0011B4  EFDE  F008         	goto	u1410
  1647   0011B8                     u1411:
  1648   0011B8  EFBC  F008         	goto	l1745
  1649   0011BC                     u1410:
  1650   0011BC                     l1751:
  1651   0011BC  5005               	movf	strncat@n^0,w,c
  1652   0011BE  1006               	iorwf	(strncat@n+1)^0,w,c
  1653   0011C0  A4D8               	btfss	status,2,c
  1654   0011C2  EFE5  F008         	goto	u1421
  1655   0011C6  EFE7  F008         	goto	u1420
  1656   0011CA                     u1421:
  1657   0011CA  EFEC  F008         	goto	l865
  1658   0011CE                     u1420:
  1659   0011CE  C007  FFD9         	movff	strncat@cp,fsr2l
  1660   0011D2  C008  FFDA         	movff	strncat@cp+1,fsr2h
  1661   0011D6  6ADF               	clrf	indf2,c
  1662   0011D8                     l865:
  1663   0011D8  0012               	return		;funcret
  1664   0011DA                     __end_of_strncat:
  1665                           	callstack 0
  1666                           
  1667 ;; *************** function _strcat *****************
  1668 ;; Defined at:
  1669 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcat.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  dest            2    0[COMRAM] PTR unsigned char 
  1672 ;;		 -> main@formatted_lon(15), main@formatted_lat(15), 
  1673 ;;  src             2    2[COMRAM] PTR const unsigned char 
  1674 ;;		 -> STR_7(3), STR_6(2), STR_5(3), STR_4(2), 
  1675 ;;		 -> main@ew(2), main@ns(2), 
  1676 ;; Auto vars:     Size  Location     Type
  1677 ;;  i               2    4[COMRAM] unsigned int 
  1678 ;; Return value:  Size  Location     Type
  1679 ;;                  2    0[COMRAM] PTR unsigned char 
  1680 ;; Registers used:
  1681 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  1682 ;; Tracked objects:
  1683 ;;		On entry : 0/0
  1684 ;;		On exit  : 0/0
  1685 ;;		Unchanged: 0/0
  1686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1687 ;;      Params:         4       0       0       0       0       0       0       0       0
  1688 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1689 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1690 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1691 ;;Total ram usage:        6 bytes
  1692 ;; Hardware stack levels used: 1
  1693 ;; This function calls:
  1694 ;;		Nothing
  1695 ;; This function is called by:
  1696 ;;		_main
  1697 ;; This function uses a non-reentrant model
  1698 ;;
  1699                           
  1700                           	psect	text2
  1701   0012DE                     __ptext2:
  1702                           	callstack 0
  1703   0012DE                     _strcat:
  1704                           	callstack 30
  1705   0012DE  0E00               	movlw	0
  1706   0012E0  6E06               	movwf	(strcat@i+1)^0,c
  1707   0012E2  0E00               	movlw	0
  1708   0012E4  6E05               	movwf	strcat@i^0,c
  1709   0012E6  EF77  F009         	goto	l1733
  1710   0012EA                     l1731:
  1711   0012EA  4A05               	infsnz	strcat@i^0,f,c
  1712   0012EC  2A06               	incf	(strcat@i+1)^0,f,c
  1713   0012EE                     l1733:
  1714   0012EE  5005               	movf	strcat@i^0,w,c
  1715   0012F0  2401               	addwf	strcat@dest^0,w,c
  1716   0012F2  6ED9               	movwf	fsr2l,c
  1717   0012F4  5006               	movf	(strcat@i+1)^0,w,c
  1718   0012F6  2002               	addwfc	(strcat@dest+1)^0,w,c
  1719   0012F8  6EDA               	movwf	fsr2h,c
  1720   0012FA  50DF               	movf	indf2,w,c
  1721   0012FC  A4D8               	btfss	status,2,c
  1722   0012FE  EF83  F009         	goto	u1361
  1723   001302  EF85  F009         	goto	u1360
  1724   001306                     u1361:
  1725   001306  EF75  F009         	goto	l1731
  1726   00130A                     u1360:
  1727   00130A  EF8B  F009         	goto	l1737
  1728   00130E                     l1735:
  1729   00130E  4A05               	infsnz	strcat@i^0,f,c
  1730   001310  2A06               	incf	(strcat@i+1)^0,f,c
  1731   001312  4A03               	infsnz	strcat@src^0,f,c
  1732   001314  2A04               	incf	(strcat@src+1)^0,f,c
  1733   001316                     l1737:
  1734   001316  C003  FFF6         	movff	strcat@src,tblptrl
  1735   00131A  C004  FFF7         	movff	strcat@src+1,tblptrh
  1736   00131E  6AF8               	clrf	tblptru,c
  1737   001320  5005               	movf	strcat@i^0,w,c
  1738   001322  2401               	addwf	strcat@dest^0,w,c
  1739   001324  6ED9               	movwf	fsr2l,c
  1740   001326  5006               	movf	(strcat@i+1)^0,w,c
  1741   001328  2002               	addwfc	(strcat@dest+1)^0,w,c
  1742   00132A  6EDA               	movwf	fsr2h,c
  1743   00132C  0E07               	movlw	(high __ramtop+-1)
  1744   00132E  64F7               	cpfsgt	tblptrh,c
  1745   001330  D003               	bra	u1377
  1746   001332  0008               	tblrd		*
  1747   001334  50F5               	movf	tablat,w,c
  1748   001336  D005               	bra	u1370
  1749   001338                     u1377:
  1750   001338  CFF6 FFE9          	movff	tblptrl,fsr0l
  1751   00133C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1752   001340  50EF               	movf	indf0,w,c
  1753   001342                     u1370:
  1754   001342  6EDF               	movwf	indf2,c
  1755   001344  50DF               	movf	indf2,w,c
  1756   001346  A4D8               	btfss	status,2,c
  1757   001348  EFA8  F009         	goto	u1381
  1758   00134C  EFAA  F009         	goto	u1380
  1759   001350                     u1381:
  1760   001350  EF87  F009         	goto	l1735
  1761   001354                     u1380:
  1762   001354  0012               	return		;funcret
  1763   001356                     __end_of_strcat:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _memset *****************
  1767 ;; Defined at:
  1768 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\memset.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  dest            2    0[COMRAM] PTR void 
  1771 ;;		 -> main@buffer(100), main@ew(2), main@lon(11), main@ns(2), 
  1772 ;;		 -> main@lat(10), 
  1773 ;;  c               2    2[COMRAM] int 
  1774 ;;  n               2    4[COMRAM] unsigned int 
  1775 ;; Auto vars:     Size  Location     Type
  1776 ;;  p               2    6[COMRAM] PTR unsigned char 
  1777 ;;		 -> main@buffer(100), main@ew(2), main@lon(11), main@ns(2), 
  1778 ;;		 -> main@lat(10), 
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  2    0[COMRAM] PTR void 
  1781 ;; Registers used:
  1782 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1788 ;;      Params:         6       0       0       0       0       0       0       0       0
  1789 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1791 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1792 ;;Total ram usage:        8 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; This function calls:
  1795 ;;		Nothing
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           	psect	text3
  1802   001580                     __ptext3:
  1803                           	callstack 0
  1804   001580                     _memset:
  1805                           	callstack 30
  1806   001580  C001  F007         	movff	memset@dest,memset@p
  1807   001584  C002  F008         	movff	memset@dest+1,memset@p+1
  1808   001588  EFCE  F00A         	goto	l1605
  1809   00158C                     l1601:
  1810   00158C  C007  FFD9         	movff	memset@p,fsr2l
  1811   001590  C008  FFDA         	movff	memset@p+1,fsr2h
  1812   001594  C003  FFDF         	movff	memset@c,indf2
  1813   001598  4A07               	infsnz	memset@p^0,f,c
  1814   00159A  2A08               	incf	(memset@p+1)^0,f,c
  1815   00159C                     l1605:
  1816   00159C  0605               	decf	memset@n^0,f,c
  1817   00159E  A0D8               	btfss	status,0,c
  1818   0015A0  0606               	decf	(memset@n+1)^0,f,c
  1819   0015A2  2805               	incf	memset@n^0,w,c
  1820   0015A4  E106               	bnz	u1101
  1821   0015A6  2806               	incf	(memset@n+1)^0,w,c
  1822   0015A8  A4D8               	btfss	status,2,c
  1823   0015AA  EFD9  F00A         	goto	u1101
  1824   0015AE  EFDB  F00A         	goto	u1100
  1825   0015B2                     u1101:
  1826   0015B2  EFC6  F00A         	goto	l1601
  1827   0015B6                     u1100:
  1828   0015B6  0012               	return		;funcret
  1829   0015B8                     __end_of_memset:
  1830                           	callstack 0
  1831                           
  1832 ;; *************** function _LCD_String_xy *****************
  1833 ;; Defined at:
  1834 ;;		line 50 in file "LCD.c"
  1835 ;; Parameters:    Size  Location     Type
  1836 ;;  row             1    wreg     unsigned char 
  1837 ;;  pos             1    4[COMRAM] unsigned char 
  1838 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  1839 ;;		 -> STR_10(12), STR_9(5), STR_8(5), main@formatted_lon(15), 
  1840 ;;		 -> main@formatted_lat(15), STR_1(10), 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  row             1    7[COMRAM] unsigned char 
  1843 ;;  location        1   10[COMRAM] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1853 ;;      Params:         3       0       0       0       0       0       0       0       0
  1854 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1855 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1856 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1857 ;;Total ram usage:        7 bytes
  1858 ;; Hardware stack levels used: 1
  1859 ;; Hardware stack levels required when called: 2
  1860 ;; This function calls:
  1861 ;;		_LCD_Command
  1862 ;;		_LCD_String
  1863 ;; This function is called by:
  1864 ;;		_main
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           
  1868                           	psect	text4
  1869   00147C                     __ptext4:
  1870                           	callstack 0
  1871   00147C                     _LCD_String_xy:
  1872                           	callstack 28
  1873                           
  1874                           ;incstack = 0
  1875                           ;LCD_String_xy@row stored from wreg
  1876   00147C  6E08               	movwf	LCD_String_xy@row^0,c
  1877   00147E                     
  1878                           ;LCD.c: 51:     uint8_t location;;LCD.c: 52:     pos = (pos > 15) ? 15 : pos;
  1879   00147E  0E10               	movlw	16
  1880   001480  6005               	cpfslt	LCD_String_xy@pos^0,c
  1881   001482  EF45  F00A         	goto	u1071
  1882   001486  EF47  F00A         	goto	u1070
  1883   00148A                     u1071:
  1884   00148A  EF4C  F00A         	goto	l1581
  1885   00148E                     u1070:
  1886   00148E  C005  F009         	movff	LCD_String_xy@pos,_LCD_String_xy$56
  1887   001492  6A0A               	clrf	(_LCD_String_xy$56+1)^0,c
  1888   001494  EF50  F00A         	goto	l1583
  1889   001498                     l1581:
  1890   001498  0E00               	movlw	0
  1891   00149A  6E0A               	movwf	(_LCD_String_xy$56+1)^0,c
  1892   00149C  0E0F               	movlw	15
  1893   00149E  6E09               	movwf	_LCD_String_xy$56^0,c
  1894   0014A0                     l1583:
  1895   0014A0  C009  F005         	movff	_LCD_String_xy$56,LCD_String_xy@pos
  1896                           
  1897                           ;LCD.c: 54:     if(row == 0) {
  1898   0014A4  5008               	movf	LCD_String_xy@row^0,w,c
  1899   0014A6  A4D8               	btfss	status,2,c
  1900   0014A8  EF58  F00A         	goto	u1081
  1901   0014AC  EF5A  F00A         	goto	u1080
  1902   0014B0                     u1081:
  1903   0014B0  EF5F  F00A         	goto	l1587
  1904   0014B4                     u1080:
  1905   0014B4                     
  1906                           ;LCD.c: 55:         location = 0x80 + pos;
  1907   0014B4  5005               	movf	LCD_String_xy@pos^0,w,c
  1908   0014B6  0F80               	addlw	128
  1909   0014B8  6E0B               	movwf	LCD_String_xy@location^0,c
  1910                           
  1911                           ;LCD.c: 56:     } else {
  1912   0014BA  EF62  F00A         	goto	l1589
  1913   0014BE                     l1587:
  1914                           
  1915                           ;LCD.c: 57:         location = 0xC0 + pos;
  1916   0014BE  5005               	movf	LCD_String_xy@pos^0,w,c
  1917   0014C0  0FC0               	addlw	192
  1918   0014C2  6E0B               	movwf	LCD_String_xy@location^0,c
  1919   0014C4                     l1589:
  1920                           
  1921                           ;LCD.c: 60:     LCD_Command(location);
  1922   0014C4  500B               	movf	LCD_String_xy@location^0,w,c
  1923   0014C6  EC96  F00A         	call	_LCD_Command
  1924   0014CA                     
  1925                           ;LCD.c: 61:     LCD_String(msg);
  1926   0014CA  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  1927   0014CE  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  1928   0014D2  EC0F  F00A         	call	_LCD_String	;wreg free
  1929   0014D6  0012               	return		;funcret
  1930   0014D8                     __end_of_LCD_String_xy:
  1931                           	callstack 0
  1932                           
  1933 ;; *************** function _LCD_String *****************
  1934 ;; Defined at:
  1935 ;;		line 43 in file "LCD.c"
  1936 ;; Parameters:    Size  Location     Type
  1937 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  1938 ;;		 -> STR_10(12), STR_9(5), STR_8(5), main@formatted_lon(15), 
  1939 ;;		 -> main@formatted_lat(15), STR_1(10), 
  1940 ;; Auto vars:     Size  Location     Type
  1941 ;;		None
  1942 ;; Return value:  Size  Location     Type
  1943 ;;                  1    wreg      void 
  1944 ;; Registers used:
  1945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1946 ;; Tracked objects:
  1947 ;;		On entry : 0/0
  1948 ;;		On exit  : 0/0
  1949 ;;		Unchanged: 0/0
  1950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1951 ;;      Params:         2       0       0       0       0       0       0       0       0
  1952 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1953 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1954 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1955 ;;Total ram usage:        2 bytes
  1956 ;; Hardware stack levels used: 1
  1957 ;; Hardware stack levels required when called: 1
  1958 ;; This function calls:
  1959 ;;		_LCD_Char
  1960 ;; This function is called by:
  1961 ;;		_LCD_String_xy
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	text5
  1966   00141E                     __ptext5:
  1967                           	callstack 0
  1968   00141E                     _LCD_String:
  1969                           	callstack 28
  1970   00141E                     
  1971                           ;LCD.c: 44:     while(*msg != 0) {
  1972   00141E  EF25  F00A         	goto	l1497
  1973   001422                     l1493:
  1974                           
  1975                           ;LCD.c: 45:         LCD_Char(*msg);
  1976   001422  C003  FFF6         	movff	LCD_String@msg,tblptrl
  1977   001426  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  1978   00142A  6AF8               	clrf	tblptru,c
  1979   00142C  0E07               	movlw	(high __ramtop+-1)
  1980   00142E  64F7               	cpfsgt	tblptrh,c
  1981   001430  D003               	bra	u927
  1982   001432  0008               	tblrd		*
  1983   001434  50F5               	movf	tablat,w,c
  1984   001436  D005               	bra	u920
  1985   001438                     u927:
  1986   001438  CFF6 FFE9          	movff	tblptrl,fsr0l
  1987   00143C  CFF7 FFEA          	movff	tblptrh,fsr0h
  1988   001440  50EF               	movf	indf0,w,c
  1989   001442                     u920:
  1990   001442  EC6C  F00A         	call	_LCD_Char
  1991   001446                     
  1992                           ;LCD.c: 46:         msg++;
  1993   001446  4A03               	infsnz	LCD_String@msg^0,f,c
  1994   001448  2A04               	incf	(LCD_String@msg+1)^0,f,c
  1995   00144A                     l1497:
  1996                           
  1997                           ;LCD.c: 44:     while(*msg != 0) {
  1998   00144A  C003  FFF6         	movff	LCD_String@msg,tblptrl
  1999   00144E  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  2000   001452  6AF8               	clrf	tblptru,c
  2001   001454  0E07               	movlw	(high __ramtop+-1)
  2002   001456  64F7               	cpfsgt	tblptrh,c
  2003   001458  D003               	bra	u937
  2004   00145A  0008               	tblrd		*
  2005   00145C  50F5               	movf	tablat,w,c
  2006   00145E  D005               	bra	u930
  2007   001460                     u937:
  2008   001460  CFF6 FFE9          	movff	tblptrl,fsr0l
  2009   001464  CFF7 FFEA          	movff	tblptrh,fsr0h
  2010   001468  50EF               	movf	indf0,w,c
  2011   00146A                     u930:
  2012   00146A  0900               	iorlw	0
  2013   00146C  A4D8               	btfss	status,2,c
  2014   00146E  EF3B  F00A         	goto	u941
  2015   001472  EF3D  F00A         	goto	u940
  2016   001476                     u941:
  2017   001476  EF11  F00A         	goto	l1493
  2018   00147A                     u940:
  2019   00147A  0012               	return		;funcret
  2020   00147C                     __end_of_LCD_String:
  2021                           	callstack 0
  2022                           
  2023 ;; *************** function _LCD_Char *****************
  2024 ;; Defined at:
  2025 ;;		line 28 in file "LCD.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  dat             1    wreg     unsigned char 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;  dat             1    1[COMRAM] unsigned char 
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  1    wreg      void 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2039 ;;      Params:         0       0       0       0       0       0       0       0       0
  2040 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2041 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2042 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2043 ;;Total ram usage:        2 bytes
  2044 ;; Hardware stack levels used: 1
  2045 ;; This function calls:
  2046 ;;		Nothing
  2047 ;; This function is called by:
  2048 ;;		_LCD_String
  2049 ;; This function uses a non-reentrant model
  2050 ;;
  2051                           
  2052                           	psect	text6
  2053   0014D8                     __ptext6:
  2054                           	callstack 0
  2055   0014D8                     _LCD_Char:
  2056                           	callstack 28
  2057                           
  2058                           ;incstack = 0
  2059                           ;LCD_Char@dat stored from wreg
  2060   0014D8  6E02               	movwf	LCD_Char@dat^0,c
  2061   0014DA                     
  2062                           ;LCD.c: 29:     LATD = (LATD & 0x0F) | (dat & 0xF0);
  2063   0014DA  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  2064   0014DE  0EF0               	movlw	240
  2065   0014E0  1601               	andwf	??_LCD_Char^0,f,c
  2066   0014E2  508C               	movf	140,w,c	;volatile
  2067   0014E4  0B0F               	andlw	15
  2068   0014E6  1001               	iorwf	??_LCD_Char^0,w,c
  2069   0014E8  6E8C               	movwf	140,c	;volatile
  2070   0014EA                     
  2071                           ;LCD.c: 30:     LATD0 = 1;
  2072   0014EA  808C               	bsf	3980,0,c	;volatile
  2073   0014EC                     
  2074                           ;LCD.c: 31:     LATD1 = 1;
  2075   0014EC  828C               	bsf	3980,1,c	;volatile
  2076   0014EE                     
  2077                           ;LCD.c: 32:     __nop();
  2078   0014EE  0000               	nop	
  2079   0014F0                     
  2080                           ;LCD.c: 33:     LATD1 = 0;
  2081   0014F0  928C               	bcf	3980,1,c	;volatile
  2082   0014F2                     
  2083                           ;LCD.c: 34:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2084   0014F2  0E03               	movlw	3
  2085   0014F4  6E01               	movwf	??_LCD_Char^0,c
  2086   0014F6  0E98               	movlw	152
  2087   0014F8                     u1547:
  2088   0014F8  2EE8               	decfsz	wreg,f,c
  2089   0014FA  D7FE               	bra	u1547
  2090   0014FC  2E01               	decfsz	??_LCD_Char^0,f,c
  2091   0014FE  D7FC               	bra	u1547
  2092   001500                     
  2093                           ;LCD.c: 36:     LATD = (LATD & 0x0F) | ((dat << 4) & 0xF0);
  2094   001500  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  2095   001504  3A01               	swapf	??_LCD_Char^0,f,c
  2096   001506  0EF0               	movlw	240
  2097   001508  1601               	andwf	??_LCD_Char^0,f,c
  2098   00150A  0EF0               	movlw	240
  2099   00150C  1601               	andwf	??_LCD_Char^0,f,c
  2100   00150E  508C               	movf	140,w,c	;volatile
  2101   001510  0B0F               	andlw	15
  2102   001512  1001               	iorwf	??_LCD_Char^0,w,c
  2103   001514  6E8C               	movwf	140,c	;volatile
  2104   001516                     
  2105                           ;LCD.c: 37:     LATD1 = 1;
  2106   001516  828C               	bsf	3980,1,c	;volatile
  2107   001518                     
  2108                           ;LCD.c: 38:     __nop();
  2109   001518  0000               	nop	
  2110   00151A                     
  2111                           ;LCD.c: 39:     LATD1 = 0;
  2112   00151A  928C               	bcf	3980,1,c	;volatile
  2113                           
  2114                           ;LCD.c: 40:     _delay((unsigned long)((3)*(8000000/4000.0)));
  2115   00151C  0E08               	movlw	8
  2116   00151E  6E01               	movwf	??_LCD_Char^0,c
  2117   001520  0ECA               	movlw	202
  2118   001522                     u1557:
  2119   001522  2EE8               	decfsz	wreg,f,c
  2120   001524  D7FE               	bra	u1557
  2121   001526  2E01               	decfsz	??_LCD_Char^0,f,c
  2122   001528  D7FC               	bra	u1557
  2123   00152A  0012               	return		;funcret
  2124   00152C                     __end_of_LCD_Char:
  2125                           	callstack 0
  2126                           
  2127 ;; *************** function _LCD_Init *****************
  2128 ;; Defined at:
  2129 ;;		line 3 in file "LCD.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;		None
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2143 ;;      Params:         0       0       0       0       0       0       0       0       0
  2144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2145 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2146 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2147 ;;Total ram usage:        1 bytes
  2148 ;; Hardware stack levels used: 1
  2149 ;; Hardware stack levels required when called: 1
  2150 ;; This function calls:
  2151 ;;		_LCD_Command
  2152 ;; This function is called by:
  2153 ;;		_main
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           	psect	text7
  2158   0015EC                     __ptext7:
  2159                           	callstack 0
  2160   0015EC                     _LCD_Init:
  2161                           	callstack 29
  2162   0015EC                     
  2163                           ;LCD.c: 4:     TRISD = 0;
  2164   0015EC  6A95               	clrf	149,c	;volatile
  2165   0015EE                     
  2166                           ;LCD.c: 5:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2167   0015EE  0E27               	movlw	39
  2168   0015F0  6E03               	movwf	??_LCD_Init^0,c
  2169   0015F2  0EF5               	movlw	245
  2170   0015F4                     u1567:
  2171   0015F4  2EE8               	decfsz	wreg,f,c
  2172   0015F6  D7FE               	bra	u1567
  2173   0015F8  2E03               	decfsz	??_LCD_Init^0,f,c
  2174   0015FA  D7FC               	bra	u1567
  2175   0015FC  0000               	nop	
  2176   0015FE                     
  2177                           ;LCD.c: 6:     LCD_Command(0x02);
  2178   0015FE  0E02               	movlw	2
  2179   001600  EC96  F00A         	call	_LCD_Command
  2180   001604                     
  2181                           ;LCD.c: 7:     LCD_Command(0x28);
  2182   001604  0E28               	movlw	40
  2183   001606  EC96  F00A         	call	_LCD_Command
  2184   00160A                     
  2185                           ;LCD.c: 8:     LCD_Command(0x01);
  2186   00160A  0E01               	movlw	1
  2187   00160C  EC96  F00A         	call	_LCD_Command
  2188   001610                     
  2189                           ;LCD.c: 9:     LCD_Command(0x0C);
  2190   001610  0E0C               	movlw	12
  2191   001612  EC96  F00A         	call	_LCD_Command
  2192   001616                     
  2193                           ;LCD.c: 10:     LCD_Command(0x06);
  2194   001616  0E06               	movlw	6
  2195   001618  EC96  F00A         	call	_LCD_Command
  2196   00161C  0012               	return		;funcret
  2197   00161E                     __end_of_LCD_Init:
  2198                           	callstack 0
  2199                           
  2200 ;; *************** function _LCD_Clear *****************
  2201 ;; Defined at:
  2202 ;;		line 64 in file "LCD.c"
  2203 ;; Parameters:    Size  Location     Type
  2204 ;;		None
  2205 ;; Auto vars:     Size  Location     Type
  2206 ;;		None
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, status,2, status,0, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2216 ;;      Params:         0       0       0       0       0       0       0       0       0
  2217 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2218 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2219 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2220 ;;Total ram usage:        0 bytes
  2221 ;; Hardware stack levels used: 1
  2222 ;; Hardware stack levels required when called: 1
  2223 ;; This function calls:
  2224 ;;		_LCD_Command
  2225 ;; This function is called by:
  2226 ;;		_main
  2227 ;; This function uses a non-reentrant model
  2228 ;;
  2229                           
  2230                           	psect	text8
  2231   001662                     __ptext8:
  2232                           	callstack 0
  2233   001662                     _LCD_Clear:
  2234                           	callstack 29
  2235   001662                     
  2236                           ;LCD.c: 65:     LCD_Command(0x01);
  2237   001662  0E01               	movlw	1
  2238   001664  EC96  F00A         	call	_LCD_Command
  2239   001668  0012               	return		;funcret
  2240   00166A                     __end_of_LCD_Clear:
  2241                           	callstack 0
  2242                           
  2243 ;; *************** function _LCD_Command *****************
  2244 ;; Defined at:
  2245 ;;		line 13 in file "LCD.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  cmd             1    wreg     unsigned char 
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;  cmd             1    1[COMRAM] unsigned char 
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		wreg, status,2, status,0
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2259 ;;      Params:         0       0       0       0       0       0       0       0       0
  2260 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2261 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2262 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2263 ;;Total ram usage:        2 bytes
  2264 ;; Hardware stack levels used: 1
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_LCD_Init
  2269 ;;		_LCD_String_xy
  2270 ;;		_LCD_Clear
  2271 ;; This function uses a non-reentrant model
  2272 ;;
  2273                           
  2274                           	psect	text9
  2275   00152C                     __ptext9:
  2276                           	callstack 0
  2277   00152C                     _LCD_Command:
  2278                           	callstack 29
  2279                           
  2280                           ;incstack = 0
  2281                           ;LCD_Command@cmd stored from wreg
  2282   00152C  6E02               	movwf	LCD_Command@cmd^0,c
  2283   00152E                     
  2284                           ;LCD.c: 14:     LATD = (LATD & 0x0F) | (cmd & 0xF0);
  2285   00152E  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  2286   001532  0EF0               	movlw	240
  2287   001534  1601               	andwf	??_LCD_Command^0,f,c
  2288   001536  508C               	movf	140,w,c	;volatile
  2289   001538  0B0F               	andlw	15
  2290   00153A  1001               	iorwf	??_LCD_Command^0,w,c
  2291   00153C  6E8C               	movwf	140,c	;volatile
  2292   00153E                     
  2293                           ;LCD.c: 15:     LATD0 = 0;
  2294   00153E  908C               	bcf	3980,0,c	;volatile
  2295   001540                     
  2296                           ;LCD.c: 16:     LATD1 = 1;
  2297   001540  828C               	bsf	3980,1,c	;volatile
  2298   001542                     
  2299                           ;LCD.c: 17:     __nop();
  2300   001542  0000               	nop	
  2301   001544                     
  2302                           ;LCD.c: 18:     LATD1 = 0;
  2303   001544  928C               	bcf	3980,1,c	;volatile
  2304   001546                     
  2305                           ;LCD.c: 19:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2306   001546  0E03               	movlw	3
  2307   001548  6E01               	movwf	??_LCD_Command^0,c
  2308   00154A  0E98               	movlw	152
  2309   00154C                     u1577:
  2310   00154C  2EE8               	decfsz	wreg,f,c
  2311   00154E  D7FE               	bra	u1577
  2312   001550  2E01               	decfsz	??_LCD_Command^0,f,c
  2313   001552  D7FC               	bra	u1577
  2314   001554                     
  2315                           ;LCD.c: 21:     LATD = (LATD & 0x0F) | ((cmd << 4) & 0xF0);
  2316   001554  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  2317   001558  3A01               	swapf	??_LCD_Command^0,f,c
  2318   00155A  0EF0               	movlw	240
  2319   00155C  1601               	andwf	??_LCD_Command^0,f,c
  2320   00155E  0EF0               	movlw	240
  2321   001560  1601               	andwf	??_LCD_Command^0,f,c
  2322   001562  508C               	movf	140,w,c	;volatile
  2323   001564  0B0F               	andlw	15
  2324   001566  1001               	iorwf	??_LCD_Command^0,w,c
  2325   001568  6E8C               	movwf	140,c	;volatile
  2326   00156A                     
  2327                           ;LCD.c: 22:     LATD1 = 1;
  2328   00156A  828C               	bsf	3980,1,c	;volatile
  2329   00156C                     
  2330                           ;LCD.c: 23:     __nop();
  2331   00156C  0000               	nop	
  2332   00156E                     
  2333                           ;LCD.c: 24:     LATD1 = 0;
  2334   00156E  928C               	bcf	3980,1,c	;volatile
  2335                           
  2336                           ;LCD.c: 25:     _delay((unsigned long)((3)*(8000000/4000.0)));
  2337   001570  0E08               	movlw	8
  2338   001572  6E01               	movwf	??_LCD_Command^0,c
  2339   001574  0ECA               	movlw	202
  2340   001576                     u1587:
  2341   001576  2EE8               	decfsz	wreg,f,c
  2342   001578  D7FE               	bra	u1587
  2343   00157A  2E01               	decfsz	??_LCD_Command^0,f,c
  2344   00157C  D7FC               	bra	u1587
  2345   00157E  0012               	return		;funcret
  2346   001580                     __end_of_LCD_Command:
  2347                           	callstack 0
  2348                           
  2349 ;; *************** function _GPS_ReadSentence *****************
  2350 ;; Defined at:
  2351 ;;		line 24 in file "GPS.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  buffer          2    0[COMRAM] PTR unsigned char 
  2354 ;;		 -> main@buffer(100), 
  2355 ;;  max_len         2    2[COMRAM] unsigned short 
  2356 ;;  timeout_ms      2    4[COMRAM] unsigned short 
  2357 ;; Auto vars:     Size  Location     Type
  2358 ;;  t               2    8[COMRAM] unsigned short 
  2359 ;;  dummy           1   10[COMRAM] volatile unsigned char 
  2360 ;;  i               2   12[COMRAM] unsigned short 
  2361 ;;  c               1   14[COMRAM] unsigned char 
  2362 ;;  started         1   11[COMRAM] unsigned char 
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      unsigned char 
  2365 ;; Registers used:
  2366 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2372 ;;      Params:         6       0       0       0       0       0       0       0       0
  2373 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2374 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2375 ;;      Totals:        15       0       0       0       0       0       0       0       0
  2376 ;;Total ram usage:       15 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_main
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text10
  2386   000DB4                     __ptext10:
  2387                           	callstack 0
  2388   000DB4                     _GPS_ReadSentence:
  2389                           	callstack 30
  2390   000DB4                     
  2391                           ;GPS.c: 25:     uint16_t i = 0;
  2392   000DB4  0E00               	movlw	0
  2393   000DB6  6E0E               	movwf	(GPS_ReadSentence@i+1)^0,c
  2394   000DB8  0E00               	movlw	0
  2395   000DBA  6E0D               	movwf	GPS_ReadSentence@i^0,c
  2396   000DBC                     
  2397                           ;GPS.c: 26:     char c;;GPS.c: 27:     uint8_t started = 0;
  2398   000DBC  6A0C               	clrf	GPS_ReadSentence@started^0,c
  2399   000DBE                     
  2400                           ;GPS.c: 30:     RCSTAbits.CREN = 0;
  2401   000DBE  98AB               	bcf	171,4,c	;volatile
  2402   000DC0                     
  2403                           ;GPS.c: 31:     __nop();
  2404   000DC0  0000               	nop	
  2405   000DC2                     
  2406                           ;GPS.c: 32:     RCSTAbits.CREN = 1;
  2407   000DC2  88AB               	bsf	171,4,c	;volatile
  2408                           
  2409                           ;GPS.c: 35:     while(PIR1bits.RCIF) {
  2410   000DC4  EFE6  F006         	goto	l126
  2411   000DC8                     l127:
  2412                           
  2413                           ;GPS.c: 36:         volatile char dummy = RCREG;
  2414   000DC8  CFAE F00B          	movff	4014,GPS_ReadSentence@dummy	;volatile
  2415   000DCC                     l126:
  2416                           
  2417                           ;GPS.c: 35:     while(PIR1bits.RCIF) {
  2418   000DCC  BA9E               	btfsc	158,5,c	;volatile
  2419   000DCE  EFEB  F006         	goto	u1111
  2420   000DD2  EFED  F006         	goto	u1110
  2421   000DD6                     u1111:
  2422   000DD6  EFE4  F006         	goto	l127
  2423   000DDA                     u1110:
  2424   000DDA                     
  2425                           ;GPS.c: 41:     for(uint16_t t = 0; t < timeout_ms; t++) {
  2426   000DDA  0E00               	movlw	0
  2427   000DDC  6E0A               	movwf	(GPS_ReadSentence@t+1)^0,c
  2428   000DDE  0E00               	movlw	0
  2429   000DE0  6E09               	movwf	GPS_ReadSentence@t^0,c
  2430   000DE2  EF63  F007         	goto	l1655
  2431   000DE6                     l130:
  2432                           
  2433                           ;GPS.c: 42:         if(PIR1bits.RCIF) {
  2434   000DE6  AA9E               	btfss	158,5,c	;volatile
  2435   000DE8  EFF8  F006         	goto	u1121
  2436   000DEC  EFFA  F006         	goto	u1120
  2437   000DF0                     u1121:
  2438   000DF0  EF5D  F007         	goto	l1651
  2439   000DF4                     u1120:
  2440   000DF4                     
  2441                           ;GPS.c: 43:             c = RCREG;
  2442   000DF4  CFAE F00F          	movff	4014,GPS_ReadSentence@c	;volatile
  2443                           
  2444                           ;GPS.c: 46:             if(RCSTAbits.OERR) {
  2445   000DF8  A2AB               	btfss	171,1,c	;volatile
  2446   000DFA  EF01  F007         	goto	u1131
  2447   000DFE  EF03  F007         	goto	u1130
  2448   000E02                     u1131:
  2449   000E02  EF07  F007         	goto	l1623
  2450   000E06                     u1130:
  2451   000E06                     
  2452                           ;GPS.c: 47:                 RCSTAbits.CREN = 0;
  2453   000E06  98AB               	bcf	171,4,c	;volatile
  2454                           
  2455                           ;GPS.c: 48:                 RCSTAbits.CREN = 1;
  2456   000E08  88AB               	bsf	171,4,c	;volatile
  2457                           
  2458                           ;GPS.c: 49:                 continue;
  2459   000E0A  EF61  F007         	goto	l1653
  2460   000E0E                     l1623:
  2461                           
  2462                           ;GPS.c: 53:             if(!started && c == '$') {
  2463   000E0E  500C               	movf	GPS_ReadSentence@started^0,w,c
  2464   000E10  A4D8               	btfss	status,2,c
  2465   000E12  EF0D  F007         	goto	u1141
  2466   000E16  EF0F  F007         	goto	u1140
  2467   000E1A                     u1141:
  2468   000E1A  EF26  F007         	goto	l1633
  2469   000E1E                     u1140:
  2470   000E1E  0E24               	movlw	36
  2471   000E20  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  2472   000E22  A4D8               	btfss	status,2,c
  2473   000E24  EF16  F007         	goto	u1151
  2474   000E28  EF18  F007         	goto	u1150
  2475   000E2C                     u1151:
  2476   000E2C  EF26  F007         	goto	l1633
  2477   000E30                     u1150:
  2478   000E30                     
  2479                           ;GPS.c: 54:                 started = 1;
  2480   000E30  0E01               	movlw	1
  2481   000E32  6E0C               	movwf	GPS_ReadSentence@started^0,c
  2482   000E34                     l1629:
  2483                           
  2484                           ;GPS.c: 55:                 buffer[i++] = c;
  2485   000E34  500D               	movf	GPS_ReadSentence@i^0,w,c
  2486   000E36  2401               	addwf	GPS_ReadSentence@buffer^0,w,c
  2487   000E38  6ED9               	movwf	fsr2l,c
  2488   000E3A  500E               	movf	(GPS_ReadSentence@i+1)^0,w,c
  2489   000E3C  2002               	addwfc	(GPS_ReadSentence@buffer+1)^0,w,c
  2490   000E3E  6EDA               	movwf	fsr2h,c
  2491   000E40  C00F  FFDF         	movff	GPS_ReadSentence@c,indf2
  2492   000E44  4A0D               	infsnz	GPS_ReadSentence@i^0,f,c
  2493   000E46  2A0E               	incf	(GPS_ReadSentence@i+1)^0,f,c
  2494                           
  2495                           ;GPS.c: 56:             }
  2496   000E48  EF5D  F007         	goto	l1651
  2497   000E4C                     l1633:
  2498   000E4C  500C               	movf	GPS_ReadSentence@started^0,w,c
  2499   000E4E  B4D8               	btfsc	status,2,c
  2500   000E50  EF2C  F007         	goto	u1161
  2501   000E54  EF2E  F007         	goto	u1160
  2502   000E58                     u1161:
  2503   000E58  EF5D  F007         	goto	l1651
  2504   000E5C                     u1160:
  2505   000E5C                     
  2506                           ;GPS.c: 59:                 if(c == '\n' || i >= max_len-1) {
  2507   000E5C  0E0A               	movlw	10
  2508   000E5E  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  2509   000E60  B4D8               	btfsc	status,2,c
  2510   000E62  EF35  F007         	goto	u1171
  2511   000E66  EF37  F007         	goto	u1170
  2512   000E6A                     u1171:
  2513   000E6A  EF48  F007         	goto	l1639
  2514   000E6E                     u1170:
  2515   000E6E  0EFF               	movlw	255
  2516   000E70  2403               	addwf	GPS_ReadSentence@max_len^0,w,c
  2517   000E72  6E07               	movwf	??_GPS_ReadSentence^0,c
  2518   000E74  0EFF               	movlw	255
  2519   000E76  2004               	addwfc	(GPS_ReadSentence@max_len+1)^0,w,c
  2520   000E78  6E08               	movwf	(??_GPS_ReadSentence+1)^0,c
  2521   000E7A  5007               	movf	??_GPS_ReadSentence^0,w,c
  2522   000E7C  5C0D               	subwf	GPS_ReadSentence@i^0,w,c
  2523   000E7E  5008               	movf	(??_GPS_ReadSentence+1)^0,w,c
  2524   000E80  580E               	subwfb	(GPS_ReadSentence@i+1)^0,w,c
  2525   000E82  A0D8               	btfss	status,0,c
  2526   000E84  EF46  F007         	goto	u1181
  2527   000E88  EF48  F007         	goto	u1180
  2528   000E8C                     u1181:
  2529   000E8C  EF52  F007         	goto	l1645
  2530   000E90                     u1180:
  2531   000E90                     l1639:
  2532                           
  2533                           ;GPS.c: 60:                     buffer[i] = '\0';
  2534   000E90  500D               	movf	GPS_ReadSentence@i^0,w,c
  2535   000E92  2401               	addwf	GPS_ReadSentence@buffer^0,w,c
  2536   000E94  6ED9               	movwf	fsr2l,c
  2537   000E96  500E               	movf	(GPS_ReadSentence@i+1)^0,w,c
  2538   000E98  2002               	addwfc	(GPS_ReadSentence@buffer+1)^0,w,c
  2539   000E9A  6EDA               	movwf	fsr2h,c
  2540   000E9C  6ADF               	clrf	indf2,c
  2541   000E9E                     
  2542                           ;GPS.c: 61:                     return 1;
  2543   000E9E  0E01               	movlw	1
  2544   000EA0  EF6F  F007         	goto	l140
  2545   000EA4                     l1645:
  2546                           
  2547                           ;GPS.c: 63:                 if(c != '\r') buffer[i++] = c;
  2548   000EA4  0E0D               	movlw	13
  2549   000EA6  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  2550   000EA8  B4D8               	btfsc	status,2,c
  2551   000EAA  EF59  F007         	goto	u1191
  2552   000EAE  EF5B  F007         	goto	u1190
  2553   000EB2                     u1191:
  2554   000EB2  EF5D  F007         	goto	l135
  2555   000EB6                     u1190:
  2556   000EB6  EF1A  F007         	goto	l1629
  2557   000EBA                     l135:
  2558   000EBA                     l1651:
  2559                           
  2560                           ;GPS.c: 66:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  2561   000EBA  0E42               	movlw	66
  2562   000EBC                     u1597:
  2563   000EBC  2EE8               	decfsz	wreg,f,c
  2564   000EBE  D7FE               	bra	u1597
  2565   000EC0  D000               	nop2	
  2566   000EC2                     l1653:
  2567   000EC2  4A09               	infsnz	GPS_ReadSentence@t^0,f,c
  2568   000EC4  2A0A               	incf	(GPS_ReadSentence@t+1)^0,f,c
  2569   000EC6                     l1655:
  2570   000EC6  5005               	movf	GPS_ReadSentence@timeout_ms^0,w,c
  2571   000EC8  5C09               	subwf	GPS_ReadSentence@t^0,w,c
  2572   000ECA  5006               	movf	(GPS_ReadSentence@timeout_ms+1)^0,w,c
  2573   000ECC  580A               	subwfb	(GPS_ReadSentence@t+1)^0,w,c
  2574   000ECE  A0D8               	btfss	status,0,c
  2575   000ED0  EF6C  F007         	goto	u1201
  2576   000ED4  EF6E  F007         	goto	u1200
  2577   000ED8                     u1201:
  2578   000ED8  EFF3  F006         	goto	l130
  2579   000EDC                     u1200:
  2580   000EDC                     
  2581                           ;GPS.c: 68:     return 0;
  2582   000EDC  0E00               	movlw	0
  2583   000EDE                     l140:
  2584   000EDE  0012               	return		;funcret
  2585   000EE0                     __end_of_GPS_ReadSentence:
  2586                           	callstack 0
  2587                           
  2588 ;; *************** function _GPS_ParseGPRMC *****************
  2589 ;; Defined at:
  2590 ;;		line 72 in file "GPS.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;  msg             2   13[COMRAM] PTR const unsigned char 
  2593 ;;		 -> main@buffer(100), 
  2594 ;;  lat             2   15[COMRAM] PTR unsigned char 
  2595 ;;		 -> main@lat(10), 
  2596 ;;  ns              2   17[COMRAM] PTR unsigned char 
  2597 ;;		 -> main@ns(2), 
  2598 ;;  lon             2   19[COMRAM] PTR unsigned char 
  2599 ;;		 -> main@lon(11), 
  2600 ;;  ew              2   21[COMRAM] PTR unsigned char 
  2601 ;;		 -> main@ew(2), 
  2602 ;; Auto vars:     Size  Location     Type
  2603 ;;  buf           100    0[BANK0 ] unsigned char [100]
  2604 ;;  token           1  103[BANK0 ] PTR unsigned char 
  2605 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  2606 ;;  data_valid      1  102[BANK0 ] unsigned char 
  2607 ;;  field           1  101[BANK0 ] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  1    wreg      unsigned char 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2617 ;;      Params:        10       0       0       0       0       0       0       0       0
  2618 ;;      Locals:         0     104       0       0       0       0       0       0       0
  2619 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2620 ;;      Totals:        11     104       0       0       0       0       0       0       0
  2621 ;;Total ram usage:      115 bytes
  2622 ;; Hardware stack levels used: 1
  2623 ;; Hardware stack levels required when called: 3
  2624 ;; This function calls:
  2625 ;;		_strncpy
  2626 ;;		_strstr
  2627 ;;		_strtok
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text11
  2634   000B80                     __ptext11:
  2635                           	callstack 0
  2636   000B80                     _GPS_ParseGPRMC:
  2637                           	callstack 27
  2638   000B80                     
  2639                           ;GPS.c: 73:     char buf[100];;GPS.c: 74:     char *token;;GPS.c: 75:     uint8_t field 
      +                          = 0;
  2640   000B80  0100               	movlb	0	; () banked
  2641   000B82  6BC5               	clrf	GPS_ParseGPRMC@field& (0+255),b
  2642                           
  2643                           ;GPS.c: 76:     uint8_t data_valid = 0;
  2644   000B84  6BC6               	clrf	GPS_ParseGPRMC@data_valid& (0+255),b
  2645   000B86                     
  2646                           ; BSR set to: 0
  2647                           ;GPS.c: 79:     if(strstr(msg, "$GPRMC") == ((void*)0)) return 0;
  2648   000B86  C00E  F007         	movff	GPS_ParseGPRMC@msg,strstr@h
  2649   000B8A  C00F  F008         	movff	GPS_ParseGPRMC@msg+1,strstr@h+1
  2650   000B8E  0E17               	movlw	low STR_2
  2651   000B90  6E09               	movwf	strstr@n^0,c
  2652   000B92  ECF4  F007         	call	_strstr	;wreg free
  2653   000B96  5007               	movf	?_strstr^0,w,c
  2654   000B98  1008               	iorwf	(?_strstr+1)^0,w,c
  2655   000B9A  A4D8               	btfss	status,2,c
  2656   000B9C  EFD2  F005         	goto	u1211
  2657   000BA0  EFD4  F005         	goto	u1210
  2658   000BA4                     u1211:
  2659   000BA4  EFD7  F005         	goto	l1669
  2660   000BA8                     u1210:
  2661   000BA8  0E00               	movlw	0
  2662   000BAA  EFD9  F006         	goto	l146
  2663   000BAE                     l1669:
  2664                           
  2665                           ;GPS.c: 82:     strncpy(buf, msg, sizeof(buf)-1);
  2666   000BAE  0E60               	movlw	low GPS_ParseGPRMC@buf
  2667   000BB0  6E01               	movwf	strncpy@d^0,c
  2668   000BB2  6A02               	clrf	(strncpy@d+1)^0,c
  2669   000BB4  C00E  F003         	movff	GPS_ParseGPRMC@msg,strncpy@s
  2670   000BB8  C00F  F004         	movff	GPS_ParseGPRMC@msg+1,strncpy@s+1
  2671   000BBC  0E00               	movlw	0
  2672   000BBE  6E06               	movwf	(strncpy@n+1)^0,c
  2673   000BC0  0E63               	movlw	99
  2674   000BC2  6E05               	movwf	strncpy@n^0,c
  2675   000BC4  EC2E  F009         	call	_strncpy	;wreg free
  2676   000BC8                     
  2677                           ;GPS.c: 83:     buf[sizeof(buf)-1] = '\0';
  2678   000BC8  0100               	movlb	0	; () banked
  2679   000BCA  6BC3               	clrf	(GPS_ParseGPRMC@buf+99)& (0+255),b
  2680   000BCC                     
  2681                           ; BSR set to: 0
  2682                           ;GPS.c: 86:     token = strtok(buf, ",");
  2683   000BCC  0E60               	movlw	low GPS_ParseGPRMC@buf
  2684   000BCE  6E0C               	movwf	strtok@s^0,c
  2685   000BD0  0E2B               	movlw	low STR_12
  2686   000BD2  6E0D               	movwf	strtok@sep^0,c
  2687   000BD4  EC5B  F008         	call	_strtok	;wreg free
  2688   000BD8  0100               	movlb	0	; () banked
  2689   000BDA  6FC7               	movwf	GPS_ParseGPRMC@token& (0+255),b
  2690                           
  2691                           ;GPS.c: 87:     while(token && field <= 6) {
  2692   000BDC  EFB5  F006         	goto	l1717
  2693   000BE0                     l1675:
  2694                           
  2695                           ; BSR set to: 0
  2696                           ;GPS.c: 90:                 data_valid = (token[0] == 'A');
  2697   000BE0  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  2698   000BE2  6ED9               	movwf	fsr2l,c
  2699   000BE4  6ADA               	clrf	fsr2h,c
  2700   000BE6  0E41               	movlw	65
  2701   000BE8  18DE               	xorwf	postinc2,w,c
  2702   000BEA  B4D8               	btfsc	status,2,c
  2703   000BEC  EFFA  F005         	goto	u1221
  2704   000BF0  EFFD  F005         	goto	u1220
  2705   000BF4                     u1221:
  2706   000BF4  0E01               	movlw	1
  2707   000BF6  EFFE  F005         	goto	u1230
  2708   000BFA                     u1220:
  2709   000BFA  0E00               	movlw	0
  2710   000BFC                     u1230:
  2711   000BFC  6FC6               	movwf	GPS_ParseGPRMC@data_valid& (0+255),b
  2712                           
  2713                           ;GPS.c: 91:                 break;
  2714   000BFE  EFAC  F006         	goto	l1713
  2715   000C02                     l1677:
  2716                           
  2717                           ; BSR set to: 0
  2718                           ;GPS.c: 93:                 if(lat && data_valid) {
  2719   000C02  5010               	movf	GPS_ParseGPRMC@lat^0,w,c
  2720   000C04  1011               	iorwf	(GPS_ParseGPRMC@lat+1)^0,w,c
  2721   000C06  B4D8               	btfsc	status,2,c
  2722   000C08  EF08  F006         	goto	u1241
  2723   000C0C  EF0A  F006         	goto	u1240
  2724   000C10                     u1241:
  2725   000C10  EFAC  F006         	goto	l1713
  2726   000C14                     u1240:
  2727   000C14                     
  2728                           ; BSR set to: 0
  2729   000C14  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  2730   000C16  B4D8               	btfsc	status,2,c
  2731   000C18  EF10  F006         	goto	u1251
  2732   000C1C  EF12  F006         	goto	u1250
  2733   000C20                     u1251:
  2734   000C20  EFAC  F006         	goto	l1713
  2735   000C24                     u1250:
  2736   000C24                     
  2737                           ; BSR set to: 0
  2738                           ;GPS.c: 94:                     strncpy(lat, token, 7);
  2739   000C24  C010  F001         	movff	GPS_ParseGPRMC@lat,strncpy@d
  2740   000C28  C011  F002         	movff	GPS_ParseGPRMC@lat+1,strncpy@d+1
  2741   000C2C  C0C7  F003         	movff	GPS_ParseGPRMC@token,strncpy@s
  2742   000C30  6A04               	clrf	(strncpy@s+1)^0,c
  2743   000C32  0E00               	movlw	0
  2744   000C34  6E06               	movwf	(strncpy@n+1)^0,c
  2745   000C36  0E07               	movlw	7
  2746   000C38  6E05               	movwf	strncpy@n^0,c
  2747   000C3A  EC2E  F009         	call	_strncpy	;wreg free
  2748   000C3E                     
  2749                           ;GPS.c: 95:                     lat[7] = '\0';
  2750   000C3E  EE20 F007          	lfsr	2,7
  2751   000C42  5010               	movf	GPS_ParseGPRMC@lat^0,w,c
  2752   000C44  26D9               	addwf	fsr2l,f,c
  2753   000C46  5011               	movf	(GPS_ParseGPRMC@lat+1)^0,w,c
  2754   000C48  22DA               	addwfc	fsr2h,f,c
  2755   000C4A  6ADF               	clrf	indf2,c
  2756   000C4C  EFAC  F006         	goto	l1713
  2757   000C50                     l1685:
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;GPS.c: 99:                 if(ns && data_valid) {
  2761   000C50  5012               	movf	GPS_ParseGPRMC@ns^0,w,c
  2762   000C52  1013               	iorwf	(GPS_ParseGPRMC@ns+1)^0,w,c
  2763   000C54  B4D8               	btfsc	status,2,c
  2764   000C56  EF2F  F006         	goto	u1261
  2765   000C5A  EF31  F006         	goto	u1260
  2766   000C5E                     u1261:
  2767   000C5E  EFAC  F006         	goto	l1713
  2768   000C62                     u1260:
  2769   000C62                     
  2770                           ; BSR set to: 0
  2771   000C62  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  2772   000C64  B4D8               	btfsc	status,2,c
  2773   000C66  EF37  F006         	goto	u1271
  2774   000C6A  EF39  F006         	goto	u1270
  2775   000C6E                     u1271:
  2776   000C6E  EFAC  F006         	goto	l1713
  2777   000C72                     u1270:
  2778   000C72                     
  2779                           ; BSR set to: 0
  2780                           ;GPS.c: 100:                     ns[0] = token[0];
  2781   000C72  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  2782   000C74  6ED9               	movwf	fsr2l,c
  2783   000C76  6ADA               	clrf	fsr2h,c
  2784   000C78  C012  FFE1         	movff	GPS_ParseGPRMC@ns,fsr1l
  2785   000C7C  C013  FFE2         	movff	GPS_ParseGPRMC@ns+1,fsr1h
  2786   000C80  CFDF FFE7          	movff	indf2,indf1
  2787   000C84                     
  2788                           ; BSR set to: 0
  2789                           ;GPS.c: 101:                     ns[1] = '\0';
  2790   000C84  EE20 F001          	lfsr	2,1
  2791   000C88  5012               	movf	GPS_ParseGPRMC@ns^0,w,c
  2792   000C8A  26D9               	addwf	fsr2l,f,c
  2793   000C8C  5013               	movf	(GPS_ParseGPRMC@ns+1)^0,w,c
  2794   000C8E  22DA               	addwfc	fsr2h,f,c
  2795   000C90  6ADF               	clrf	indf2,c
  2796   000C92  EFAC  F006         	goto	l1713
  2797   000C96                     l1693:
  2798                           
  2799                           ; BSR set to: 0
  2800                           ;GPS.c: 105:                 if(lon && data_valid) {
  2801   000C96  5014               	movf	GPS_ParseGPRMC@lon^0,w,c
  2802   000C98  1015               	iorwf	(GPS_ParseGPRMC@lon+1)^0,w,c
  2803   000C9A  B4D8               	btfsc	status,2,c
  2804   000C9C  EF52  F006         	goto	u1281
  2805   000CA0  EF54  F006         	goto	u1280
  2806   000CA4                     u1281:
  2807   000CA4  EFAC  F006         	goto	l1713
  2808   000CA8                     u1280:
  2809   000CA8                     
  2810                           ; BSR set to: 0
  2811   000CA8  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  2812   000CAA  B4D8               	btfsc	status,2,c
  2813   000CAC  EF5A  F006         	goto	u1291
  2814   000CB0  EF5C  F006         	goto	u1290
  2815   000CB4                     u1291:
  2816   000CB4  EFAC  F006         	goto	l1713
  2817   000CB8                     u1290:
  2818   000CB8                     
  2819                           ; BSR set to: 0
  2820                           ;GPS.c: 106:                     strncpy(lon, token, 8);
  2821   000CB8  C014  F001         	movff	GPS_ParseGPRMC@lon,strncpy@d
  2822   000CBC  C015  F002         	movff	GPS_ParseGPRMC@lon+1,strncpy@d+1
  2823   000CC0  C0C7  F003         	movff	GPS_ParseGPRMC@token,strncpy@s
  2824   000CC4  6A04               	clrf	(strncpy@s+1)^0,c
  2825   000CC6  0E00               	movlw	0
  2826   000CC8  6E06               	movwf	(strncpy@n+1)^0,c
  2827   000CCA  0E08               	movlw	8
  2828   000CCC  6E05               	movwf	strncpy@n^0,c
  2829   000CCE  EC2E  F009         	call	_strncpy	;wreg free
  2830   000CD2                     
  2831                           ;GPS.c: 107:                     lon[8] = '\0';
  2832   000CD2  EE20 F008          	lfsr	2,8
  2833   000CD6  5014               	movf	GPS_ParseGPRMC@lon^0,w,c
  2834   000CD8  26D9               	addwf	fsr2l,f,c
  2835   000CDA  5015               	movf	(GPS_ParseGPRMC@lon+1)^0,w,c
  2836   000CDC  22DA               	addwfc	fsr2h,f,c
  2837   000CDE  6ADF               	clrf	indf2,c
  2838   000CE0  EFAC  F006         	goto	l1713
  2839   000CE4                     l1701:
  2840                           
  2841                           ; BSR set to: 0
  2842                           ;GPS.c: 111:                 if(ew && data_valid) {
  2843   000CE4  5016               	movf	GPS_ParseGPRMC@ew^0,w,c
  2844   000CE6  1017               	iorwf	(GPS_ParseGPRMC@ew+1)^0,w,c
  2845   000CE8  B4D8               	btfsc	status,2,c
  2846   000CEA  EF79  F006         	goto	u1301
  2847   000CEE  EF7B  F006         	goto	u1300
  2848   000CF2                     u1301:
  2849   000CF2  EFAC  F006         	goto	l1713
  2850   000CF6                     u1300:
  2851   000CF6                     
  2852                           ; BSR set to: 0
  2853   000CF6  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  2854   000CF8  B4D8               	btfsc	status,2,c
  2855   000CFA  EF81  F006         	goto	u1311
  2856   000CFE  EF83  F006         	goto	u1310
  2857   000D02                     u1311:
  2858   000D02  EFAC  F006         	goto	l1713
  2859   000D06                     u1310:
  2860   000D06                     
  2861                           ; BSR set to: 0
  2862                           ;GPS.c: 112:                     ew[0] = token[0];
  2863   000D06  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  2864   000D08  6ED9               	movwf	fsr2l,c
  2865   000D0A  6ADA               	clrf	fsr2h,c
  2866   000D0C  C016  FFE1         	movff	GPS_ParseGPRMC@ew,fsr1l
  2867   000D10  C017  FFE2         	movff	GPS_ParseGPRMC@ew+1,fsr1h
  2868   000D14  CFDF FFE7          	movff	indf2,indf1
  2869   000D18                     
  2870                           ; BSR set to: 0
  2871                           ;GPS.c: 113:                     ew[1] = '\0';
  2872   000D18  EE20 F001          	lfsr	2,1
  2873   000D1C  5016               	movf	GPS_ParseGPRMC@ew^0,w,c
  2874   000D1E  26D9               	addwf	fsr2l,f,c
  2875   000D20  5017               	movf	(GPS_ParseGPRMC@ew+1)^0,w,c
  2876   000D22  22DA               	addwfc	fsr2h,f,c
  2877   000D24  6ADF               	clrf	indf2,c
  2878   000D26  EFAC  F006         	goto	l1713
  2879   000D2A                     l1711:
  2880                           
  2881                           ; BSR set to: 0
  2882   000D2A  51C5               	movf	GPS_ParseGPRMC@field& (0+255),w,b
  2883                           
  2884                           ; Switch size 1, requested type "simple"
  2885                           ; Number of cases is 5, Range of values is 2 to 6
  2886                           ; switch strategies available:
  2887                           ; Name         Instructions Cycles
  2888                           ; simple_byte           16     9 (average)
  2889                           ;	Chosen strategy is simple_byte
  2890   000D2C  0A02               	xorlw	2	; case 2
  2891   000D2E  B4D8               	btfsc	status,2,c
  2892   000D30  EFF0  F005         	goto	l1675
  2893   000D34  0A01               	xorlw	1	; case 3
  2894   000D36  B4D8               	btfsc	status,2,c
  2895   000D38  EF01  F006         	goto	l1677
  2896   000D3C  0A07               	xorlw	7	; case 4
  2897   000D3E  B4D8               	btfsc	status,2,c
  2898   000D40  EF28  F006         	goto	l1685
  2899   000D44  0A01               	xorlw	1	; case 5
  2900   000D46  B4D8               	btfsc	status,2,c
  2901   000D48  EF4B  F006         	goto	l1693
  2902   000D4C  0A03               	xorlw	3	; case 6
  2903   000D4E  B4D8               	btfsc	status,2,c
  2904   000D50  EF72  F006         	goto	l1701
  2905   000D54  EFAC  F006         	goto	l1713
  2906   000D58                     l1713:
  2907                           
  2908                           ;GPS.c: 117:         token = strtok(((void*)0), ",");
  2909   000D58  0E00               	movlw	0
  2910   000D5A  6E0C               	movwf	strtok@s^0,c
  2911   000D5C  0E2B               	movlw	low STR_12
  2912   000D5E  6E0D               	movwf	strtok@sep^0,c
  2913   000D60  EC5B  F008         	call	_strtok	;wreg free
  2914   000D64  0100               	movlb	0	; () banked
  2915   000D66  6FC7               	movwf	GPS_ParseGPRMC@token& (0+255),b
  2916   000D68                     
  2917                           ; BSR set to: 0
  2918                           ;GPS.c: 118:         field++;
  2919   000D68  2BC5               	incf	GPS_ParseGPRMC@field& (0+255),f,b
  2920   000D6A                     l1717:
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;GPS.c: 87:     while(token && field <= 6) {
  2924   000D6A  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  2925   000D6C  B4D8               	btfsc	status,2,c
  2926   000D6E  EFBB  F006         	goto	u1321
  2927   000D72  EFBD  F006         	goto	u1320
  2928   000D76                     u1321:
  2929   000D76  EFC5  F006         	goto	l162
  2930   000D7A                     u1320:
  2931   000D7A                     
  2932                           ; BSR set to: 0
  2933   000D7A  0E06               	movlw	6
  2934   000D7C  65C5               	cpfsgt	GPS_ParseGPRMC@field& (0+255),b
  2935   000D7E  EFC3  F006         	goto	u1331
  2936   000D82  EFC5  F006         	goto	u1330
  2937   000D86                     u1331:
  2938   000D86  EF95  F006         	goto	l1711
  2939   000D8A                     u1330:
  2940   000D8A                     l162:
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;GPS.c: 120:     return (data_valid && field >= 6);
  2944   000D8A  6BC4               	clrf	_GPS_ParseGPRMC$296& (0+255),b
  2945   000D8C                     
  2946                           ; BSR set to: 0
  2947   000D8C  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  2948   000D8E  B4D8               	btfsc	status,2,c
  2949   000D90  EFCC  F006         	goto	u1341
  2950   000D94  EFCE  F006         	goto	u1340
  2951   000D98                     u1341:
  2952   000D98  EFD8  F006         	goto	l164
  2953   000D9C                     u1340:
  2954   000D9C                     
  2955                           ; BSR set to: 0
  2956   000D9C  0E05               	movlw	5
  2957   000D9E  65C5               	cpfsgt	GPS_ParseGPRMC@field& (0+255),b
  2958   000DA0  EFD4  F006         	goto	u1351
  2959   000DA4  EFD6  F006         	goto	u1350
  2960   000DA8                     u1351:
  2961   000DA8  EFD8  F006         	goto	l164
  2962   000DAC                     u1350:
  2963   000DAC                     
  2964                           ; BSR set to: 0
  2965   000DAC  0E01               	movlw	1
  2966   000DAE  6FC4               	movwf	_GPS_ParseGPRMC$296& (0+255),b
  2967   000DB0                     l164:
  2968                           
  2969                           ; BSR set to: 0
  2970   000DB0  51C4               	movf	_GPS_ParseGPRMC$296& (0+255),w,b
  2971   000DB2                     l146:
  2972   000DB2  0012               	return		;funcret
  2973   000DB4                     __end_of_GPS_ParseGPRMC:
  2974                           	callstack 0
  2975                           
  2976 ;; *************** function _strtok *****************
  2977 ;; Defined at:
  2978 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strtok.c"
  2979 ;; Parameters:    Size  Location     Type
  2980 ;;  s               1   11[COMRAM] PTR unsigned char 
  2981 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  2982 ;;  sep             1   12[COMRAM] PTR const unsigned char 
  2983 ;;		 -> STR_13(2), STR_12(2), 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;		None
  2986 ;; Return value:  Size  Location     Type
  2987 ;;                  1   11[COMRAM] PTR unsigned char 
  2988 ;; Registers used:
  2989 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2990 ;; Tracked objects:
  2991 ;;		On entry : 0/0
  2992 ;;		On exit  : 0/0
  2993 ;;		Unchanged: 0/0
  2994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2995 ;;      Params:         2       0       0       0       0       0       0       0       0
  2996 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2997 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2998 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2999 ;;Total ram usage:        2 bytes
  3000 ;; Hardware stack levels used: 1
  3001 ;; Hardware stack levels required when called: 2
  3002 ;; This function calls:
  3003 ;;		_strcspn
  3004 ;;		_strspn
  3005 ;; This function is called by:
  3006 ;;		_GPS_ParseGPRMC
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           	psect	text12
  3011   0010B6                     __ptext12:
  3012                           	callstack 0
  3013   0010B6                     _strtok:
  3014                           	callstack 27
  3015   0010B6  500C               	movf	strtok@s^0,w,c
  3016   0010B8  A4D8               	btfss	status,2,c
  3017   0010BA  EF61  F008         	goto	u1031
  3018   0010BE  EF63  F008         	goto	u1030
  3019   0010C2                     u1031:
  3020   0010C2  EF70  F008         	goto	l1543
  3021   0010C6                     u1030:
  3022   0010C6  C01B  F00C         	movff	strtok@p,strtok@s
  3023   0010CA  500C               	movf	strtok@s^0,w,c
  3024   0010CC  A4D8               	btfss	status,2,c
  3025   0010CE  EF6B  F008         	goto	u1041
  3026   0010D2  EF6D  F008         	goto	u1040
  3027   0010D6                     u1041:
  3028   0010D6  EF70  F008         	goto	l1543
  3029   0010DA                     u1040:
  3030   0010DA  0E00               	movlw	0
  3031   0010DC  EFA5  F008         	goto	l922
  3032   0010E0                     l1543:
  3033   0010E0  C00C  F007         	movff	strtok@s,strspn@s
  3034   0010E4  C00D  F008         	movff	strtok@sep,strspn@c
  3035   0010E8  ECAB  F009         	call	_strspn	;wreg free
  3036   0010EC  5007               	movf	?_strspn^0,w,c
  3037   0010EE  260C               	addwf	strtok@s^0,f,c
  3038   0010F0  500C               	movf	strtok@s^0,w,c
  3039   0010F2  6ED9               	movwf	fsr2l,c
  3040   0010F4  6ADA               	clrf	fsr2h,c
  3041   0010F6  50DF               	movf	indf2,w,c
  3042   0010F8  A4D8               	btfss	status,2,c
  3043   0010FA  EF81  F008         	goto	u1051
  3044   0010FE  EF83  F008         	goto	u1050
  3045   001102                     u1051:
  3046   001102  EF88  F008         	goto	l1551
  3047   001106                     u1050:
  3048   001106  0E00               	movlw	0
  3049   001108  6E1B               	movwf	strtok@p^0,c
  3050   00110A  501B               	movf	strtok@p^0,w,c
  3051   00110C  EFA5  F008         	goto	l922
  3052   001110                     l1551:
  3053   001110  C00C  F007         	movff	strtok@s,strcspn@s
  3054   001114  C00D  F008         	movff	strtok@sep,strcspn@c
  3055   001118  ECDD  F009         	call	_strcspn	;wreg free
  3056   00111C  500C               	movf	strtok@s^0,w,c
  3057   00111E  2407               	addwf	?_strcspn^0,w,c
  3058   001120  6E1B               	movwf	strtok@p^0,c
  3059   001122  501B               	movf	strtok@p^0,w,c
  3060   001124  6ED9               	movwf	fsr2l,c
  3061   001126  6ADA               	clrf	fsr2h,c
  3062   001128  50DF               	movf	indf2,w,c
  3063   00112A  B4D8               	btfsc	status,2,c
  3064   00112C  EF9A  F008         	goto	u1061
  3065   001130  EF9C  F008         	goto	u1060
  3066   001134                     u1061:
  3067   001134  EFA3  F008         	goto	l924
  3068   001138                     u1060:
  3069   001138  501B               	movf	strtok@p^0,w,c
  3070   00113A  6ED9               	movwf	fsr2l,c
  3071   00113C  6ADA               	clrf	fsr2h,c
  3072   00113E  6ADF               	clrf	indf2,c
  3073   001140  2A1B               	incf	strtok@p^0,f,c
  3074   001142  EFA4  F008         	goto	l1559
  3075   001146                     l924:
  3076   001146  6A1B               	clrf	strtok@p^0,c
  3077   001148                     l1559:
  3078   001148  500C               	movf	strtok@s^0,w,c
  3079   00114A                     l922:
  3080   00114A  0012               	return		;funcret
  3081   00114C                     __end_of_strtok:
  3082                           	callstack 0
  3083                           
  3084 ;; *************** function _strspn *****************
  3085 ;; Defined at:
  3086 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strspn.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  s               1    6[COMRAM] PTR const unsigned char 
  3089 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  3090 ;;  c               1    7[COMRAM] PTR const unsigned char 
  3091 ;;		 -> STR_13(2), STR_12(2), 
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;  i               2    9[COMRAM] unsigned int 
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  2    6[COMRAM] unsigned int 
  3096 ;; Registers used:
  3097 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 0/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3103 ;;      Params:         2       0       0       0       0       0       0       0       0
  3104 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3105 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3106 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3107 ;;Total ram usage:        5 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 1
  3110 ;; This function calls:
  3111 ;;		_strchr
  3112 ;; This function is called by:
  3113 ;;		_strtok
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text13
  3118   001356                     __ptext13:
  3119                           	callstack 0
  3120   001356                     _strspn:
  3121                           	callstack 27
  3122   001356  0E00               	movlw	0
  3123   001358  6E0B               	movwf	(strspn@i+1)^0,c
  3124   00135A  0E00               	movlw	0
  3125   00135C  6E0A               	movwf	strspn@i^0,c
  3126   00135E  EFB4  F009         	goto	l1459
  3127   001362                     l1457:
  3128   001362  2A07               	incf	strspn@s^0,f,c
  3129   001364  4A0A               	infsnz	strspn@i^0,f,c
  3130   001366  2A0B               	incf	(strspn@i+1)^0,f,c
  3131   001368                     l1459:
  3132   001368  5007               	movf	strspn@s^0,w,c
  3133   00136A  6ED9               	movwf	fsr2l,c
  3134   00136C  6ADA               	clrf	fsr2h,c
  3135   00136E  50DF               	movf	indf2,w,c
  3136   001370  B4D8               	btfsc	status,2,c
  3137   001372  EFBD  F009         	goto	u881
  3138   001376  EFBF  F009         	goto	u880
  3139   00137A                     u881:
  3140   00137A  EFD8  F009         	goto	l944
  3141   00137E                     u880:
  3142   00137E  C008  F001         	movff	strspn@c,strchr@s
  3143   001382  5001               	movf	strchr@s^0,w,c
  3144   001384  A4D8               	btfss	status,2,c
  3145   001386  0E08               	movlw	high __smallconst
  3146   001388  6E02               	movwf	(strchr@s+1)^0,c
  3147   00138A  5007               	movf	strspn@s^0,w,c
  3148   00138C  6ED9               	movwf	fsr2l,c
  3149   00138E  6ADA               	clrf	fsr2h,c
  3150   001390  50DF               	movf	indf2,w,c
  3151   001392  6E09               	movwf	??_strspn^0,c
  3152   001394  5009               	movf	??_strspn^0,w,c
  3153   001396  6E03               	movwf	strchr@c^0,c
  3154   001398  6A04               	clrf	(strchr@c+1)^0,c
  3155   00139A  ECED  F008         	call	_strchr	;wreg free
  3156   00139E  5001               	movf	?_strchr^0,w,c
  3157   0013A0  1002               	iorwf	(?_strchr+1)^0,w,c
  3158   0013A2  A4D8               	btfss	status,2,c
  3159   0013A4  EFD6  F009         	goto	u891
  3160   0013A8  EFD8  F009         	goto	u890
  3161   0013AC                     u891:
  3162   0013AC  EFB1  F009         	goto	l1457
  3163   0013B0                     u890:
  3164   0013B0                     l944:
  3165   0013B0  C00A  F007         	movff	strspn@i,?_strspn
  3166   0013B4  C00B  F008         	movff	strspn@i+1,?_strspn+1
  3167   0013B8  0012               	return		;funcret
  3168   0013BA                     __end_of_strspn:
  3169                           	callstack 0
  3170                           
  3171 ;; *************** function _strcspn *****************
  3172 ;; Defined at:
  3173 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcspn.c"
  3174 ;; Parameters:    Size  Location     Type
  3175 ;;  s               1    6[COMRAM] PTR const unsigned char 
  3176 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  3177 ;;  c               1    7[COMRAM] PTR const unsigned char 
  3178 ;;		 -> STR_13(2), STR_12(2), 
  3179 ;; Auto vars:     Size  Location     Type
  3180 ;;  i               2    9[COMRAM] unsigned int 
  3181 ;; Return value:  Size  Location     Type
  3182 ;;                  2    6[COMRAM] unsigned int 
  3183 ;; Registers used:
  3184 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3185 ;; Tracked objects:
  3186 ;;		On entry : 0/0
  3187 ;;		On exit  : 0/0
  3188 ;;		Unchanged: 0/0
  3189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3190 ;;      Params:         2       0       0       0       0       0       0       0       0
  3191 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3192 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3193 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3194 ;;Total ram usage:        5 bytes
  3195 ;; Hardware stack levels used: 1
  3196 ;; Hardware stack levels required when called: 1
  3197 ;; This function calls:
  3198 ;;		_strchr
  3199 ;; This function is called by:
  3200 ;;		_strtok
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text14
  3205   0013BA                     __ptext14:
  3206                           	callstack 0
  3207   0013BA                     _strcspn:
  3208                           	callstack 27
  3209   0013BA  0E00               	movlw	0
  3210   0013BC  6E0B               	movwf	(strcspn@i+1)^0,c
  3211   0013BE  0E00               	movlw	0
  3212   0013C0  6E0A               	movwf	strcspn@i^0,c
  3213   0013C2  EFE6  F009         	goto	l1467
  3214   0013C6                     l1465:
  3215   0013C6  2A07               	incf	strcspn@s^0,f,c
  3216   0013C8  4A0A               	infsnz	strcspn@i^0,f,c
  3217   0013CA  2A0B               	incf	(strcspn@i+1)^0,f,c
  3218   0013CC                     l1467:
  3219   0013CC  5007               	movf	strcspn@s^0,w,c
  3220   0013CE  6ED9               	movwf	fsr2l,c
  3221   0013D0  6ADA               	clrf	fsr2h,c
  3222   0013D2  50DF               	movf	indf2,w,c
  3223   0013D4  B4D8               	btfsc	status,2,c
  3224   0013D6  EFEF  F009         	goto	u901
  3225   0013DA  EFF1  F009         	goto	u900
  3226   0013DE                     u901:
  3227   0013DE  EF0A  F00A         	goto	l934
  3228   0013E2                     u900:
  3229   0013E2  C008  F001         	movff	strcspn@c,strchr@s
  3230   0013E6  5001               	movf	strchr@s^0,w,c
  3231   0013E8  A4D8               	btfss	status,2,c
  3232   0013EA  0E08               	movlw	high __smallconst
  3233   0013EC  6E02               	movwf	(strchr@s+1)^0,c
  3234   0013EE  5007               	movf	strcspn@s^0,w,c
  3235   0013F0  6ED9               	movwf	fsr2l,c
  3236   0013F2  6ADA               	clrf	fsr2h,c
  3237   0013F4  50DF               	movf	indf2,w,c
  3238   0013F6  6E09               	movwf	??_strcspn^0,c
  3239   0013F8  5009               	movf	??_strcspn^0,w,c
  3240   0013FA  6E03               	movwf	strchr@c^0,c
  3241   0013FC  6A04               	clrf	(strchr@c+1)^0,c
  3242   0013FE  ECED  F008         	call	_strchr	;wreg free
  3243   001402  5001               	movf	?_strchr^0,w,c
  3244   001404  1002               	iorwf	(?_strchr+1)^0,w,c
  3245   001406  B4D8               	btfsc	status,2,c
  3246   001408  EF08  F00A         	goto	u911
  3247   00140C  EF0A  F00A         	goto	u910
  3248   001410                     u911:
  3249   001410  EFE3  F009         	goto	l1465
  3250   001414                     u910:
  3251   001414                     l934:
  3252   001414  C00A  F007         	movff	strcspn@i,?_strcspn
  3253   001418  C00B  F008         	movff	strcspn@i+1,?_strcspn+1
  3254   00141C  0012               	return		;funcret
  3255   00141E                     __end_of_strcspn:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _strstr *****************
  3259 ;; Defined at:
  3260 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  h               2    6[COMRAM] PTR const unsigned char 
  3263 ;;		 -> STR_13(2), STR_12(2), NULL(0), main@buffer(100), 
  3264 ;;  n               1    8[COMRAM] PTR const unsigned char 
  3265 ;;		 -> STR_11(7), STR_3(7), 
  3266 ;; Auto vars:     Size  Location     Type
  3267 ;;  nl              2    9[COMRAM] unsigned int 
  3268 ;; Return value:  Size  Location     Type
  3269 ;;                  2    6[COMRAM] PTR unsigned char 
  3270 ;; Registers used:
  3271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3272 ;; Tracked objects:
  3273 ;;		On entry : 0/0
  3274 ;;		On exit  : 0/0
  3275 ;;		Unchanged: 0/0
  3276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3277 ;;      Params:         3       0       0       0       0       0       0       0       0
  3278 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3280 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3281 ;;Total ram usage:        5 bytes
  3282 ;; Hardware stack levels used: 1
  3283 ;; Hardware stack levels required when called: 1
  3284 ;; This function calls:
  3285 ;;		_strchr
  3286 ;;		_strlen
  3287 ;;		_strncmp
  3288 ;; This function is called by:
  3289 ;;		_main
  3290 ;;		_GPS_ParseGPRMC
  3291 ;; This function uses a non-reentrant model
  3292 ;;
  3293                           
  3294                           	psect	text15
  3295   000FE8                     __ptext15:
  3296                           	callstack 0
  3297   000FE8                     _strstr:
  3298                           	callstack 29
  3299   000FE8  5009               	movf	strstr@n^0,w,c
  3300   000FEA  B4D8               	btfsc	status,2,c
  3301   000FEC  EFFA  F007         	goto	u951
  3302   000FF0  EFFC  F007         	goto	u950
  3303   000FF4                     u951:
  3304   000FF4  EF56  F008         	goto	l1515
  3305   000FF8                     u950:
  3306   000FF8  C009  F001         	movff	strstr@n,strlen@s
  3307   000FFC  ECDC  F00A         	call	_strlen	;wreg free
  3308   001000  C001  F00A         	movff	?_strlen,strstr@nl
  3309   001004  C002  F00B         	movff	?_strlen+1,strstr@nl+1
  3310   001008  EF35  F008         	goto	l1511
  3311   00100C                     l1503:
  3312   00100C  C007  F001         	movff	strstr@h,strncmp@l
  3313   001010  C008  F002         	movff	strstr@h+1,strncmp@l+1
  3314   001014  C009  F003         	movff	strstr@n,strncmp@r
  3315   001018  C00A  F004         	movff	strstr@nl,strncmp@n
  3316   00101C  C00B  F005         	movff	strstr@nl+1,strncmp@n+1
  3317   001020  EC70  F007         	call	_strncmp	;wreg free
  3318   001024  5001               	movf	?_strncmp^0,w,c
  3319   001026  1002               	iorwf	(?_strncmp+1)^0,w,c
  3320   001028  A4D8               	btfss	status,2,c
  3321   00102A  EF19  F008         	goto	u961
  3322   00102E  EF1B  F008         	goto	u960
  3323   001032                     u961:
  3324   001032  EF21  F008         	goto	l1509
  3325   001036                     u960:
  3326   001036  C007  F007         	movff	strstr@h,?_strstr
  3327   00103A  C008  F008         	movff	strstr@h+1,?_strstr+1
  3328   00103E  EF5A  F008         	goto	l888
  3329   001042                     l1509:
  3330   001042  0E01               	movlw	1
  3331   001044  2407               	addwf	strstr@h^0,w,c
  3332   001046  6E01               	movwf	strchr@s^0,c
  3333   001048  0E00               	movlw	0
  3334   00104A  2008               	addwfc	(strstr@h+1)^0,w,c
  3335   00104C  6E02               	movwf	(strchr@s+1)^0,c
  3336   00104E  C009  FFF6         	movff	strstr@n,tblptrl
  3337   001052                     	if	1	;There is more than 1 active tblptr byte
  3338   001052  0E08               	movlw	high __smallconst
  3339   001054  6EF7               	movwf	tblptrh,c
  3340   001056                     	endif
  3341   001056                     	if	0	;tblptru may be non-zero
  3342   001056                     	endif
  3343   001056                     	if	0	;tblptru may be non-zero
  3344   001056                     	endif
  3345   001056  0008               	tblrd		*
  3346   001058  50F5               	movf	tablat,w,c
  3347   00105A  6E03               	movwf	strchr@c^0,c
  3348   00105C  6A04               	clrf	(strchr@c+1)^0,c
  3349   00105E  ECED  F008         	call	_strchr	;wreg free
  3350   001062  C001  F007         	movff	?_strchr,strstr@h
  3351   001066  C002  F008         	movff	?_strchr+1,strstr@h+1
  3352   00106A                     l1511:
  3353   00106A  5007               	movf	strstr@h^0,w,c
  3354   00106C  1008               	iorwf	(strstr@h+1)^0,w,c
  3355   00106E  B4D8               	btfsc	status,2,c
  3356   001070  EF3C  F008         	goto	u971
  3357   001074  EF3E  F008         	goto	u970
  3358   001078                     u971:
  3359   001078  EF56  F008         	goto	l1515
  3360   00107C                     u970:
  3361   00107C  C007  FFF6         	movff	strstr@h,tblptrl
  3362   001080  C008  FFF7         	movff	strstr@h+1,tblptrh
  3363   001084  6AF8               	clrf	tblptru,c
  3364   001086  0E07               	movlw	(high __ramtop+-1)
  3365   001088  64F7               	cpfsgt	tblptrh,c
  3366   00108A  D003               	bra	u987
  3367   00108C  0008               	tblrd		*
  3368   00108E  50F5               	movf	tablat,w,c
  3369   001090  D005               	bra	u980
  3370   001092                     u987:
  3371   001092  CFF6 FFE9          	movff	tblptrl,fsr0l
  3372   001096  CFF7 FFEA          	movff	tblptrh,fsr0h
  3373   00109A  50EF               	movf	indf0,w,c
  3374   00109C                     u980:
  3375   00109C  0900               	iorlw	0
  3376   00109E  A4D8               	btfss	status,2,c
  3377   0010A0  EF54  F008         	goto	u991
  3378   0010A4  EF56  F008         	goto	u990
  3379   0010A8                     u991:
  3380   0010A8  EF06  F008         	goto	l1503
  3381   0010AC                     u990:
  3382   0010AC                     l1515:
  3383   0010AC  0E00               	movlw	0
  3384   0010AE  6E07               	movwf	?_strstr^0,c
  3385   0010B0  0E00               	movlw	0
  3386   0010B2  6E08               	movwf	(?_strstr+1)^0,c
  3387   0010B4                     l888:
  3388   0010B4  0012               	return		;funcret
  3389   0010B6                     __end_of_strstr:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _strncmp *****************
  3393 ;; Defined at:
  3394 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  l               2    0[COMRAM] PTR const unsigned char 
  3397 ;;		 -> STR_13(2), STR_12(2), NULL(0), main@buffer(100), 
  3398 ;;  r               1    2[COMRAM] PTR const unsigned char 
  3399 ;;		 -> STR_11(7), STR_3(7), 
  3400 ;;  n               2    3[COMRAM] unsigned int 
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  2    0[COMRAM] int 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3412 ;;      Params:         5       0       0       0       0       0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3414 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3415 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3416 ;;Total ram usage:        6 bytes
  3417 ;; Hardware stack levels used: 1
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_strstr
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text16
  3426   000EE0                     __ptext16:
  3427                           	callstack 0
  3428   000EE0                     _strncmp:
  3429                           	callstack 29
  3430   000EE0  0604               	decf	strncmp@n^0,f,c
  3431   000EE2  A0D8               	btfss	status,0,c
  3432   000EE4  0605               	decf	(strncmp@n+1)^0,f,c
  3433   000EE6  2804               	incf	strncmp@n^0,w,c
  3434   000EE8  E106               	bnz	u811
  3435   000EEA  2805               	incf	(strncmp@n+1)^0,w,c
  3436   000EEC  A4D8               	btfss	status,2,c
  3437   000EEE  EF7B  F007         	goto	u811
  3438   000EF2  EF7D  F007         	goto	u810
  3439   000EF6                     u811:
  3440   000EF6  EF89  F007         	goto	l1443
  3441   000EFA                     u810:
  3442   000EFA  0E00               	movlw	0
  3443   000EFC  6E02               	movwf	(?_strncmp+1)^0,c
  3444   000EFE  0E00               	movlw	0
  3445   000F00  6E01               	movwf	?_strncmp^0,c
  3446   000F02  EFF3  F007         	goto	l907
  3447   000F06                     l1441:
  3448   000F06  4A01               	infsnz	strncmp@l^0,f,c
  3449   000F08  2A02               	incf	(strncmp@l+1)^0,f,c
  3450   000F0A  2A03               	incf	strncmp@r^0,f,c
  3451   000F0C  0604               	decf	strncmp@n^0,f,c
  3452   000F0E  A0D8               	btfss	status,0,c
  3453   000F10  0605               	decf	(strncmp@n+1)^0,f,c
  3454   000F12                     l1443:
  3455   000F12  C001  FFF6         	movff	strncmp@l,tblptrl
  3456   000F16  C002  FFF7         	movff	strncmp@l+1,tblptrh
  3457   000F1A  6AF8               	clrf	tblptru,c
  3458   000F1C  0E07               	movlw	(high __ramtop+-1)
  3459   000F1E  64F7               	cpfsgt	tblptrh,c
  3460   000F20  D003               	bra	u827
  3461   000F22  0008               	tblrd		*
  3462   000F24  50F5               	movf	tablat,w,c
  3463   000F26  D005               	bra	u820
  3464   000F28                     u827:
  3465   000F28  CFF6 FFE9          	movff	tblptrl,fsr0l
  3466   000F2C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3467   000F30  50EF               	movf	indf0,w,c
  3468   000F32                     u820:
  3469   000F32  0900               	iorlw	0
  3470   000F34  B4D8               	btfsc	status,2,c
  3471   000F36  EF9F  F007         	goto	u831
  3472   000F3A  EFA1  F007         	goto	u830
  3473   000F3E                     u831:
  3474   000F3E  EFD7  F007         	goto	l1451
  3475   000F42                     u830:
  3476   000F42  C003  FFF6         	movff	strncmp@r,tblptrl
  3477   000F46                     	if	1	;There is more than 1 active tblptr byte
  3478   000F46  0E08               	movlw	high __smallconst
  3479   000F48  6EF7               	movwf	tblptrh,c
  3480   000F4A                     	endif
  3481   000F4A                     	if	0	;tblptru may be non-zero
  3482   000F4A                     	endif
  3483   000F4A                     	if	0	;tblptru may be non-zero
  3484   000F4A                     	endif
  3485   000F4A  0008               	tblrd		*
  3486   000F4C  50F5               	movf	tablat,w,c
  3487   000F4E  0900               	iorlw	0
  3488   000F50  B4D8               	btfsc	status,2,c
  3489   000F52  EFAD  F007         	goto	u841
  3490   000F56  EFAF  F007         	goto	u840
  3491   000F5A                     u841:
  3492   000F5A  EFD7  F007         	goto	l1451
  3493   000F5E                     u840:
  3494   000F5E  5004               	movf	strncmp@n^0,w,c
  3495   000F60  1005               	iorwf	(strncmp@n+1)^0,w,c
  3496   000F62  B4D8               	btfsc	status,2,c
  3497   000F64  EFB6  F007         	goto	u851
  3498   000F68  EFB8  F007         	goto	u850
  3499   000F6C                     u851:
  3500   000F6C  EFD7  F007         	goto	l1451
  3501   000F70                     u850:
  3502   000F70  C003  FFF6         	movff	strncmp@r,tblptrl
  3503   000F74                     	if	1	;There is more than 1 active tblptr byte
  3504   000F74  0E08               	movlw	high __smallconst
  3505   000F76  6EF7               	movwf	tblptrh,c
  3506   000F78                     	endif
  3507   000F78                     	if	0	;tblptru may be non-zero
  3508   000F78                     	endif
  3509   000F78                     	if	0	;tblptru may be non-zero
  3510   000F78                     	endif
  3511   000F78  0008               	tblrd		*
  3512   000F7A  CFF5 F006          	movff	tablat,??_strncmp
  3513   000F7E  C001  FFF6         	movff	strncmp@l,tblptrl
  3514   000F82  C002  FFF7         	movff	strncmp@l+1,tblptrh
  3515   000F86  6AF8               	clrf	tblptru,c
  3516   000F88  0E07               	movlw	(high __ramtop+-1)
  3517   000F8A  64F7               	cpfsgt	tblptrh,c
  3518   000F8C  D003               	bra	u867
  3519   000F8E  0008               	tblrd		*
  3520   000F90  50F5               	movf	tablat,w,c
  3521   000F92  D005               	bra	u865
  3522   000F94                     u867:
  3523   000F94  CFF6 FFE9          	movff	tblptrl,fsr0l
  3524   000F98  CFF7 FFEA          	movff	tblptrh,fsr0h
  3525   000F9C  50EF               	movf	indf0,w,c
  3526   000F9E                     u865:
  3527   000F9E  1806               	xorwf	??_strncmp^0,w,c
  3528   000FA0  B4D8               	btfsc	status,2,c
  3529   000FA2  EFD5  F007         	goto	u861
  3530   000FA6  EFD7  F007         	goto	u860
  3531   000FAA                     u861:
  3532   000FAA  EF83  F007         	goto	l1441
  3533   000FAE                     u860:
  3534   000FAE                     l1451:
  3535   000FAE  C001  FFF6         	movff	strncmp@l,tblptrl
  3536   000FB2  C002  FFF7         	movff	strncmp@l+1,tblptrh
  3537   000FB6  6AF8               	clrf	tblptru,c
  3538   000FB8  0E07               	movlw	(high __ramtop+-1)
  3539   000FBA  64F7               	cpfsgt	tblptrh,c
  3540   000FBC  D003               	bra	u877
  3541   000FBE  0008               	tblrd		*
  3542   000FC0  50F5               	movf	tablat,w,c
  3543   000FC2  D005               	bra	u870
  3544   000FC4                     u877:
  3545   000FC4  CFF6 FFE9          	movff	tblptrl,fsr0l
  3546   000FC8  CFF7 FFEA          	movff	tblptrh,fsr0h
  3547   000FCC  50EF               	movf	indf0,w,c
  3548   000FCE                     u870:
  3549   000FCE  6E06               	movwf	??_strncmp^0,c
  3550   000FD0  C003  FFF6         	movff	strncmp@r,tblptrl
  3551   000FD4                     	if	1	;There is more than 1 active tblptr byte
  3552   000FD4  0E08               	movlw	high __smallconst
  3553   000FD6  6EF7               	movwf	tblptrh,c
  3554   000FD8                     	endif
  3555   000FD8                     	if	0	;tblptru may be non-zero
  3556   000FD8                     	endif
  3557   000FD8                     	if	0	;tblptru may be non-zero
  3558   000FD8                     	endif
  3559   000FD8  0008               	tblrd		*
  3560   000FDA  50F5               	movf	tablat,w,c
  3561   000FDC  5C06               	subwf	??_strncmp^0,w,c
  3562   000FDE  6E01               	movwf	?_strncmp^0,c
  3563   000FE0  6A02               	clrf	(?_strncmp+1)^0,c
  3564   000FE2  A0D8               	btfss	status,0,c
  3565   000FE4  0602               	decf	(?_strncmp+1)^0,f,c
  3566   000FE6                     l907:
  3567   000FE6  0012               	return		;funcret
  3568   000FE8                     __end_of_strncmp:
  3569                           	callstack 0
  3570                           
  3571 ;; *************** function _strlen *****************
  3572 ;; Defined at:
  3573 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  3574 ;; Parameters:    Size  Location     Type
  3575 ;;  s               1    0[COMRAM] PTR const unsigned char 
  3576 ;;		 -> STR_11(7), STR_3(7), 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;  a               1    2[COMRAM] PTR const unsigned char 
  3579 ;;		 -> STR_11(7), STR_3(7), 
  3580 ;; Return value:  Size  Location     Type
  3581 ;;                  2    0[COMRAM] unsigned int 
  3582 ;; Registers used:
  3583 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  3584 ;; Tracked objects:
  3585 ;;		On entry : 0/0
  3586 ;;		On exit  : 0/0
  3587 ;;		Unchanged: 0/0
  3588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3589 ;;      Params:         2       0       0       0       0       0       0       0       0
  3590 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3591 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3592 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3593 ;;Total ram usage:        3 bytes
  3594 ;; Hardware stack levels used: 1
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_strstr
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text17
  3603   0015B8                     __ptext17:
  3604                           	callstack 0
  3605   0015B8                     _strlen:
  3606                           	callstack 29
  3607   0015B8  C001  F003         	movff	strlen@s,strlen@a
  3608   0015BC  EFE1  F00A         	goto	l1429
  3609   0015C0                     l1427:
  3610   0015C0  2A01               	incf	strlen@s^0,f,c
  3611   0015C2                     l1429:
  3612   0015C2  C001  FFF6         	movff	strlen@s,tblptrl
  3613   0015C6                     	if	1	;There is more than 1 active tblptr byte
  3614   0015C6  0E08               	movlw	high __smallconst
  3615   0015C8  6EF7               	movwf	tblptrh,c
  3616   0015CA                     	endif
  3617   0015CA                     	if	0	;tblptru may be non-zero
  3618   0015CA                     	endif
  3619   0015CA                     	if	0	;tblptru may be non-zero
  3620   0015CA                     	endif
  3621   0015CA  0008               	tblrd		*
  3622   0015CC  50F5               	movf	tablat,w,c
  3623   0015CE  0900               	iorlw	0
  3624   0015D0  A4D8               	btfss	status,2,c
  3625   0015D2  EFED  F00A         	goto	u801
  3626   0015D6  EFEF  F00A         	goto	u800
  3627   0015DA                     u801:
  3628   0015DA  EFE0  F00A         	goto	l1427
  3629   0015DE                     u800:
  3630   0015DE  5003               	movf	strlen@a^0,w,c
  3631   0015E0  5C01               	subwf	strlen@s^0,w,c
  3632   0015E2  6E01               	movwf	?_strlen^0,c
  3633   0015E4  6A02               	clrf	(?_strlen+1)^0,c
  3634   0015E6  BE01               	btfsc	?_strlen^0,7,c
  3635   0015E8  0602               	decf	(?_strlen+1)^0,f,c
  3636   0015EA  0012               	return		;funcret
  3637   0015EC                     __end_of_strlen:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _strchr *****************
  3641 ;; Defined at:
  3642 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  s               2    0[COMRAM] PTR const unsigned char 
  3645 ;;		 -> STR_13(2), STR_12(2), NULL(0), main@buffer(100), 
  3646 ;;  c               2    2[COMRAM] int 
  3647 ;; Auto vars:     Size  Location     Type
  3648 ;;		None
  3649 ;; Return value:  Size  Location     Type
  3650 ;;                  2    0[COMRAM] PTR unsigned char 
  3651 ;; Registers used:
  3652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  3653 ;; Tracked objects:
  3654 ;;		On entry : 0/0
  3655 ;;		On exit  : 0/0
  3656 ;;		Unchanged: 0/0
  3657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3658 ;;      Params:         4       0       0       0       0       0       0       0       0
  3659 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3660 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3661 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3662 ;;Total ram usage:        6 bytes
  3663 ;; Hardware stack levels used: 1
  3664 ;; This function calls:
  3665 ;;		Nothing
  3666 ;; This function is called by:
  3667 ;;		_strstr
  3668 ;;		_strcspn
  3669 ;;		_strspn
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           	psect	text18
  3674   0011DA                     __ptext18:
  3675                           	callstack 0
  3676   0011DA                     _strchr:
  3677                           	callstack 29
  3678   0011DA                     l894:
  3679   0011DA  C001  FFF6         	movff	strchr@s,tblptrl
  3680   0011DE  C002  FFF7         	movff	strchr@s+1,tblptrh
  3681   0011E2  6AF8               	clrf	tblptru,c
  3682   0011E4  0E07               	movlw	(high __ramtop+-1)
  3683   0011E6  64F7               	cpfsgt	tblptrh,c
  3684   0011E8  D003               	bra	u767
  3685   0011EA  0008               	tblrd		*
  3686   0011EC  50F5               	movf	tablat,w,c
  3687   0011EE  D005               	bra	u760
  3688   0011F0                     u767:
  3689   0011F0  CFF6 FFE9          	movff	tblptrl,fsr0l
  3690   0011F4  CFF7 FFEA          	movff	tblptrh,fsr0h
  3691   0011F8  50EF               	movf	indf0,w,c
  3692   0011FA                     u760:
  3693   0011FA  1803               	xorwf	strchr@c^0,w,c
  3694   0011FC  A4D8               	btfss	status,2,c
  3695   0011FE  EF03  F009         	goto	u771
  3696   001202  EF05  F009         	goto	u770
  3697   001206                     u771:
  3698   001206  EF0B  F009         	goto	l1399
  3699   00120A                     u770:
  3700   00120A  C001  F001         	movff	strchr@s,?_strchr
  3701   00120E  C002  F002         	movff	strchr@s+1,?_strchr+1
  3702   001212  EF2D  F009         	goto	l896
  3703   001216                     l1399:
  3704   001216  5001               	movf	strchr@s^0,w,c
  3705   001218  6E05               	movwf	??_strchr^0,c
  3706   00121A  5002               	movf	(strchr@s+1)^0,w,c
  3707   00121C  6E06               	movwf	(??_strchr+1)^0,c
  3708   00121E  4A01               	infsnz	strchr@s^0,f,c
  3709   001220  2A02               	incf	(strchr@s+1)^0,f,c
  3710   001222  C005  FFF6         	movff	??_strchr,tblptrl
  3711   001226  C006  FFF7         	movff	??_strchr+1,tblptrh
  3712   00122A  6AF8               	clrf	tblptru,c
  3713   00122C  0E07               	movlw	(high __ramtop+-1)
  3714   00122E  64F7               	cpfsgt	tblptrh,c
  3715   001230  D003               	bra	u787
  3716   001232  0008               	tblrd		*
  3717   001234  50F5               	movf	tablat,w,c
  3718   001236  D005               	bra	u780
  3719   001238                     u787:
  3720   001238  CFF6 FFE9          	movff	tblptrl,fsr0l
  3721   00123C  CFF7 FFEA          	movff	tblptrh,fsr0h
  3722   001240  50EF               	movf	indf0,w,c
  3723   001242                     u780:
  3724   001242  0900               	iorlw	0
  3725   001244  A4D8               	btfss	status,2,c
  3726   001246  EF27  F009         	goto	u791
  3727   00124A  EF29  F009         	goto	u790
  3728   00124E                     u791:
  3729   00124E  EFED  F008         	goto	l894
  3730   001252                     u790:
  3731   001252  0E00               	movlw	0
  3732   001254  6E01               	movwf	?_strchr^0,c
  3733   001256  0E00               	movlw	0
  3734   001258  6E02               	movwf	(?_strchr+1)^0,c
  3735   00125A                     l896:
  3736   00125A  0012               	return		;funcret
  3737   00125C                     __end_of_strchr:
  3738                           	callstack 0
  3739                           
  3740 ;; *************** function _strncpy *****************
  3741 ;; Defined at:
  3742 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncpy.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;  d               2    0[COMRAM] PTR unsigned char 
  3745 ;;		 -> GPS_ParseGPRMC@buf(100), main@formatted_lon(15), main@formatted_lat(15), main@lon(11), 
  3746 ;;		 -> main@lat(10), 
  3747 ;;  s               2    2[COMRAM] PTR const unsigned char 
  3748 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), main@buffer(100), main@lon(11), 
  3749 ;;		 -> main@lat(10), 
  3750 ;;  n               2    4[COMRAM] unsigned int 
  3751 ;; Auto vars:     Size  Location     Type
  3752 ;;  cp              2    6[COMRAM] PTR unsigned char 
  3753 ;;		 -> GPS_ParseGPRMC@buf(100), main@formatted_lon(15), main@formatted_lat(15), main@lon(11), 
  3754 ;;		 -> main@lat(10), 
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  2    0[COMRAM] PTR unsigned char 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3764 ;;      Params:         6       0       0       0       0       0       0       0       0
  3765 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3767 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3768 ;;Total ram usage:        8 bytes
  3769 ;; Hardware stack levels used: 1
  3770 ;; This function calls:
  3771 ;;		Nothing
  3772 ;; This function is called by:
  3773 ;;		_main
  3774 ;;		_GPS_ParseGPRMC
  3775 ;; This function uses a non-reentrant model
  3776 ;;
  3777                           
  3778                           	psect	text19
  3779   00125C                     __ptext19:
  3780                           	callstack 0
  3781   00125C                     _strncpy:
  3782                           	callstack 30
  3783   00125C  C001  F007         	movff	strncpy@d,strncpy@cp
  3784   001260  C002  F008         	movff	strncpy@d+1,strncpy@cp+1
  3785   001264  EF4F  F009         	goto	l1527
  3786   001268                     l1521:
  3787   001268  0605               	decf	strncpy@n^0,f,c
  3788   00126A  A0D8               	btfss	status,0,c
  3789   00126C  0606               	decf	(strncpy@n+1)^0,f,c
  3790   00126E  C003  FFD9         	movff	strncpy@s,fsr2l
  3791   001272  C004  FFDA         	movff	strncpy@s+1,fsr2h
  3792   001276  4A03               	infsnz	strncpy@s^0,f,c
  3793   001278  2A04               	incf	(strncpy@s+1)^0,f,c
  3794   00127A  C007  FFE1         	movff	strncpy@cp,fsr1l
  3795   00127E  C008  FFE2         	movff	strncpy@cp+1,fsr1h
  3796   001282  4A07               	infsnz	strncpy@cp^0,f,c
  3797   001284  2A08               	incf	(strncpy@cp+1)^0,f,c
  3798   001286  CFDF FFE7          	movff	indf2,indf1
  3799   00128A  50E7               	movf	indf1,w,c
  3800   00128C  A4D8               	btfss	status,2,c
  3801   00128E  EF4B  F009         	goto	u1001
  3802   001292  EF4D  F009         	goto	u1000
  3803   001296                     u1001:
  3804   001296  EF4F  F009         	goto	l1527
  3805   00129A                     u1000:
  3806   00129A  EF61  F009         	goto	l1533
  3807   00129E                     l1527:
  3808   00129E  5005               	movf	strncpy@n^0,w,c
  3809   0012A0  1006               	iorwf	(strncpy@n+1)^0,w,c
  3810   0012A2  A4D8               	btfss	status,2,c
  3811   0012A4  EF56  F009         	goto	u1011
  3812   0012A8  EF58  F009         	goto	u1010
  3813   0012AC                     u1011:
  3814   0012AC  EF34  F009         	goto	l1521
  3815   0012B0                     u1010:
  3816   0012B0  EF61  F009         	goto	l1533
  3817   0012B4                     l1529:
  3818   0012B4  C007  FFD9         	movff	strncpy@cp,fsr2l
  3819   0012B8  C008  FFDA         	movff	strncpy@cp+1,fsr2h
  3820   0012BC  6ADF               	clrf	indf2,c
  3821   0012BE  4A07               	infsnz	strncpy@cp^0,f,c
  3822   0012C0  2A08               	incf	(strncpy@cp+1)^0,f,c
  3823   0012C2                     l1533:
  3824   0012C2  0605               	decf	strncpy@n^0,f,c
  3825   0012C4  A0D8               	btfss	status,0,c
  3826   0012C6  0606               	decf	(strncpy@n+1)^0,f,c
  3827   0012C8  2805               	incf	strncpy@n^0,w,c
  3828   0012CA  E106               	bnz	u1021
  3829   0012CC  2806               	incf	(strncpy@n+1)^0,w,c
  3830   0012CE  A4D8               	btfss	status,2,c
  3831   0012D0  EF6C  F009         	goto	u1021
  3832   0012D4  EF6E  F009         	goto	u1020
  3833   0012D8                     u1021:
  3834   0012D8  EF5A  F009         	goto	l1529
  3835   0012DC                     u1020:
  3836   0012DC  0012               	return		;funcret
  3837   0012DE                     __end_of_strncpy:
  3838                           	callstack 0
  3839                           
  3840 ;; *************** function _GPS_Init *****************
  3841 ;; Defined at:
  3842 ;;		line 6 in file "GPS.c"
  3843 ;; Parameters:    Size  Location     Type
  3844 ;;		None
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  dummy           1    0[COMRAM] volatile unsigned char 
  3847 ;; Return value:  Size  Location     Type
  3848 ;;                  1    wreg      void 
  3849 ;; Registers used:
  3850 ;;		wreg, status,2
  3851 ;; Tracked objects:
  3852 ;;		On entry : 0/0
  3853 ;;		On exit  : 0/0
  3854 ;;		Unchanged: 0/0
  3855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3856 ;;      Params:         0       0       0       0       0       0       0       0       0
  3857 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3858 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3859 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3860 ;;Total ram usage:        1 bytes
  3861 ;; Hardware stack levels used: 1
  3862 ;; This function calls:
  3863 ;;		Nothing
  3864 ;; This function is called by:
  3865 ;;		_main
  3866 ;; This function uses a non-reentrant model
  3867 ;;
  3868                           
  3869                           	psect	text20
  3870   00161E                     __ptext20:
  3871                           	callstack 0
  3872   00161E                     _GPS_Init:
  3873                           	callstack 30
  3874   00161E                     
  3875                           ;GPS.c: 7:     TRISC7 = 1;
  3876   00161E  8E94               	bsf	3988,7,c	;volatile
  3877   001620                     
  3878                           ;GPS.c: 10:     BAUDCON = 0x08;
  3879   001620  0E08               	movlw	8
  3880   001622  6EB8               	movwf	184,c	;volatile
  3881                           
  3882                           ;GPS.c: 11:     TXSTA = 0x24;
  3883   001624  0E24               	movlw	36
  3884   001626  6EAC               	movwf	172,c	;volatile
  3885                           
  3886                           ;GPS.c: 12:     RCSTA = 0x90;
  3887   001628  0E90               	movlw	144
  3888   00162A  6EAB               	movwf	171,c	;volatile
  3889                           
  3890                           ;GPS.c: 13:     SPBRG = 207;
  3891   00162C  0ECF               	movlw	207
  3892   00162E  6EAF               	movwf	175,c	;volatile
  3893                           
  3894                           ;GPS.c: 16:     while(PIR1bits.RCIF) {
  3895   001630  EF1C  F00B         	goto	l120
  3896   001634                     l121:
  3897                           
  3898                           ;GPS.c: 17:         volatile char dummy = RCREG;
  3899   001634  CFAE F001          	movff	4014,GPS_Init@dummy	;volatile
  3900   001638                     l120:
  3901                           
  3902                           ;GPS.c: 16:     while(PIR1bits.RCIF) {
  3903   001638  BA9E               	btfsc	158,5,c	;volatile
  3904   00163A  EF21  F00B         	goto	u1091
  3905   00163E  EF23  F00B         	goto	u1090
  3906   001642                     u1091:
  3907   001642  EF1A  F00B         	goto	l121
  3908   001646                     u1090:
  3909   001646                     
  3910                           ;GPS.c: 20:     PIR1bits.RCIF = 0;
  3911   001646  9A9E               	bcf	158,5,c	;volatile
  3912   001648  0012               	return		;funcret
  3913   00164A                     __end_of_GPS_Init:
  3914                           	callstack 0
  3915                           
  3916                           	psect	rparam
  3917   000001                     ___rparam_used  equ	1
  3918   000000                     ___param_bank   equ	0
  3919   000000                     __Lparam        equ	__Lrparam
  3920   000000                     __Hparam        equ	__Hrparam
  3921                           
  3922                           	psect	idloc
  3923                           
  3924                           ;Config register IDLOC0 @ 0x200000
  3925                           ;	unspecified, using default values
  3926   200000                     	org	2097152
  3927   200000  FF                 	db	255
  3928                           
  3929                           ;Config register IDLOC1 @ 0x200001
  3930                           ;	unspecified, using default values
  3931   200001                     	org	2097153
  3932   200001  FF                 	db	255
  3933                           
  3934                           ;Config register IDLOC2 @ 0x200002
  3935                           ;	unspecified, using default values
  3936   200002                     	org	2097154
  3937   200002  FF                 	db	255
  3938                           
  3939                           ;Config register IDLOC3 @ 0x200003
  3940                           ;	unspecified, using default values
  3941   200003                     	org	2097155
  3942   200003  FF                 	db	255
  3943                           
  3944                           ;Config register IDLOC4 @ 0x200004
  3945                           ;	unspecified, using default values
  3946   200004                     	org	2097156
  3947   200004  FF                 	db	255
  3948                           
  3949                           ;Config register IDLOC5 @ 0x200005
  3950                           ;	unspecified, using default values
  3951   200005                     	org	2097157
  3952   200005  FF                 	db	255
  3953                           
  3954                           ;Config register IDLOC6 @ 0x200006
  3955                           ;	unspecified, using default values
  3956   200006                     	org	2097158
  3957   200006  FF                 	db	255
  3958                           
  3959                           ;Config register IDLOC7 @ 0x200007
  3960                           ;	unspecified, using default values
  3961   200007                     	org	2097159
  3962   200007  FF                 	db	255
  3963                           
  3964                           	psect	config
  3965                           
  3966                           ;Config register CONFIG1L @ 0x300000
  3967                           ;	PLL Prescaler Selection bits
  3968                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3969                           ;	System Clock Postscaler Selection bits
  3970                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3971                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3972                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3973   300000                     	org	3145728
  3974   300000  00                 	db	0
  3975                           
  3976                           ;Config register CONFIG1H @ 0x300001
  3977                           ;	Oscillator Selection bits
  3978                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3979                           ;	Fail-Safe Clock Monitor Enable bit
  3980                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3981                           ;	Internal/External Oscillator Switchover bit
  3982                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3983   300001                     	org	3145729
  3984   300001  09                 	db	9
  3985                           
  3986                           ;Config register CONFIG2L @ 0x300002
  3987                           ;	Power-up Timer Enable bit
  3988                           ;	PWRT = OFF, PWRT disabled
  3989                           ;	Brown-out Reset Enable bits
  3990                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3991                           ;	Brown-out Reset Voltage bits
  3992                           ;	BORV = 3, Minimum setting 2.05V
  3993                           ;	USB Voltage Regulator Enable bit
  3994                           ;	VREGEN = OFF, USB voltage regulator disabled
  3995   300002                     	org	3145730
  3996   300002  1F                 	db	31
  3997                           
  3998                           ;Config register CONFIG2H @ 0x300003
  3999                           ;	Watchdog Timer Enable bit
  4000                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4001                           ;	Watchdog Timer Postscale Select bits
  4002                           ;	WDTPS = 32768, 1:32768
  4003   300003                     	org	3145731
  4004   300003  1E                 	db	30
  4005                           
  4006                           ; Padding undefined space
  4007   300004                     	org	3145732
  4008   300004  FF                 	db	255
  4009                           
  4010                           ;Config register CONFIG3H @ 0x300005
  4011                           ;	CCP2 MUX bit
  4012                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4013                           ;	PORTB A/D Enable bit
  4014                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4015                           ;	Low-Power Timer 1 Oscillator Enable bit
  4016                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4017                           ;	MCLR Pin Enable bit
  4018                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4019   300005                     	org	3145733
  4020   300005  01                 	db	1
  4021                           
  4022                           ;Config register CONFIG4L @ 0x300006
  4023                           ;	Stack Full/Underflow Reset Enable bit
  4024                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4025                           ;	Single-Supply ICSP Enable bit
  4026                           ;	LVP = OFF, Single-Supply ICSP disabled
  4027                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4028                           ;	ICPRT = OFF, ICPORT disabled
  4029                           ;	Extended Instruction Set Enable bit
  4030                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4031                           ;	Background Debugger Enable bit
  4032                           ;	DEBUG = 0x1, unprogrammed default
  4033   300006                     	org	3145734
  4034   300006  81                 	db	129
  4035                           
  4036                           ; Padding undefined space
  4037   300007                     	org	3145735
  4038   300007  FF                 	db	255
  4039                           
  4040                           ;Config register CONFIG5L @ 0x300008
  4041                           ;	Code Protection bit
  4042                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4043                           ;	Code Protection bit
  4044                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4045                           ;	Code Protection bit
  4046                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4047                           ;	Code Protection bit
  4048                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4049   300008                     	org	3145736
  4050   300008  0F                 	db	15
  4051                           
  4052                           ;Config register CONFIG5H @ 0x300009
  4053                           ;	Boot Block Code Protection bit
  4054                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4055                           ;	Data EEPROM Code Protection bit
  4056                           ;	CPD = OFF, Data EEPROM is not code-protected
  4057   300009                     	org	3145737
  4058   300009  C0                 	db	192
  4059                           
  4060                           ;Config register CONFIG6L @ 0x30000A
  4061                           ;	Write Protection bit
  4062                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4063                           ;	Write Protection bit
  4064                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4065                           ;	Write Protection bit
  4066                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4067                           ;	Write Protection bit
  4068                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4069   30000A                     	org	3145738
  4070   30000A  0F                 	db	15
  4071                           
  4072                           ;Config register CONFIG6H @ 0x30000B
  4073                           ;	Configuration Register Write Protection bit
  4074                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4075                           ;	Boot Block Write Protection bit
  4076                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4077                           ;	Data EEPROM Write Protection bit
  4078                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4079   30000B                     	org	3145739
  4080   30000B  E0                 	db	224
  4081                           
  4082                           ;Config register CONFIG7L @ 0x30000C
  4083                           ;	Table Read Protection bit
  4084                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4085                           ;	Table Read Protection bit
  4086                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4087                           ;	Table Read Protection bit
  4088                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4089                           ;	Table Read Protection bit
  4090                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4091   30000C                     	org	3145740
  4092   30000C  0F                 	db	15
  4093                           
  4094                           ;Config register CONFIG7H @ 0x30000D
  4095                           ;	Boot Block Table Read Protection bit
  4096                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4097   30000D                     	org	3145741
  4098   30000D  40                 	db	64
  4099                           tosu	equ	0xFFF
  4100                           tosh	equ	0xFFE
  4101                           tosl	equ	0xFFD
  4102                           stkptr	equ	0xFFC
  4103                           pclatu	equ	0xFFB
  4104                           pclath	equ	0xFFA
  4105                           pcl	equ	0xFF9
  4106                           tblptru	equ	0xFF8
  4107                           tblptrh	equ	0xFF7
  4108                           tblptrl	equ	0xFF6
  4109                           tablat	equ	0xFF5
  4110                           prodh	equ	0xFF4
  4111                           prodl	equ	0xFF3
  4112                           indf0	equ	0xFEF
  4113                           postinc0	equ	0xFEE
  4114                           postdec0	equ	0xFED
  4115                           preinc0	equ	0xFEC
  4116                           plusw0	equ	0xFEB
  4117                           fsr0h	equ	0xFEA
  4118                           fsr0l	equ	0xFE9
  4119                           wreg	equ	0xFE8
  4120                           indf1	equ	0xFE7
  4121                           postinc1	equ	0xFE6
  4122                           postdec1	equ	0xFE5
  4123                           preinc1	equ	0xFE4
  4124                           plusw1	equ	0xFE3
  4125                           fsr1h	equ	0xFE2
  4126                           fsr1l	equ	0xFE1
  4127                           bsr	equ	0xFE0
  4128                           indf2	equ	0xFDF
  4129                           postinc2	equ	0xFDE
  4130                           postdec2	equ	0xFDD
  4131                           preinc2	equ	0xFDC
  4132                           plusw2	equ	0xFDB
  4133                           fsr2h	equ	0xFDA
  4134                           fsr2l	equ	0xFD9
  4135                           status	equ	0xFD8

Data Sizes:
    Strings     46
    Constant    0
    Data        0
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      27
    BANK0           160    104     104
    BANK1           256    156     211
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    GPS_ParseGPRMC@ew	PTR unsigned char  size(2) Largest target is 2
		 -> main@ew(BANK1[2]), 

    GPS_ParseGPRMC@lat	PTR unsigned char  size(2) Largest target is 10
		 -> main@lat(BANK1[10]), 

    GPS_ParseGPRMC@lon	PTR unsigned char  size(2) Largest target is 11
		 -> main@lon(BANK1[11]), 

    GPS_ParseGPRMC@msg	PTR const unsigned char  size(2) Largest target is 100
		 -> main@buffer(BANK1[100]), 

    GPS_ParseGPRMC@ns	PTR unsigned char  size(2) Largest target is 2
		 -> main@ns(BANK1[2]), 

    GPS_ParseGPRMC@token	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    GPS_ReadSentence@buffer	PTR unsigned char  size(2) Largest target is 100
		 -> main@buffer(BANK1[100]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> main@formatted_lat(BANK1[15]), main@formatted_lon(BANK1[15]), STR_1(CODE[10]), STR_10(CODE[12]), 
		 -> STR_8(CODE[5]), STR_9(CODE[5]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 15
		 -> main@formatted_lat(BANK1[15]), main@formatted_lon(BANK1[15]), STR_1(CODE[10]), STR_10(CODE[12]), 
		 -> STR_8(CODE[5]), STR_9(CODE[5]), 

    memset@dest	PTR void  size(2) Largest target is 100
		 -> main@buffer(BANK1[100]), main@ew(BANK1[2]), main@lat(BANK1[10]), main@lon(BANK1[11]), 
		 -> main@ns(BANK1[2]), 

    memset@p	PTR unsigned char  size(2) Largest target is 100
		 -> main@buffer(BANK1[100]), main@ew(BANK1[2]), main@lat(BANK1[10]), main@lon(BANK1[11]), 
		 -> main@ns(BANK1[2]), 

    sp__memset	PTR void  size(2) Largest target is 100
		 -> main@buffer(BANK1[100]), main@ew(BANK1[2]), main@lat(BANK1[10]), main@lon(BANK1[11]), 
		 -> main@ns(BANK1[2]), 

    sp__strcat	PTR unsigned char  size(2) Largest target is 15
		 -> main@formatted_lat(BANK1[15]), main@formatted_lon(BANK1[15]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 100
		 -> main@buffer(BANK1[100]), STR_12(CODE[2]), STR_13(CODE[2]), NULL(NULL[0]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 15
		 -> main@formatted_lat(BANK1[15]), main@formatted_lon(BANK1[15]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), main@formatted_lat(BANK1[15]), main@formatted_lon(BANK1[15]), main@lat(BANK1[10]), 
		 -> main@lon(BANK1[11]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 100
		 -> main@buffer(BANK1[100]), STR_12(CODE[2]), STR_13(CODE[2]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 15
		 -> main@formatted_lat(BANK1[15]), main@formatted_lon(BANK1[15]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 3
		 -> main@ew(BANK1[2]), main@ns(BANK1[2]), STR_4(CODE[2]), STR_5(CODE[3]), 
		 -> STR_6(CODE[2]), STR_7(CODE[3]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 100
		 -> main@buffer(BANK1[100]), STR_12(CODE[2]), STR_13(CODE[2]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_12(CODE[2]), STR_13(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_11(CODE[7]), STR_3(CODE[7]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_11(CODE[7]), STR_3(CODE[7]), 

    strncat@cp	PTR unsigned char  size(2) Largest target is 15
		 -> main@formatted_lat(BANK1[15]), main@formatted_lon(BANK1[15]), 

    strncat@dest	PTR unsigned char  size(2) Largest target is 15
		 -> main@formatted_lat(BANK1[15]), main@formatted_lon(BANK1[15]), 

    strncat@src	PTR const unsigned char  size(2) Largest target is 11
		 -> main@lat(BANK1[10]), main@lon(BANK1[11]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 100
		 -> main@buffer(BANK1[100]), STR_12(CODE[2]), STR_13(CODE[2]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_11(CODE[7]), STR_3(CODE[7]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), main@formatted_lat(BANK1[15]), main@formatted_lon(BANK1[15]), main@lat(BANK1[10]), 
		 -> main@lon(BANK1[11]), 

    strncpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), main@formatted_lat(BANK1[15]), main@formatted_lon(BANK1[15]), main@lat(BANK1[10]), 
		 -> main@lon(BANK1[11]), 

    strncpy@s	PTR const unsigned char  size(2) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), main@buffer(BANK1[100]), main@lat(BANK1[10]), main@lon(BANK1[11]), 
		 -> NULL(NULL[0]), 

    strspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_12(CODE[2]), STR_13(CODE[2]), 

    strspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 100
		 -> main@buffer(BANK1[100]), STR_12(CODE[2]), STR_13(CODE[2]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_11(CODE[7]), STR_3(CODE[7]), 

    strtok@p	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strtok@sep	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_12(CODE[2]), STR_13(CODE[2]), 


Critical Paths under _main in COMRAM

    _main->_GPS_ParseGPRMC
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _GPS_ParseGPRMC->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strchr
    _strstr->_strncmp

Critical Paths under _main in BANK0

    _main->_GPS_ParseGPRMC

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               158   158      0    4835
                                             24 COMRAM     2     2      0
                                              0 BANK1    156   156      0
                           _GPS_Init
                     _GPS_ParseGPRMC
                   _GPS_ReadSentence
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                             _memset
                             _strcat
                            _strncat
                            _strncpy
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strncat                                              8     2      6     171
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _strcat                                               6     2      4     132
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _memset                                               8     2      6     111
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        7     4      3     362
                                              4 COMRAM     7     4      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2     104
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      58
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      58
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _GPS_ReadSentence                                    15     9      6     386
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (1) _GPS_ParseGPRMC                                     115   105     10    2040
                                             13 COMRAM    11     1     10
                                              0 BANK0    104   104      0
                            _strncpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (2) _strtok                                               2     0      2     556
                                             11 COMRAM     2     0      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (3) _strspn                                               5     3      2     187
                                              6 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strcspn                                              5     3      2     187
                                              6 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               5     2      3     593
                                              6 COMRAM     5     2      3
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     1      5     182
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (2) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _strchr                                               6     2      4      94
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _strncpy                                              8     2      6     156
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _GPS_Init                                             1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GPS_Init
   _GPS_ParseGPRMC
     _strncpy
     _strstr
       _strchr
       _strlen
       _strncmp
     _strtok
       _strcspn
         _strchr
       _strspn
         _strchr
   _GPS_ReadSentence
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _memset
   _strcat
   _strncat
   _strncpy
   _strstr

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256    156     211     82.4%
BITBANK0           160      0       0      0.0%
BANK0              160    104     104     65.0%
BITBIGSFRh         107      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     26      27     28.4%
BITBIGSFRll         44      0       0      0.0%
BITBIGSFRlh          7      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     342      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 30 16:47:13 2025

              ?_LCD_Command 0001                          l20 157E                          l23 152A  
                        l41 1668                          l17 161C                          l29 147A  
                        l38 14D6                 ?_LCD_String 0003                         l120 1638  
                       l121 1634                         l122 1646                         l130 0DE6  
                       l123 1648                         l140 0EDE                         l126 0DCC  
                       l135 0EBA                         l127 0DC8                         l162 0D8A  
                       l146 0DB2                         l164 0DB0                         l903 15EA  
                       l922 114A                         l907 0FE6                         l924 1146  
                       l844 15B6                         l853 1354                         l934 1414  
                       l935 141C                         l944 13B0                         l945 13B8  
                       l865 11D8                         l875 12DC                         l894 11DA  
                       l896 125A                         l888 10B4                         u800 15DE  
                       u801 15DA                         u810 0EFA                         u811 0EF6  
                       u820 0F32                         u900 13E2                         u901 13DE  
                       u830 0F42                         u910 1414                         u831 0F3E  
                       u911 1410                         u760 11FA                         u840 0F5E  
                       u920 1442                         u841 0F5A                         u770 120A  
                       u850 0F70                         u930 146A                         u771 1206  
                       u851 0F6C                         u827 0F28                         u780 1242  
                       u860 0FAE                         u940 147A                         u861 0FAA  
                       u941 1476                         u790 1252                         u870 0FCE  
                       u950 0FF8                         u791 124E                         u767 11F0  
                       u951 0FF4                         u927 1438                         u960 1036  
                       u880 137E                         u865 0F9E                         u961 1032  
                       u881 137A                         u937 1460                         u970 107C  
                       u890 13B0                         u787 1238                         u867 0F94  
                       u971 1078                         u891 13AC                         u980 109C  
                       u877 0FC4                         u990 10AC                         u991 10A8  
                       u987 1092                         wreg 0FE8                 LCD_Char@dat 0002  
                      l1401 1252                        l1411 14EE                        l1501 0FF8  
                      l1421 1518                        l1413 14F0                        l1405 14DA  
                      l1431 15DE                        l1503 100C                        l1511 106A  
                      l1423 151A                        l1415 14F2                        l1407 14EA  
                      l1521 1268                        l1425 15B8                        l1441 0F06  
                      l1513 107C                        l1505 1036                        l1417 1500  
                      l1409 14EC                        l1601 158C                        l1531 12BE  
                      l1523 126E                        l1427 15C0                        l1451 0FAE  
                      l1443 0F12                        l1435 0EE0                        l1515 10AC  
                      l1611 0DBE                        l1419 1516                        l1603 1598  
                      l1533 12C2                        l1429 15C2                        l1445 0F42  
                      l1437 0EFA                        l1509 1042                        l1461 137E  
                      l1701 0CE4                        l1621 0E06                        l1613 0DC0  
                      l1605 159C                        l1527 129E                        l1519 125C  
                      l1447 0F5E                        l1463 13BA                        l1455 1356  
                      l1551 1110                        l1543 10E0                        l1535 10B6  
                      l1711 0D2A                        l1703 0CF6                        l1631 0E44  
                      l1623 0E0E                        l1615 0DC2                        l1607 0DB4  
                      l1471 152E                        l1529 12B4                        l1393 11DA  
                      l1449 0F70                        l1465 13C6                        l1457 1362  
                      l1553 1122                        l1545 10F0                        l1537 10C6  
                      l1721 0D8C                        l1705 0D06                        l1713 0D58  
                      l1641 0E9E                        l1625 0E1E                        l1633 0E4C  
                      l1617 0DDA                        l1609 0DBC                        l1481 1546  
                      l1473 153E                        l1801 0A14                        l1395 120A  
                      l1467 13CC                        l1459 1368                        l1555 1138  
                      l1547 1106                        l1539 10DA                        l1723 0D9C  
                      l1715 0D68                        l1707 0D18                        l1635 0E5C  
                      l1627 0E30                        l1619 0DF4                        l1651 0EBA  
                      l1483 1554                        l1475 1540                        l1571 160A  
                      l1563 15EC                        l1491 141E                        l1731 12EA  
                      l1811 0A90                        l1803 0A2C                        l1469 13E2  
                      l1557 1140                        l1725 0DAC                        l1717 0D6A  
                      l1661 0B80                        l1645 0EA4                        l1637 0E6E  
                      l1629 0E34                        l1653 0EC2                        l1485 156A  
                      l1477 1542                        l1573 1610                        l1565 15EE  
                      l1493 1422                        l1581 1498                        l1733 12EE  
                      l1741 1158                        l1821 0AE8                        l1813 0AA8  
                      l1805 0A40                        l1399 1216                        l1559 1148  
                      l1719 0D7A                        l1671 0BC8                        l1663 0B86  
                      l1639 0E90                        l1655 0EC6                        l1487 156C  
                      l1479 1544                        l1575 1616                        l1567 15FE  
                      l1495 1446                        l1591 14CA                        l1583 14A0  
                      l1735 130E                        l1751 11BC                        l1743 115C  
                      l1831 0B42                        l1823 0AFE                        l1815 0ABC  
                      l1807 0A5C                        l1681 0C24                        l1673 0BCC  
                      l1665 0BA8                        l1657 0EDC                        l1489 156E  
                      l1593 1662                        l1569 1604                        l1497 144A  
                      l1585 14B4                        l1577 147E                        l1737 1316  
                      l1729 12DE                        l1753 11CE                        l1745 1178  
                      l1833 0B5E                        l1825 0B10                        l1817 0AC0  
                      l1809 0A74                        l1761 0838                        l1595 161E  
                      l1499 0FE8                        l1691 0C84                        l1683 0C3E  
                      l1675 0BE0                        l1587 14BE                        l1579 148E  
                      l1747 1186                        l1739 114C                        l1835 0B62  
                      l1827 0B16                        l1819 0AD6                        l1771 0880  
                      l1763 084E                        l1597 1620                        l1693 0C96  
                      l1685 0C50                        l1677 0C02                        l1669 0BAE  
                      l1589 14C4                        l1749 1198                        l1829 0B30  
                      l1781 08CE                        l1773 088C                        l1765 0866  
                      l1757 0830                        l1695 0CA8                        l1687 0C62  
                      l1679 0C14                        l1599 1580                        l1791 0970  
                      l1783 08EA                        l1775 0894                        l1767 086A  
                      l1759 0834                        l1697 0CB8                        l1689 0C72  
                      l1793 09AC                        l1785 0906                        l1777 0896  
                      l1769 0876                        l1699 0CD2                        l1795 09C4  
                      l1787 0922                        l1779 08B2                        l1797 09E0  
                      l1789 094E                        l1799 09F8                        STR_1 080D  
                      STR_2 0817                        STR_3 0817                        STR_4 082D  
                      STR_5 0828                        STR_6 082D                        STR_7 0828  
                      STR_8 0823                        STR_9 081E                        u1000 129A  
                      u1001 1296                        u1010 12B0                        u1011 12AC  
                      u1020 12DC                        u1100 15B6                        u1021 12D8  
                      u1101 15B2                        u1030 10C6                        u1110 0DDA  
                      u1031 10C2                        u1111 0DD6                        u1040 10DA  
                      u1200 0EDC                        u1120 0DF4                        u1041 10D6  
                      u1201 0ED8                        u1121 0DF0                        u1050 1106  
                      u1210 0BA8                        u1130 0E06                        u1051 1102  
                      u1211 0BA4                        u1131 0E02                        u1060 1138  
                      u1300 0CF6                        u1220 0BFA                        u1140 0E1E  
                      u1061 1134                        u1301 0CF2                        u1221 0BF4  
                      u1141 0E1A                        u1310 0D06                        u1230 0BFC  
                      u1150 0E30                        u1070 148E                        u1311 0D02  
                      u1151 0E2C                        u1071 148A                        u1320 0D7A  
                      u1240 0C14                        u1160 0E5C                        u1080 14B4  
                      u1400 1198                        u1321 0D76                        u1241 0C10  
                      u1161 0E58                        u1081 14B0                        u1401 1194  
                      u1090 1646                        u1330 0D8A                        u1250 0C24  
                      u1170 0E6E                        u1410 11BC                        u1091 1642  
                      u1331 0D86                        u1251 0C20                        u1171 0E6A  
                      u1411 11B8                        u1340 0D9C                        u1260 0C62  
                      u1180 0E90                        u1420 11CE                        u1500 0B42  
                      u1341 0D98                        u1261 0C5E                        u1181 0E8C  
                      u1421 11CA                        u1501 0B3E                        u1350 0DAC  
                      u1270 0C72                        u1190 0EB6                        u1351 0DA8  
                      u1271 0C6E                        u1191 0EB2                        u1431 0870  
                      u1280 0CA8                        u1360 130A                        _LATD 0F8C  
                      u1281 0CA4                        u1361 1306                        u1441 0886  
                      u1290 0CB8                        u1370 1342                        u1450 094E  
                      u1291 0CB4                        u1451 094A                        u1380 1354  
                      u1460 0970                        u1381 1350                        u1461 096C  
                      u1517 0858                        u1390 1174                        u1470 09AC  
                      u1391 1170                        u1527 0B20                        u1471 09A8  
                      u1377 1338                        u1537 0B4C                        u1481 09B2  
                      u1547 14F8                        u1491 09BE                        u1557 1522  
                      u1567 15F4                        u1577 154C                        u1587 1576  
                      u1597 0EBC                        _main 0830                        fsr0h 0FEA  
                      fsr1h 0FE2                        indf0 0FEF                        fsr2h 0FDA  
                      fsr0l 0FE9                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        start 7FFC  
             _LCD_String_xy 147C                ___param_bank 0000            __end_of_LCD_Char 152C  
          __end_of_LCD_Init 161E    __end_of_GPS_ReadSentence 0EE0                       ?_main 0001  
                     STR_10 0801                       STR_11 0817                       STR_12 082B  
                     STR_13 082B                       _LATD0 7C60                       _LATD1 7C61  
          __end_of_GPS_Init 164A                       _RCREG 0FAE                       _RCSTA 0FAB  
                     _SPBRG 0FAF                       _TRISD 0F95                       _TXSTA 0FAC  
          ??_GPS_ParseGPRMC 0018                       tablat 0FF5                       status 0FD8  
           __end_of_strcspn 141E             __end_of_strncat 11DA             __end_of_strncmp 0FE8  
           __end_of_strncpy 12DE              ?_LCD_String_xy 0005             __initialization 164A  
              __end_of_main 0B80                      ??_main 0019           __end_of_LCD_Clear 166A  
             __activetblptr 0002            LCD_String_xy@msg 0006            LCD_String_xy@pos 0005  
          LCD_String_xy@row 0008                      _OSCCON 0FD3                      _TRISC7 7CA7  
                    _memset 1580                      clear_0 1650                      isa$std 0001  
                    main@ew 019A                      main@ns 0198                      _strcat 12DE  
                    _strchr 11DA                      _strlen 15B8                      _strtok 10B6  
                    _strspn 1356                      _strstr 0FE8                __mediumconst 0800  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
                 ??_strcspn 0009                   ??_strncat 0007                   ??_strncmp 0006  
                 ??_strncpy 0007                   ?_LCD_Char 0001                  __accesstop 0060  
   __end_of__initialization 1658                   ?_LCD_Init 0001             ??_LCD_String_xy 0008  
             ___rparam_used 0001                   ?_GPS_Init 0001              __pcstackCOMRAM 0001  
              ??_LCD_String 0005                  __pbssBANK1 019C                  ??_LCD_Char 0001  
                ??_LCD_Init 0003          __end_of_LCD_String 147C                  ??_GPS_Init 0001  
                   _BAUDCON 0FB8                     ?_memset 0001           ?_GPS_ReadSentence 0001  
                   ?_strcat 0001                     ?_strchr 0001                     ?_strlen 0001  
                   ?_strtok 000C                     ?_strspn 0007                     ?_strstr 0007  
     GPS_ReadSentence@dummy 000B          ??_GPS_ReadSentence 0007              main@last_valid 0197  
             LCD_String@msg 0003                     __Hparam 0000                     __Lparam 0000  
              __psmallconst 0800                     __pcinit 164A                     __ramtop 0800  
                   __ptext0 0830                     __ptext1 114C                     __ptext2 12DE  
                   __ptext3 1580                     __ptext4 147C                     __ptext5 141E  
                   __ptext6 14D8                     __ptext7 15EC                     __ptext8 1662  
                   __ptext9 152C     GPS_ReadSentence@max_len 0003                   _LCD_Clear 1662  
                   main@lat 018D                     main@lon 0164                     _strcspn 13BA  
                   _strncat 114C                     _strncmp 0EE0                     _strncpy 125C  
      end_of_initialization 1658     GPS_ReadSentence@started 000C                     memset@c 0003  
                   memset@n 0005                     memset@p 0007              LCD_Command@cmd 0002  
             __Lmediumconst 0000                   _RCSTAbits 0FAB                     postinc0 0FEE  
                   postinc2 0FDE                     strcat@i 0005                     strchr@c 0003  
                   strchr@s 0001                     strlen@a 0003                     strlen@s 0001  
                   strspn@c 0008                     strspn@i 000A                     strtok@p 001B  
                   strtok@s 000C                     strspn@s 0007                     strstr@h 0007  
                   strstr@n 0009                  ?_LCD_Clear 0001            _LCD_String_xy$56 0009  
                main@buffer 0100               ??_LCD_Command 0001              __end_of_memset 15B8  
            __end_of_strcat 1356              __end_of_strchr 125C              __end_of_strlen 15EC  
            __end_of_strtok 114C              __end_of_strspn 13BA              __end_of_strstr 10B6  
       start_initialization 164A          _GPS_ParseGPRMC$296 00C4         GPS_ParseGPRMC@field 00C5  
       GPS_ParseGPRMC@token 00C7       __end_of_LCD_String_xy 14D8                    ??_memset 0007  
                memset@dest 0001                    ??_strcat 0005                    ??_strchr 0005  
                  ??_strlen 0003                    ??_strtok 000E                    ??_strspn 0009  
                  ??_strstr 000A         __end_of_LCD_Command 1580                 __pbssCOMRAM 001B  
             __pcstackBANK0 0060               __pcstackBANK1 0100                 ??_LCD_Clear 0003  
  GPS_ParseGPRMC@data_valid 00C6                 __smallconst 0800                 strncat@dest 0001  
     LCD_String_xy@location 000B                    ?_strcspn 0007                    ?_strncat 0001  
                  ?_strncmp 0001                    ?_strncpy 0001           GPS_ReadSentence@c 000F  
         GPS_ReadSentence@i 000D           GPS_ReadSentence@t 0009  GPS_ReadSentence@timeout_ms 0005  
    GPS_ReadSentence@buffer 0001                    _LCD_Char 14D8                    _LCD_Init 15EC  
            _GPS_ParseGPRMC 0B80                    _GPS_Init 161E                    _PIR1bits 0F9E  
                 main@F3541 01CF                   main@F3535 01C5                   main@F3544 01AB  
                 main@F3537 01D1                   main@F3546 019C                   main@F3539 01BA  
               _LCD_Command 152C      __end_of_GPS_ParseGPRMC 0DB4                    __Hrparam 0000  
                  __Lrparam 0000                  strcat@dest 0001                    __ptext10 0DB4  
                  __ptext11 0B80                    __ptext20 161E                    __ptext12 10B6  
                  __ptext13 1356                    __ptext14 13BA                    __ptext15 0FE8  
                  __ptext16 0EE0                    __ptext17 15B8                    __ptext18 11DA  
                  __ptext19 125C            _GPS_ReadSentence 0DB4             ?_GPS_ParseGPRMC 000E  
                strncat@src 0003                    isa$xinst 0000                  _LCD_String 141E  
         GPS_ParseGPRMC@buf 0060           GPS_ParseGPRMC@lat 0010           GPS_ParseGPRMC@lon 0014  
         GPS_ParseGPRMC@msg 000E                   strcat@src 0003                   strncat@cp 0007  
                 strncpy@cp 0007                   strtok@sep 000D            GPS_ParseGPRMC@ew 0016  
          GPS_ParseGPRMC@ns 0012                    strcspn@c 0008                    strcspn@i 000A  
                  strncat@n 0005                    strcspn@s 0007                    strncmp@l 0001  
                  strncmp@n 0004                    strncmp@r 0003                    strncpy@d 0001  
                  strncpy@n 0005                    strncpy@s 0003               GPS_Init@dummy 0001  
                  strstr@nl 000A           main@formatted_lat 016F           main@formatted_lon 017E  
