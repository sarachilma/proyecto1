

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue May 06 20:21:40 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    16                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=2
    23                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    39                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    40                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=3
    41                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=3
    42                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    43                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    45                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    46                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=3
    48                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=1
    49                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=1
    50                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=1
    51                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=1
    52                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=1
    53                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=1
    54                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=3
    55                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=3
    56                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=3
    57                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=3
    58                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,group=2
    59                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,group=2
    60                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    70                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    71                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    72                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Version 2.20
    76                           ; Generated 12/02/2020 GMT
    77                           ; 
    78                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    79                           ; All rights reserved.
    80                           ; 
    81                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    82                           ; 
    83                           ; Redistribution and use in source and binary forms, with or without modification, are
    84                           ; permitted provided that the following conditions are met:
    85                           ; 
    86                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    87                           ;        conditions and the following disclaimer.
    88                           ; 
    89                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    90                           ;        of conditions and the following disclaimer in the documentation and/or other
    91                           ;        materials provided with the distribution.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F4550 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000FE0                     bsr             equ	4064
   110   000FE9                     fsr0            equ	4073
   111   000FEA                     fsr0h           equ	4074
   112   000FE9                     fsr0l           equ	4073
   113   000FE1                     fsr1            equ	4065
   114   000FE2                     fsr1h           equ	4066
   115   000FE1                     fsr1l           equ	4065
   116   000FD9                     fsr2            equ	4057
   117   000FDA                     fsr2h           equ	4058
   118   000FD9                     fsr2l           equ	4057
   119   000FEF                     indf0           equ	4079
   120   000FE7                     indf1           equ	4071
   121   000FDF                     indf2           equ	4063
   122   000FF2                     intcon          equ	4082
   123   000000                     nvmcon          equ	0
   124   000FF9                     pcl             equ	4089
   125   000FFA                     pclath          equ	4090
   126   000FFB                     pclatu          equ	4091
   127   000FEB                     plusw0          equ	4075
   128   000FE3                     plusw1          equ	4067
   129   000FDB                     plusw2          equ	4059
   130   000FED                     postdec0        equ	4077
   131   000FE5                     postdec1        equ	4069
   132   000FDD                     postdec2        equ	4061
   133   000FEE                     postinc0        equ	4078
   134   000FE6                     postinc1        equ	4070
   135   000FDE                     postinc2        equ	4062
   136   000FEC                     preinc0         equ	4076
   137   000FE4                     preinc1         equ	4068
   138   000FDC                     preinc2         equ	4060
   139   000FF3                     prod            equ	4083
   140   000FF4                     prodh           equ	4084
   141   000FF3                     prodl           equ	4083
   142   000FD8                     status          equ	4056
   143   000FF5                     tablat          equ	4085
   144   000FF6                     tblptr          equ	4086
   145   000FF7                     tblptrh         equ	4087
   146   000FF6                     tblptrl         equ	4086
   147   000FF8                     tblptru         equ	4088
   148   000FFD                     tosl            equ	4093
   149   000FE8                     wreg            equ	4072
   150   000F62                     SPPDATA         equ	3938	;# 
   151   000F63                     SPPCFG          equ	3939	;# 
   152   000F64                     SPPEPS          equ	3940	;# 
   153   000F65                     SPPCON          equ	3941	;# 
   154   000F66                     UFRM            equ	3942	;# 
   155   000F66                     UFRML           equ	3942	;# 
   156   000F67                     UFRMH           equ	3943	;# 
   157   000F68                     UIR             equ	3944	;# 
   158   000F69                     UIE             equ	3945	;# 
   159   000F6A                     UEIR            equ	3946	;# 
   160   000F6B                     UEIE            equ	3947	;# 
   161   000F6C                     USTAT           equ	3948	;# 
   162   000F6D                     UCON            equ	3949	;# 
   163   000F6E                     UADDR           equ	3950	;# 
   164   000F6F                     UCFG            equ	3951	;# 
   165   000F70                     UEP0            equ	3952	;# 
   166   000F71                     UEP1            equ	3953	;# 
   167   000F72                     UEP2            equ	3954	;# 
   168   000F73                     UEP3            equ	3955	;# 
   169   000F74                     UEP4            equ	3956	;# 
   170   000F75                     UEP5            equ	3957	;# 
   171   000F76                     UEP6            equ	3958	;# 
   172   000F77                     UEP7            equ	3959	;# 
   173   000F78                     UEP8            equ	3960	;# 
   174   000F79                     UEP9            equ	3961	;# 
   175   000F7A                     UEP10           equ	3962	;# 
   176   000F7B                     UEP11           equ	3963	;# 
   177   000F7C                     UEP12           equ	3964	;# 
   178   000F7D                     UEP13           equ	3965	;# 
   179   000F7E                     UEP14           equ	3966	;# 
   180   000F7F                     UEP15           equ	3967	;# 
   181   000F80                     PORTA           equ	3968	;# 
   182   000F81                     PORTB           equ	3969	;# 
   183   000F82                     PORTC           equ	3970	;# 
   184   000F83                     PORTD           equ	3971	;# 
   185   000F84                     PORTE           equ	3972	;# 
   186   000F89                     LATA            equ	3977	;# 
   187   000F8A                     LATB            equ	3978	;# 
   188   000F8B                     LATC            equ	3979	;# 
   189   000F8C                     LATD            equ	3980	;# 
   190   000F8D                     LATE            equ	3981	;# 
   191   000F92                     TRISA           equ	3986	;# 
   192   000F92                     DDRA            equ	3986	;# 
   193   000F93                     TRISB           equ	3987	;# 
   194   000F93                     DDRB            equ	3987	;# 
   195   000F94                     TRISC           equ	3988	;# 
   196   000F94                     DDRC            equ	3988	;# 
   197   000F95                     TRISD           equ	3989	;# 
   198   000F95                     DDRD            equ	3989	;# 
   199   000F96                     TRISE           equ	3990	;# 
   200   000F96                     DDRE            equ	3990	;# 
   201   000F9B                     OSCTUNE         equ	3995	;# 
   202   000F9D                     PIE1            equ	3997	;# 
   203   000F9E                     PIR1            equ	3998	;# 
   204   000F9F                     IPR1            equ	3999	;# 
   205   000FA0                     PIE2            equ	4000	;# 
   206   000FA1                     PIR2            equ	4001	;# 
   207   000FA2                     IPR2            equ	4002	;# 
   208   000FA6                     EECON1          equ	4006	;# 
   209   000FA7                     EECON2          equ	4007	;# 
   210   000FA8                     EEDATA          equ	4008	;# 
   211   000FA9                     EEADR           equ	4009	;# 
   212   000FAB                     RCSTA           equ	4011	;# 
   213   000FAB                     RCSTA1          equ	4011	;# 
   214   000FAC                     TXSTA           equ	4012	;# 
   215   000FAC                     TXSTA1          equ	4012	;# 
   216   000FAD                     TXREG           equ	4013	;# 
   217   000FAD                     TXREG1          equ	4013	;# 
   218   000FAE                     RCREG           equ	4014	;# 
   219   000FAE                     RCREG1          equ	4014	;# 
   220   000FAF                     SPBRG           equ	4015	;# 
   221   000FAF                     SPBRG1          equ	4015	;# 
   222   000FB0                     SPBRGH          equ	4016	;# 
   223   000FB1                     T3CON           equ	4017	;# 
   224   000FB2                     TMR3            equ	4018	;# 
   225   000FB2                     TMR3L           equ	4018	;# 
   226   000FB3                     TMR3H           equ	4019	;# 
   227   000FB4                     CMCON           equ	4020	;# 
   228   000FB5                     CVRCON          equ	4021	;# 
   229   000FB6                     ECCP1AS         equ	4022	;# 
   230   000FB6                     CCP1AS          equ	4022	;# 
   231   000FB7                     ECCP1DEL        equ	4023	;# 
   232   000FB7                     CCP1DEL         equ	4023	;# 
   233   000FB8                     BAUDCON         equ	4024	;# 
   234   000FB8                     BAUDCTL         equ	4024	;# 
   235   000FBA                     CCP2CON         equ	4026	;# 
   236   000FBB                     CCPR2           equ	4027	;# 
   237   000FBB                     CCPR2L          equ	4027	;# 
   238   000FBC                     CCPR2H          equ	4028	;# 
   239   000FBD                     CCP1CON         equ	4029	;# 
   240   000FBD                     ECCP1CON        equ	4029	;# 
   241   000FBE                     CCPR1           equ	4030	;# 
   242   000FBE                     CCPR1L          equ	4030	;# 
   243   000FBF                     CCPR1H          equ	4031	;# 
   244   000FC0                     ADCON2          equ	4032	;# 
   245   000FC1                     ADCON1          equ	4033	;# 
   246   000FC2                     ADCON0          equ	4034	;# 
   247   000FC3                     ADRES           equ	4035	;# 
   248   000FC3                     ADRESL          equ	4035	;# 
   249   000FC4                     ADRESH          equ	4036	;# 
   250   000FC5                     SSPCON2         equ	4037	;# 
   251   000FC6                     SSPCON1         equ	4038	;# 
   252   000FC7                     SSPSTAT         equ	4039	;# 
   253   000FC8                     SSPADD          equ	4040	;# 
   254   000FC9                     SSPBUF          equ	4041	;# 
   255   000FCA                     T2CON           equ	4042	;# 
   256   000FCB                     PR2             equ	4043	;# 
   257   000FCB                     MEMCON          equ	4043	;# 
   258   000FCC                     TMR2            equ	4044	;# 
   259   000FCD                     T1CON           equ	4045	;# 
   260   000FCE                     TMR1            equ	4046	;# 
   261   000FCE                     TMR1L           equ	4046	;# 
   262   000FCF                     TMR1H           equ	4047	;# 
   263   000FD0                     RCON            equ	4048	;# 
   264   000FD1                     WDTCON          equ	4049	;# 
   265   000FD2                     HLVDCON         equ	4050	;# 
   266   000FD2                     LVDCON          equ	4050	;# 
   267   000FD3                     OSCCON          equ	4051	;# 
   268   000FD5                     T0CON           equ	4053	;# 
   269   000FD6                     TMR0            equ	4054	;# 
   270   000FD6                     TMR0L           equ	4054	;# 
   271   000FD7                     TMR0H           equ	4055	;# 
   272   000FD8                     STATUS          equ	4056	;# 
   273   000FD9                     FSR2            equ	4057	;# 
   274   000FD9                     FSR2L           equ	4057	;# 
   275   000FDA                     FSR2H           equ	4058	;# 
   276   000FDB                     PLUSW2          equ	4059	;# 
   277   000FDC                     PREINC2         equ	4060	;# 
   278   000FDD                     POSTDEC2        equ	4061	;# 
   279   000FDE                     POSTINC2        equ	4062	;# 
   280   000FDF                     INDF2           equ	4063	;# 
   281   000FE0                     BSR             equ	4064	;# 
   282   000FE1                     FSR1            equ	4065	;# 
   283   000FE1                     FSR1L           equ	4065	;# 
   284   000FE2                     FSR1H           equ	4066	;# 
   285   000FE3                     PLUSW1          equ	4067	;# 
   286   000FE4                     PREINC1         equ	4068	;# 
   287   000FE5                     POSTDEC1        equ	4069	;# 
   288   000FE6                     POSTINC1        equ	4070	;# 
   289   000FE7                     INDF1           equ	4071	;# 
   290   000FE8                     WREG            equ	4072	;# 
   291   000FE9                     FSR0            equ	4073	;# 
   292   000FE9                     FSR0L           equ	4073	;# 
   293   000FEA                     FSR0H           equ	4074	;# 
   294   000FEB                     PLUSW0          equ	4075	;# 
   295   000FEC                     PREINC0         equ	4076	;# 
   296   000FED                     POSTDEC0        equ	4077	;# 
   297   000FEE                     POSTINC0        equ	4078	;# 
   298   000FEF                     INDF0           equ	4079	;# 
   299   000FF0                     INTCON3         equ	4080	;# 
   300   000FF1                     INTCON2         equ	4081	;# 
   301   000FF2                     INTCON          equ	4082	;# 
   302   000FF3                     PROD            equ	4083	;# 
   303   000FF3                     PRODL           equ	4083	;# 
   304   000FF4                     PRODH           equ	4084	;# 
   305   000FF5                     TABLAT          equ	4085	;# 
   306   000FF6                     TBLPTR          equ	4086	;# 
   307   000FF6                     TBLPTRL         equ	4086	;# 
   308   000FF7                     TBLPTRH         equ	4087	;# 
   309   000FF8                     TBLPTRU         equ	4088	;# 
   310   000FF9                     PCLAT           equ	4089	;# 
   311   000FF9                     PC              equ	4089	;# 
   312   000FF9                     PCL             equ	4089	;# 
   313   000FFA                     PCLATH          equ	4090	;# 
   314   000FFB                     PCLATU          equ	4091	;# 
   315   000FFC                     STKPTR          equ	4092	;# 
   316   000FFD                     TOS             equ	4093	;# 
   317   000FFD                     TOSL            equ	4093	;# 
   318   000FFE                     TOSH            equ	4094	;# 
   319   000FFF                     TOSU            equ	4095	;# 
   320   000F62                     SPPDATA         equ	3938	;# 
   321   000F63                     SPPCFG          equ	3939	;# 
   322   000F64                     SPPEPS          equ	3940	;# 
   323   000F65                     SPPCON          equ	3941	;# 
   324   000F66                     UFRM            equ	3942	;# 
   325   000F66                     UFRML           equ	3942	;# 
   326   000F67                     UFRMH           equ	3943	;# 
   327   000F68                     UIR             equ	3944	;# 
   328   000F69                     UIE             equ	3945	;# 
   329   000F6A                     UEIR            equ	3946	;# 
   330   000F6B                     UEIE            equ	3947	;# 
   331   000F6C                     USTAT           equ	3948	;# 
   332   000F6D                     UCON            equ	3949	;# 
   333   000F6E                     UADDR           equ	3950	;# 
   334   000F6F                     UCFG            equ	3951	;# 
   335   000F70                     UEP0            equ	3952	;# 
   336   000F71                     UEP1            equ	3953	;# 
   337   000F72                     UEP2            equ	3954	;# 
   338   000F73                     UEP3            equ	3955	;# 
   339   000F74                     UEP4            equ	3956	;# 
   340   000F75                     UEP5            equ	3957	;# 
   341   000F76                     UEP6            equ	3958	;# 
   342   000F77                     UEP7            equ	3959	;# 
   343   000F78                     UEP8            equ	3960	;# 
   344   000F79                     UEP9            equ	3961	;# 
   345   000F7A                     UEP10           equ	3962	;# 
   346   000F7B                     UEP11           equ	3963	;# 
   347   000F7C                     UEP12           equ	3964	;# 
   348   000F7D                     UEP13           equ	3965	;# 
   349   000F7E                     UEP14           equ	3966	;# 
   350   000F7F                     UEP15           equ	3967	;# 
   351   000F80                     PORTA           equ	3968	;# 
   352   000F81                     PORTB           equ	3969	;# 
   353   000F82                     PORTC           equ	3970	;# 
   354   000F83                     PORTD           equ	3971	;# 
   355   000F84                     PORTE           equ	3972	;# 
   356   000F89                     LATA            equ	3977	;# 
   357   000F8A                     LATB            equ	3978	;# 
   358   000F8B                     LATC            equ	3979	;# 
   359   000F8C                     LATD            equ	3980	;# 
   360   000F8D                     LATE            equ	3981	;# 
   361   000F92                     TRISA           equ	3986	;# 
   362   000F92                     DDRA            equ	3986	;# 
   363   000F93                     TRISB           equ	3987	;# 
   364   000F93                     DDRB            equ	3987	;# 
   365   000F94                     TRISC           equ	3988	;# 
   366   000F94                     DDRC            equ	3988	;# 
   367   000F95                     TRISD           equ	3989	;# 
   368   000F95                     DDRD            equ	3989	;# 
   369   000F96                     TRISE           equ	3990	;# 
   370   000F96                     DDRE            equ	3990	;# 
   371   000F9B                     OSCTUNE         equ	3995	;# 
   372   000F9D                     PIE1            equ	3997	;# 
   373   000F9E                     PIR1            equ	3998	;# 
   374   000F9F                     IPR1            equ	3999	;# 
   375   000FA0                     PIE2            equ	4000	;# 
   376   000FA1                     PIR2            equ	4001	;# 
   377   000FA2                     IPR2            equ	4002	;# 
   378   000FA6                     EECON1          equ	4006	;# 
   379   000FA7                     EECON2          equ	4007	;# 
   380   000FA8                     EEDATA          equ	4008	;# 
   381   000FA9                     EEADR           equ	4009	;# 
   382   000FAB                     RCSTA           equ	4011	;# 
   383   000FAB                     RCSTA1          equ	4011	;# 
   384   000FAC                     TXSTA           equ	4012	;# 
   385   000FAC                     TXSTA1          equ	4012	;# 
   386   000FAD                     TXREG           equ	4013	;# 
   387   000FAD                     TXREG1          equ	4013	;# 
   388   000FAE                     RCREG           equ	4014	;# 
   389   000FAE                     RCREG1          equ	4014	;# 
   390   000FAF                     SPBRG           equ	4015	;# 
   391   000FAF                     SPBRG1          equ	4015	;# 
   392   000FB0                     SPBRGH          equ	4016	;# 
   393   000FB1                     T3CON           equ	4017	;# 
   394   000FB2                     TMR3            equ	4018	;# 
   395   000FB2                     TMR3L           equ	4018	;# 
   396   000FB3                     TMR3H           equ	4019	;# 
   397   000FB4                     CMCON           equ	4020	;# 
   398   000FB5                     CVRCON          equ	4021	;# 
   399   000FB6                     ECCP1AS         equ	4022	;# 
   400   000FB6                     CCP1AS          equ	4022	;# 
   401   000FB7                     ECCP1DEL        equ	4023	;# 
   402   000FB7                     CCP1DEL         equ	4023	;# 
   403   000FB8                     BAUDCON         equ	4024	;# 
   404   000FB8                     BAUDCTL         equ	4024	;# 
   405   000FBA                     CCP2CON         equ	4026	;# 
   406   000FBB                     CCPR2           equ	4027	;# 
   407   000FBB                     CCPR2L          equ	4027	;# 
   408   000FBC                     CCPR2H          equ	4028	;# 
   409   000FBD                     CCP1CON         equ	4029	;# 
   410   000FBD                     ECCP1CON        equ	4029	;# 
   411   000FBE                     CCPR1           equ	4030	;# 
   412   000FBE                     CCPR1L          equ	4030	;# 
   413   000FBF                     CCPR1H          equ	4031	;# 
   414   000FC0                     ADCON2          equ	4032	;# 
   415   000FC1                     ADCON1          equ	4033	;# 
   416   000FC2                     ADCON0          equ	4034	;# 
   417   000FC3                     ADRES           equ	4035	;# 
   418   000FC3                     ADRESL          equ	4035	;# 
   419   000FC4                     ADRESH          equ	4036	;# 
   420   000FC5                     SSPCON2         equ	4037	;# 
   421   000FC6                     SSPCON1         equ	4038	;# 
   422   000FC7                     SSPSTAT         equ	4039	;# 
   423   000FC8                     SSPADD          equ	4040	;# 
   424   000FC9                     SSPBUF          equ	4041	;# 
   425   000FCA                     T2CON           equ	4042	;# 
   426   000FCB                     PR2             equ	4043	;# 
   427   000FCB                     MEMCON          equ	4043	;# 
   428   000FCC                     TMR2            equ	4044	;# 
   429   000FCD                     T1CON           equ	4045	;# 
   430   000FCE                     TMR1            equ	4046	;# 
   431   000FCE                     TMR1L           equ	4046	;# 
   432   000FCF                     TMR1H           equ	4047	;# 
   433   000FD0                     RCON            equ	4048	;# 
   434   000FD1                     WDTCON          equ	4049	;# 
   435   000FD2                     HLVDCON         equ	4050	;# 
   436   000FD2                     LVDCON          equ	4050	;# 
   437   000FD3                     OSCCON          equ	4051	;# 
   438   000FD5                     T0CON           equ	4053	;# 
   439   000FD6                     TMR0            equ	4054	;# 
   440   000FD6                     TMR0L           equ	4054	;# 
   441   000FD7                     TMR0H           equ	4055	;# 
   442   000FD8                     STATUS          equ	4056	;# 
   443   000FD9                     FSR2            equ	4057	;# 
   444   000FD9                     FSR2L           equ	4057	;# 
   445   000FDA                     FSR2H           equ	4058	;# 
   446   000FDB                     PLUSW2          equ	4059	;# 
   447   000FDC                     PREINC2         equ	4060	;# 
   448   000FDD                     POSTDEC2        equ	4061	;# 
   449   000FDE                     POSTINC2        equ	4062	;# 
   450   000FDF                     INDF2           equ	4063	;# 
   451   000FE0                     BSR             equ	4064	;# 
   452   000FE1                     FSR1            equ	4065	;# 
   453   000FE1                     FSR1L           equ	4065	;# 
   454   000FE2                     FSR1H           equ	4066	;# 
   455   000FE3                     PLUSW1          equ	4067	;# 
   456   000FE4                     PREINC1         equ	4068	;# 
   457   000FE5                     POSTDEC1        equ	4069	;# 
   458   000FE6                     POSTINC1        equ	4070	;# 
   459   000FE7                     INDF1           equ	4071	;# 
   460   000FE8                     WREG            equ	4072	;# 
   461   000FE9                     FSR0            equ	4073	;# 
   462   000FE9                     FSR0L           equ	4073	;# 
   463   000FEA                     FSR0H           equ	4074	;# 
   464   000FEB                     PLUSW0          equ	4075	;# 
   465   000FEC                     PREINC0         equ	4076	;# 
   466   000FED                     POSTDEC0        equ	4077	;# 
   467   000FEE                     POSTINC0        equ	4078	;# 
   468   000FEF                     INDF0           equ	4079	;# 
   469   000FF0                     INTCON3         equ	4080	;# 
   470   000FF1                     INTCON2         equ	4081	;# 
   471   000FF2                     INTCON          equ	4082	;# 
   472   000FF3                     PROD            equ	4083	;# 
   473   000FF3                     PRODL           equ	4083	;# 
   474   000FF4                     PRODH           equ	4084	;# 
   475   000FF5                     TABLAT          equ	4085	;# 
   476   000FF6                     TBLPTR          equ	4086	;# 
   477   000FF6                     TBLPTRL         equ	4086	;# 
   478   000FF7                     TBLPTRH         equ	4087	;# 
   479   000FF8                     TBLPTRU         equ	4088	;# 
   480   000FF9                     PCLAT           equ	4089	;# 
   481   000FF9                     PC              equ	4089	;# 
   482   000FF9                     PCL             equ	4089	;# 
   483   000FFA                     PCLATH          equ	4090	;# 
   484   000FFB                     PCLATU          equ	4091	;# 
   485   000FFC                     STKPTR          equ	4092	;# 
   486   000FFD                     TOS             equ	4093	;# 
   487   000FFD                     TOSL            equ	4093	;# 
   488   000FFE                     TOSH            equ	4094	;# 
   489   000FFF                     TOSU            equ	4095	;# 
   490   000F62                     SPPDATA         equ	3938	;# 
   491   000F63                     SPPCFG          equ	3939	;# 
   492   000F64                     SPPEPS          equ	3940	;# 
   493   000F65                     SPPCON          equ	3941	;# 
   494   000F66                     UFRM            equ	3942	;# 
   495   000F66                     UFRML           equ	3942	;# 
   496   000F67                     UFRMH           equ	3943	;# 
   497   000F68                     UIR             equ	3944	;# 
   498   000F69                     UIE             equ	3945	;# 
   499   000F6A                     UEIR            equ	3946	;# 
   500   000F6B                     UEIE            equ	3947	;# 
   501   000F6C                     USTAT           equ	3948	;# 
   502   000F6D                     UCON            equ	3949	;# 
   503   000F6E                     UADDR           equ	3950	;# 
   504   000F6F                     UCFG            equ	3951	;# 
   505   000F70                     UEP0            equ	3952	;# 
   506   000F71                     UEP1            equ	3953	;# 
   507   000F72                     UEP2            equ	3954	;# 
   508   000F73                     UEP3            equ	3955	;# 
   509   000F74                     UEP4            equ	3956	;# 
   510   000F75                     UEP5            equ	3957	;# 
   511   000F76                     UEP6            equ	3958	;# 
   512   000F77                     UEP7            equ	3959	;# 
   513   000F78                     UEP8            equ	3960	;# 
   514   000F79                     UEP9            equ	3961	;# 
   515   000F7A                     UEP10           equ	3962	;# 
   516   000F7B                     UEP11           equ	3963	;# 
   517   000F7C                     UEP12           equ	3964	;# 
   518   000F7D                     UEP13           equ	3965	;# 
   519   000F7E                     UEP14           equ	3966	;# 
   520   000F7F                     UEP15           equ	3967	;# 
   521   000F80                     PORTA           equ	3968	;# 
   522   000F81                     PORTB           equ	3969	;# 
   523   000F82                     PORTC           equ	3970	;# 
   524   000F83                     PORTD           equ	3971	;# 
   525   000F84                     PORTE           equ	3972	;# 
   526   000F89                     LATA            equ	3977	;# 
   527   000F8A                     LATB            equ	3978	;# 
   528   000F8B                     LATC            equ	3979	;# 
   529   000F8C                     LATD            equ	3980	;# 
   530   000F8D                     LATE            equ	3981	;# 
   531   000F92                     TRISA           equ	3986	;# 
   532   000F92                     DDRA            equ	3986	;# 
   533   000F93                     TRISB           equ	3987	;# 
   534   000F93                     DDRB            equ	3987	;# 
   535   000F94                     TRISC           equ	3988	;# 
   536   000F94                     DDRC            equ	3988	;# 
   537   000F95                     TRISD           equ	3989	;# 
   538   000F95                     DDRD            equ	3989	;# 
   539   000F96                     TRISE           equ	3990	;# 
   540   000F96                     DDRE            equ	3990	;# 
   541   000F9B                     OSCTUNE         equ	3995	;# 
   542   000F9D                     PIE1            equ	3997	;# 
   543   000F9E                     PIR1            equ	3998	;# 
   544   000F9F                     IPR1            equ	3999	;# 
   545   000FA0                     PIE2            equ	4000	;# 
   546   000FA1                     PIR2            equ	4001	;# 
   547   000FA2                     IPR2            equ	4002	;# 
   548   000FA6                     EECON1          equ	4006	;# 
   549   000FA7                     EECON2          equ	4007	;# 
   550   000FA8                     EEDATA          equ	4008	;# 
   551   000FA9                     EEADR           equ	4009	;# 
   552   000FAB                     RCSTA           equ	4011	;# 
   553   000FAB                     RCSTA1          equ	4011	;# 
   554   000FAC                     TXSTA           equ	4012	;# 
   555   000FAC                     TXSTA1          equ	4012	;# 
   556   000FAD                     TXREG           equ	4013	;# 
   557   000FAD                     TXREG1          equ	4013	;# 
   558   000FAE                     RCREG           equ	4014	;# 
   559   000FAE                     RCREG1          equ	4014	;# 
   560   000FAF                     SPBRG           equ	4015	;# 
   561   000FAF                     SPBRG1          equ	4015	;# 
   562   000FB0                     SPBRGH          equ	4016	;# 
   563   000FB1                     T3CON           equ	4017	;# 
   564   000FB2                     TMR3            equ	4018	;# 
   565   000FB2                     TMR3L           equ	4018	;# 
   566   000FB3                     TMR3H           equ	4019	;# 
   567   000FB4                     CMCON           equ	4020	;# 
   568   000FB5                     CVRCON          equ	4021	;# 
   569   000FB6                     ECCP1AS         equ	4022	;# 
   570   000FB6                     CCP1AS          equ	4022	;# 
   571   000FB7                     ECCP1DEL        equ	4023	;# 
   572   000FB7                     CCP1DEL         equ	4023	;# 
   573   000FB8                     BAUDCON         equ	4024	;# 
   574   000FB8                     BAUDCTL         equ	4024	;# 
   575   000FBA                     CCP2CON         equ	4026	;# 
   576   000FBB                     CCPR2           equ	4027	;# 
   577   000FBB                     CCPR2L          equ	4027	;# 
   578   000FBC                     CCPR2H          equ	4028	;# 
   579   000FBD                     CCP1CON         equ	4029	;# 
   580   000FBD                     ECCP1CON        equ	4029	;# 
   581   000FBE                     CCPR1           equ	4030	;# 
   582   000FBE                     CCPR1L          equ	4030	;# 
   583   000FBF                     CCPR1H          equ	4031	;# 
   584   000FC0                     ADCON2          equ	4032	;# 
   585   000FC1                     ADCON1          equ	4033	;# 
   586   000FC2                     ADCON0          equ	4034	;# 
   587   000FC3                     ADRES           equ	4035	;# 
   588   000FC3                     ADRESL          equ	4035	;# 
   589   000FC4                     ADRESH          equ	4036	;# 
   590   000FC5                     SSPCON2         equ	4037	;# 
   591   000FC6                     SSPCON1         equ	4038	;# 
   592   000FC7                     SSPSTAT         equ	4039	;# 
   593   000FC8                     SSPADD          equ	4040	;# 
   594   000FC9                     SSPBUF          equ	4041	;# 
   595   000FCA                     T2CON           equ	4042	;# 
   596   000FCB                     PR2             equ	4043	;# 
   597   000FCB                     MEMCON          equ	4043	;# 
   598   000FCC                     TMR2            equ	4044	;# 
   599   000FCD                     T1CON           equ	4045	;# 
   600   000FCE                     TMR1            equ	4046	;# 
   601   000FCE                     TMR1L           equ	4046	;# 
   602   000FCF                     TMR1H           equ	4047	;# 
   603   000FD0                     RCON            equ	4048	;# 
   604   000FD1                     WDTCON          equ	4049	;# 
   605   000FD2                     HLVDCON         equ	4050	;# 
   606   000FD2                     LVDCON          equ	4050	;# 
   607   000FD3                     OSCCON          equ	4051	;# 
   608   000FD5                     T0CON           equ	4053	;# 
   609   000FD6                     TMR0            equ	4054	;# 
   610   000FD6                     TMR0L           equ	4054	;# 
   611   000FD7                     TMR0H           equ	4055	;# 
   612   000FD8                     STATUS          equ	4056	;# 
   613   000FD9                     FSR2            equ	4057	;# 
   614   000FD9                     FSR2L           equ	4057	;# 
   615   000FDA                     FSR2H           equ	4058	;# 
   616   000FDB                     PLUSW2          equ	4059	;# 
   617   000FDC                     PREINC2         equ	4060	;# 
   618   000FDD                     POSTDEC2        equ	4061	;# 
   619   000FDE                     POSTINC2        equ	4062	;# 
   620   000FDF                     INDF2           equ	4063	;# 
   621   000FE0                     BSR             equ	4064	;# 
   622   000FE1                     FSR1            equ	4065	;# 
   623   000FE1                     FSR1L           equ	4065	;# 
   624   000FE2                     FSR1H           equ	4066	;# 
   625   000FE3                     PLUSW1          equ	4067	;# 
   626   000FE4                     PREINC1         equ	4068	;# 
   627   000FE5                     POSTDEC1        equ	4069	;# 
   628   000FE6                     POSTINC1        equ	4070	;# 
   629   000FE7                     INDF1           equ	4071	;# 
   630   000FE8                     WREG            equ	4072	;# 
   631   000FE9                     FSR0            equ	4073	;# 
   632   000FE9                     FSR0L           equ	4073	;# 
   633   000FEA                     FSR0H           equ	4074	;# 
   634   000FEB                     PLUSW0          equ	4075	;# 
   635   000FEC                     PREINC0         equ	4076	;# 
   636   000FED                     POSTDEC0        equ	4077	;# 
   637   000FEE                     POSTINC0        equ	4078	;# 
   638   000FEF                     INDF0           equ	4079	;# 
   639   000FF0                     INTCON3         equ	4080	;# 
   640   000FF1                     INTCON2         equ	4081	;# 
   641   000FF2                     INTCON          equ	4082	;# 
   642   000FF3                     PROD            equ	4083	;# 
   643   000FF3                     PRODL           equ	4083	;# 
   644   000FF4                     PRODH           equ	4084	;# 
   645   000FF5                     TABLAT          equ	4085	;# 
   646   000FF6                     TBLPTR          equ	4086	;# 
   647   000FF6                     TBLPTRL         equ	4086	;# 
   648   000FF7                     TBLPTRH         equ	4087	;# 
   649   000FF8                     TBLPTRU         equ	4088	;# 
   650   000FF9                     PCLAT           equ	4089	;# 
   651   000FF9                     PC              equ	4089	;# 
   652   000FF9                     PCL             equ	4089	;# 
   653   000FFA                     PCLATH          equ	4090	;# 
   654   000FFB                     PCLATU          equ	4091	;# 
   655   000FFC                     STKPTR          equ	4092	;# 
   656   000FFD                     TOS             equ	4093	;# 
   657   000FFD                     TOSL            equ	4093	;# 
   658   000FFE                     TOSH            equ	4094	;# 
   659   000FFF                     TOSU            equ	4095	;# 
   660   000F62                     SPPDATA         equ	3938	;# 
   661   000F63                     SPPCFG          equ	3939	;# 
   662   000F64                     SPPEPS          equ	3940	;# 
   663   000F65                     SPPCON          equ	3941	;# 
   664   000F66                     UFRM            equ	3942	;# 
   665   000F66                     UFRML           equ	3942	;# 
   666   000F67                     UFRMH           equ	3943	;# 
   667   000F68                     UIR             equ	3944	;# 
   668   000F69                     UIE             equ	3945	;# 
   669   000F6A                     UEIR            equ	3946	;# 
   670   000F6B                     UEIE            equ	3947	;# 
   671   000F6C                     USTAT           equ	3948	;# 
   672   000F6D                     UCON            equ	3949	;# 
   673   000F6E                     UADDR           equ	3950	;# 
   674   000F6F                     UCFG            equ	3951	;# 
   675   000F70                     UEP0            equ	3952	;# 
   676   000F71                     UEP1            equ	3953	;# 
   677   000F72                     UEP2            equ	3954	;# 
   678   000F73                     UEP3            equ	3955	;# 
   679   000F74                     UEP4            equ	3956	;# 
   680   000F75                     UEP5            equ	3957	;# 
   681   000F76                     UEP6            equ	3958	;# 
   682   000F77                     UEP7            equ	3959	;# 
   683   000F78                     UEP8            equ	3960	;# 
   684   000F79                     UEP9            equ	3961	;# 
   685   000F7A                     UEP10           equ	3962	;# 
   686   000F7B                     UEP11           equ	3963	;# 
   687   000F7C                     UEP12           equ	3964	;# 
   688   000F7D                     UEP13           equ	3965	;# 
   689   000F7E                     UEP14           equ	3966	;# 
   690   000F7F                     UEP15           equ	3967	;# 
   691   000F80                     PORTA           equ	3968	;# 
   692   000F81                     PORTB           equ	3969	;# 
   693   000F82                     PORTC           equ	3970	;# 
   694   000F83                     PORTD           equ	3971	;# 
   695   000F84                     PORTE           equ	3972	;# 
   696   000F89                     LATA            equ	3977	;# 
   697   000F8A                     LATB            equ	3978	;# 
   698   000F8B                     LATC            equ	3979	;# 
   699   000F8C                     LATD            equ	3980	;# 
   700   000F8D                     LATE            equ	3981	;# 
   701   000F92                     TRISA           equ	3986	;# 
   702   000F92                     DDRA            equ	3986	;# 
   703   000F93                     TRISB           equ	3987	;# 
   704   000F93                     DDRB            equ	3987	;# 
   705   000F94                     TRISC           equ	3988	;# 
   706   000F94                     DDRC            equ	3988	;# 
   707   000F95                     TRISD           equ	3989	;# 
   708   000F95                     DDRD            equ	3989	;# 
   709   000F96                     TRISE           equ	3990	;# 
   710   000F96                     DDRE            equ	3990	;# 
   711   000F9B                     OSCTUNE         equ	3995	;# 
   712   000F9D                     PIE1            equ	3997	;# 
   713   000F9E                     PIR1            equ	3998	;# 
   714   000F9F                     IPR1            equ	3999	;# 
   715   000FA0                     PIE2            equ	4000	;# 
   716   000FA1                     PIR2            equ	4001	;# 
   717   000FA2                     IPR2            equ	4002	;# 
   718   000FA6                     EECON1          equ	4006	;# 
   719   000FA7                     EECON2          equ	4007	;# 
   720   000FA8                     EEDATA          equ	4008	;# 
   721   000FA9                     EEADR           equ	4009	;# 
   722   000FAB                     RCSTA           equ	4011	;# 
   723   000FAB                     RCSTA1          equ	4011	;# 
   724   000FAC                     TXSTA           equ	4012	;# 
   725   000FAC                     TXSTA1          equ	4012	;# 
   726   000FAD                     TXREG           equ	4013	;# 
   727   000FAD                     TXREG1          equ	4013	;# 
   728   000FAE                     RCREG           equ	4014	;# 
   729   000FAE                     RCREG1          equ	4014	;# 
   730   000FAF                     SPBRG           equ	4015	;# 
   731   000FAF                     SPBRG1          equ	4015	;# 
   732   000FB0                     SPBRGH          equ	4016	;# 
   733   000FB1                     T3CON           equ	4017	;# 
   734   000FB2                     TMR3            equ	4018	;# 
   735   000FB2                     TMR3L           equ	4018	;# 
   736   000FB3                     TMR3H           equ	4019	;# 
   737   000FB4                     CMCON           equ	4020	;# 
   738   000FB5                     CVRCON          equ	4021	;# 
   739   000FB6                     ECCP1AS         equ	4022	;# 
   740   000FB6                     CCP1AS          equ	4022	;# 
   741   000FB7                     ECCP1DEL        equ	4023	;# 
   742   000FB7                     CCP1DEL         equ	4023	;# 
   743   000FB8                     BAUDCON         equ	4024	;# 
   744   000FB8                     BAUDCTL         equ	4024	;# 
   745   000FBA                     CCP2CON         equ	4026	;# 
   746   000FBB                     CCPR2           equ	4027	;# 
   747   000FBB                     CCPR2L          equ	4027	;# 
   748   000FBC                     CCPR2H          equ	4028	;# 
   749   000FBD                     CCP1CON         equ	4029	;# 
   750   000FBD                     ECCP1CON        equ	4029	;# 
   751   000FBE                     CCPR1           equ	4030	;# 
   752   000FBE                     CCPR1L          equ	4030	;# 
   753   000FBF                     CCPR1H          equ	4031	;# 
   754   000FC0                     ADCON2          equ	4032	;# 
   755   000FC1                     ADCON1          equ	4033	;# 
   756   000FC2                     ADCON0          equ	4034	;# 
   757   000FC3                     ADRES           equ	4035	;# 
   758   000FC3                     ADRESL          equ	4035	;# 
   759   000FC4                     ADRESH          equ	4036	;# 
   760   000FC5                     SSPCON2         equ	4037	;# 
   761   000FC6                     SSPCON1         equ	4038	;# 
   762   000FC7                     SSPSTAT         equ	4039	;# 
   763   000FC8                     SSPADD          equ	4040	;# 
   764   000FC9                     SSPBUF          equ	4041	;# 
   765   000FCA                     T2CON           equ	4042	;# 
   766   000FCB                     PR2             equ	4043	;# 
   767   000FCB                     MEMCON          equ	4043	;# 
   768   000FCC                     TMR2            equ	4044	;# 
   769   000FCD                     T1CON           equ	4045	;# 
   770   000FCE                     TMR1            equ	4046	;# 
   771   000FCE                     TMR1L           equ	4046	;# 
   772   000FCF                     TMR1H           equ	4047	;# 
   773   000FD0                     RCON            equ	4048	;# 
   774   000FD1                     WDTCON          equ	4049	;# 
   775   000FD2                     HLVDCON         equ	4050	;# 
   776   000FD2                     LVDCON          equ	4050	;# 
   777   000FD3                     OSCCON          equ	4051	;# 
   778   000FD5                     T0CON           equ	4053	;# 
   779   000FD6                     TMR0            equ	4054	;# 
   780   000FD6                     TMR0L           equ	4054	;# 
   781   000FD7                     TMR0H           equ	4055	;# 
   782   000FD8                     STATUS          equ	4056	;# 
   783   000FD9                     FSR2            equ	4057	;# 
   784   000FD9                     FSR2L           equ	4057	;# 
   785   000FDA                     FSR2H           equ	4058	;# 
   786   000FDB                     PLUSW2          equ	4059	;# 
   787   000FDC                     PREINC2         equ	4060	;# 
   788   000FDD                     POSTDEC2        equ	4061	;# 
   789   000FDE                     POSTINC2        equ	4062	;# 
   790   000FDF                     INDF2           equ	4063	;# 
   791   000FE0                     BSR             equ	4064	;# 
   792   000FE1                     FSR1            equ	4065	;# 
   793   000FE1                     FSR1L           equ	4065	;# 
   794   000FE2                     FSR1H           equ	4066	;# 
   795   000FE3                     PLUSW1          equ	4067	;# 
   796   000FE4                     PREINC1         equ	4068	;# 
   797   000FE5                     POSTDEC1        equ	4069	;# 
   798   000FE6                     POSTINC1        equ	4070	;# 
   799   000FE7                     INDF1           equ	4071	;# 
   800   000FE8                     WREG            equ	4072	;# 
   801   000FE9                     FSR0            equ	4073	;# 
   802   000FE9                     FSR0L           equ	4073	;# 
   803   000FEA                     FSR0H           equ	4074	;# 
   804   000FEB                     PLUSW0          equ	4075	;# 
   805   000FEC                     PREINC0         equ	4076	;# 
   806   000FED                     POSTDEC0        equ	4077	;# 
   807   000FEE                     POSTINC0        equ	4078	;# 
   808   000FEF                     INDF0           equ	4079	;# 
   809   000FF0                     INTCON3         equ	4080	;# 
   810   000FF1                     INTCON2         equ	4081	;# 
   811   000FF2                     INTCON          equ	4082	;# 
   812   000FF3                     PROD            equ	4083	;# 
   813   000FF3                     PRODL           equ	4083	;# 
   814   000FF4                     PRODH           equ	4084	;# 
   815   000FF5                     TABLAT          equ	4085	;# 
   816   000FF6                     TBLPTR          equ	4086	;# 
   817   000FF6                     TBLPTRL         equ	4086	;# 
   818   000FF7                     TBLPTRH         equ	4087	;# 
   819   000FF8                     TBLPTRU         equ	4088	;# 
   820   000FF9                     PCLAT           equ	4089	;# 
   821   000FF9                     PC              equ	4089	;# 
   822   000FF9                     PCL             equ	4089	;# 
   823   000FFA                     PCLATH          equ	4090	;# 
   824   000FFB                     PCLATU          equ	4091	;# 
   825   000FFC                     STKPTR          equ	4092	;# 
   826   000FFD                     TOS             equ	4093	;# 
   827   000FFD                     TOSL            equ	4093	;# 
   828   000FFE                     TOSH            equ	4094	;# 
   829   000FFF                     TOSU            equ	4095	;# 
   830   000F62                     SPPDATA         equ	3938	;# 
   831   000F63                     SPPCFG          equ	3939	;# 
   832   000F64                     SPPEPS          equ	3940	;# 
   833   000F65                     SPPCON          equ	3941	;# 
   834   000F66                     UFRM            equ	3942	;# 
   835   000F66                     UFRML           equ	3942	;# 
   836   000F67                     UFRMH           equ	3943	;# 
   837   000F68                     UIR             equ	3944	;# 
   838   000F69                     UIE             equ	3945	;# 
   839   000F6A                     UEIR            equ	3946	;# 
   840   000F6B                     UEIE            equ	3947	;# 
   841   000F6C                     USTAT           equ	3948	;# 
   842   000F6D                     UCON            equ	3949	;# 
   843   000F6E                     UADDR           equ	3950	;# 
   844   000F6F                     UCFG            equ	3951	;# 
   845   000F70                     UEP0            equ	3952	;# 
   846   000F71                     UEP1            equ	3953	;# 
   847   000F72                     UEP2            equ	3954	;# 
   848   000F73                     UEP3            equ	3955	;# 
   849   000F74                     UEP4            equ	3956	;# 
   850   000F75                     UEP5            equ	3957	;# 
   851   000F76                     UEP6            equ	3958	;# 
   852   000F77                     UEP7            equ	3959	;# 
   853   000F78                     UEP8            equ	3960	;# 
   854   000F79                     UEP9            equ	3961	;# 
   855   000F7A                     UEP10           equ	3962	;# 
   856   000F7B                     UEP11           equ	3963	;# 
   857   000F7C                     UEP12           equ	3964	;# 
   858   000F7D                     UEP13           equ	3965	;# 
   859   000F7E                     UEP14           equ	3966	;# 
   860   000F7F                     UEP15           equ	3967	;# 
   861   000F80                     PORTA           equ	3968	;# 
   862   000F81                     PORTB           equ	3969	;# 
   863   000F82                     PORTC           equ	3970	;# 
   864   000F83                     PORTD           equ	3971	;# 
   865   000F84                     PORTE           equ	3972	;# 
   866   000F89                     LATA            equ	3977	;# 
   867   000F8A                     LATB            equ	3978	;# 
   868   000F8B                     LATC            equ	3979	;# 
   869   000F8C                     LATD            equ	3980	;# 
   870   000F8D                     LATE            equ	3981	;# 
   871   000F92                     TRISA           equ	3986	;# 
   872   000F92                     DDRA            equ	3986	;# 
   873   000F93                     TRISB           equ	3987	;# 
   874   000F93                     DDRB            equ	3987	;# 
   875   000F94                     TRISC           equ	3988	;# 
   876   000F94                     DDRC            equ	3988	;# 
   877   000F95                     TRISD           equ	3989	;# 
   878   000F95                     DDRD            equ	3989	;# 
   879   000F96                     TRISE           equ	3990	;# 
   880   000F96                     DDRE            equ	3990	;# 
   881   000F9B                     OSCTUNE         equ	3995	;# 
   882   000F9D                     PIE1            equ	3997	;# 
   883   000F9E                     PIR1            equ	3998	;# 
   884   000F9F                     IPR1            equ	3999	;# 
   885   000FA0                     PIE2            equ	4000	;# 
   886   000FA1                     PIR2            equ	4001	;# 
   887   000FA2                     IPR2            equ	4002	;# 
   888   000FA6                     EECON1          equ	4006	;# 
   889   000FA7                     EECON2          equ	4007	;# 
   890   000FA8                     EEDATA          equ	4008	;# 
   891   000FA9                     EEADR           equ	4009	;# 
   892   000FAB                     RCSTA           equ	4011	;# 
   893   000FAB                     RCSTA1          equ	4011	;# 
   894   000FAC                     TXSTA           equ	4012	;# 
   895   000FAC                     TXSTA1          equ	4012	;# 
   896   000FAD                     TXREG           equ	4013	;# 
   897   000FAD                     TXREG1          equ	4013	;# 
   898   000FAE                     RCREG           equ	4014	;# 
   899   000FAE                     RCREG1          equ	4014	;# 
   900   000FAF                     SPBRG           equ	4015	;# 
   901   000FAF                     SPBRG1          equ	4015	;# 
   902   000FB0                     SPBRGH          equ	4016	;# 
   903   000FB1                     T3CON           equ	4017	;# 
   904   000FB2                     TMR3            equ	4018	;# 
   905   000FB2                     TMR3L           equ	4018	;# 
   906   000FB3                     TMR3H           equ	4019	;# 
   907   000FB4                     CMCON           equ	4020	;# 
   908   000FB5                     CVRCON          equ	4021	;# 
   909   000FB6                     ECCP1AS         equ	4022	;# 
   910   000FB6                     CCP1AS          equ	4022	;# 
   911   000FB7                     ECCP1DEL        equ	4023	;# 
   912   000FB7                     CCP1DEL         equ	4023	;# 
   913   000FB8                     BAUDCON         equ	4024	;# 
   914   000FB8                     BAUDCTL         equ	4024	;# 
   915   000FBA                     CCP2CON         equ	4026	;# 
   916   000FBB                     CCPR2           equ	4027	;# 
   917   000FBB                     CCPR2L          equ	4027	;# 
   918   000FBC                     CCPR2H          equ	4028	;# 
   919   000FBD                     CCP1CON         equ	4029	;# 
   920   000FBD                     ECCP1CON        equ	4029	;# 
   921   000FBE                     CCPR1           equ	4030	;# 
   922   000FBE                     CCPR1L          equ	4030	;# 
   923   000FBF                     CCPR1H          equ	4031	;# 
   924   000FC0                     ADCON2          equ	4032	;# 
   925   000FC1                     ADCON1          equ	4033	;# 
   926   000FC2                     ADCON0          equ	4034	;# 
   927   000FC3                     ADRES           equ	4035	;# 
   928   000FC3                     ADRESL          equ	4035	;# 
   929   000FC4                     ADRESH          equ	4036	;# 
   930   000FC5                     SSPCON2         equ	4037	;# 
   931   000FC6                     SSPCON1         equ	4038	;# 
   932   000FC7                     SSPSTAT         equ	4039	;# 
   933   000FC8                     SSPADD          equ	4040	;# 
   934   000FC9                     SSPBUF          equ	4041	;# 
   935   000FCA                     T2CON           equ	4042	;# 
   936   000FCB                     PR2             equ	4043	;# 
   937   000FCB                     MEMCON          equ	4043	;# 
   938   000FCC                     TMR2            equ	4044	;# 
   939   000FCD                     T1CON           equ	4045	;# 
   940   000FCE                     TMR1            equ	4046	;# 
   941   000FCE                     TMR1L           equ	4046	;# 
   942   000FCF                     TMR1H           equ	4047	;# 
   943   000FD0                     RCON            equ	4048	;# 
   944   000FD1                     WDTCON          equ	4049	;# 
   945   000FD2                     HLVDCON         equ	4050	;# 
   946   000FD2                     LVDCON          equ	4050	;# 
   947   000FD3                     OSCCON          equ	4051	;# 
   948   000FD5                     T0CON           equ	4053	;# 
   949   000FD6                     TMR0            equ	4054	;# 
   950   000FD6                     TMR0L           equ	4054	;# 
   951   000FD7                     TMR0H           equ	4055	;# 
   952   000FD8                     STATUS          equ	4056	;# 
   953   000FD9                     FSR2            equ	4057	;# 
   954   000FD9                     FSR2L           equ	4057	;# 
   955   000FDA                     FSR2H           equ	4058	;# 
   956   000FDB                     PLUSW2          equ	4059	;# 
   957   000FDC                     PREINC2         equ	4060	;# 
   958   000FDD                     POSTDEC2        equ	4061	;# 
   959   000FDE                     POSTINC2        equ	4062	;# 
   960   000FDF                     INDF2           equ	4063	;# 
   961   000FE0                     BSR             equ	4064	;# 
   962   000FE1                     FSR1            equ	4065	;# 
   963   000FE1                     FSR1L           equ	4065	;# 
   964   000FE2                     FSR1H           equ	4066	;# 
   965   000FE3                     PLUSW1          equ	4067	;# 
   966   000FE4                     PREINC1         equ	4068	;# 
   967   000FE5                     POSTDEC1        equ	4069	;# 
   968   000FE6                     POSTINC1        equ	4070	;# 
   969   000FE7                     INDF1           equ	4071	;# 
   970   000FE8                     WREG            equ	4072	;# 
   971   000FE9                     FSR0            equ	4073	;# 
   972   000FE9                     FSR0L           equ	4073	;# 
   973   000FEA                     FSR0H           equ	4074	;# 
   974   000FEB                     PLUSW0          equ	4075	;# 
   975   000FEC                     PREINC0         equ	4076	;# 
   976   000FED                     POSTDEC0        equ	4077	;# 
   977   000FEE                     POSTINC0        equ	4078	;# 
   978   000FEF                     INDF0           equ	4079	;# 
   979   000FF0                     INTCON3         equ	4080	;# 
   980   000FF1                     INTCON2         equ	4081	;# 
   981   000FF2                     INTCON          equ	4082	;# 
   982   000FF3                     PROD            equ	4083	;# 
   983   000FF3                     PRODL           equ	4083	;# 
   984   000FF4                     PRODH           equ	4084	;# 
   985   000FF5                     TABLAT          equ	4085	;# 
   986   000FF6                     TBLPTR          equ	4086	;# 
   987   000FF6                     TBLPTRL         equ	4086	;# 
   988   000FF7                     TBLPTRH         equ	4087	;# 
   989   000FF8                     TBLPTRU         equ	4088	;# 
   990   000FF9                     PCLAT           equ	4089	;# 
   991   000FF9                     PC              equ	4089	;# 
   992   000FF9                     PCL             equ	4089	;# 
   993   000FFA                     PCLATH          equ	4090	;# 
   994   000FFB                     PCLATU          equ	4091	;# 
   995   000FFC                     STKPTR          equ	4092	;# 
   996   000FFD                     TOS             equ	4093	;# 
   997   000FFD                     TOSL            equ	4093	;# 
   998   000FFE                     TOSH            equ	4094	;# 
   999   000FFF                     TOSU            equ	4095	;# 
  1000   000F62                     SPPDATA         equ	3938	;# 
  1001   000F63                     SPPCFG          equ	3939	;# 
  1002   000F64                     SPPEPS          equ	3940	;# 
  1003   000F65                     SPPCON          equ	3941	;# 
  1004   000F66                     UFRM            equ	3942	;# 
  1005   000F66                     UFRML           equ	3942	;# 
  1006   000F67                     UFRMH           equ	3943	;# 
  1007   000F68                     UIR             equ	3944	;# 
  1008   000F69                     UIE             equ	3945	;# 
  1009   000F6A                     UEIR            equ	3946	;# 
  1010   000F6B                     UEIE            equ	3947	;# 
  1011   000F6C                     USTAT           equ	3948	;# 
  1012   000F6D                     UCON            equ	3949	;# 
  1013   000F6E                     UADDR           equ	3950	;# 
  1014   000F6F                     UCFG            equ	3951	;# 
  1015   000F70                     UEP0            equ	3952	;# 
  1016   000F71                     UEP1            equ	3953	;# 
  1017   000F72                     UEP2            equ	3954	;# 
  1018   000F73                     UEP3            equ	3955	;# 
  1019   000F74                     UEP4            equ	3956	;# 
  1020   000F75                     UEP5            equ	3957	;# 
  1021   000F76                     UEP6            equ	3958	;# 
  1022   000F77                     UEP7            equ	3959	;# 
  1023   000F78                     UEP8            equ	3960	;# 
  1024   000F79                     UEP9            equ	3961	;# 
  1025   000F7A                     UEP10           equ	3962	;# 
  1026   000F7B                     UEP11           equ	3963	;# 
  1027   000F7C                     UEP12           equ	3964	;# 
  1028   000F7D                     UEP13           equ	3965	;# 
  1029   000F7E                     UEP14           equ	3966	;# 
  1030   000F7F                     UEP15           equ	3967	;# 
  1031   000F80                     PORTA           equ	3968	;# 
  1032   000F81                     PORTB           equ	3969	;# 
  1033   000F82                     PORTC           equ	3970	;# 
  1034   000F83                     PORTD           equ	3971	;# 
  1035   000F84                     PORTE           equ	3972	;# 
  1036   000F89                     LATA            equ	3977	;# 
  1037   000F8A                     LATB            equ	3978	;# 
  1038   000F8B                     LATC            equ	3979	;# 
  1039   000F8C                     LATD            equ	3980	;# 
  1040   000F8D                     LATE            equ	3981	;# 
  1041   000F92                     TRISA           equ	3986	;# 
  1042   000F92                     DDRA            equ	3986	;# 
  1043   000F93                     TRISB           equ	3987	;# 
  1044   000F93                     DDRB            equ	3987	;# 
  1045   000F94                     TRISC           equ	3988	;# 
  1046   000F94                     DDRC            equ	3988	;# 
  1047   000F95                     TRISD           equ	3989	;# 
  1048   000F95                     DDRD            equ	3989	;# 
  1049   000F96                     TRISE           equ	3990	;# 
  1050   000F96                     DDRE            equ	3990	;# 
  1051   000F9B                     OSCTUNE         equ	3995	;# 
  1052   000F9D                     PIE1            equ	3997	;# 
  1053   000F9E                     PIR1            equ	3998	;# 
  1054   000F9F                     IPR1            equ	3999	;# 
  1055   000FA0                     PIE2            equ	4000	;# 
  1056   000FA1                     PIR2            equ	4001	;# 
  1057   000FA2                     IPR2            equ	4002	;# 
  1058   000FA6                     EECON1          equ	4006	;# 
  1059   000FA7                     EECON2          equ	4007	;# 
  1060   000FA8                     EEDATA          equ	4008	;# 
  1061   000FA9                     EEADR           equ	4009	;# 
  1062   000FAB                     RCSTA           equ	4011	;# 
  1063   000FAB                     RCSTA1          equ	4011	;# 
  1064   000FAC                     TXSTA           equ	4012	;# 
  1065   000FAC                     TXSTA1          equ	4012	;# 
  1066   000FAD                     TXREG           equ	4013	;# 
  1067   000FAD                     TXREG1          equ	4013	;# 
  1068   000FAE                     RCREG           equ	4014	;# 
  1069   000FAE                     RCREG1          equ	4014	;# 
  1070   000FAF                     SPBRG           equ	4015	;# 
  1071   000FAF                     SPBRG1          equ	4015	;# 
  1072   000FB0                     SPBRGH          equ	4016	;# 
  1073   000FB1                     T3CON           equ	4017	;# 
  1074   000FB2                     TMR3            equ	4018	;# 
  1075   000FB2                     TMR3L           equ	4018	;# 
  1076   000FB3                     TMR3H           equ	4019	;# 
  1077   000FB4                     CMCON           equ	4020	;# 
  1078   000FB5                     CVRCON          equ	4021	;# 
  1079   000FB6                     ECCP1AS         equ	4022	;# 
  1080   000FB6                     CCP1AS          equ	4022	;# 
  1081   000FB7                     ECCP1DEL        equ	4023	;# 
  1082   000FB7                     CCP1DEL         equ	4023	;# 
  1083   000FB8                     BAUDCON         equ	4024	;# 
  1084   000FB8                     BAUDCTL         equ	4024	;# 
  1085   000FBA                     CCP2CON         equ	4026	;# 
  1086   000FBB                     CCPR2           equ	4027	;# 
  1087   000FBB                     CCPR2L          equ	4027	;# 
  1088   000FBC                     CCPR2H          equ	4028	;# 
  1089   000FBD                     CCP1CON         equ	4029	;# 
  1090   000FBD                     ECCP1CON        equ	4029	;# 
  1091   000FBE                     CCPR1           equ	4030	;# 
  1092   000FBE                     CCPR1L          equ	4030	;# 
  1093   000FBF                     CCPR1H          equ	4031	;# 
  1094   000FC0                     ADCON2          equ	4032	;# 
  1095   000FC1                     ADCON1          equ	4033	;# 
  1096   000FC2                     ADCON0          equ	4034	;# 
  1097   000FC3                     ADRES           equ	4035	;# 
  1098   000FC3                     ADRESL          equ	4035	;# 
  1099   000FC4                     ADRESH          equ	4036	;# 
  1100   000FC5                     SSPCON2         equ	4037	;# 
  1101   000FC6                     SSPCON1         equ	4038	;# 
  1102   000FC7                     SSPSTAT         equ	4039	;# 
  1103   000FC8                     SSPADD          equ	4040	;# 
  1104   000FC9                     SSPBUF          equ	4041	;# 
  1105   000FCA                     T2CON           equ	4042	;# 
  1106   000FCB                     PR2             equ	4043	;# 
  1107   000FCB                     MEMCON          equ	4043	;# 
  1108   000FCC                     TMR2            equ	4044	;# 
  1109   000FCD                     T1CON           equ	4045	;# 
  1110   000FCE                     TMR1            equ	4046	;# 
  1111   000FCE                     TMR1L           equ	4046	;# 
  1112   000FCF                     TMR1H           equ	4047	;# 
  1113   000FD0                     RCON            equ	4048	;# 
  1114   000FD1                     WDTCON          equ	4049	;# 
  1115   000FD2                     HLVDCON         equ	4050	;# 
  1116   000FD2                     LVDCON          equ	4050	;# 
  1117   000FD3                     OSCCON          equ	4051	;# 
  1118   000FD5                     T0CON           equ	4053	;# 
  1119   000FD6                     TMR0            equ	4054	;# 
  1120   000FD6                     TMR0L           equ	4054	;# 
  1121   000FD7                     TMR0H           equ	4055	;# 
  1122   000FD8                     STATUS          equ	4056	;# 
  1123   000FD9                     FSR2            equ	4057	;# 
  1124   000FD9                     FSR2L           equ	4057	;# 
  1125   000FDA                     FSR2H           equ	4058	;# 
  1126   000FDB                     PLUSW2          equ	4059	;# 
  1127   000FDC                     PREINC2         equ	4060	;# 
  1128   000FDD                     POSTDEC2        equ	4061	;# 
  1129   000FDE                     POSTINC2        equ	4062	;# 
  1130   000FDF                     INDF2           equ	4063	;# 
  1131   000FE0                     BSR             equ	4064	;# 
  1132   000FE1                     FSR1            equ	4065	;# 
  1133   000FE1                     FSR1L           equ	4065	;# 
  1134   000FE2                     FSR1H           equ	4066	;# 
  1135   000FE3                     PLUSW1          equ	4067	;# 
  1136   000FE4                     PREINC1         equ	4068	;# 
  1137   000FE5                     POSTDEC1        equ	4069	;# 
  1138   000FE6                     POSTINC1        equ	4070	;# 
  1139   000FE7                     INDF1           equ	4071	;# 
  1140   000FE8                     WREG            equ	4072	;# 
  1141   000FE9                     FSR0            equ	4073	;# 
  1142   000FE9                     FSR0L           equ	4073	;# 
  1143   000FEA                     FSR0H           equ	4074	;# 
  1144   000FEB                     PLUSW0          equ	4075	;# 
  1145   000FEC                     PREINC0         equ	4076	;# 
  1146   000FED                     POSTDEC0        equ	4077	;# 
  1147   000FEE                     POSTINC0        equ	4078	;# 
  1148   000FEF                     INDF0           equ	4079	;# 
  1149   000FF0                     INTCON3         equ	4080	;# 
  1150   000FF1                     INTCON2         equ	4081	;# 
  1151   000FF2                     INTCON          equ	4082	;# 
  1152   000FF3                     PROD            equ	4083	;# 
  1153   000FF3                     PRODL           equ	4083	;# 
  1154   000FF4                     PRODH           equ	4084	;# 
  1155   000FF5                     TABLAT          equ	4085	;# 
  1156   000FF6                     TBLPTR          equ	4086	;# 
  1157   000FF6                     TBLPTRL         equ	4086	;# 
  1158   000FF7                     TBLPTRH         equ	4087	;# 
  1159   000FF8                     TBLPTRU         equ	4088	;# 
  1160   000FF9                     PCLAT           equ	4089	;# 
  1161   000FF9                     PC              equ	4089	;# 
  1162   000FF9                     PCL             equ	4089	;# 
  1163   000FFA                     PCLATH          equ	4090	;# 
  1164   000FFB                     PCLATU          equ	4091	;# 
  1165   000FFC                     STKPTR          equ	4092	;# 
  1166   000FFD                     TOS             equ	4093	;# 
  1167   000FFD                     TOSL            equ	4093	;# 
  1168   000FFE                     TOSH            equ	4094	;# 
  1169   000FFF                     TOSU            equ	4095	;# 
  1170   000F62                     SPPDATA         equ	3938	;# 
  1171   000F63                     SPPCFG          equ	3939	;# 
  1172   000F64                     SPPEPS          equ	3940	;# 
  1173   000F65                     SPPCON          equ	3941	;# 
  1174   000F66                     UFRM            equ	3942	;# 
  1175   000F66                     UFRML           equ	3942	;# 
  1176   000F67                     UFRMH           equ	3943	;# 
  1177   000F68                     UIR             equ	3944	;# 
  1178   000F69                     UIE             equ	3945	;# 
  1179   000F6A                     UEIR            equ	3946	;# 
  1180   000F6B                     UEIE            equ	3947	;# 
  1181   000F6C                     USTAT           equ	3948	;# 
  1182   000F6D                     UCON            equ	3949	;# 
  1183   000F6E                     UADDR           equ	3950	;# 
  1184   000F6F                     UCFG            equ	3951	;# 
  1185   000F70                     UEP0            equ	3952	;# 
  1186   000F71                     UEP1            equ	3953	;# 
  1187   000F72                     UEP2            equ	3954	;# 
  1188   000F73                     UEP3            equ	3955	;# 
  1189   000F74                     UEP4            equ	3956	;# 
  1190   000F75                     UEP5            equ	3957	;# 
  1191   000F76                     UEP6            equ	3958	;# 
  1192   000F77                     UEP7            equ	3959	;# 
  1193   000F78                     UEP8            equ	3960	;# 
  1194   000F79                     UEP9            equ	3961	;# 
  1195   000F7A                     UEP10           equ	3962	;# 
  1196   000F7B                     UEP11           equ	3963	;# 
  1197   000F7C                     UEP12           equ	3964	;# 
  1198   000F7D                     UEP13           equ	3965	;# 
  1199   000F7E                     UEP14           equ	3966	;# 
  1200   000F7F                     UEP15           equ	3967	;# 
  1201   000F80                     PORTA           equ	3968	;# 
  1202   000F81                     PORTB           equ	3969	;# 
  1203   000F82                     PORTC           equ	3970	;# 
  1204   000F83                     PORTD           equ	3971	;# 
  1205   000F84                     PORTE           equ	3972	;# 
  1206   000F89                     LATA            equ	3977	;# 
  1207   000F8A                     LATB            equ	3978	;# 
  1208   000F8B                     LATC            equ	3979	;# 
  1209   000F8C                     LATD            equ	3980	;# 
  1210   000F8D                     LATE            equ	3981	;# 
  1211   000F92                     TRISA           equ	3986	;# 
  1212   000F92                     DDRA            equ	3986	;# 
  1213   000F93                     TRISB           equ	3987	;# 
  1214   000F93                     DDRB            equ	3987	;# 
  1215   000F94                     TRISC           equ	3988	;# 
  1216   000F94                     DDRC            equ	3988	;# 
  1217   000F95                     TRISD           equ	3989	;# 
  1218   000F95                     DDRD            equ	3989	;# 
  1219   000F96                     TRISE           equ	3990	;# 
  1220   000F96                     DDRE            equ	3990	;# 
  1221   000F9B                     OSCTUNE         equ	3995	;# 
  1222   000F9D                     PIE1            equ	3997	;# 
  1223   000F9E                     PIR1            equ	3998	;# 
  1224   000F9F                     IPR1            equ	3999	;# 
  1225   000FA0                     PIE2            equ	4000	;# 
  1226   000FA1                     PIR2            equ	4001	;# 
  1227   000FA2                     IPR2            equ	4002	;# 
  1228   000FA6                     EECON1          equ	4006	;# 
  1229   000FA7                     EECON2          equ	4007	;# 
  1230   000FA8                     EEDATA          equ	4008	;# 
  1231   000FA9                     EEADR           equ	4009	;# 
  1232   000FAB                     RCSTA           equ	4011	;# 
  1233   000FAB                     RCSTA1          equ	4011	;# 
  1234   000FAC                     TXSTA           equ	4012	;# 
  1235   000FAC                     TXSTA1          equ	4012	;# 
  1236   000FAD                     TXREG           equ	4013	;# 
  1237   000FAD                     TXREG1          equ	4013	;# 
  1238   000FAE                     RCREG           equ	4014	;# 
  1239   000FAE                     RCREG1          equ	4014	;# 
  1240   000FAF                     SPBRG           equ	4015	;# 
  1241   000FAF                     SPBRG1          equ	4015	;# 
  1242   000FB0                     SPBRGH          equ	4016	;# 
  1243   000FB1                     T3CON           equ	4017	;# 
  1244   000FB2                     TMR3            equ	4018	;# 
  1245   000FB2                     TMR3L           equ	4018	;# 
  1246   000FB3                     TMR3H           equ	4019	;# 
  1247   000FB4                     CMCON           equ	4020	;# 
  1248   000FB5                     CVRCON          equ	4021	;# 
  1249   000FB6                     ECCP1AS         equ	4022	;# 
  1250   000FB6                     CCP1AS          equ	4022	;# 
  1251   000FB7                     ECCP1DEL        equ	4023	;# 
  1252   000FB7                     CCP1DEL         equ	4023	;# 
  1253   000FB8                     BAUDCON         equ	4024	;# 
  1254   000FB8                     BAUDCTL         equ	4024	;# 
  1255   000FBA                     CCP2CON         equ	4026	;# 
  1256   000FBB                     CCPR2           equ	4027	;# 
  1257   000FBB                     CCPR2L          equ	4027	;# 
  1258   000FBC                     CCPR2H          equ	4028	;# 
  1259   000FBD                     CCP1CON         equ	4029	;# 
  1260   000FBD                     ECCP1CON        equ	4029	;# 
  1261   000FBE                     CCPR1           equ	4030	;# 
  1262   000FBE                     CCPR1L          equ	4030	;# 
  1263   000FBF                     CCPR1H          equ	4031	;# 
  1264   000FC0                     ADCON2          equ	4032	;# 
  1265   000FC1                     ADCON1          equ	4033	;# 
  1266   000FC2                     ADCON0          equ	4034	;# 
  1267   000FC3                     ADRES           equ	4035	;# 
  1268   000FC3                     ADRESL          equ	4035	;# 
  1269   000FC4                     ADRESH          equ	4036	;# 
  1270   000FC5                     SSPCON2         equ	4037	;# 
  1271   000FC6                     SSPCON1         equ	4038	;# 
  1272   000FC7                     SSPSTAT         equ	4039	;# 
  1273   000FC8                     SSPADD          equ	4040	;# 
  1274   000FC9                     SSPBUF          equ	4041	;# 
  1275   000FCA                     T2CON           equ	4042	;# 
  1276   000FCB                     PR2             equ	4043	;# 
  1277   000FCB                     MEMCON          equ	4043	;# 
  1278   000FCC                     TMR2            equ	4044	;# 
  1279   000FCD                     T1CON           equ	4045	;# 
  1280   000FCE                     TMR1            equ	4046	;# 
  1281   000FCE                     TMR1L           equ	4046	;# 
  1282   000FCF                     TMR1H           equ	4047	;# 
  1283   000FD0                     RCON            equ	4048	;# 
  1284   000FD1                     WDTCON          equ	4049	;# 
  1285   000FD2                     HLVDCON         equ	4050	;# 
  1286   000FD2                     LVDCON          equ	4050	;# 
  1287   000FD3                     OSCCON          equ	4051	;# 
  1288   000FD5                     T0CON           equ	4053	;# 
  1289   000FD6                     TMR0            equ	4054	;# 
  1290   000FD6                     TMR0L           equ	4054	;# 
  1291   000FD7                     TMR0H           equ	4055	;# 
  1292   000FD8                     STATUS          equ	4056	;# 
  1293   000FD9                     FSR2            equ	4057	;# 
  1294   000FD9                     FSR2L           equ	4057	;# 
  1295   000FDA                     FSR2H           equ	4058	;# 
  1296   000FDB                     PLUSW2          equ	4059	;# 
  1297   000FDC                     PREINC2         equ	4060	;# 
  1298   000FDD                     POSTDEC2        equ	4061	;# 
  1299   000FDE                     POSTINC2        equ	4062	;# 
  1300   000FDF                     INDF2           equ	4063	;# 
  1301   000FE0                     BSR             equ	4064	;# 
  1302   000FE1                     FSR1            equ	4065	;# 
  1303   000FE1                     FSR1L           equ	4065	;# 
  1304   000FE2                     FSR1H           equ	4066	;# 
  1305   000FE3                     PLUSW1          equ	4067	;# 
  1306   000FE4                     PREINC1         equ	4068	;# 
  1307   000FE5                     POSTDEC1        equ	4069	;# 
  1308   000FE6                     POSTINC1        equ	4070	;# 
  1309   000FE7                     INDF1           equ	4071	;# 
  1310   000FE8                     WREG            equ	4072	;# 
  1311   000FE9                     FSR0            equ	4073	;# 
  1312   000FE9                     FSR0L           equ	4073	;# 
  1313   000FEA                     FSR0H           equ	4074	;# 
  1314   000FEB                     PLUSW0          equ	4075	;# 
  1315   000FEC                     PREINC0         equ	4076	;# 
  1316   000FED                     POSTDEC0        equ	4077	;# 
  1317   000FEE                     POSTINC0        equ	4078	;# 
  1318   000FEF                     INDF0           equ	4079	;# 
  1319   000FF0                     INTCON3         equ	4080	;# 
  1320   000FF1                     INTCON2         equ	4081	;# 
  1321   000FF2                     INTCON          equ	4082	;# 
  1322   000FF3                     PROD            equ	4083	;# 
  1323   000FF3                     PRODL           equ	4083	;# 
  1324   000FF4                     PRODH           equ	4084	;# 
  1325   000FF5                     TABLAT          equ	4085	;# 
  1326   000FF6                     TBLPTR          equ	4086	;# 
  1327   000FF6                     TBLPTRL         equ	4086	;# 
  1328   000FF7                     TBLPTRH         equ	4087	;# 
  1329   000FF8                     TBLPTRU         equ	4088	;# 
  1330   000FF9                     PCLAT           equ	4089	;# 
  1331   000FF9                     PC              equ	4089	;# 
  1332   000FF9                     PCL             equ	4089	;# 
  1333   000FFA                     PCLATH          equ	4090	;# 
  1334   000FFB                     PCLATU          equ	4091	;# 
  1335   000FFC                     STKPTR          equ	4092	;# 
  1336   000FFD                     TOS             equ	4093	;# 
  1337   000FFD                     TOSL            equ	4093	;# 
  1338   000FFE                     TOSH            equ	4094	;# 
  1339   000FFF                     TOSU            equ	4095	;# 
  1340                           
  1341                           	psect	idataCOMRAM
  1342   0025D0                     __pidataCOMRAM:
  1343                           	callstack 0
  1344                           
  1345                           ;initializer for _system_state
  1346   0025D0  01                 	db	1
  1347   007D5C                     _CREN           set	32092
  1348   007CF5                     _RCIF           set	31989
  1349   007CF4                     _TXIF           set	31988
  1350   007CA6                     _TRISC6         set	31910
  1351   007E2C                     _ACKEN          set	32300
  1352   007E2D                     _ACKDT          set	32301
  1353   007E2B                     _RCEN           set	32299
  1354   007E2E                     _ACKSTAT        set	32302
  1355   007E2A                     _PEN            set	32298
  1356   007E29                     _RSEN           set	32297
  1357   007E28                     _SEN            set	32296
  1358   007C99                     _TRISB1         set	31897
  1359   007C98                     _TRISB0         set	31896
  1360   007C61                     _LATD1          set	31841
  1361   007C60                     _LATD0          set	31840
  1362   007CA7                     _TRISC7         set	31911
  1363   000F81                     _PORTBbits      set	3969
  1364   000F8A                     _LATBbits       set	3978
  1365   000F93                     _TRISBbits      set	3987
  1366   000FAD                     _TXREG          set	4013
  1367   000FC9                     _SSPBUF         set	4041
  1368   000FC7                     _SSPSTAT        set	4039
  1369   000FC8                     _SSPADD         set	4040
  1370   000FC5                     _SSPCON2        set	4037
  1371   000FC6                     _SSPCON1        set	4038
  1372   000F8C                     _LATD           set	3980
  1373   000F95                     _TRISD          set	3989
  1374   000FAB                     _RCSTAbits      set	4011
  1375   000F9E                     _PIR1bits       set	3998
  1376   000FAE                     _RCREG          set	4014
  1377   000FAF                     _SPBRG          set	4015
  1378   000FAB                     _RCSTA          set	4011
  1379   000FAC                     _TXSTA          set	4012
  1380   000FB8                     _BAUDCON        set	4024
  1381   000F92                     _TRISAbits      set	3986
  1382   000F80                     _PORTAbits      set	3968
  1383   000FD0                     _RCONbits       set	4048
  1384   000FF1                     _INTCON2bits    set	4081
  1385   000FF2                     _INTCONbits     set	4082
  1386   000F93                     _TRISB          set	3987
  1387   000FB4                     _CMCON          set	4020
  1388   000FC1                     _ADCON1         set	4033
  1389   000FD3                     _OSCCON         set	4051
  1390                           
  1391                           	psect	smallconst
  1392   000800                     __psmallconst:
  1393                           	callstack 0
  1394   000800  00                 	db	0
  1395   000801                     STR_17:
  1396   000801  46                 	db	70	;'F'
  1397   000802  65                 	db	101	;'e'
  1398   000803  63                 	db	99	;'c'
  1399   000804  68                 	db	104	;'h'
  1400   000805  61                 	db	97	;'a'
  1401   000806  3A                 	db	58	;':'
  1402   000807  25                 	db	37
  1403   000808  30                 	db	48	;'0'
  1404   000809  32                 	db	50	;'2'
  1405   00080A  64                 	db	100	;'d'
  1406   00080B  2F                 	db	47
  1407   00080C  25                 	db	37
  1408   00080D  30                 	db	48	;'0'
  1409   00080E  32                 	db	50	;'2'
  1410   00080F  64                 	db	100	;'d'
  1411   000810  2F                 	db	47
  1412   000811  32                 	db	50	;'2'
  1413   000812  30                 	db	48	;'0'
  1414   000813  25                 	db	37
  1415   000814  30                 	db	48	;'0'
  1416   000815  32                 	db	50	;'2'
  1417   000816  64                 	db	100	;'d'
  1418   000817  00                 	db	0
  1419   000818                     STR_18:
  1420   000818  48                 	db	72	;'H'
  1421   000819  6F                 	db	111	;'o'
  1422   00081A  72                 	db	114	;'r'
  1423   00081B  61                 	db	97	;'a'
  1424   00081C  3A                 	db	58	;':'
  1425   00081D  20                 	db	32
  1426   00081E  25                 	db	37
  1427   00081F  30                 	db	48	;'0'
  1428   000820  32                 	db	50	;'2'
  1429   000821  64                 	db	100	;'d'
  1430   000822  3A                 	db	58	;':'
  1431   000823  25                 	db	37
  1432   000824  30                 	db	48	;'0'
  1433   000825  32                 	db	50	;'2'
  1434   000826  64                 	db	100	;'d'
  1435   000827  3A                 	db	58	;':'
  1436   000828  25                 	db	37
  1437   000829  30                 	db	48	;'0'
  1438   00082A  32                 	db	50	;'2'
  1439   00082B  64                 	db	100	;'d'
  1440   00082C  00                 	db	0
  1441   00082D                     STR_2:
  1442   00082D  42                 	db	66	;'B'
  1443   00082E  54                 	db	84	;'T'
  1444   00082F  3A                 	db	58	;':'
  1445   000830  20                 	db	32
  1446   000831  45                 	db	69	;'E'
  1447   000832  73                 	db	115	;'s'
  1448   000833  70                 	db	112	;'p'
  1449   000834  65                 	db	101	;'e'
  1450   000835  72                 	db	114	;'r'
  1451   000836  61                 	db	97	;'a'
  1452   000837  6E                 	db	110	;'n'
  1453   000838  64                 	db	100	;'d'
  1454   000839  6F                 	db	111	;'o'
  1455   00083A  2E                 	db	46
  1456   00083B  2E                 	db	46
  1457   00083C  2E                 	db	46
  1458   00083D  00                 	db	0
  1459   00083E                     STR_8:
  1460   00083E  52                 	db	82	;'R'
  1461   00083F  65                 	db	101	;'e'
  1462   000840  69                 	db	105	;'i'
  1463   000841  6E                 	db	110	;'n'
  1464   000842  74                 	db	116	;'t'
  1465   000843  65                 	db	101	;'e'
  1466   000844  6E                 	db	110	;'n'
  1467   000845  74                 	db	116	;'t'
  1468   000846  61                 	db	97	;'a'
  1469   000847  6E                 	db	110	;'n'
  1470   000848  64                 	db	100	;'d'
  1471   000849  6F                 	db	111	;'o'
  1472   00084A  2E                 	db	46
  1473   00084B  2E                 	db	46
  1474   00084C  2E                 	db	46
  1475   00084D  00                 	db	0
  1476   00084E                     STR_1:
  1477   00084E  45                 	db	69	;'E'
  1478   00084F  73                 	db	115	;'s'
  1479   000850  74                 	db	116	;'t'
  1480   000851  61                 	db	97	;'a'
  1481   000852  63                 	db	99	;'c'
  1482   000853  69                 	db	105	;'i'
  1483   000854  6F                 	db	111	;'o'
  1484   000855  6E                 	db	110	;'n'
  1485   000856  20                 	db	32
  1486   000857  4D                 	db	77	;'M'
  1487   000858  65                 	db	101	;'e'
  1488   000859  74                 	db	116	;'t'
  1489   00085A  65                 	db	101	;'e'
  1490   00085B  6F                 	db	111	;'o'
  1491   00085C  00                 	db	0
  1492   00085D                     STR_13:
  1493   00085D  47                 	db	71	;'G'
  1494   00085E  50                 	db	80	;'P'
  1495   00085F  53                 	db	83	;'S'
  1496   000860  3A                 	db	58	;':'
  1497   000861  20                 	db	32
  1498   000862  53                 	db	83	;'S'
  1499   000863  69                 	db	105	;'i'
  1500   000864  6E                 	db	110	;'n'
  1501   000865  20                 	db	32
  1502   000866  64                 	db	100	;'d'
  1503   000867  61                 	db	97	;'a'
  1504   000868  74                 	db	116	;'t'
  1505   000869  6F                 	db	111	;'o'
  1506   00086A  73                 	db	115	;'s'
  1507   00086B  00                 	db	0
  1508   00086C                     STR_22:
  1509   00086C  52                 	db	82	;'R'
  1510   00086D  54                 	db	84	;'T'
  1511   00086E  43                 	db	67	;'C'
  1512   00086F  20                 	db	32
  1513   000870  64                 	db	100	;'d'
  1514   000871  65                 	db	101	;'e'
  1515   000872  74                 	db	116	;'t'
  1516   000873  65                 	db	101	;'e'
  1517   000874  6E                 	db	110	;'n'
  1518   000875  69                 	db	105	;'i'
  1519   000876  64                 	db	100	;'d'
  1520   000877  6F                 	db	111	;'o'
  1521   000878  00                 	db	0
  1522   000879                     STR_4:
  1523   000879  45                 	db	69	;'E'
  1524   00087A  6E                 	db	110	;'n'
  1525   00087B  20                 	db	32
  1526   00087C  65                 	db	101	;'e'
  1527   00087D  73                 	db	115	;'s'
  1528   00087E  70                 	db	112	;'p'
  1529   00087F  65                 	db	101	;'e'
  1530   000880  72                 	db	114	;'r'
  1531   000881  61                 	db	97	;'a'
  1532   000882  2E                 	db	46
  1533   000883  2E                 	db	46
  1534   000884  2E                 	db	46
  1535   000885  00                 	db	0
  1536   000886                     STR_7:
  1537   000886  44                 	db	68	;'D'
  1538   000887  48                 	db	72	;'H'
  1539   000888  54                 	db	84	;'T'
  1540   000889  31                 	db	49	;'1'
  1541   00088A  31                 	db	49	;'1'
  1542   00088B  3A                 	db	58	;':'
  1543   00088C  20                 	db	32
  1544   00088D  45                 	db	69	;'E'
  1545   00088E  72                 	db	114	;'r'
  1546   00088F  72                 	db	114	;'r'
  1547   000890  6F                 	db	111	;'o'
  1548   000891  72                 	db	114	;'r'
  1549   000892  00                 	db	0
  1550   000893                     STR_14:
  1551   000893  42                 	db	66	;'B'
  1552   000894  75                 	db	117	;'u'
  1553   000895  73                 	db	115	;'s'
  1554   000896  63                 	db	99	;'c'
  1555   000897  61                 	db	97	;'a'
  1556   000898  6E                 	db	110	;'n'
  1557   000899  64                 	db	100	;'d'
  1558   00089A  6F                 	db	111	;'o'
  1559   00089B  2E                 	db	46
  1560   00089C  2E                 	db	46
  1561   00089D  2E                 	db	46
  1562   00089E  00                 	db	0
  1563   00089F                     STR_3:
  1564   00089F  53                 	db	83	;'S'
  1565   0008A0  69                 	db	105	;'i'
  1566   0008A1  73                 	db	115	;'s'
  1567   0008A2  74                 	db	116	;'t'
  1568   0008A3  65                 	db	101	;'e'
  1569   0008A4  6D                 	db	109	;'m'
  1570   0008A5  61                 	db	97	;'a'
  1571   0008A6  20                 	db	32
  1572   0008A7  4F                 	db	79	;'O'
  1573   0008A8  46                 	db	70	;'F'
  1574   0008A9  46                 	db	70	;'F'
  1575   0008AA  00                 	db	0
  1576   0008AB                     STR_15:
  1577   0008AB  47                 	db	71	;'G'
  1578   0008AC  50                 	db	80	;'P'
  1579   0008AD  53                 	db	83	;'S'
  1580   0008AE  3A                 	db	58	;':'
  1581   0008AF  20                 	db	32
  1582   0008B0  45                 	db	69	;'E'
  1583   0008B1  72                 	db	114	;'r'
  1584   0008B2  72                 	db	114	;'r'
  1585   0008B3  6F                 	db	111	;'o'
  1586   0008B4  72                 	db	114	;'r'
  1587   0008B5  00                 	db	0
  1588   0008B6                     STR_12:
  1589   0008B6  4C                 	db	76	;'L'
  1590   0008B7  6F                 	db	111	;'o'
  1591   0008B8  6E                 	db	110	;'n'
  1592   0008B9  3A                 	db	58	;':'
  1593   0008BA  25                 	db	37
  1594   0008BB  73                 	db	115	;'s'
  1595   0008BC  25                 	db	37
  1596   0008BD  73                 	db	115	;'s'
  1597   0008BE  00                 	db	0
  1598   0008BF                     STR_11:
  1599   0008BF  4C                 	db	76	;'L'
  1600   0008C0  61                 	db	97	;'a'
  1601   0008C1  74                 	db	116	;'t'
  1602   0008C2  3A                 	db	58	;':'
  1603   0008C3  25                 	db	37
  1604   0008C4  73                 	db	115	;'s'
  1605   0008C5  25                 	db	37
  1606   0008C6  73                 	db	115	;'s'
  1607   0008C7  00                 	db	0
  1608   0008C8                     STR_5:
  1609   0008C8  48                 	db	72	;'H'
  1610   0008C9  3A                 	db	58	;':'
  1611   0008CA  20                 	db	32
  1612   0008CB  25                 	db	37
  1613   0008CC  64                 	db	100	;'d'
  1614   0008CD  25                 	db	37
  1615   0008CE  25                 	db	37
  1616   0008CF  00                 	db	0
  1617   0008D0                     STR_6:
  1618   0008D0  54                 	db	84	;'T'
  1619   0008D1  3A                 	db	58	;':'
  1620   0008D2  20                 	db	32
  1621   0008D3  25                 	db	37
  1622   0008D4  64                 	db	100	;'d'
  1623   0008D5  DF                 	db	-33
  1624   0008D6  43                 	db	67	;'C'
  1625   0008D7  00                 	db	0
  1626   0008D8                     STR_23:
  1627   0008D8  28                 	db	40
  1628   0008D9  6E                 	db	110	;'n'
  1629   0008DA  75                 	db	117	;'u'
  1630   0008DB  6C                 	db	108	;'l'
  1631   0008DC  6C                 	db	108	;'l'
  1632   0008DD  29                 	db	41
  1633   0008DE  00                 	db	0
  1634   0008DF                     STR_9:
  1635   0008DF  24                 	db	36
  1636   0008E0  47                 	db	71	;'G'
  1637   0008E1  50                 	db	80	;'P'
  1638   0008E2  52                 	db	82	;'R'
  1639   0008E3  4D                 	db	77	;'M'
  1640   0008E4  43                 	db	67	;'C'
  1641   0008E5  00                 	db	0
  1642   0008E6                     STR_20:
  1643   0008E6  2C                 	db	44
  1644   0008E7  00                 	db	0
  1645   0008DF                     STR_10          equ	STR_9
  1646   0008DF                     STR_19          equ	STR_9
  1647   00083E                     STR_16          equ	STR_8
  1648   0008E6                     STR_21          equ	STR_20
  1649   0008E8  00                 	db	0	; dummy byte at the end
  1650   000800                     __smallconst    set	__psmallconst
  1651   000800                     __mediumconst   set	__psmallconst
  1652   000002                     __activetblptr  equ	2
  1653                           
  1654                           ; #config settings
  1655                           
  1656                           	psect	cinit
  1657   0022A8                     __pcinit:
  1658                           	callstack 0
  1659   0022A8                     start_initialization:
  1660                           	callstack 0
  1661   0022A8                     __initialization:
  1662                           	callstack 0
  1663                           
  1664                           ; Initialize objects allocated to COMRAM (1 bytes)
  1665                           ; load TBLPTR registers with __pidataCOMRAM
  1666   0022A8  0ED0               	movlw	low __pidataCOMRAM
  1667   0022AA  6EF6               	movwf	tblptrl,c
  1668   0022AC  0E25               	movlw	high __pidataCOMRAM
  1669   0022AE  6EF7               	movwf	tblptrh,c
  1670   0022B0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1671   0022B2  6EF8               	movwf	tblptru,c
  1672   0022B4  0009               	tblrd		*+	;fetch initializer
  1673   0022B6  CFF5 F057          	movff	tablat,__pdataCOMRAM
  1674                           
  1675                           ; Clear objects allocated to BANK2 (100 bytes)
  1676   0022BA  EE02  F000         	lfsr	0,__pbssBANK2
  1677   0022BE  0E64               	movlw	100
  1678   0022C0                     clear_0:
  1679   0022C0  6AEE               	clrf	postinc0,c
  1680   0022C2  06E8               	decf	wreg,f,c
  1681   0022C4  E1FD               	bnz	clear_0
  1682                           
  1683                           ; Clear objects allocated to BANK1 (42 bytes)
  1684   0022C6  EE01  F07D         	lfsr	0,__pbssBANK1
  1685   0022CA  0E2A               	movlw	42
  1686   0022CC                     clear_1:
  1687   0022CC  6AEE               	clrf	postinc0,c
  1688   0022CE  06E8               	decf	wreg,f,c
  1689   0022D0  E1FD               	bnz	clear_1
  1690                           
  1691                           ; Clear objects allocated to BANK0 (32 bytes)
  1692   0022D2  EE00  F0C8         	lfsr	0,__pbssBANK0
  1693   0022D6  0E20               	movlw	32
  1694   0022D8                     clear_2:
  1695   0022D8  6AEE               	clrf	postinc0,c
  1696   0022DA  06E8               	decf	wreg,f,c
  1697   0022DC  E1FD               	bnz	clear_2
  1698                           
  1699                           ; Clear objects allocated to COMRAM (7 bytes)
  1700   0022DE  EE00  F050         	lfsr	0,__pbssCOMRAM
  1701   0022E2  0E07               	movlw	7
  1702   0022E4                     clear_3:
  1703   0022E4  6AEE               	clrf	postinc0,c
  1704   0022E6  06E8               	decf	wreg,f,c
  1705   0022E8  E1FD               	bnz	clear_3
  1706   0022EA                     end_of_initialization:
  1707                           	callstack 0
  1708   0022EA                     __end_of__initialization:
  1709                           	callstack 0
  1710   0022EA  9058               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1711   0022EC  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1712   0022EE  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1713   0022F0  6EF8               	movwf	tblptru,c
  1714   0022F2  0100               	movlb	0
  1715   0022F4  EF6C  F00B         	goto	_main	;jump to C main() function
  1716                           
  1717                           	psect	bssCOMRAM
  1718   000050                     __pbssCOMRAM:
  1719                           	callstack 0
  1720   000050                     _width:
  1721                           	callstack 0
  1722   000050                     	ds	2
  1723   000052                     _prec:
  1724                           	callstack 0
  1725   000052                     	ds	2
  1726   000054                     strtok@p:
  1727                           	callstack 0
  1728   000054                     	ds	1
  1729   000055                     _flags:
  1730                           	callstack 0
  1731   000055                     	ds	1
  1732   000056                     _system_needs_reset:
  1733                           	callstack 0
  1734   000056                     	ds	1
  1735                           
  1736                           	psect	dataCOMRAM
  1737   000057                     __pdataCOMRAM:
  1738                           	callstack 0
  1739   000057                     _system_state:
  1740                           	callstack 0
  1741   000057                     	ds	1
  1742                           
  1743                           	psect	bssBANK0
  1744   0000C8                     __pbssBANK0:
  1745                           	callstack 0
  1746   0000C8                     _dbuf:
  1747                           	callstack 0
  1748   0000C8                     	ds	32
  1749                           
  1750                           	psect	bssBANK1
  1751   00017D                     __pbssBANK1:
  1752                           	callstack 0
  1753   00017D                     	ds	11
  1754   000188                     	ds	10
  1755   000192                     	ds	2
  1756   000194                     	ds	2
  1757   000196                     _lcd_buffer:
  1758                           	callstack 0
  1759   000196                     	ds	17
  1760                           
  1761                           	psect	bssBANK2
  1762   000200                     __pbssBANK2:
  1763                           	callstack 0
  1764   000200                     	ds	100
  1765                           
  1766                           	psect	cstackBANK1
  1767   000100                     __pcstackBANK1:
  1768                           	callstack 0
  1769   000100                     Display_GPS@buffer:
  1770                           	callstack 0
  1771                           
  1772                           ; 100 bytes @ 0x0
  1773   000100                     	ds	100
  1774   000164                     Display_GPS@lon:
  1775                           	callstack 0
  1776                           
  1777                           ; 11 bytes @ 0x64
  1778   000164                     	ds	11
  1779   00016F                     Display_GPS@lat:
  1780                           	callstack 0
  1781                           
  1782                           ; 10 bytes @ 0x6F
  1783   00016F                     	ds	10
  1784   000179                     Display_GPS@ns:
  1785                           	callstack 0
  1786                           
  1787                           ; 2 bytes @ 0x79
  1788   000179                     	ds	2
  1789   00017B                     Display_GPS@ew:
  1790                           	callstack 0
  1791                           
  1792                           ; 2 bytes @ 0x7B
  1793   00017B                     	ds	2
  1794                           
  1795                           	psect	cstackBANK0
  1796   000060                     __pcstackBANK0:
  1797                           	callstack 0
  1798   000060                     GPS_ParseGPRMC@buf:
  1799                           	callstack 0
  1800                           
  1801                           ; 100 bytes @ 0x0
  1802   000060                     	ds	100
  1803   0000C4                     _GPS_ParseGPRMC$653:
  1804                           	callstack 0
  1805                           
  1806                           ; 1 bytes @ 0x64
  1807   0000C4                     	ds	1
  1808   0000C5                     GPS_ParseGPRMC@field:
  1809                           	callstack 0
  1810                           
  1811                           ; 1 bytes @ 0x65
  1812   0000C5                     	ds	1
  1813   0000C6                     GPS_ParseGPRMC@data_valid:
  1814                           	callstack 0
  1815                           
  1816                           ; 1 bytes @ 0x66
  1817   0000C6                     	ds	1
  1818   0000C7                     GPS_ParseGPRMC@token:
  1819                           	callstack 0
  1820                           
  1821                           ; 1 bytes @ 0x67
  1822   0000C7                     	ds	1
  1823                           
  1824                           	psect	cstackCOMRAM
  1825   000001                     __pcstackCOMRAM:
  1826                           	callstack 0
  1827   000001                     ?_strlen:
  1828                           	callstack 0
  1829   000001                     ?_strncmp:
  1830                           	callstack 0
  1831   000001                     ?_strchr:
  1832                           	callstack 0
  1833   000001                     ?___awdiv:
  1834                           	callstack 0
  1835   000001                     ?___awmod:
  1836                           	callstack 0
  1837   000001                     ?_read_prec_or_width:
  1838                           	callstack 0
  1839   000001                     ?___lldiv:
  1840                           	callstack 0
  1841   000001                     DHT11_ReadByte@data:
  1842                           	callstack 0
  1843   000001                     GPS_Init@dummy:
  1844                           	callstack 0
  1845   000001                     read_prec_or_width@fmt:
  1846                           	callstack 0
  1847   000001                     strlen@s:
  1848                           	callstack 0
  1849   000001                     GPS_ReadSentence@buffer:
  1850                           	callstack 0
  1851   000001                     ___awdiv@dividend:
  1852                           	callstack 0
  1853   000001                     ___awmod@dividend:
  1854                           	callstack 0
  1855   000001                     fputc@c:
  1856                           	callstack 0
  1857   000001                     strncpy@d:
  1858                           	callstack 0
  1859   000001                     strchr@s:
  1860                           	callstack 0
  1861   000001                     strncmp@l:
  1862                           	callstack 0
  1863   000001                     ___lldiv@dividend:
  1864                           	callstack 0
  1865   000001                     ??_LCD_Command:
  1866   000001                     ??_LCD_Char:
  1867   000001                     ??_BCD2DEC:
  1868   000001                     ??_I2C_Master_Wait:
  1869                           
  1870                           ; 1 bytes @ 0x0
  1871   000001                     	ds	1
  1872   000002                     ?_I2C_Master_Read:
  1873                           	callstack 0
  1874   000002                     DHT11_ReadByte@i:
  1875                           	callstack 0
  1876   000002                     LCD_Command@cmd:
  1877                           	callstack 0
  1878   000002                     LCD_Char@dat:
  1879                           	callstack 0
  1880   000002                     BCD2DEC@val:
  1881                           	callstack 0
  1882   000002                     read_prec_or_width@ap:
  1883                           	callstack 0
  1884   000002                     I2C_Master_Write@d:
  1885                           	callstack 0
  1886   000002                     I2C_Master_Read@a:
  1887                           	callstack 0
  1888   000002                     
  1889                           ; 1 bytes @ 0x1
  1890   000002                     	ds	1
  1891   000003                     Clear_Line@line:
  1892                           	callstack 0
  1893   000003                     DHT11_Read@humidity:
  1894                           	callstack 0
  1895   000003                     fputc@fp:
  1896                           	callstack 0
  1897   000003                     strlen@a:
  1898                           	callstack 0
  1899   000003                     strncmp@r:
  1900                           	callstack 0
  1901   000003                     GPS_ReadSentence@max_len:
  1902                           	callstack 0
  1903   000003                     LCD_String@msg:
  1904                           	callstack 0
  1905   000003                     ___awdiv@divisor:
  1906                           	callstack 0
  1907   000003                     ___awmod@divisor:
  1908                           	callstack 0
  1909   000003                     strncpy@s:
  1910                           	callstack 0
  1911   000003                     strchr@c:
  1912                           	callstack 0
  1913   000003                     ??_LCD_Init:
  1914   000003                     ??_read_prec_or_width:
  1915                           
  1916                           ; 1 bytes @ 0x2
  1917   000003                     	ds	1
  1918   000004                     DHT11_Read@temperature:
  1919                           	callstack 0
  1920   000004                     _Clear_Line$326:
  1921                           	callstack 0
  1922   000004                     I2C_Master_Read@temp:
  1923                           	callstack 0
  1924   000004                     strncmp@n:
  1925                           	callstack 0
  1926   000004                     ??_fputc:
  1927                           
  1928                           ; 1 bytes @ 0x3
  1929   000004                     	ds	1
  1930   000005                     LCD_String_xy@pos:
  1931                           	callstack 0
  1932   000005                     ___awdiv@counter:
  1933                           	callstack 0
  1934   000005                     ___awmod@counter:
  1935                           	callstack 0
  1936   000005                     read_prec_or_width@c:
  1937                           	callstack 0
  1938   000005                     GPS_ReadSentence@timeout_ms:
  1939                           	callstack 0
  1940   000005                     strncpy@n:
  1941                           	callstack 0
  1942   000005                     ___lldiv@divisor:
  1943                           	callstack 0
  1944   000005                     ??_DHT11_Read:
  1945   000005                     ??_strchr:
  1946   000005                     
  1947                           ; 1 bytes @ 0x4
  1948   000005                     	ds	1
  1949   000006                     Clear_Line@i:
  1950                           	callstack 0
  1951   000006                     RTC_GetDateTime@hour:
  1952                           	callstack 0
  1953   000006                     ___awdiv@sign:
  1954                           	callstack 0
  1955   000006                     ___awmod@sign:
  1956                           	callstack 0
  1957   000006                     LCD_String_xy@msg:
  1958                           	callstack 0
  1959   000006                     read_prec_or_width@n:
  1960                           	callstack 0
  1961   000006                     ??_strncmp:
  1962                           
  1963                           ; 1 bytes @ 0x5
  1964   000006                     	ds	1
  1965   000007                     ?_strstr:
  1966                           	callstack 0
  1967   000007                     ?_abs:
  1968                           	callstack 0
  1969   000007                     ?_strspn:
  1970                           	callstack 0
  1971   000007                     ?_strcspn:
  1972                           	callstack 0
  1973   000007                     RTC_GetDateTime@min:
  1974                           	callstack 0
  1975   000007                     strcspn@s:
  1976                           	callstack 0
  1977   000007                     strspn@s:
  1978                           	callstack 0
  1979   000007                     ___awdiv@quotient:
  1980                           	callstack 0
  1981   000007                     abs@a:
  1982                           	callstack 0
  1983   000007                     strncpy@cp:
  1984                           	callstack 0
  1985   000007                     strstr@h:
  1986                           	callstack 0
  1987   000007                     ??_GPS_ReadSentence:
  1988   000007                     
  1989                           ; 1 bytes @ 0x6
  1990   000007                     	ds	1
  1991   000008                     LCD_String_xy@row:
  1992                           	callstack 0
  1993   000008                     RTC_GetDateTime@sec:
  1994                           	callstack 0
  1995   000008                     strcspn@c:
  1996                           	callstack 0
  1997   000008                     strspn@c:
  1998                           	callstack 0
  1999   000008                     
  2000                           ; 1 bytes @ 0x7
  2001   000008                     	ds	1
  2002   000009                     RTC_GetDateTime@day:
  2003                           	callstack 0
  2004   000009                     stoa@fp:
  2005                           	callstack 0
  2006   000009                     fputs@s:
  2007                           	callstack 0
  2008   000009                     strstr@n:
  2009                           	callstack 0
  2010   000009                     GPS_ReadSentence@t:
  2011                           	callstack 0
  2012   000009                     _LCD_String_xy$674:
  2013                           	callstack 0
  2014   000009                     ___lldiv@quotient:
  2015                           	callstack 0
  2016   000009                     DHT11_Read@data:
  2017                           	callstack 0
  2018   000009                     ??_abs:
  2019   000009                     ??_strspn:
  2020   000009                     ??_strcspn:
  2021   000009                     
  2022                           ; 1 bytes @ 0x8
  2023   000009                     	ds	1
  2024   00000A                     RTC_GetDateTime@month:
  2025                           	callstack 0
  2026   00000A                     fputs@fp:
  2027                           	callstack 0
  2028   00000A                     stoa@s:
  2029                           	callstack 0
  2030   00000A                     strstr@nl:
  2031                           	callstack 0
  2032   00000A                     strcspn@i:
  2033                           	callstack 0
  2034   00000A                     strspn@i:
  2035                           	callstack 0
  2036   00000A                     
  2037                           ; 1 bytes @ 0x9
  2038   00000A                     	ds	1
  2039   00000B                     GPS_ReadSentence@dummy:
  2040                           	callstack 0
  2041   00000B                     LCD_String_xy@location:
  2042                           	callstack 0
  2043   00000B                     RTC_GetDateTime@year:
  2044                           	callstack 0
  2045   00000B                     fputs@c:
  2046                           	callstack 0
  2047   00000B                     
  2048                           ; 1 bytes @ 0xA
  2049   00000B                     	ds	1
  2050   00000C                     GPS_ReadSentence@started:
  2051                           	callstack 0
  2052   00000C                     strtok@s:
  2053                           	callstack 0
  2054   00000C                     fputs@i:
  2055                           	callstack 0
  2056   00000C                     ??_RTC_Init:
  2057   00000C                     ??_stoa:
  2058                           
  2059                           ; 1 bytes @ 0xB
  2060   00000C                     	ds	1
  2061   00000D                     ___lldiv@counter:
  2062                           	callstack 0
  2063   00000D                     strtok@sep:
  2064                           	callstack 0
  2065   00000D                     GPS_ReadSentence@i:
  2066                           	callstack 0
  2067                           
  2068                           ; 2 bytes @ 0xC
  2069   00000D                     	ds	1
  2070   00000E                     DHT11_Read@i:
  2071                           	callstack 0
  2072   00000E                     RTC_Init@sec:
  2073                           	callstack 0
  2074   00000E                     pad@fp:
  2075                           	callstack 0
  2076   00000E                     GPS_ParseGPRMC@msg:
  2077                           	callstack 0
  2078   00000E                     stoa@p:
  2079                           	callstack 0
  2080   00000E                     I2C_Master_Init@c:
  2081                           	callstack 0
  2082   00000E                     
  2083                           ; 1 bytes @ 0xD
  2084   00000E                     	ds	1
  2085   00000F                     GPS_ReadSentence@c:
  2086                           	callstack 0
  2087   00000F                     pad@buf:
  2088                           	callstack 0
  2089                           
  2090                           ; 1 bytes @ 0xE
  2091   00000F                     	ds	1
  2092   000010                     GPS_ParseGPRMC@lat:
  2093                           	callstack 0
  2094   000010                     pad@p:
  2095                           	callstack 0
  2096   000010                     stoa@w:
  2097                           	callstack 0
  2098                           
  2099                           ; 2 bytes @ 0xF
  2100   000010                     	ds	2
  2101   000012                     GPS_ParseGPRMC@ns:
  2102                           	callstack 0
  2103   000012                     stoa@cp:
  2104                           	callstack 0
  2105   000012                     ??_I2C_Master_Init:
  2106   000012                     ??_pad:
  2107                           
  2108                           ; 1 bytes @ 0x11
  2109   000012                     	ds	1
  2110   000013                     pad@i:
  2111                           	callstack 0
  2112                           
  2113                           ; 2 bytes @ 0x12
  2114   000013                     	ds	1
  2115   000014                     GPS_ParseGPRMC@lon:
  2116                           	callstack 0
  2117   000014                     stoa@l:
  2118                           	callstack 0
  2119                           
  2120                           ; 2 bytes @ 0x13
  2121   000014                     	ds	1
  2122   000015                     dtoa@fp:
  2123                           	callstack 0
  2124                           
  2125                           ; 1 bytes @ 0x14
  2126   000015                     	ds	1
  2127   000016                     GPS_ParseGPRMC@ew:
  2128                           	callstack 0
  2129   000016                     dtoa@d:
  2130                           	callstack 0
  2131   000016                     ??_Initialize_System:
  2132                           
  2133                           ; 1 bytes @ 0x15
  2134   000016                     	ds	2
  2135   000018                     _dtoa$1481:
  2136                           	callstack 0
  2137   000018                     
  2138                           ; 1 bytes @ 0x17
  2139   000018                     	ds	2
  2140   00001A                     dtoa@p:
  2141                           	callstack 0
  2142                           
  2143                           ; 1 bytes @ 0x19
  2144   00001A                     	ds	1
  2145   00001B                     dtoa@w:
  2146                           	callstack 0
  2147                           
  2148                           ; 2 bytes @ 0x1A
  2149   00001B                     	ds	2
  2150   00001D                     dtoa@s:
  2151                           	callstack 0
  2152                           
  2153                           ; 1 bytes @ 0x1C
  2154   00001D                     	ds	1
  2155   00001E                     dtoa@i:
  2156                           	callstack 0
  2157                           
  2158                           ; 2 bytes @ 0x1D
  2159   00001E                     	ds	2
  2160   000020                     vfpfcnvrt@fp:
  2161                           	callstack 0
  2162                           
  2163                           ; 1 bytes @ 0x1F
  2164   000020                     	ds	1
  2165   000021                     vfpfcnvrt@fmt:
  2166                           	callstack 0
  2167                           
  2168                           ; 1 bytes @ 0x20
  2169   000021                     	ds	1
  2170   000022                     vfpfcnvrt@ap:
  2171                           	callstack 0
  2172                           
  2173                           ; 2 bytes @ 0x21
  2174   000022                     	ds	2
  2175   000024                     ??_vfpfcnvrt:
  2176                           
  2177                           ; 1 bytes @ 0x23
  2178   000024                     	ds	1
  2179   000025                     vfpfcnvrt@convarg:
  2180                           	callstack 0
  2181                           
  2182                           ; 4 bytes @ 0x24
  2183   000025                     	ds	4
  2184   000029                     vfpfcnvrt@cp:
  2185                           	callstack 0
  2186                           
  2187                           ; 1 bytes @ 0x28
  2188   000029                     	ds	1
  2189   00002A                     vfpfcnvrt@done:
  2190                           	callstack 0
  2191                           
  2192                           ; 1 bytes @ 0x29
  2193   00002A                     	ds	1
  2194   00002B                     ?_vfprintf:
  2195                           	callstack 0
  2196   00002B                     vfprintf@fp:
  2197                           	callstack 0
  2198                           
  2199                           ; 1 bytes @ 0x2A
  2200   00002B                     	ds	1
  2201   00002C                     vfprintf@fmt:
  2202                           	callstack 0
  2203                           
  2204                           ; 1 bytes @ 0x2B
  2205   00002C                     	ds	1
  2206   00002D                     vfprintf@ap:
  2207                           	callstack 0
  2208                           
  2209                           ; 1 bytes @ 0x2C
  2210   00002D                     	ds	1
  2211   00002E                     vfprintf@cfmt:
  2212                           	callstack 0
  2213   00002E                     
  2214                           ; 1 bytes @ 0x2D
  2215   00002E                     	ds	1
  2216   00002F                     ?_sprintf:
  2217                           	callstack 0
  2218   00002F                     sprintf@s:
  2219                           	callstack 0
  2220                           
  2221                           ; 2 bytes @ 0x2E
  2222   00002F                     	ds	2
  2223   000031                     sprintf@fmt:
  2224                           	callstack 0
  2225                           
  2226                           ; 1 bytes @ 0x30
  2227   000031                     	ds	7
  2228   000038                     sprintf@ap:
  2229                           	callstack 0
  2230   000038                     
  2231                           ; 1 bytes @ 0x37
  2232   000038                     	ds	1
  2233   000039                     sprintf@f:
  2234                           	callstack 0
  2235                           
  2236                           ; 11 bytes @ 0x38
  2237   000039                     	ds	11
  2238   000044                     Display_DHT11@hum:
  2239                           	callstack 0
  2240   000044                     ??_Display_RTC:
  2241                           
  2242                           ; 1 bytes @ 0x43
  2243   000044                     	ds	1
  2244   000045                     Display_DHT11@temp:
  2245                           	callstack 0
  2246                           
  2247                           ; 1 bytes @ 0x44
  2248   000045                     	ds	1
  2249   000046                     Display_RTC@refresh_count:
  2250                           	callstack 0
  2251                           
  2252                           ; 2 bytes @ 0x45
  2253   000046                     	ds	2
  2254   000048                     Display_RTC@h:
  2255                           	callstack 0
  2256                           
  2257                           ; 1 bytes @ 0x47
  2258   000048                     	ds	1
  2259   000049                     Display_RTC@m:
  2260                           	callstack 0
  2261                           
  2262                           ; 1 bytes @ 0x48
  2263   000049                     	ds	1
  2264   00004A                     Display_RTC@s:
  2265                           	callstack 0
  2266                           
  2267                           ; 1 bytes @ 0x49
  2268   00004A                     	ds	1
  2269   00004B                     Display_RTC@day:
  2270                           	callstack 0
  2271                           
  2272                           ; 1 bytes @ 0x4A
  2273   00004B                     	ds	1
  2274   00004C                     Display_RTC@mon:
  2275                           	callstack 0
  2276                           
  2277                           ; 1 bytes @ 0x4B
  2278   00004C                     	ds	1
  2279   00004D                     Display_RTC@year:
  2280                           	callstack 0
  2281                           
  2282                           ; 1 bytes @ 0x4C
  2283   00004D                     	ds	1
  2284   00004E                     ??_main:
  2285                           
  2286                           ; 1 bytes @ 0x4D
  2287   00004E                     	ds	2
  2288                           
  2289 ;;
  2290 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2291 ;;
  2292 ;; *************** function _main *****************
  2293 ;; Defined at:
  2294 ;;		line 150 in file "main.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;		None
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;		None
  2299 ;; Return value:  Size  Location     Type
  2300 ;;                  1    wreg      void 
  2301 ;; Registers used:
  2302 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2303 ;; Tracked objects:
  2304 ;;		On entry : 0/0
  2305 ;;		On exit  : 0/0
  2306 ;;		Unchanged: 0/0
  2307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2308 ;;      Params:         0       0       0       0       0       0       0       0       0
  2309 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2310 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2311 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2312 ;;Total ram usage:        2 bytes
  2313 ;; Hardware stack levels required when called: 10
  2314 ;; This function calls:
  2315 ;;		_Display_DHT11
  2316 ;;		_Display_GPS
  2317 ;;		_Display_RTC
  2318 ;;		_Enter_Low_Power_Mode
  2319 ;;		_Initialize_System
  2320 ;;		_Setup_Interrupts
  2321 ;; This function is called by:
  2322 ;;		Startup code after reset
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text0
  2327   0016D8                     __ptext0:
  2328                           	callstack 0
  2329   0016D8                     _main:
  2330                           	callstack 21
  2331   0016D8                     
  2332                           ;main.c: 151:     Initialize_System();
  2333   0016D8  ECAD  F00F         	call	_Initialize_System	;wreg free
  2334   0016DC                     
  2335                           ;main.c: 152:     Setup_Interrupts();
  2336   0016DC  ECC9  F012         	call	_Setup_Interrupts	;wreg free
  2337   0016E0                     l3320:
  2338                           
  2339                           ;main.c: 155:         if (system_state == 1) {
  2340   0016E0  0457               	decf	_system_state^0,w,c	;volatile
  2341   0016E2  A4D8               	btfss	status,2,c
  2342   0016E4  EF76  F00B         	goto	u3071
  2343   0016E8  EF78  F00B         	goto	u3070
  2344   0016EC                     u3071:
  2345   0016EC  EFB5  F00B         	goto	l3346
  2346   0016F0                     u3070:
  2347   0016F0                     
  2348                           ;main.c: 156:             if (system_needs_reset) {
  2349   0016F0  5056               	movf	_system_needs_reset^0,w,c	;volatile
  2350   0016F2  B4D8               	btfsc	status,2,c
  2351   0016F4  EF7E  F00B         	goto	u3081
  2352   0016F8  EF80  F00B         	goto	u3080
  2353   0016FC                     u3081:
  2354   0016FC  EF83  F00B         	goto	l3328
  2355   001700                     u3080:
  2356   001700                     
  2357                           ;main.c: 157:                 Initialize_System();
  2358   001700  ECAD  F00F         	call	_Initialize_System	;wreg free
  2359   001704                     
  2360                           ;main.c: 158:                 system_needs_reset = 0;
  2361   001704  6A56               	clrf	_system_needs_reset^0,c	;volatile
  2362   001706                     l3328:
  2363                           
  2364                           ;main.c: 162:             Display_DHT11();
  2365   001706  EC49  F00D         	call	_Display_DHT11	;wreg free
  2366   00170A                     
  2367                           ;main.c: 163:             _delay((unsigned long)((5000)*(8000000/4000.0)));
  2368   00170A  0E33               	movlw	51
  2369   00170C  6E4F               	movwf	(??_main+1)^0,c
  2370   00170E  0EBB               	movlw	187
  2371   001710  6E4E               	movwf	??_main^0,c
  2372   001712  0EE0               	movlw	224
  2373   001714                     u3127:
  2374   001714  2EE8               	decfsz	wreg,f,c
  2375   001716  D7FE               	bra	u3127
  2376   001718  2E4E               	decfsz	??_main^0,f,c
  2377   00171A  D7FC               	bra	u3127
  2378   00171C  2E4F               	decfsz	(??_main+1)^0,f,c
  2379   00171E  D7FA               	bra	u3127
  2380   001720                     
  2381                           ;main.c: 164:             if (system_state == 0) continue;
  2382   001720  5057               	movf	_system_state^0,w,c	;volatile
  2383   001722  A4D8               	btfss	status,2,c
  2384   001724  EF96  F00B         	goto	u3091
  2385   001728  EF98  F00B         	goto	u3090
  2386   00172C                     u3091:
  2387   00172C  EF9A  F00B         	goto	l3336
  2388   001730                     u3090:
  2389   001730  EF70  F00B         	goto	l3320
  2390   001734                     l3336:
  2391                           
  2392                           ;main.c: 166:             Display_GPS();
  2393   001734  ECD2  F006         	call	_Display_GPS	;wreg free
  2394   001738                     
  2395                           ;main.c: 167:             _delay((unsigned long)((5000)*(8000000/4000.0)));
  2396   001738  0E33               	movlw	51
  2397   00173A  6E4F               	movwf	(??_main+1)^0,c
  2398   00173C  0EBB               	movlw	187
  2399   00173E  6E4E               	movwf	??_main^0,c
  2400   001740  0EE0               	movlw	224
  2401   001742                     u3137:
  2402   001742  2EE8               	decfsz	wreg,f,c
  2403   001744  D7FE               	bra	u3137
  2404   001746  2E4E               	decfsz	??_main^0,f,c
  2405   001748  D7FC               	bra	u3137
  2406   00174A  2E4F               	decfsz	(??_main+1)^0,f,c
  2407   00174C  D7FA               	bra	u3137
  2408   00174E                     
  2409                           ;main.c: 168:             if (system_state == 0) continue;
  2410   00174E  5057               	movf	_system_state^0,w,c	;volatile
  2411   001750  A4D8               	btfss	status,2,c
  2412   001752  EFAD  F00B         	goto	u3101
  2413   001756  EFAF  F00B         	goto	u3100
  2414   00175A                     u3101:
  2415   00175A  EFB1  F00B         	goto	l3344
  2416   00175E                     u3100:
  2417   00175E  EF70  F00B         	goto	l3320
  2418   001762                     l3344:
  2419                           
  2420                           ;main.c: 170:             Display_RTC();
  2421   001762  EC16  F00A         	call	_Display_RTC	;wreg free
  2422                           
  2423                           ;main.c: 171:         } else {
  2424   001766  EF70  F00B         	goto	l3320
  2425   00176A                     l3346:
  2426                           
  2427                           ;main.c: 172:             Enter_Low_Power_Mode();
  2428   00176A  EC64  F012         	call	_Enter_Low_Power_Mode	;wreg free
  2429                           
  2430                           ;main.c: 173:             while (system_state == 0) {
  2431   00176E  EFC5  F00B         	goto	l3350
  2432   001772                     l3348:
  2433                           
  2434                           ;main.c: 174:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  2435   001772  0E02               	movlw	2
  2436   001774  6E4F               	movwf	(??_main+1)^0,c
  2437   001776  0E04               	movlw	4
  2438   001778  6E4E               	movwf	??_main^0,c
  2439   00177A  0EBA               	movlw	186
  2440   00177C                     u3147:
  2441   00177C  2EE8               	decfsz	wreg,f,c
  2442   00177E  D7FE               	bra	u3147
  2443   001780  2E4E               	decfsz	??_main^0,f,c
  2444   001782  D7FC               	bra	u3147
  2445   001784  2E4F               	decfsz	(??_main+1)^0,f,c
  2446   001786  D7FA               	bra	u3147
  2447   001788  D000               	nop2	
  2448   00178A                     l3350:
  2449                           
  2450                           ;main.c: 173:             while (system_state == 0) {
  2451   00178A  5057               	movf	_system_state^0,w,c	;volatile
  2452   00178C  B4D8               	btfsc	status,2,c
  2453   00178E  EFCB  F00B         	goto	u3111
  2454   001792  EFCD  F00B         	goto	u3110
  2455   001796                     u3111:
  2456   001796  EFB9  F00B         	goto	l3348
  2457   00179A                     u3110:
  2458   00179A  EF70  F00B         	goto	l3320
  2459   00179E  EF07  F000         	goto	start
  2460   0017A2                     __end_of_main:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function _Setup_Interrupts *****************
  2464 ;; Defined at:
  2465 ;;		line 52 in file "main.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;		None
  2468 ;; Auto vars:     Size  Location     Type
  2469 ;;		None
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  1    wreg      void 
  2472 ;; Registers used:
  2473 ;;		None
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2479 ;;      Params:         0       0       0       0       0       0       0       0       0
  2480 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2481 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2482 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2483 ;;Total ram usage:        0 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; Hardware stack levels required when called: 1
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_main
  2490 ;; This function uses a non-reentrant model
  2491 ;;
  2492                           
  2493                           	psect	text1
  2494   002592                     __ptext1:
  2495                           	callstack 0
  2496   002592                     _Setup_Interrupts:
  2497                           	callstack 29
  2498   002592                     
  2499                           ;main.c: 54:     INTCONbits.INT0IE = 1;
  2500   002592  88F2               	bsf	242,4,c	;volatile
  2501                           
  2502                           ;main.c: 55:     INTCONbits.INT0IF = 0;
  2503   002594  92F2               	bcf	242,1,c	;volatile
  2504                           
  2505                           ;main.c: 56:     INTCON2bits.INTEDG0 = 0;
  2506   002596  9CF1               	bcf	241,6,c	;volatile
  2507                           
  2508                           ;main.c: 59:     RCONbits.IPEN = 1;
  2509   002598  8ED0               	bsf	208,7,c	;volatile
  2510                           
  2511                           ;main.c: 60:     INTCONbits.GIEH = 1;
  2512   00259A  8EF2               	bsf	242,7,c	;volatile
  2513                           
  2514                           ;main.c: 61:     INTCONbits.GIEL = 1;
  2515   00259C  8CF2               	bsf	242,6,c	;volatile
  2516   00259E  0012               	return		;funcret
  2517   0025A0                     __end_of_Setup_Interrupts:
  2518                           	callstack 0
  2519                           
  2520 ;; *************** function _Initialize_System *****************
  2521 ;; Defined at:
  2522 ;;		line 31 in file "main.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2536 ;;      Params:         0       0       0       0       0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2538 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2539 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2540 ;;Total ram usage:        2 bytes
  2541 ;; Hardware stack levels used: 1
  2542 ;; Hardware stack levels required when called: 5
  2543 ;; This function calls:
  2544 ;;		_GPS_Init
  2545 ;;		_I2C_Master_Init
  2546 ;;		_LCD_Clear
  2547 ;;		_LCD_Init
  2548 ;;		_LCD_String_xy
  2549 ;;		_RTC_Init
  2550 ;; This function is called by:
  2551 ;;		_main
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text2
  2556   001F5A                     __ptext2:
  2557                           	callstack 0
  2558   001F5A                     _Initialize_System:
  2559                           	callstack 25
  2560   001F5A                     
  2561                           ;main.c: 33:     OSCCON = 0x72;
  2562   001F5A  0E72               	movlw	114
  2563   001F5C  6ED3               	movwf	211,c	;volatile
  2564                           
  2565                           ;main.c: 34:     ADCON1 = 0x0F;
  2566   001F5E  0E0F               	movlw	15
  2567   001F60  6EC1               	movwf	193,c	;volatile
  2568                           
  2569                           ;main.c: 35:     CMCON = 0x07;
  2570   001F62  0E07               	movlw	7
  2571   001F64  6EB4               	movwf	180,c	;volatile
  2572                           
  2573                           ;main.c: 36:     TRISB = 0b00001000;
  2574   001F66  0E08               	movlw	8
  2575   001F68  6E93               	movwf	147,c	;volatile
  2576   001F6A                     
  2577                           ;main.c: 39:     LCD_Init();
  2578   001F6A  EC4B  F012         	call	_LCD_Init	;wreg free
  2579   001F6E                     
  2580                           ;main.c: 40:     I2C_Master_Init(100000);
  2581   001F6E  0EA0               	movlw	160
  2582   001F70  6E0E               	movwf	I2C_Master_Init@c^0,c
  2583   001F72  0E86               	movlw	134
  2584   001F74  6E0F               	movwf	(I2C_Master_Init@c+1)^0,c
  2585   001F76  0E01               	movlw	1
  2586   001F78  6E10               	movwf	(I2C_Master_Init@c+2)^0,c
  2587   001F7A  0E00               	movlw	0
  2588   001F7C  6E11               	movwf	(I2C_Master_Init@c+3)^0,c
  2589   001F7E  ECAB  F010         	call	_I2C_Master_Init	;wreg free
  2590   001F82                     
  2591                           ;main.c: 41:     RTC_Init();
  2592   001F82  ECF0  F00C         	call	_RTC_Init	;wreg free
  2593   001F86                     
  2594                           ;main.c: 42:     GPS_Init();
  2595   001F86  EC95  F012         	call	_GPS_Init	;wreg free
  2596   001F8A                     
  2597                           ;main.c: 45:     LCD_Clear();
  2598   001F8A  ECD7  F012         	call	_LCD_Clear	;wreg free
  2599   001F8E                     
  2600                           ;main.c: 46:     LCD_String_xy(0,0,"Estacion Meteo");
  2601   001F8E  0E00               	movlw	0
  2602   001F90  6E05               	movwf	LCD_String_xy@pos^0,c
  2603   001F92  0E4E               	movlw	low STR_1
  2604   001F94  6E06               	movwf	LCD_String_xy@msg^0,c
  2605   001F96  5006               	movf	LCD_String_xy@msg^0,w,c
  2606   001F98  A4D8               	btfss	status,2,c
  2607   001F9A  0E08               	movlw	high __smallconst
  2608   001F9C  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2609   001F9E  0E00               	movlw	0
  2610   001FA0  EC7D  F010         	call	_LCD_String_xy
  2611   001FA4                     
  2612                           ;main.c: 47:     LCD_String_xy(1,0,"BT: Esperando...");
  2613   001FA4  0E00               	movlw	0
  2614   001FA6  6E05               	movwf	LCD_String_xy@pos^0,c
  2615   001FA8  0E2D               	movlw	low STR_2
  2616   001FAA  6E06               	movwf	LCD_String_xy@msg^0,c
  2617   001FAC  5006               	movf	LCD_String_xy@msg^0,w,c
  2618   001FAE  A4D8               	btfss	status,2,c
  2619   001FB0  0E08               	movlw	high __smallconst
  2620   001FB2  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2621   001FB4  0E01               	movlw	1
  2622   001FB6  EC7D  F010         	call	_LCD_String_xy
  2623   001FBA                     
  2624                           ;main.c: 48:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  2625   001FBA  0E15               	movlw	21
  2626   001FBC  6E17               	movwf	(??_Initialize_System+1)^0,c
  2627   001FBE  0E4B               	movlw	75
  2628   001FC0  6E16               	movwf	??_Initialize_System^0,c
  2629   001FC2  0EBE               	movlw	190
  2630   001FC4                     u3157:
  2631   001FC4  2EE8               	decfsz	wreg,f,c
  2632   001FC6  D7FE               	bra	u3157
  2633   001FC8  2E16               	decfsz	??_Initialize_System^0,f,c
  2634   001FCA  D7FC               	bra	u3157
  2635   001FCC  2E17               	decfsz	(??_Initialize_System+1)^0,f,c
  2636   001FCE  D7FA               	bra	u3157
  2637   001FD0  D000               	nop2	
  2638   001FD2  0012               	return		;funcret
  2639   001FD4                     __end_of_Initialize_System:
  2640                           	callstack 0
  2641                           
  2642 ;; *************** function _RTC_Init *****************
  2643 ;; Defined at:
  2644 ;;		line 14 in file "ds1307.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  sec             1   13[COMRAM] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2658 ;;      Params:         0       0       0       0       0       0       0       0       0
  2659 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2660 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2661 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2662 ;;Total ram usage:        3 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 4
  2665 ;; This function calls:
  2666 ;;		_I2C_Master_Read
  2667 ;;		_I2C_Master_RepeatedStart
  2668 ;;		_I2C_Master_Start
  2669 ;;		_I2C_Master_Stop
  2670 ;;		_I2C_Master_Write
  2671 ;;		_LCD_Clear
  2672 ;;		_LCD_String_xy
  2673 ;; This function is called by:
  2674 ;;		_Initialize_System
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678                           	psect	text3
  2679   0019E0                     __ptext3:
  2680                           	callstack 0
  2681   0019E0                     _RTC_Init:
  2682                           	callstack 25
  2683   0019E0                     
  2684                           ;ds1307.c: 15:     unsigned char sec;;ds1307.c: 17:     I2C_Master_Start();
  2685   0019E0  ECDF  F012         	call	_I2C_Master_Start	;wreg free
  2686                           
  2687                           ;ds1307.c: 18:     I2C_Master_Write(0b11010000);
  2688   0019E4  0E00               	movlw	0
  2689   0019E6  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2690   0019E8  0ED0               	movlw	208
  2691   0019EA  6E02               	movwf	I2C_Master_Write@d^0,c
  2692   0019EC  ECD0  F012         	call	_I2C_Master_Write	;wreg free
  2693                           
  2694                           ;ds1307.c: 19:     I2C_Master_Write(0x00);
  2695   0019F0  0E00               	movlw	0
  2696   0019F2  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2697   0019F4  0E00               	movlw	0
  2698   0019F6  6E02               	movwf	I2C_Master_Write@d^0,c
  2699   0019F8  ECD0  F012         	call	_I2C_Master_Write	;wreg free
  2700                           
  2701                           ;ds1307.c: 20:     I2C_Master_RepeatedStart();
  2702   0019FC  ECE3  F012         	call	_I2C_Master_RepeatedStart	;wreg free
  2703                           
  2704                           ;ds1307.c: 21:     I2C_Master_Write(0b11010000 | 1);
  2705   001A00  0E00               	movlw	0
  2706   001A02  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2707   001A04  0ED1               	movlw	209
  2708   001A06  6E02               	movwf	I2C_Master_Write@d^0,c
  2709   001A08  ECD0  F012         	call	_I2C_Master_Write	;wreg free
  2710                           
  2711                           ;ds1307.c: 22:     sec = I2C_Master_Read(0);
  2712   001A0C  0E00               	movlw	0
  2713   001A0E  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  2714   001A10  0E00               	movlw	0
  2715   001A12  6E02               	movwf	I2C_Master_Read@a^0,c
  2716   001A14  ECFC  F011         	call	_I2C_Master_Read	;wreg free
  2717   001A18  5002               	movf	?_I2C_Master_Read^0,w,c
  2718   001A1A  6E0E               	movwf	RTC_Init@sec^0,c
  2719                           
  2720                           ;ds1307.c: 23:     I2C_Master_Stop();
  2721   001A1C  ECDB  F012         	call	_I2C_Master_Stop	;wreg free
  2722   001A20                     
  2723                           ;ds1307.c: 25:     if (sec & 0x80) {
  2724   001A20  AE0E               	btfss	RTC_Init@sec^0,7,c
  2725   001A22  EF15  F00D         	goto	u2641
  2726   001A26  EF17  F00D         	goto	u2640
  2727   001A2A                     u2641:
  2728   001A2A  EF48  F00D         	goto	l292
  2729   001A2E                     u2640:
  2730   001A2E                     
  2731                           ;ds1307.c: 27:         LCD_Clear();
  2732   001A2E  ECD7  F012         	call	_LCD_Clear	;wreg free
  2733   001A32                     
  2734                           ;ds1307.c: 28:         LCD_String_xy(0, 0, "RTC detenido");
  2735   001A32  0E00               	movlw	0
  2736   001A34  6E05               	movwf	LCD_String_xy@pos^0,c
  2737   001A36  0E6C               	movlw	low STR_22
  2738   001A38  6E06               	movwf	LCD_String_xy@msg^0,c
  2739   001A3A  5006               	movf	LCD_String_xy@msg^0,w,c
  2740   001A3C  A4D8               	btfss	status,2,c
  2741   001A3E  0E08               	movlw	high __smallconst
  2742   001A40  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2743   001A42  0E00               	movlw	0
  2744   001A44  EC7D  F010         	call	_LCD_String_xy
  2745   001A48                     
  2746                           ;ds1307.c: 29:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  2747   001A48  0E0B               	movlw	11
  2748   001A4A  6E0D               	movwf	(??_RTC_Init+1)^0,c
  2749   001A4C  0E26               	movlw	38
  2750   001A4E  6E0C               	movwf	??_RTC_Init^0,c
  2751   001A50  0E5E               	movlw	94
  2752   001A52                     u3167:
  2753   001A52  2EE8               	decfsz	wreg,f,c
  2754   001A54  D7FE               	bra	u3167
  2755   001A56  2E0C               	decfsz	??_RTC_Init^0,f,c
  2756   001A58  D7FC               	bra	u3167
  2757   001A5A  2E0D               	decfsz	(??_RTC_Init+1)^0,f,c
  2758   001A5C  D7FA               	bra	u3167
  2759   001A5E                     
  2760                           ;ds1307.c: 31:         I2C_Master_Start();
  2761   001A5E  ECDF  F012         	call	_I2C_Master_Start	;wreg free
  2762   001A62                     
  2763                           ;ds1307.c: 32:         I2C_Master_Write(0b11010000);
  2764   001A62  0E00               	movlw	0
  2765   001A64  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2766   001A66  0ED0               	movlw	208
  2767   001A68  6E02               	movwf	I2C_Master_Write@d^0,c
  2768   001A6A  ECD0  F012         	call	_I2C_Master_Write	;wreg free
  2769   001A6E                     
  2770                           ;ds1307.c: 33:         I2C_Master_Write(0x00);
  2771   001A6E  0E00               	movlw	0
  2772   001A70  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2773   001A72  0E00               	movlw	0
  2774   001A74  6E02               	movwf	I2C_Master_Write@d^0,c
  2775   001A76  ECD0  F012         	call	_I2C_Master_Write	;wreg free
  2776   001A7A                     
  2777                           ;ds1307.c: 34:         I2C_Master_Write(sec & 0x7F);
  2778   001A7A  C00E  F00C         	movff	RTC_Init@sec,??_RTC_Init
  2779   001A7E  0E7F               	movlw	127
  2780   001A80  160C               	andwf	??_RTC_Init^0,f,c
  2781   001A82  500C               	movf	??_RTC_Init^0,w,c
  2782   001A84  6E02               	movwf	I2C_Master_Write@d^0,c
  2783   001A86  6A03               	clrf	(I2C_Master_Write@d+1)^0,c
  2784   001A88  ECD0  F012         	call	_I2C_Master_Write	;wreg free
  2785   001A8C                     
  2786                           ;ds1307.c: 35:         I2C_Master_Stop();
  2787   001A8C  ECDB  F012         	call	_I2C_Master_Stop	;wreg free
  2788   001A90                     l292:
  2789   001A90  0012               	return		;funcret
  2790   001A92                     __end_of_RTC_Init:
  2791                           	callstack 0
  2792                           
  2793 ;; *************** function _LCD_Init *****************
  2794 ;; Defined at:
  2795 ;;		line 3 in file "LCD.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;		None
  2798 ;; Auto vars:     Size  Location     Type
  2799 ;;		None
  2800 ;; Return value:  Size  Location     Type
  2801 ;;                  1    wreg      void 
  2802 ;; Registers used:
  2803 ;;		wreg, status,2, status,0, cstack
  2804 ;; Tracked objects:
  2805 ;;		On entry : 0/0
  2806 ;;		On exit  : 0/0
  2807 ;;		Unchanged: 0/0
  2808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2809 ;;      Params:         0       0       0       0       0       0       0       0       0
  2810 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2811 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2812 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2813 ;;Total ram usage:        1 bytes
  2814 ;; Hardware stack levels used: 1
  2815 ;; Hardware stack levels required when called: 2
  2816 ;; This function calls:
  2817 ;;		_LCD_Command
  2818 ;; This function is called by:
  2819 ;;		_Initialize_System
  2820 ;; This function uses a non-reentrant model
  2821 ;;
  2822                           
  2823                           	psect	text4
  2824   002496                     __ptext4:
  2825                           	callstack 0
  2826   002496                     _LCD_Init:
  2827                           	callstack 27
  2828   002496                     
  2829                           ;LCD.c: 4:     TRISD = 0;
  2830   002496  6A95               	clrf	149,c	;volatile
  2831   002498                     
  2832                           ;LCD.c: 5:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2833   002498  0E27               	movlw	39
  2834   00249A  6E03               	movwf	??_LCD_Init^0,c
  2835   00249C  0EF5               	movlw	245
  2836   00249E                     u3177:
  2837   00249E  2EE8               	decfsz	wreg,f,c
  2838   0024A0  D7FE               	bra	u3177
  2839   0024A2  2E03               	decfsz	??_LCD_Init^0,f,c
  2840   0024A4  D7FC               	bra	u3177
  2841   0024A6  0000               	nop	
  2842   0024A8                     
  2843                           ;LCD.c: 6:     LCD_Command(0x02);
  2844   0024A8  0E02               	movlw	2
  2845   0024AA  ECD7  F010         	call	_LCD_Command
  2846   0024AE                     
  2847                           ;LCD.c: 7:     LCD_Command(0x28);
  2848   0024AE  0E28               	movlw	40
  2849   0024B0  ECD7  F010         	call	_LCD_Command
  2850   0024B4                     
  2851                           ;LCD.c: 8:     LCD_Command(0x01);
  2852   0024B4  0E01               	movlw	1
  2853   0024B6  ECD7  F010         	call	_LCD_Command
  2854   0024BA                     
  2855                           ;LCD.c: 9:     LCD_Command(0x0C);
  2856   0024BA  0E0C               	movlw	12
  2857   0024BC  ECD7  F010         	call	_LCD_Command
  2858   0024C0                     
  2859                           ;LCD.c: 10:     LCD_Command(0x06);
  2860   0024C0  0E06               	movlw	6
  2861   0024C2  ECD7  F010         	call	_LCD_Command
  2862   0024C6  0012               	return		;funcret
  2863   0024C8                     __end_of_LCD_Init:
  2864                           	callstack 0
  2865                           
  2866 ;; *************** function _I2C_Master_Init *****************
  2867 ;; Defined at:
  2868 ;;		line 4 in file "i2c.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  c               4   13[COMRAM] const unsigned long 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;		None
  2873 ;; Return value:  Size  Location     Type
  2874 ;;                  1    wreg      void 
  2875 ;; Registers used:
  2876 ;;		wreg, status,2, status,0, cstack
  2877 ;; Tracked objects:
  2878 ;;		On entry : 0/0
  2879 ;;		On exit  : 0/0
  2880 ;;		Unchanged: 0/0
  2881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2882 ;;      Params:         4       0       0       0       0       0       0       0       0
  2883 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2884 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2885 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2886 ;;Total ram usage:        8 bytes
  2887 ;; Hardware stack levels used: 1
  2888 ;; Hardware stack levels required when called: 2
  2889 ;; This function calls:
  2890 ;;		___lldiv
  2891 ;; This function is called by:
  2892 ;;		_Initialize_System
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           	psect	text5
  2897   002156                     __ptext5:
  2898                           	callstack 0
  2899   002156                     _I2C_Master_Init:
  2900                           	callstack 27
  2901   002156                     
  2902                           ;i2c.c: 5:     TRISB0 = 1;
  2903   002156  8093               	bsf	3987,0,c	;volatile
  2904                           
  2905                           ;i2c.c: 6:     TRISB1 = 1;
  2906   002158  8293               	bsf	3987,1,c	;volatile
  2907   00215A                     
  2908                           ;i2c.c: 7:     SSPCON1 = 0b00101000;
  2909   00215A  0E28               	movlw	40
  2910   00215C  6EC6               	movwf	198,c	;volatile
  2911   00215E                     
  2912                           ;i2c.c: 8:     SSPCON2 = 0;
  2913   00215E  6AC5               	clrf	197,c	;volatile
  2914   002160                     
  2915                           ;i2c.c: 9:     SSPADD = (8000000 / (4 * c)) - 1;
  2916   002160  0E00               	movlw	0
  2917   002162  6E01               	movwf	___lldiv@dividend^0,c
  2918   002164  0E12               	movlw	18
  2919   002166  6E02               	movwf	(___lldiv@dividend+1)^0,c
  2920   002168  0E7A               	movlw	122
  2921   00216A  6E03               	movwf	(___lldiv@dividend+2)^0,c
  2922   00216C  0E00               	movlw	0
  2923   00216E  6E04               	movwf	(___lldiv@dividend+3)^0,c
  2924   002170  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  2925   002174  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  2926   002178  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  2927   00217C  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  2928   002180  0E02               	movlw	2
  2929   002182                     u2635:
  2930   002182  90D8               	bcf	status,0,c
  2931   002184  3612               	rlcf	??_I2C_Master_Init^0,f,c
  2932   002186  3613               	rlcf	(??_I2C_Master_Init+1)^0,f,c
  2933   002188  3614               	rlcf	(??_I2C_Master_Init+2)^0,f,c
  2934   00218A  3615               	rlcf	(??_I2C_Master_Init+3)^0,f,c
  2935   00218C  2EE8               	decfsz	wreg,f,c
  2936   00218E  EFC1  F010         	goto	u2635
  2937   002192  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  2938   002196  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2939   00219A  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2940   00219E  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2941   0021A2  ECF7  F00D         	call	___lldiv	;wreg free
  2942   0021A6  0401               	decf	?___lldiv^0,w,c
  2943   0021A8  6EC8               	movwf	200,c	;volatile
  2944   0021AA                     
  2945                           ;i2c.c: 10:     SSPSTAT = 0;
  2946   0021AA  6AC7               	clrf	199,c	;volatile
  2947   0021AC  0012               	return		;funcret
  2948   0021AE                     __end_of_I2C_Master_Init:
  2949                           	callstack 0
  2950                           
  2951 ;; *************** function ___lldiv *****************
  2952 ;; Defined at:
  2953 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;  dividend        4    0[COMRAM] unsigned long 
  2956 ;;  divisor         4    4[COMRAM] unsigned long 
  2957 ;; Auto vars:     Size  Location     Type
  2958 ;;  quotient        4    8[COMRAM] unsigned long 
  2959 ;;  counter         1   12[COMRAM] unsigned char 
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  4    0[COMRAM] unsigned long 
  2962 ;; Registers used:
  2963 ;;		wreg, status,2, status,0
  2964 ;; Tracked objects:
  2965 ;;		On entry : 0/0
  2966 ;;		On exit  : 0/0
  2967 ;;		Unchanged: 0/0
  2968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2969 ;;      Params:         8       0       0       0       0       0       0       0       0
  2970 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2972 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2973 ;;Total ram usage:       13 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 1
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_I2C_Master_Init
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text6
  2984   001BEE                     __ptext6:
  2985                           	callstack 0
  2986   001BEE                     ___lldiv:
  2987                           	callstack 27
  2988   001BEE  0E00               	movlw	0
  2989   001BF0  6E09               	movwf	___lldiv@quotient^0,c
  2990   001BF2  0E00               	movlw	0
  2991   001BF4  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  2992   001BF6  0E00               	movlw	0
  2993   001BF8  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  2994   001BFA  0E00               	movlw	0
  2995   001BFC  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  2996   001BFE  5005               	movf	___lldiv@divisor^0,w,c
  2997   001C00  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  2998   001C02  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  2999   001C04  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  3000   001C06  B4D8               	btfsc	status,2,c
  3001   001C08  EF08  F00E         	goto	u2591
  3002   001C0C  EF0A  F00E         	goto	u2590
  3003   001C10                     u2591:
  3004   001C10  EF40  F00E         	goto	l457
  3005   001C14                     u2590:
  3006   001C14  0E01               	movlw	1
  3007   001C16  6E0D               	movwf	___lldiv@counter^0,c
  3008   001C18  EF14  F00E         	goto	l2950
  3009   001C1C                     l2948:
  3010   001C1C  90D8               	bcf	status,0,c
  3011   001C1E  3605               	rlcf	___lldiv@divisor^0,f,c
  3012   001C20  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  3013   001C22  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  3014   001C24  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  3015   001C26  2A0D               	incf	___lldiv@counter^0,f,c
  3016   001C28                     l2950:
  3017   001C28  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  3018   001C2A  EF19  F00E         	goto	u2601
  3019   001C2E  EF1B  F00E         	goto	u2600
  3020   001C32                     u2601:
  3021   001C32  EF0E  F00E         	goto	l2948
  3022   001C36                     u2600:
  3023   001C36                     l2952:
  3024   001C36  90D8               	bcf	status,0,c
  3025   001C38  3609               	rlcf	___lldiv@quotient^0,f,c
  3026   001C3A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  3027   001C3C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  3028   001C3E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  3029   001C40  5005               	movf	___lldiv@divisor^0,w,c
  3030   001C42  5C01               	subwf	___lldiv@dividend^0,w,c
  3031   001C44  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3032   001C46  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  3033   001C48  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3034   001C4A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  3035   001C4C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3036   001C4E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  3037   001C50  A0D8               	btfss	status,0,c
  3038   001C52  EF2D  F00E         	goto	u2611
  3039   001C56  EF2F  F00E         	goto	u2610
  3040   001C5A                     u2611:
  3041   001C5A  EF38  F00E         	goto	l2960
  3042   001C5E                     u2610:
  3043   001C5E  5005               	movf	___lldiv@divisor^0,w,c
  3044   001C60  5E01               	subwf	___lldiv@dividend^0,f,c
  3045   001C62  5006               	movf	(___lldiv@divisor+1)^0,w,c
  3046   001C64  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  3047   001C66  5007               	movf	(___lldiv@divisor+2)^0,w,c
  3048   001C68  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  3049   001C6A  5008               	movf	(___lldiv@divisor+3)^0,w,c
  3050   001C6C  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  3051   001C6E  8009               	bsf	___lldiv@quotient^0,0,c
  3052   001C70                     l2960:
  3053   001C70  90D8               	bcf	status,0,c
  3054   001C72  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  3055   001C74  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  3056   001C76  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  3057   001C78  3205               	rrcf	___lldiv@divisor^0,f,c
  3058   001C7A  2E0D               	decfsz	___lldiv@counter^0,f,c
  3059   001C7C  EF1B  F00E         	goto	l2952
  3060   001C80                     l457:
  3061   001C80  C009  F001         	movff	___lldiv@quotient,?___lldiv
  3062   001C84  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  3063   001C88  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  3064   001C8C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  3065   001C90  0012               	return		;funcret
  3066   001C92                     __end_of___lldiv:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _GPS_Init *****************
  3070 ;; Defined at:
  3071 ;;		line 6 in file "GPS.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;  dummy           1    0[COMRAM] volatile unsigned char 
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  1    wreg      void 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0
  3086 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3088 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3089 ;;Total ram usage:        1 bytes
  3090 ;; Hardware stack levels used: 1
  3091 ;; Hardware stack levels required when called: 1
  3092 ;; This function calls:
  3093 ;;		Nothing
  3094 ;; This function is called by:
  3095 ;;		_Initialize_System
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text7
  3100   00252A                     __ptext7:
  3101                           	callstack 0
  3102   00252A                     _GPS_Init:
  3103                           	callstack 28
  3104   00252A                     
  3105                           ;GPS.c: 7:     TRISC7 = 1;
  3106   00252A  8E94               	bsf	3988,7,c	;volatile
  3107   00252C                     
  3108                           ;GPS.c: 10:     BAUDCON = 0x08;
  3109   00252C  0E08               	movlw	8
  3110   00252E  6EB8               	movwf	184,c	;volatile
  3111                           
  3112                           ;GPS.c: 11:     TXSTA = 0x24;
  3113   002530  0E24               	movlw	36
  3114   002532  6EAC               	movwf	172,c	;volatile
  3115                           
  3116                           ;GPS.c: 12:     RCSTA = 0x90;
  3117   002534  0E90               	movlw	144
  3118   002536  6EAB               	movwf	171,c	;volatile
  3119                           
  3120                           ;GPS.c: 13:     SPBRG = 207;
  3121   002538  0ECF               	movlw	207
  3122   00253A  6EAF               	movwf	175,c	;volatile
  3123                           
  3124                           ;GPS.c: 16:     while(PIR1bits.RCIF) {
  3125   00253C  EFA2  F012         	goto	l181
  3126   002540                     l182:
  3127                           
  3128                           ;GPS.c: 17:         volatile char dummy = RCREG;
  3129   002540  CFAE F001          	movff	4014,GPS_Init@dummy	;volatile
  3130   002544                     l181:
  3131                           
  3132                           ;GPS.c: 16:     while(PIR1bits.RCIF) {
  3133   002544  BA9E               	btfsc	158,5,c	;volatile
  3134   002546  EFA7  F012         	goto	u1021
  3135   00254A  EFA9  F012         	goto	u1020
  3136   00254E                     u1021:
  3137   00254E  EFA0  F012         	goto	l182
  3138   002552                     u1020:
  3139   002552                     
  3140                           ;GPS.c: 20:     PIR1bits.RCIF = 0;
  3141   002552  9A9E               	bcf	158,5,c	;volatile
  3142   002554  0012               	return		;funcret
  3143   002556                     __end_of_GPS_Init:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _Enter_Low_Power_Mode *****************
  3147 ;; Defined at:
  3148 ;;		line 73 in file "main.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;		None
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;		None
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0
  3163 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3165 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3166 ;;Total ram usage:        0 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 4
  3169 ;; This function calls:
  3170 ;;		_LCD_Clear
  3171 ;;		_LCD_String_xy
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;; This function uses a non-reentrant model
  3175 ;;
  3176                           
  3177                           	psect	text8
  3178   0024C8                     __ptext8:
  3179                           	callstack 0
  3180   0024C8                     _Enter_Low_Power_Mode:
  3181                           	callstack 26
  3182   0024C8                     
  3183                           ;main.c: 74:     LCD_Clear();
  3184   0024C8  ECD7  F012         	call	_LCD_Clear	;wreg free
  3185   0024CC                     
  3186                           ;main.c: 75:     LCD_String_xy(0,0,"Sistema OFF");
  3187   0024CC  0E00               	movlw	0
  3188   0024CE  6E05               	movwf	LCD_String_xy@pos^0,c
  3189   0024D0  0E9F               	movlw	low STR_3
  3190   0024D2  6E06               	movwf	LCD_String_xy@msg^0,c
  3191   0024D4  5006               	movf	LCD_String_xy@msg^0,w,c
  3192   0024D6  A4D8               	btfss	status,2,c
  3193   0024D8  0E08               	movlw	high __smallconst
  3194   0024DA  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3195   0024DC  0E00               	movlw	0
  3196   0024DE  EC7D  F010         	call	_LCD_String_xy
  3197   0024E2                     
  3198                           ;main.c: 76:     LCD_String_xy(1,0,"En espera...");
  3199   0024E2  0E00               	movlw	0
  3200   0024E4  6E05               	movwf	LCD_String_xy@pos^0,c
  3201   0024E6  0E79               	movlw	low STR_4
  3202   0024E8  6E06               	movwf	LCD_String_xy@msg^0,c
  3203   0024EA  5006               	movf	LCD_String_xy@msg^0,w,c
  3204   0024EC  A4D8               	btfss	status,2,c
  3205   0024EE  0E08               	movlw	high __smallconst
  3206   0024F0  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3207   0024F2  0E01               	movlw	1
  3208   0024F4  EC7D  F010         	call	_LCD_String_xy
  3209   0024F8  0012               	return		;funcret
  3210   0024FA                     __end_of_Enter_Low_Power_Mode:
  3211                           	callstack 0
  3212                           
  3213 ;; *************** function _LCD_Clear *****************
  3214 ;; Defined at:
  3215 ;;		line 64 in file "LCD.c"
  3216 ;; Parameters:    Size  Location     Type
  3217 ;;		None
  3218 ;; Auto vars:     Size  Location     Type
  3219 ;;		None
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  1    wreg      void 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0, cstack
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3229 ;;      Params:         0       0       0       0       0       0       0       0       0
  3230 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3231 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3232 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3233 ;;Total ram usage:        0 bytes
  3234 ;; Hardware stack levels used: 1
  3235 ;; Hardware stack levels required when called: 2
  3236 ;; This function calls:
  3237 ;;		_LCD_Command
  3238 ;; This function is called by:
  3239 ;;		_Initialize_System
  3240 ;;		_Enter_Low_Power_Mode
  3241 ;;		_RTC_Init
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text9
  3246   0025AE                     __ptext9:
  3247                           	callstack 0
  3248   0025AE                     _LCD_Clear:
  3249                           	callstack 26
  3250   0025AE                     
  3251                           ;LCD.c: 65:     LCD_Command(0x01);
  3252   0025AE  0E01               	movlw	1
  3253   0025B0  ECD7  F010         	call	_LCD_Command
  3254   0025B4  0012               	return		;funcret
  3255   0025B6                     __end_of_LCD_Clear:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _Display_RTC *****************
  3259 ;; Defined at:
  3260 ;;		line 127 in file "main.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;		None
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  refresh_coun    2   69[COMRAM] int 
  3265 ;;  year            1   76[COMRAM] unsigned char 
  3266 ;;  mon             1   75[COMRAM] unsigned char 
  3267 ;;  day             1   74[COMRAM] unsigned char 
  3268 ;;  s               1   73[COMRAM] unsigned char 
  3269 ;;  m               1   72[COMRAM] unsigned char 
  3270 ;;  h               1   71[COMRAM] unsigned char 
  3271 ;; Return value:  Size  Location     Type
  3272 ;;                  1    wreg      void 
  3273 ;; Registers used:
  3274 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3275 ;; Tracked objects:
  3276 ;;		On entry : 0/0
  3277 ;;		On exit  : 0/0
  3278 ;;		Unchanged: 0/0
  3279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3280 ;;      Params:         0       0       0       0       0       0       0       0       0
  3281 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3282 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3283 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3284 ;;Total ram usage:       10 bytes
  3285 ;; Hardware stack levels used: 1
  3286 ;; Hardware stack levels required when called: 9
  3287 ;; This function calls:
  3288 ;;		_Clear_Line
  3289 ;;		_LCD_String_xy
  3290 ;;		_RTC_GetDateTime
  3291 ;;		_sprintf
  3292 ;; This function is called by:
  3293 ;;		_main
  3294 ;; This function uses a non-reentrant model
  3295 ;;
  3296                           
  3297                           	psect	text10
  3298   00142C                     __ptext10:
  3299                           	callstack 0
  3300   00142C                     _Display_RTC:
  3301                           	callstack 21
  3302   00142C                     
  3303                           ;main.c: 128:     unsigned char h = 0, m = 0, s = 0, day = 0, mon = 0, year = 0;
  3304   00142C  6A48               	clrf	Display_RTC@h^0,c
  3305   00142E  6A49               	clrf	Display_RTC@m^0,c
  3306   001430  6A4A               	clrf	Display_RTC@s^0,c
  3307   001432  6A4B               	clrf	Display_RTC@day^0,c
  3308   001434  6A4C               	clrf	Display_RTC@mon^0,c
  3309   001436  6A4D               	clrf	Display_RTC@year^0,c
  3310   001438                     
  3311                           ;main.c: 129:     int refresh_count = 0;
  3312   001438  0E00               	movlw	0
  3313   00143A  6E47               	movwf	(Display_RTC@refresh_count+1)^0,c
  3314   00143C  0E00               	movlw	0
  3315   00143E  6E46               	movwf	Display_RTC@refresh_count^0,c
  3316                           
  3317                           ;main.c: 131:     while (refresh_count < 5 && system_state == 1) {
  3318   001440  EF81  F00A         	goto	l3308
  3319   001444                     l3286:
  3320                           
  3321                           ;main.c: 132:         RTC_GetDateTime(&h, &m, &s, &day, &mon, &year);
  3322   001444  0E48               	movlw	low Display_RTC@h
  3323   001446  6E06               	movwf	RTC_GetDateTime@hour^0,c
  3324   001448  0E49               	movlw	low Display_RTC@m
  3325   00144A  6E07               	movwf	RTC_GetDateTime@min^0,c
  3326   00144C  0E4A               	movlw	low Display_RTC@s
  3327   00144E  6E08               	movwf	RTC_GetDateTime@sec^0,c
  3328   001450  0E4B               	movlw	low Display_RTC@day
  3329   001452  6E09               	movwf	RTC_GetDateTime@day^0,c
  3330   001454  0E4C               	movlw	low Display_RTC@mon
  3331   001456  6E0A               	movwf	RTC_GetDateTime@month^0,c
  3332   001458  0E4D               	movlw	low Display_RTC@year
  3333   00145A  6E0B               	movwf	RTC_GetDateTime@year^0,c
  3334   00145C  EC98  F00A         	call	_RTC_GetDateTime	;wreg free
  3335   001460                     
  3336                           ;main.c: 134:         Clear_Line(0);
  3337   001460  0E00               	movlw	0
  3338   001462  EC7C  F011         	call	_Clear_Line
  3339   001466                     
  3340                           ;main.c: 135:         sprintf(lcd_buffer, "Fecha:%02d/%02d/20%02d", day, mon, year);
  3341   001466  0E96               	movlw	low _lcd_buffer
  3342   001468  6E2F               	movwf	sprintf@s^0,c
  3343   00146A  0E01               	movlw	high _lcd_buffer
  3344   00146C  6E30               	movwf	(sprintf@s+1)^0,c
  3345   00146E  0E01               	movlw	low STR_17
  3346   001470  6E31               	movwf	sprintf@fmt^0,c
  3347   001472  C04B  F032         	movff	Display_RTC@day,?_sprintf+3
  3348   001476  6A33               	clrf	(?_sprintf+4)^0,c
  3349   001478  C04C  F034         	movff	Display_RTC@mon,?_sprintf+5
  3350   00147C  6A35               	clrf	(?_sprintf+6)^0,c
  3351   00147E  C04D  F036         	movff	Display_RTC@year,?_sprintf+7
  3352   001482  6A37               	clrf	(?_sprintf+8)^0,c
  3353   001484  ECC0  F011         	call	_sprintf	;wreg free
  3354   001488                     
  3355                           ;main.c: 136:         LCD_String_xy(0, 0, lcd_buffer);
  3356   001488  0E00               	movlw	0
  3357   00148A  6E05               	movwf	LCD_String_xy@pos^0,c
  3358   00148C  0E96               	movlw	low _lcd_buffer
  3359   00148E  6E06               	movwf	LCD_String_xy@msg^0,c
  3360   001490  0E01               	movlw	high _lcd_buffer
  3361   001492  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3362   001494  0E00               	movlw	0
  3363   001496  EC7D  F010         	call	_LCD_String_xy
  3364   00149A                     
  3365                           ;main.c: 138:         Clear_Line(1);
  3366   00149A  0E01               	movlw	1
  3367   00149C  EC7C  F011         	call	_Clear_Line
  3368   0014A0                     
  3369                           ;main.c: 139:         sprintf(lcd_buffer, "Hora: %02d:%02d:%02d", h, m, s);
  3370   0014A0  0E96               	movlw	low _lcd_buffer
  3371   0014A2  6E2F               	movwf	sprintf@s^0,c
  3372   0014A4  0E01               	movlw	high _lcd_buffer
  3373   0014A6  6E30               	movwf	(sprintf@s+1)^0,c
  3374   0014A8  0E18               	movlw	low STR_18
  3375   0014AA  6E31               	movwf	sprintf@fmt^0,c
  3376   0014AC  C048  F032         	movff	Display_RTC@h,?_sprintf+3
  3377   0014B0  6A33               	clrf	(?_sprintf+4)^0,c
  3378   0014B2  C049  F034         	movff	Display_RTC@m,?_sprintf+5
  3379   0014B6  6A35               	clrf	(?_sprintf+6)^0,c
  3380   0014B8  C04A  F036         	movff	Display_RTC@s,?_sprintf+7
  3381   0014BC  6A37               	clrf	(?_sprintf+8)^0,c
  3382   0014BE  ECC0  F011         	call	_sprintf	;wreg free
  3383   0014C2                     
  3384                           ;main.c: 140:         LCD_String_xy(1, 0, lcd_buffer);
  3385   0014C2  0E00               	movlw	0
  3386   0014C4  6E05               	movwf	LCD_String_xy@pos^0,c
  3387   0014C6  0E96               	movlw	low _lcd_buffer
  3388   0014C8  6E06               	movwf	LCD_String_xy@msg^0,c
  3389   0014CA  0E01               	movlw	high _lcd_buffer
  3390   0014CC  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3391   0014CE  0E01               	movlw	1
  3392   0014D0  EC7D  F010         	call	_LCD_String_xy
  3393   0014D4                     
  3394                           ;main.c: 142:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3395   0014D4  0E0B               	movlw	11
  3396   0014D6  6E45               	movwf	(??_Display_RTC+1)^0,c
  3397   0014D8  0E26               	movlw	38
  3398   0014DA  6E44               	movwf	??_Display_RTC^0,c
  3399   0014DC  0E5E               	movlw	94
  3400   0014DE                     u3187:
  3401   0014DE  2EE8               	decfsz	wreg,f,c
  3402   0014E0  D7FE               	bra	u3187
  3403   0014E2  2E44               	decfsz	??_Display_RTC^0,f,c
  3404   0014E4  D7FC               	bra	u3187
  3405   0014E6  2E45               	decfsz	(??_Display_RTC+1)^0,f,c
  3406   0014E8  D7FA               	bra	u3187
  3407   0014EA                     
  3408                           ;main.c: 143:         refresh_count++;
  3409   0014EA  4A46               	infsnz	Display_RTC@refresh_count^0,f,c
  3410   0014EC  2A47               	incf	(Display_RTC@refresh_count+1)^0,f,c
  3411   0014EE                     
  3412                           ;main.c: 145:         if (system_needs_reset) break;
  3413   0014EE  5056               	movf	_system_needs_reset^0,w,c	;volatile
  3414   0014F0  B4D8               	btfsc	status,2,c
  3415   0014F2  EF7D  F00A         	goto	u3041
  3416   0014F6  EF7F  F00A         	goto	u3040
  3417   0014FA                     u3041:
  3418   0014FA  EF81  F00A         	goto	l3308
  3419   0014FE                     u3040:
  3420   0014FE  EF97  F00A         	goto	l105
  3421   001502                     l3308:
  3422                           
  3423                           ;main.c: 131:     while (refresh_count < 5 && system_state == 1) {
  3424   001502  BE47               	btfsc	(Display_RTC@refresh_count+1)^0,7,c
  3425   001504  EF8F  F00A         	goto	u3050
  3426   001508  5047               	movf	(Display_RTC@refresh_count+1)^0,w,c
  3427   00150A  E107               	bnz	u3051
  3428   00150C  0E05               	movlw	5
  3429   00150E  5C46               	subwf	Display_RTC@refresh_count^0,w,c
  3430   001510  B0D8               	btfsc	status,0,c
  3431   001512  EF8D  F00A         	goto	u3051
  3432   001516  EF8F  F00A         	goto	u3050
  3433   00151A                     u3051:
  3434   00151A  EF97  F00A         	goto	l105
  3435   00151E                     u3050:
  3436   00151E  0457               	decf	_system_state^0,w,c	;volatile
  3437   001520  B4D8               	btfsc	status,2,c
  3438   001522  EF95  F00A         	goto	u3061
  3439   001526  EF97  F00A         	goto	u3060
  3440   00152A                     u3061:
  3441   00152A  EF22  F00A         	goto	l3286
  3442   00152E                     u3060:
  3443   00152E                     l105:
  3444   00152E  0012               	return		;funcret
  3445   001530                     __end_of_Display_RTC:
  3446                           	callstack 0
  3447                           
  3448 ;; *************** function _RTC_GetDateTime *****************
  3449 ;; Defined at:
  3450 ;;		line 63 in file "ds1307.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  hour            1    5[COMRAM] PTR unsigned char 
  3453 ;;		 -> Display_RTC@h(1), 
  3454 ;;  min             1    6[COMRAM] PTR unsigned char 
  3455 ;;		 -> Display_RTC@m(1), 
  3456 ;;  sec             1    7[COMRAM] PTR unsigned char 
  3457 ;;		 -> Display_RTC@s(1), 
  3458 ;;  day             1    8[COMRAM] PTR unsigned char 
  3459 ;;		 -> Display_RTC@day(1), 
  3460 ;;  month           1    9[COMRAM] PTR unsigned char 
  3461 ;;		 -> Display_RTC@mon(1), 
  3462 ;;  year            1   10[COMRAM] PTR unsigned char 
  3463 ;;		 -> Display_RTC@year(1), 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;		None
  3466 ;; Return value:  Size  Location     Type
  3467 ;;                  1    wreg      void 
  3468 ;; Registers used:
  3469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3470 ;; Tracked objects:
  3471 ;;		On entry : 0/0
  3472 ;;		On exit  : 0/0
  3473 ;;		Unchanged: 0/0
  3474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3475 ;;      Params:         6       0       0       0       0       0       0       0       0
  3476 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3477 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3478 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3479 ;;Total ram usage:        6 bytes
  3480 ;; Hardware stack levels used: 1
  3481 ;; Hardware stack levels required when called: 3
  3482 ;; This function calls:
  3483 ;;		_BCD2DEC
  3484 ;;		_I2C_Master_Read
  3485 ;;		_I2C_Master_RepeatedStart
  3486 ;;		_I2C_Master_Start
  3487 ;;		_I2C_Master_Stop
  3488 ;;		_I2C_Master_Write
  3489 ;; This function is called by:
  3490 ;;		_Display_RTC
  3491 ;; This function uses a non-reentrant model
  3492 ;;
  3493                           
  3494                           	psect	text11
  3495   001530                     __ptext11:
  3496                           	callstack 0
  3497   001530                     _RTC_GetDateTime:
  3498                           	callstack 26
  3499   001530                     
  3500                           ;ds1307.c: 63: void RTC_GetDateTime(unsigned char *hour, unsigned char *min, unsigned ch
      +                          ar *sec,;ds1307.c: 64:                      unsigned char *day, unsigned char *month, un
      +                          signed char *year) {;ds1307.c: 65:     I2C_Master_Start();
  3501   001530  ECDF  F012         	call	_I2C_Master_Start	;wreg free
  3502                           
  3503                           ;ds1307.c: 66:     I2C_Master_Write(0b11010000);
  3504   001534  0E00               	movlw	0
  3505   001536  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  3506   001538  0ED0               	movlw	208
  3507   00153A  6E02               	movwf	I2C_Master_Write@d^0,c
  3508   00153C  ECD0  F012         	call	_I2C_Master_Write	;wreg free
  3509                           
  3510                           ;ds1307.c: 67:     I2C_Master_Write(0b00000000);
  3511   001540  0E00               	movlw	0
  3512   001542  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  3513   001544  0E00               	movlw	0
  3514   001546  6E02               	movwf	I2C_Master_Write@d^0,c
  3515   001548  ECD0  F012         	call	_I2C_Master_Write	;wreg free
  3516                           
  3517                           ;ds1307.c: 68:     I2C_Master_RepeatedStart();
  3518   00154C  ECE3  F012         	call	_I2C_Master_RepeatedStart	;wreg free
  3519                           
  3520                           ;ds1307.c: 69:     I2C_Master_Write(0b11010000 | 1);
  3521   001550  0E00               	movlw	0
  3522   001552  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  3523   001554  0ED1               	movlw	209
  3524   001556  6E02               	movwf	I2C_Master_Write@d^0,c
  3525   001558  ECD0  F012         	call	_I2C_Master_Write	;wreg free
  3526   00155C                     
  3527                           ;ds1307.c: 71:     *sec = BCD2DEC(I2C_Master_Read(1));
  3528   00155C  5008               	movf	RTC_GetDateTime@sec^0,w,c
  3529   00155E  6ED9               	movwf	fsr2l,c
  3530   001560  6ADA               	clrf	fsr2h,c
  3531   001562  0E00               	movlw	0
  3532   001564  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3533   001566  0E01               	movlw	1
  3534   001568  6E02               	movwf	I2C_Master_Read@a^0,c
  3535   00156A  ECFC  F011         	call	_I2C_Master_Read	;wreg free
  3536   00156E  5002               	movf	?_I2C_Master_Read^0,w,c
  3537   001570  ECBE  F012         	call	_BCD2DEC
  3538   001574  6EDF               	movwf	indf2,c
  3539   001576                     
  3540                           ;ds1307.c: 72:     *min = BCD2DEC(I2C_Master_Read(1));
  3541   001576  5007               	movf	RTC_GetDateTime@min^0,w,c
  3542   001578  6ED9               	movwf	fsr2l,c
  3543   00157A  6ADA               	clrf	fsr2h,c
  3544   00157C  0E00               	movlw	0
  3545   00157E  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3546   001580  0E01               	movlw	1
  3547   001582  6E02               	movwf	I2C_Master_Read@a^0,c
  3548   001584  ECFC  F011         	call	_I2C_Master_Read	;wreg free
  3549   001588  5002               	movf	?_I2C_Master_Read^0,w,c
  3550   00158A  ECBE  F012         	call	_BCD2DEC
  3551   00158E  6EDF               	movwf	indf2,c
  3552   001590                     
  3553                           ;ds1307.c: 73:     *hour = BCD2DEC(I2C_Master_Read(1));
  3554   001590  5006               	movf	RTC_GetDateTime@hour^0,w,c
  3555   001592  6ED9               	movwf	fsr2l,c
  3556   001594  6ADA               	clrf	fsr2h,c
  3557   001596  0E00               	movlw	0
  3558   001598  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3559   00159A  0E01               	movlw	1
  3560   00159C  6E02               	movwf	I2C_Master_Read@a^0,c
  3561   00159E  ECFC  F011         	call	_I2C_Master_Read	;wreg free
  3562   0015A2  5002               	movf	?_I2C_Master_Read^0,w,c
  3563   0015A4  ECBE  F012         	call	_BCD2DEC
  3564   0015A8  6EDF               	movwf	indf2,c
  3565   0015AA                     
  3566                           ;ds1307.c: 74:     I2C_Master_Read(1);
  3567   0015AA  0E00               	movlw	0
  3568   0015AC  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3569   0015AE  0E01               	movlw	1
  3570   0015B0  6E02               	movwf	I2C_Master_Read@a^0,c
  3571   0015B2  ECFC  F011         	call	_I2C_Master_Read	;wreg free
  3572                           
  3573                           ;ds1307.c: 75:     *day = BCD2DEC(I2C_Master_Read(1));
  3574   0015B6  5009               	movf	RTC_GetDateTime@day^0,w,c
  3575   0015B8  6ED9               	movwf	fsr2l,c
  3576   0015BA  6ADA               	clrf	fsr2h,c
  3577   0015BC  0E00               	movlw	0
  3578   0015BE  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3579   0015C0  0E01               	movlw	1
  3580   0015C2  6E02               	movwf	I2C_Master_Read@a^0,c
  3581   0015C4  ECFC  F011         	call	_I2C_Master_Read	;wreg free
  3582   0015C8  5002               	movf	?_I2C_Master_Read^0,w,c
  3583   0015CA  ECBE  F012         	call	_BCD2DEC
  3584   0015CE  6EDF               	movwf	indf2,c
  3585                           
  3586                           ;ds1307.c: 76:     *month = BCD2DEC(I2C_Master_Read(1));
  3587   0015D0  500A               	movf	RTC_GetDateTime@month^0,w,c
  3588   0015D2  6ED9               	movwf	fsr2l,c
  3589   0015D4  6ADA               	clrf	fsr2h,c
  3590   0015D6  0E00               	movlw	0
  3591   0015D8  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3592   0015DA  0E01               	movlw	1
  3593   0015DC  6E02               	movwf	I2C_Master_Read@a^0,c
  3594   0015DE  ECFC  F011         	call	_I2C_Master_Read	;wreg free
  3595   0015E2  5002               	movf	?_I2C_Master_Read^0,w,c
  3596   0015E4  ECBE  F012         	call	_BCD2DEC
  3597   0015E8  6EDF               	movwf	indf2,c
  3598                           
  3599                           ;ds1307.c: 77:     *year = BCD2DEC(I2C_Master_Read(0));
  3600   0015EA  500B               	movf	RTC_GetDateTime@year^0,w,c
  3601   0015EC  6ED9               	movwf	fsr2l,c
  3602   0015EE  6ADA               	clrf	fsr2h,c
  3603   0015F0  0E00               	movlw	0
  3604   0015F2  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3605   0015F4  0E00               	movlw	0
  3606   0015F6  6E02               	movwf	I2C_Master_Read@a^0,c
  3607   0015F8  ECFC  F011         	call	_I2C_Master_Read	;wreg free
  3608   0015FC  5002               	movf	?_I2C_Master_Read^0,w,c
  3609   0015FE  ECBE  F012         	call	_BCD2DEC
  3610   001602  6EDF               	movwf	indf2,c
  3611   001604                     
  3612                           ;ds1307.c: 78:     I2C_Master_Stop();
  3613   001604  ECDB  F012         	call	_I2C_Master_Stop	;wreg free
  3614   001608  0012               	return		;funcret
  3615   00160A                     __end_of_RTC_GetDateTime:
  3616                           	callstack 0
  3617                           
  3618 ;; *************** function _I2C_Master_Write *****************
  3619 ;; Defined at:
  3620 ;;		line 32 in file "i2c.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  d               2    1[COMRAM] unsigned int 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;		None
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      unsigned char 
  3627 ;; Registers used:
  3628 ;;		wreg, status,2, status,0, cstack
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3634 ;;      Params:         2       0       0       0       0       0       0       0       0
  3635 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3637 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3638 ;;Total ram usage:        2 bytes
  3639 ;; Hardware stack levels used: 1
  3640 ;; Hardware stack levels required when called: 2
  3641 ;; This function calls:
  3642 ;;		_I2C_Master_Wait
  3643 ;; This function is called by:
  3644 ;;		_RTC_Init
  3645 ;;		_RTC_GetDateTime
  3646 ;;		_RTC_SetDateTime
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           	psect	text12
  3651   0025A0                     __ptext12:
  3652                           	callstack 0
  3653   0025A0                     _I2C_Master_Write:
  3654                           	callstack 26
  3655   0025A0                     
  3656                           ;i2c.c: 33:     I2C_Master_Wait();
  3657   0025A0  ECAB  F012         	call	_I2C_Master_Wait	;wreg free
  3658   0025A4                     
  3659                           ;i2c.c: 34:     SSPBUF = d;
  3660   0025A4  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  3661                           
  3662                           ;i2c.c: 35:     I2C_Master_Wait();
  3663   0025A8  ECAB  F012         	call	_I2C_Master_Wait	;wreg free
  3664   0025AC  0012               	return		;funcret
  3665   0025AE                     __end_of_I2C_Master_Write:
  3666                           	callstack 0
  3667                           
  3668 ;; *************** function _I2C_Master_Stop *****************
  3669 ;; Defined at:
  3670 ;;		line 27 in file "i2c.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;		None
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;		None
  3675 ;; Return value:  Size  Location     Type
  3676 ;;                  1    wreg      void 
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3684 ;;      Params:         0       0       0       0       0       0       0       0       0
  3685 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3687 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3688 ;;Total ram usage:        0 bytes
  3689 ;; Hardware stack levels used: 1
  3690 ;; Hardware stack levels required when called: 2
  3691 ;; This function calls:
  3692 ;;		_I2C_Master_Wait
  3693 ;; This function is called by:
  3694 ;;		_RTC_Init
  3695 ;;		_RTC_GetDateTime
  3696 ;;		_RTC_SetDateTime
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text13
  3701   0025B6                     __ptext13:
  3702                           	callstack 0
  3703   0025B6                     _I2C_Master_Stop:
  3704                           	callstack 26
  3705   0025B6                     
  3706                           ;i2c.c: 28:     I2C_Master_Wait();
  3707   0025B6  ECAB  F012         	call	_I2C_Master_Wait	;wreg free
  3708   0025BA                     
  3709                           ;i2c.c: 29:     PEN = 1;
  3710   0025BA  84C5               	bsf	4037,2,c	;volatile
  3711   0025BC  0012               	return		;funcret
  3712   0025BE                     __end_of_I2C_Master_Stop:
  3713                           	callstack 0
  3714                           
  3715 ;; *************** function _I2C_Master_Start *****************
  3716 ;; Defined at:
  3717 ;;		line 17 in file "i2c.c"
  3718 ;; Parameters:    Size  Location     Type
  3719 ;;		None
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg, status,2, status,0, cstack
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3731 ;;      Params:         0       0       0       0       0       0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3734 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3735 ;;Total ram usage:        0 bytes
  3736 ;; Hardware stack levels used: 1
  3737 ;; Hardware stack levels required when called: 2
  3738 ;; This function calls:
  3739 ;;		_I2C_Master_Wait
  3740 ;; This function is called by:
  3741 ;;		_RTC_Init
  3742 ;;		_RTC_GetDateTime
  3743 ;;		_RTC_SetDateTime
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text14
  3748   0025BE                     __ptext14:
  3749                           	callstack 0
  3750   0025BE                     _I2C_Master_Start:
  3751                           	callstack 26
  3752   0025BE                     
  3753                           ;i2c.c: 18:     I2C_Master_Wait();
  3754   0025BE  ECAB  F012         	call	_I2C_Master_Wait	;wreg free
  3755   0025C2                     
  3756                           ;i2c.c: 19:     SEN = 1;
  3757   0025C2  80C5               	bsf	4037,0,c	;volatile
  3758   0025C4  0012               	return		;funcret
  3759   0025C6                     __end_of_I2C_Master_Start:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _I2C_Master_RepeatedStart *****************
  3763 ;; Defined at:
  3764 ;;		line 22 in file "i2c.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;		None
  3767 ;; Auto vars:     Size  Location     Type
  3768 ;;		None
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1    wreg      void 
  3771 ;; Registers used:
  3772 ;;		wreg, status,2, status,0, cstack
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3781 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3782 ;;Total ram usage:        0 bytes
  3783 ;; Hardware stack levels used: 1
  3784 ;; Hardware stack levels required when called: 2
  3785 ;; This function calls:
  3786 ;;		_I2C_Master_Wait
  3787 ;; This function is called by:
  3788 ;;		_RTC_Init
  3789 ;;		_RTC_GetDateTime
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           
  3793                           	psect	text15
  3794   0025C6                     __ptext15:
  3795                           	callstack 0
  3796   0025C6                     _I2C_Master_RepeatedStart:
  3797                           	callstack 26
  3798   0025C6                     
  3799                           ;i2c.c: 23:     I2C_Master_Wait();
  3800   0025C6  ECAB  F012         	call	_I2C_Master_Wait	;wreg free
  3801   0025CA                     
  3802                           ;i2c.c: 24:     RSEN = 1;
  3803   0025CA  82C5               	bsf	4037,1,c	;volatile
  3804   0025CC  0012               	return		;funcret
  3805   0025CE                     __end_of_I2C_Master_RepeatedStart:
  3806                           	callstack 0
  3807                           
  3808 ;; *************** function _I2C_Master_Read *****************
  3809 ;; Defined at:
  3810 ;;		line 39 in file "i2c.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  a               2    1[COMRAM] unsigned short 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  temp            2    3[COMRAM] unsigned short 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  2    1[COMRAM] unsigned short 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3824 ;;      Params:         2       0       0       0       0       0       0       0       0
  3825 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3826 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3827 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3828 ;;Total ram usage:        4 bytes
  3829 ;; Hardware stack levels used: 1
  3830 ;; Hardware stack levels required when called: 2
  3831 ;; This function calls:
  3832 ;;		_I2C_Master_Wait
  3833 ;; This function is called by:
  3834 ;;		_RTC_Init
  3835 ;;		_RTC_GetDateTime
  3836 ;; This function uses a non-reentrant model
  3837 ;;
  3838                           
  3839                           	psect	text16
  3840   0023F8                     __ptext16:
  3841                           	callstack 0
  3842   0023F8                     _I2C_Master_Read:
  3843                           	callstack 26
  3844   0023F8                     
  3845                           ;i2c.c: 40:     unsigned short temp;;i2c.c: 41:     I2C_Master_Wait();
  3846   0023F8  ECAB  F012         	call	_I2C_Master_Wait	;wreg free
  3847   0023FC                     
  3848                           ;i2c.c: 42:     RCEN = 1;
  3849   0023FC  86C5               	bsf	4037,3,c	;volatile
  3850                           
  3851                           ;i2c.c: 43:     I2C_Master_Wait();
  3852   0023FE  ECAB  F012         	call	_I2C_Master_Wait	;wreg free
  3853   002402                     
  3854                           ;i2c.c: 44:     temp = SSPBUF;
  3855   002402  CFC9 F004          	movff	4041,I2C_Master_Read@temp	;volatile
  3856   002406  6A05               	clrf	(I2C_Master_Read@temp+1)^0,c
  3857                           
  3858                           ;i2c.c: 45:     I2C_Master_Wait();
  3859   002408  ECAB  F012         	call	_I2C_Master_Wait	;wreg free
  3860   00240C                     
  3861                           ;i2c.c: 46:     ACKDT = (a)?0:1;
  3862   00240C  5002               	movf	I2C_Master_Read@a^0,w,c
  3863   00240E  1003               	iorwf	(I2C_Master_Read@a+1)^0,w,c
  3864   002410  B4D8               	btfsc	status,2,c
  3865   002412  EF0D  F012         	goto	u2571
  3866   002416  EF10  F012         	goto	u2570
  3867   00241A                     u2571:
  3868   00241A  8AC5               	bsf	4037,5,c	;volatile
  3869   00241C  EF11  F012         	goto	u2585
  3870   002420                     u2570:
  3871   002420  9AC5               	bcf	4037,5,c	;volatile
  3872   002422                     u2585:
  3873   002422                     
  3874                           ;i2c.c: 47:     ACKEN = 1;
  3875   002422  88C5               	bsf	4037,4,c	;volatile
  3876   002424                     
  3877                           ;i2c.c: 48:     return temp;
  3878   002424  C004  F002         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
  3879   002428  C005  F003         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
  3880   00242C  0012               	return		;funcret
  3881   00242E                     __end_of_I2C_Master_Read:
  3882                           	callstack 0
  3883                           
  3884 ;; *************** function _I2C_Master_Wait *****************
  3885 ;; Defined at:
  3886 ;;		line 13 in file "i2c.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;		None
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;		None
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      void 
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3900 ;;      Params:         0       0       0       0       0       0       0       0       0
  3901 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3902 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3903 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3904 ;;Total ram usage:        1 bytes
  3905 ;; Hardware stack levels used: 1
  3906 ;; Hardware stack levels required when called: 1
  3907 ;; This function calls:
  3908 ;;		Nothing
  3909 ;; This function is called by:
  3910 ;;		_I2C_Master_Start
  3911 ;;		_I2C_Master_RepeatedStart
  3912 ;;		_I2C_Master_Stop
  3913 ;;		_I2C_Master_Write
  3914 ;;		_I2C_Master_Read
  3915 ;; This function uses a non-reentrant model
  3916 ;;
  3917                           
  3918                           	psect	text17
  3919   002556                     __ptext17:
  3920                           	callstack 0
  3921   002556                     _I2C_Master_Wait:
  3922                           	callstack 26
  3923   002556                     l2668:
  3924   002556  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  3925   00255A  0E1F               	movlw	31
  3926   00255C  1601               	andwf	??_I2C_Master_Wait^0,f,c
  3927   00255E  A4D8               	btfss	status,2,c
  3928   002560  EFB4  F012         	goto	u2141
  3929   002564  EFB6  F012         	goto	u2140
  3930   002568                     u2141:
  3931   002568  EFAB  F012         	goto	l2668
  3932   00256C                     u2140:
  3933   00256C  B4C7               	btfsc	199,2,c	;volatile
  3934   00256E  EFBB  F012         	goto	u2151
  3935   002572  EFBD  F012         	goto	u2150
  3936   002576                     u2151:
  3937   002576  EFAB  F012         	goto	l2668
  3938   00257A                     u2150:
  3939   00257A  0012               	return		;funcret
  3940   00257C                     __end_of_I2C_Master_Wait:
  3941                           	callstack 0
  3942                           
  3943 ;; *************** function _BCD2DEC *****************
  3944 ;; Defined at:
  3945 ;;		line 6 in file "ds1307.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  val             1    wreg     unsigned char 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  val             1    1[COMRAM] unsigned char 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      unsigned char 
  3952 ;; Registers used:
  3953 ;;		wreg, status,2, status,0, prodl, prodh
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3959 ;;      Params:         0       0       0       0       0       0       0       0       0
  3960 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3961 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3962 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3963 ;;Total ram usage:        2 bytes
  3964 ;; Hardware stack levels used: 1
  3965 ;; Hardware stack levels required when called: 1
  3966 ;; This function calls:
  3967 ;;		Nothing
  3968 ;; This function is called by:
  3969 ;;		_RTC_GetDateTime
  3970 ;; This function uses a non-reentrant model
  3971 ;;
  3972                           
  3973                           	psect	text18
  3974   00257C                     __ptext18:
  3975                           	callstack 0
  3976   00257C                     _BCD2DEC:
  3977                           	callstack 27
  3978                           
  3979                           ;incstack = 0
  3980                           ;BCD2DEC@val stored from wreg
  3981   00257C  6E02               	movwf	BCD2DEC@val^0,c
  3982   00257E                     
  3983                           ;ds1307.c: 7:     return ((val >> 4) * 10) + (val & 0x0F);
  3984   00257E  C002  F001         	movff	BCD2DEC@val,??_BCD2DEC
  3985   002582  0E0F               	movlw	15
  3986   002584  1601               	andwf	??_BCD2DEC^0,f,c
  3987   002586  3802               	swapf	BCD2DEC@val^0,w,c
  3988   002588  0B0F               	andlw	15
  3989   00258A  0D0A               	mullw	10
  3990   00258C  50F3               	movf	243,w,c
  3991   00258E  2401               	addwf	??_BCD2DEC^0,w,c
  3992   002590  0012               	return		;funcret
  3993   002592                     __end_of_BCD2DEC:
  3994                           	callstack 0
  3995                           
  3996 ;; *************** function _Display_GPS *****************
  3997 ;; Defined at:
  3998 ;;		line 104 in file "main.c"
  3999 ;; Parameters:    Size  Location     Type
  4000 ;;		None
  4001 ;; Auto vars:     Size  Location     Type
  4002 ;;  buffer        100    0[BANK1 ] unsigned char [100]
  4003 ;;  lon            11  100[BANK1 ] unsigned char [11]
  4004 ;;  lat            10  111[BANK1 ] unsigned char [10]
  4005 ;;  ew              2  123[BANK1 ] unsigned char [2]
  4006 ;;  ns              2  121[BANK1 ] unsigned char [2]
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0
  4017 ;;      Locals:         0       0     125       0       0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4019 ;;      Totals:         0       0     125       0       0       0       0       0       0
  4020 ;;Total ram usage:      125 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 9
  4023 ;; This function calls:
  4024 ;;		_Clear_Line
  4025 ;;		_GPS_ParseGPRMC
  4026 ;;		_GPS_ReadSentence
  4027 ;;		_LCD_String_xy
  4028 ;;		_sprintf
  4029 ;;		_strstr
  4030 ;; This function is called by:
  4031 ;;		_main
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text19
  4036   000DA4                     __ptext19:
  4037                           	callstack 0
  4038   000DA4                     _Display_GPS:
  4039                           	callstack 21
  4040   000DA4                     
  4041                           ;main.c: 105:     char buffer[100] = {0};
  4042   000DA4  EE21  F000         	lfsr	2,Display_GPS@buffer
  4043   000DA8  0E63               	movlw	99
  4044   000DAA                     u2981:
  4045   000DAA  6ADE               	clrf	postinc2,c
  4046   000DAC  06E8               	decf	wreg,f,c
  4047   000DAE  E2FD               	bc	u2981
  4048                           
  4049                           ;main.c: 106:     char lat[10] = {0}, ns[2] = {0}, lon[11] = {0}, ew[2] = {0};
  4050   000DB0  EE21  F06F         	lfsr	2,Display_GPS@lat
  4051   000DB4  0E09               	movlw	9
  4052   000DB6                     u2991:
  4053   000DB6  6ADE               	clrf	postinc2,c
  4054   000DB8  06E8               	decf	wreg,f,c
  4055   000DBA  E2FD               	bc	u2991
  4056   000DBC  0E00               	movlw	0
  4057   000DBE  0101               	movlb	1	; () banked
  4058   000DC0  6F7A               	movwf	(Display_GPS@ns+1)& (0+255),b
  4059   000DC2  0E00               	movlw	0
  4060   000DC4  6F79               	movwf	Display_GPS@ns& (0+255),b
  4061   000DC6                     
  4062                           ; BSR set to: 1
  4063   000DC6  EE21  F064         	lfsr	2,Display_GPS@lon
  4064   000DCA  0E0A               	movlw	10
  4065   000DCC                     u3001:
  4066   000DCC  6ADE               	clrf	postinc2,c
  4067   000DCE  06E8               	decf	wreg,f,c
  4068   000DD0  E2FD               	bc	u3001
  4069   000DD2  0E00               	movlw	0
  4070   000DD4  6F7C               	movwf	(Display_GPS@ew+1)& (0+255),b
  4071   000DD6  0E00               	movlw	0
  4072   000DD8  6F7B               	movwf	Display_GPS@ew& (0+255),b
  4073   000DDA                     
  4074                           ; BSR set to: 1
  4075                           ;main.c: 108:     Clear_Line(0);
  4076   000DDA  0E00               	movlw	0
  4077   000DDC  EC7C  F011         	call	_Clear_Line
  4078   000DE0                     
  4079                           ;main.c: 109:     Clear_Line(1);
  4080   000DE0  0E01               	movlw	1
  4081   000DE2  EC7C  F011         	call	_Clear_Line
  4082   000DE6                     
  4083                           ;main.c: 111:     if(GPS_ReadSentence(buffer, sizeof(buffer), 500)) {
  4084   000DE6  0E00               	movlw	low Display_GPS@buffer
  4085   000DE8  6E01               	movwf	GPS_ReadSentence@buffer^0,c
  4086   000DEA  0E01               	movlw	high Display_GPS@buffer
  4087   000DEC  6E02               	movwf	(GPS_ReadSentence@buffer+1)^0,c
  4088   000DEE  0E00               	movlw	0
  4089   000DF0  6E04               	movwf	(GPS_ReadSentence@max_len+1)^0,c
  4090   000DF2  0E64               	movlw	100
  4091   000DF4  6E03               	movwf	GPS_ReadSentence@max_len^0,c
  4092   000DF6  0E01               	movlw	1
  4093   000DF8  6E06               	movwf	(GPS_ReadSentence@timeout_ms+1)^0,c
  4094   000DFA  0EF4               	movlw	244
  4095   000DFC  6E05               	movwf	GPS_ReadSentence@timeout_ms^0,c
  4096   000DFE  ECFC  F008         	call	_GPS_ReadSentence	;wreg free
  4097   000E02  0900               	iorlw	0
  4098   000E04  B4D8               	btfsc	status,2,c
  4099   000E06  EF07  F007         	goto	u3011
  4100   000E0A  EF09  F007         	goto	u3010
  4101   000E0E                     u3011:
  4102   000E0E  EF84  F007         	goto	l3280
  4103   000E12                     u3010:
  4104   000E12                     
  4105                           ;main.c: 112:         if(strstr(buffer, "$GPRMC") && GPS_ParseGPRMC(buffer, lat, ns, lon
      +                          , ew)) {
  4106   000E12  0E00               	movlw	low Display_GPS@buffer
  4107   000E14  6E07               	movwf	strstr@h^0,c
  4108   000E16  0E01               	movlw	high Display_GPS@buffer
  4109   000E18  6E08               	movwf	(strstr@h+1)^0,c
  4110   000E1A  0EDF               	movlw	low STR_9
  4111   000E1C  6E09               	movwf	strstr@n^0,c
  4112   000E1E  EC05  F00B         	call	_strstr	;wreg free
  4113   000E22  5007               	movf	?_strstr^0,w,c
  4114   000E24  1008               	iorwf	(?_strstr+1)^0,w,c
  4115   000E26  B4D8               	btfsc	status,2,c
  4116   000E28  EF18  F007         	goto	u3021
  4117   000E2C  EF1A  F007         	goto	u3020
  4118   000E30                     u3021:
  4119   000E30  EF6C  F007         	goto	l3278
  4120   000E34                     u3020:
  4121   000E34  0E00               	movlw	low Display_GPS@buffer
  4122   000E36  6E0E               	movwf	GPS_ParseGPRMC@msg^0,c
  4123   000E38  0E01               	movlw	high Display_GPS@buffer
  4124   000E3A  6E0F               	movwf	(GPS_ParseGPRMC@msg+1)^0,c
  4125   000E3C  0E6F               	movlw	low Display_GPS@lat
  4126   000E3E  6E10               	movwf	GPS_ParseGPRMC@lat^0,c
  4127   000E40  0E01               	movlw	high Display_GPS@lat
  4128   000E42  6E11               	movwf	(GPS_ParseGPRMC@lat+1)^0,c
  4129   000E44  0E79               	movlw	low Display_GPS@ns
  4130   000E46  6E12               	movwf	GPS_ParseGPRMC@ns^0,c
  4131   000E48  0E01               	movlw	high Display_GPS@ns
  4132   000E4A  6E13               	movwf	(GPS_ParseGPRMC@ns+1)^0,c
  4133   000E4C  0E64               	movlw	low Display_GPS@lon
  4134   000E4E  6E14               	movwf	GPS_ParseGPRMC@lon^0,c
  4135   000E50  0E01               	movlw	high Display_GPS@lon
  4136   000E52  6E15               	movwf	(GPS_ParseGPRMC@lon+1)^0,c
  4137   000E54  0E7B               	movlw	low Display_GPS@ew
  4138   000E56  6E16               	movwf	GPS_ParseGPRMC@ew^0,c
  4139   000E58  0E01               	movlw	high Display_GPS@ew
  4140   000E5A  6E17               	movwf	(GPS_ParseGPRMC@ew+1)^0,c
  4141   000E5C  ECB8  F005         	call	_GPS_ParseGPRMC	;wreg free
  4142   000E60  0900               	iorlw	0
  4143   000E62  B4D8               	btfsc	status,2,c
  4144   000E64  EF36  F007         	goto	u3031
  4145   000E68  EF38  F007         	goto	u3030
  4146   000E6C                     u3031:
  4147   000E6C  EF6C  F007         	goto	l3278
  4148   000E70                     u3030:
  4149   000E70                     
  4150                           ;main.c: 113:             sprintf(lcd_buffer, "Lat:%s%s", lat, ns);
  4151   000E70  0E96               	movlw	low _lcd_buffer
  4152   000E72  6E2F               	movwf	sprintf@s^0,c
  4153   000E74  0E01               	movlw	high _lcd_buffer
  4154   000E76  6E30               	movwf	(sprintf@s+1)^0,c
  4155   000E78  0EBF               	movlw	low STR_11
  4156   000E7A  6E31               	movwf	sprintf@fmt^0,c
  4157   000E7C  0E6F               	movlw	low Display_GPS@lat
  4158   000E7E  6E32               	movwf	(?_sprintf+3)^0,c
  4159   000E80  0E01               	movlw	high Display_GPS@lat
  4160   000E82  6E33               	movwf	(?_sprintf+4)^0,c
  4161   000E84  0E79               	movlw	low Display_GPS@ns
  4162   000E86  6E34               	movwf	(?_sprintf+5)^0,c
  4163   000E88  0E01               	movlw	high Display_GPS@ns
  4164   000E8A  6E35               	movwf	(?_sprintf+6)^0,c
  4165   000E8C  ECC0  F011         	call	_sprintf	;wreg free
  4166   000E90                     
  4167                           ;main.c: 114:             LCD_String_xy(0, 0, lcd_buffer);
  4168   000E90  0E00               	movlw	0
  4169   000E92  6E05               	movwf	LCD_String_xy@pos^0,c
  4170   000E94  0E96               	movlw	low _lcd_buffer
  4171   000E96  6E06               	movwf	LCD_String_xy@msg^0,c
  4172   000E98  0E01               	movlw	high _lcd_buffer
  4173   000E9A  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  4174   000E9C  0E00               	movlw	0
  4175   000E9E  EC7D  F010         	call	_LCD_String_xy
  4176   000EA2                     
  4177                           ;main.c: 115:             sprintf(lcd_buffer, "Lon:%s%s", lon, ew);
  4178   000EA2  0E96               	movlw	low _lcd_buffer
  4179   000EA4  6E2F               	movwf	sprintf@s^0,c
  4180   000EA6  0E01               	movlw	high _lcd_buffer
  4181   000EA8  6E30               	movwf	(sprintf@s+1)^0,c
  4182   000EAA  0EB6               	movlw	low STR_12
  4183   000EAC  6E31               	movwf	sprintf@fmt^0,c
  4184   000EAE  0E64               	movlw	low Display_GPS@lon
  4185   000EB0  6E32               	movwf	(?_sprintf+3)^0,c
  4186   000EB2  0E01               	movlw	high Display_GPS@lon
  4187   000EB4  6E33               	movwf	(?_sprintf+4)^0,c
  4188   000EB6  0E7B               	movlw	low Display_GPS@ew
  4189   000EB8  6E34               	movwf	(?_sprintf+5)^0,c
  4190   000EBA  0E01               	movlw	high Display_GPS@ew
  4191   000EBC  6E35               	movwf	(?_sprintf+6)^0,c
  4192   000EBE  ECC0  F011         	call	_sprintf	;wreg free
  4193                           
  4194                           ;main.c: 116:             LCD_String_xy(1, 0, lcd_buffer);
  4195   000EC2  0E00               	movlw	0
  4196   000EC4  6E05               	movwf	LCD_String_xy@pos^0,c
  4197   000EC6  0E96               	movlw	low _lcd_buffer
  4198   000EC8  6E06               	movwf	LCD_String_xy@msg^0,c
  4199   000ECA  0E01               	movlw	high _lcd_buffer
  4200   000ECC  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  4201   000ECE  0E01               	movlw	1
  4202   000ED0  EC7D  F010         	call	_LCD_String_xy
  4203                           
  4204                           ;main.c: 117:         } else {
  4205   000ED4  EF9A  F007         	goto	l96
  4206   000ED8                     l3278:
  4207                           
  4208                           ;main.c: 118:             LCD_String_xy(0, 0, "GPS: Sin datos");
  4209   000ED8  0E00               	movlw	0
  4210   000EDA  6E05               	movwf	LCD_String_xy@pos^0,c
  4211   000EDC  0E5D               	movlw	low STR_13
  4212   000EDE  6E06               	movwf	LCD_String_xy@msg^0,c
  4213   000EE0  5006               	movf	LCD_String_xy@msg^0,w,c
  4214   000EE2  A4D8               	btfss	status,2,c
  4215   000EE4  0E08               	movlw	high __smallconst
  4216   000EE6  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  4217   000EE8  0E00               	movlw	0
  4218   000EEA  EC7D  F010         	call	_LCD_String_xy
  4219                           
  4220                           ;main.c: 119:             LCD_String_xy(1, 0, "Buscando...");
  4221   000EEE  0E00               	movlw	0
  4222   000EF0  6E05               	movwf	LCD_String_xy@pos^0,c
  4223   000EF2  0E93               	movlw	low STR_14
  4224   000EF4  6E06               	movwf	LCD_String_xy@msg^0,c
  4225   000EF6  5006               	movf	LCD_String_xy@msg^0,w,c
  4226   000EF8  A4D8               	btfss	status,2,c
  4227   000EFA  0E08               	movlw	high __smallconst
  4228   000EFC  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  4229   000EFE  0E01               	movlw	1
  4230   000F00  EC7D  F010         	call	_LCD_String_xy
  4231   000F04  EF9A  F007         	goto	l96
  4232   000F08                     l3280:
  4233                           
  4234                           ;main.c: 122:         LCD_String_xy(0, 0, "GPS: Error");
  4235   000F08  0E00               	movlw	0
  4236   000F0A  6E05               	movwf	LCD_String_xy@pos^0,c
  4237   000F0C  0EAB               	movlw	low STR_15
  4238   000F0E  6E06               	movwf	LCD_String_xy@msg^0,c
  4239   000F10  5006               	movf	LCD_String_xy@msg^0,w,c
  4240   000F12  A4D8               	btfss	status,2,c
  4241   000F14  0E08               	movlw	high __smallconst
  4242   000F16  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  4243   000F18  0E00               	movlw	0
  4244   000F1A  EC7D  F010         	call	_LCD_String_xy
  4245                           
  4246                           ;main.c: 123:         LCD_String_xy(1, 0, "Reintentando...");
  4247   000F1E  0E00               	movlw	0
  4248   000F20  6E05               	movwf	LCD_String_xy@pos^0,c
  4249   000F22  0E3E               	movlw	low STR_8
  4250   000F24  6E06               	movwf	LCD_String_xy@msg^0,c
  4251   000F26  5006               	movf	LCD_String_xy@msg^0,w,c
  4252   000F28  A4D8               	btfss	status,2,c
  4253   000F2A  0E08               	movlw	high __smallconst
  4254   000F2C  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  4255   000F2E  0E01               	movlw	1
  4256   000F30  EC7D  F010         	call	_LCD_String_xy
  4257   000F34                     l96:
  4258   000F34  0012               	return		;funcret
  4259   000F36                     __end_of_Display_GPS:
  4260                           	callstack 0
  4261                           
  4262 ;; *************** function _GPS_ReadSentence *****************
  4263 ;; Defined at:
  4264 ;;		line 24 in file "GPS.c"
  4265 ;; Parameters:    Size  Location     Type
  4266 ;;  buffer          2    0[COMRAM] PTR unsigned char 
  4267 ;;		 -> Display_GPS@buffer(100), 
  4268 ;;  max_len         2    2[COMRAM] unsigned short 
  4269 ;;  timeout_ms      2    4[COMRAM] unsigned short 
  4270 ;; Auto vars:     Size  Location     Type
  4271 ;;  t               2    8[COMRAM] unsigned short 
  4272 ;;  dummy           1   10[COMRAM] volatile unsigned char 
  4273 ;;  i               2   12[COMRAM] unsigned short 
  4274 ;;  c               1   14[COMRAM] unsigned char 
  4275 ;;  started         1   11[COMRAM] unsigned char 
  4276 ;; Return value:  Size  Location     Type
  4277 ;;                  1    wreg      unsigned char 
  4278 ;; Registers used:
  4279 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4280 ;; Tracked objects:
  4281 ;;		On entry : 0/0
  4282 ;;		On exit  : 0/0
  4283 ;;		Unchanged: 0/0
  4284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4285 ;;      Params:         6       0       0       0       0       0       0       0       0
  4286 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4287 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4288 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4289 ;;Total ram usage:       15 bytes
  4290 ;; Hardware stack levels used: 1
  4291 ;; Hardware stack levels required when called: 1
  4292 ;; This function calls:
  4293 ;;		Nothing
  4294 ;; This function is called by:
  4295 ;;		_Display_GPS
  4296 ;; This function uses a non-reentrant model
  4297 ;;
  4298                           
  4299                           	psect	text20
  4300   0011F8                     __ptext20:
  4301                           	callstack 0
  4302   0011F8                     _GPS_ReadSentence:
  4303                           	callstack 28
  4304   0011F8                     
  4305                           ;GPS.c: 25:     uint16_t i = 0;
  4306   0011F8  0E00               	movlw	0
  4307   0011FA  6E0E               	movwf	(GPS_ReadSentence@i+1)^0,c
  4308   0011FC  0E00               	movlw	0
  4309   0011FE  6E0D               	movwf	GPS_ReadSentence@i^0,c
  4310   001200                     
  4311                           ;GPS.c: 26:     char c;;GPS.c: 27:     uint8_t started = 0;
  4312   001200  6A0C               	clrf	GPS_ReadSentence@started^0,c
  4313   001202                     
  4314                           ;GPS.c: 30:     RCSTAbits.CREN = 0;
  4315   001202  98AB               	bcf	171,4,c	;volatile
  4316   001204                     
  4317                           ;GPS.c: 31:     __nop();
  4318   001204  0000               	nop	
  4319   001206                     
  4320                           ;GPS.c: 32:     RCSTAbits.CREN = 1;
  4321   001206  88AB               	bsf	171,4,c	;volatile
  4322                           
  4323                           ;GPS.c: 35:     while(PIR1bits.RCIF) {
  4324   001208  EF08  F009         	goto	l187
  4325   00120C                     l188:
  4326                           
  4327                           ;GPS.c: 36:         volatile char dummy = RCREG;
  4328   00120C  CFAE F00B          	movff	4014,GPS_ReadSentence@dummy	;volatile
  4329   001210                     l187:
  4330                           
  4331                           ;GPS.c: 35:     while(PIR1bits.RCIF) {
  4332   001210  BA9E               	btfsc	158,5,c	;volatile
  4333   001212  EF0D  F009         	goto	u2721
  4334   001216  EF0F  F009         	goto	u2720
  4335   00121A                     u2721:
  4336   00121A  EF06  F009         	goto	l188
  4337   00121E                     u2720:
  4338   00121E                     
  4339                           ;GPS.c: 41:     for(uint16_t t = 0; t < timeout_ms; t++) {
  4340   00121E  0E00               	movlw	0
  4341   001220  6E0A               	movwf	(GPS_ReadSentence@t+1)^0,c
  4342   001222  0E00               	movlw	0
  4343   001224  6E09               	movwf	GPS_ReadSentence@t^0,c
  4344   001226  EF85  F009         	goto	l3132
  4345   00122A                     l191:
  4346                           
  4347                           ;GPS.c: 42:         if(PIR1bits.RCIF) {
  4348   00122A  AA9E               	btfss	158,5,c	;volatile
  4349   00122C  EF1A  F009         	goto	u2731
  4350   001230  EF1C  F009         	goto	u2730
  4351   001234                     u2731:
  4352   001234  EF7F  F009         	goto	l3128
  4353   001238                     u2730:
  4354   001238                     
  4355                           ;GPS.c: 43:             c = RCREG;
  4356   001238  CFAE F00F          	movff	4014,GPS_ReadSentence@c	;volatile
  4357                           
  4358                           ;GPS.c: 46:             if(RCSTAbits.OERR) {
  4359   00123C  A2AB               	btfss	171,1,c	;volatile
  4360   00123E  EF23  F009         	goto	u2741
  4361   001242  EF25  F009         	goto	u2740
  4362   001246                     u2741:
  4363   001246  EF29  F009         	goto	l3100
  4364   00124A                     u2740:
  4365   00124A                     
  4366                           ;GPS.c: 47:                 RCSTAbits.CREN = 0;
  4367   00124A  98AB               	bcf	171,4,c	;volatile
  4368                           
  4369                           ;GPS.c: 48:                 RCSTAbits.CREN = 1;
  4370   00124C  88AB               	bsf	171,4,c	;volatile
  4371                           
  4372                           ;GPS.c: 49:                 continue;
  4373   00124E  EF83  F009         	goto	l3130
  4374   001252                     l3100:
  4375                           
  4376                           ;GPS.c: 53:             if(!started && c == '$') {
  4377   001252  500C               	movf	GPS_ReadSentence@started^0,w,c
  4378   001254  A4D8               	btfss	status,2,c
  4379   001256  EF2F  F009         	goto	u2751
  4380   00125A  EF31  F009         	goto	u2750
  4381   00125E                     u2751:
  4382   00125E  EF48  F009         	goto	l3110
  4383   001262                     u2750:
  4384   001262  0E24               	movlw	36
  4385   001264  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  4386   001266  A4D8               	btfss	status,2,c
  4387   001268  EF38  F009         	goto	u2761
  4388   00126C  EF3A  F009         	goto	u2760
  4389   001270                     u2761:
  4390   001270  EF48  F009         	goto	l3110
  4391   001274                     u2760:
  4392   001274                     
  4393                           ;GPS.c: 54:                 started = 1;
  4394   001274  0E01               	movlw	1
  4395   001276  6E0C               	movwf	GPS_ReadSentence@started^0,c
  4396   001278                     l3106:
  4397                           
  4398                           ;GPS.c: 55:                 buffer[i++] = c;
  4399   001278  500D               	movf	GPS_ReadSentence@i^0,w,c
  4400   00127A  2401               	addwf	GPS_ReadSentence@buffer^0,w,c
  4401   00127C  6ED9               	movwf	fsr2l,c
  4402   00127E  500E               	movf	(GPS_ReadSentence@i+1)^0,w,c
  4403   001280  2002               	addwfc	(GPS_ReadSentence@buffer+1)^0,w,c
  4404   001282  6EDA               	movwf	fsr2h,c
  4405   001284  C00F  FFDF         	movff	GPS_ReadSentence@c,indf2
  4406   001288  4A0D               	infsnz	GPS_ReadSentence@i^0,f,c
  4407   00128A  2A0E               	incf	(GPS_ReadSentence@i+1)^0,f,c
  4408                           
  4409                           ;GPS.c: 56:             }
  4410   00128C  EF7F  F009         	goto	l3128
  4411   001290                     l3110:
  4412   001290  500C               	movf	GPS_ReadSentence@started^0,w,c
  4413   001292  B4D8               	btfsc	status,2,c
  4414   001294  EF4E  F009         	goto	u2771
  4415   001298  EF50  F009         	goto	u2770
  4416   00129C                     u2771:
  4417   00129C  EF7F  F009         	goto	l3128
  4418   0012A0                     u2770:
  4419   0012A0                     
  4420                           ;GPS.c: 59:                 if(c == '\n' || i >= max_len-1) {
  4421   0012A0  0E0A               	movlw	10
  4422   0012A2  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  4423   0012A4  B4D8               	btfsc	status,2,c
  4424   0012A6  EF57  F009         	goto	u2781
  4425   0012AA  EF59  F009         	goto	u2780
  4426   0012AE                     u2781:
  4427   0012AE  EF6A  F009         	goto	l3116
  4428   0012B2                     u2780:
  4429   0012B2  0EFF               	movlw	255
  4430   0012B4  2403               	addwf	GPS_ReadSentence@max_len^0,w,c
  4431   0012B6  6E07               	movwf	??_GPS_ReadSentence^0,c
  4432   0012B8  0EFF               	movlw	255
  4433   0012BA  2004               	addwfc	(GPS_ReadSentence@max_len+1)^0,w,c
  4434   0012BC  6E08               	movwf	(??_GPS_ReadSentence+1)^0,c
  4435   0012BE  5007               	movf	??_GPS_ReadSentence^0,w,c
  4436   0012C0  5C0D               	subwf	GPS_ReadSentence@i^0,w,c
  4437   0012C2  5008               	movf	(??_GPS_ReadSentence+1)^0,w,c
  4438   0012C4  580E               	subwfb	(GPS_ReadSentence@i+1)^0,w,c
  4439   0012C6  A0D8               	btfss	status,0,c
  4440   0012C8  EF68  F009         	goto	u2791
  4441   0012CC  EF6A  F009         	goto	u2790
  4442   0012D0                     u2791:
  4443   0012D0  EF74  F009         	goto	l3122
  4444   0012D4                     u2790:
  4445   0012D4                     l3116:
  4446                           
  4447                           ;GPS.c: 60:                     buffer[i] = '\0';
  4448   0012D4  500D               	movf	GPS_ReadSentence@i^0,w,c
  4449   0012D6  2401               	addwf	GPS_ReadSentence@buffer^0,w,c
  4450   0012D8  6ED9               	movwf	fsr2l,c
  4451   0012DA  500E               	movf	(GPS_ReadSentence@i+1)^0,w,c
  4452   0012DC  2002               	addwfc	(GPS_ReadSentence@buffer+1)^0,w,c
  4453   0012DE  6EDA               	movwf	fsr2h,c
  4454   0012E0  6ADF               	clrf	indf2,c
  4455   0012E2                     
  4456                           ;GPS.c: 61:                     return 1;
  4457   0012E2  0E01               	movlw	1
  4458   0012E4  EF91  F009         	goto	l201
  4459   0012E8                     l3122:
  4460                           
  4461                           ;GPS.c: 63:                 if(c != '\r') buffer[i++] = c;
  4462   0012E8  0E0D               	movlw	13
  4463   0012EA  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  4464   0012EC  B4D8               	btfsc	status,2,c
  4465   0012EE  EF7B  F009         	goto	u2801
  4466   0012F2  EF7D  F009         	goto	u2800
  4467   0012F6                     u2801:
  4468   0012F6  EF7F  F009         	goto	l196
  4469   0012FA                     u2800:
  4470   0012FA  EF3C  F009         	goto	l3106
  4471   0012FE                     l196:
  4472   0012FE                     l3128:
  4473                           
  4474                           ;GPS.c: 66:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  4475   0012FE  0E42               	movlw	66
  4476   001300                     u3197:
  4477   001300  2EE8               	decfsz	wreg,f,c
  4478   001302  D7FE               	bra	u3197
  4479   001304  D000               	nop2	
  4480   001306                     l3130:
  4481   001306  4A09               	infsnz	GPS_ReadSentence@t^0,f,c
  4482   001308  2A0A               	incf	(GPS_ReadSentence@t+1)^0,f,c
  4483   00130A                     l3132:
  4484   00130A  5005               	movf	GPS_ReadSentence@timeout_ms^0,w,c
  4485   00130C  5C09               	subwf	GPS_ReadSentence@t^0,w,c
  4486   00130E  5006               	movf	(GPS_ReadSentence@timeout_ms+1)^0,w,c
  4487   001310  580A               	subwfb	(GPS_ReadSentence@t+1)^0,w,c
  4488   001312  A0D8               	btfss	status,0,c
  4489   001314  EF8E  F009         	goto	u2811
  4490   001318  EF90  F009         	goto	u2810
  4491   00131C                     u2811:
  4492   00131C  EF15  F009         	goto	l191
  4493   001320                     u2810:
  4494   001320                     
  4495                           ;GPS.c: 68:     return 0;
  4496   001320  0E00               	movlw	0
  4497   001322                     l201:
  4498   001322  0012               	return		;funcret
  4499   001324                     __end_of_GPS_ReadSentence:
  4500                           	callstack 0
  4501                           
  4502 ;; *************** function _GPS_ParseGPRMC *****************
  4503 ;; Defined at:
  4504 ;;		line 72 in file "GPS.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;  msg             2   13[COMRAM] PTR const unsigned char 
  4507 ;;		 -> Display_GPS@buffer(100), 
  4508 ;;  lat             2   15[COMRAM] PTR unsigned char 
  4509 ;;		 -> Display_GPS@lat(10), 
  4510 ;;  ns              2   17[COMRAM] PTR unsigned char 
  4511 ;;		 -> Display_GPS@ns(2), 
  4512 ;;  lon             2   19[COMRAM] PTR unsigned char 
  4513 ;;		 -> Display_GPS@lon(11), 
  4514 ;;  ew              2   21[COMRAM] PTR unsigned char 
  4515 ;;		 -> Display_GPS@ew(2), 
  4516 ;; Auto vars:     Size  Location     Type
  4517 ;;  buf           100    0[BANK0 ] unsigned char [100]
  4518 ;;  token           1  103[BANK0 ] PTR unsigned char 
  4519 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  4520 ;;  data_valid      1  102[BANK0 ] unsigned char 
  4521 ;;  field           1  101[BANK0 ] unsigned char 
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      unsigned char 
  4524 ;; Registers used:
  4525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4531 ;;      Params:        10       0       0       0       0       0       0       0       0
  4532 ;;      Locals:         0     104       0       0       0       0       0       0       0
  4533 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4534 ;;      Totals:        11     104       0       0       0       0       0       0       0
  4535 ;;Total ram usage:      115 bytes
  4536 ;; Hardware stack levels used: 1
  4537 ;; Hardware stack levels required when called: 4
  4538 ;; This function calls:
  4539 ;;		_strncpy
  4540 ;;		_strstr
  4541 ;;		_strtok
  4542 ;; This function is called by:
  4543 ;;		_Display_GPS
  4544 ;; This function uses a non-reentrant model
  4545 ;;
  4546                           
  4547                           	psect	text21
  4548   000B70                     __ptext21:
  4549                           	callstack 0
  4550   000B70                     _GPS_ParseGPRMC:
  4551                           	callstack 25
  4552   000B70                     
  4553                           ;GPS.c: 73:     char buf[100];;GPS.c: 74:     char *token;;GPS.c: 75:     uint8_t field 
      +                          = 0;
  4554   000B70  0100               	movlb	0	; () banked
  4555   000B72  6BC5               	clrf	GPS_ParseGPRMC@field& (0+255),b
  4556                           
  4557                           ;GPS.c: 76:     uint8_t data_valid = 0;
  4558   000B74  6BC6               	clrf	GPS_ParseGPRMC@data_valid& (0+255),b
  4559   000B76                     
  4560                           ; BSR set to: 0
  4561                           ;GPS.c: 79:     if(strstr(msg, "$GPRMC") == ((void*)0)) return 0;
  4562   000B76  C00E  F007         	movff	GPS_ParseGPRMC@msg,strstr@h
  4563   000B7A  C00F  F008         	movff	GPS_ParseGPRMC@msg+1,strstr@h+1
  4564   000B7E  0EDF               	movlw	low STR_9
  4565   000B80  6E09               	movwf	strstr@n^0,c
  4566   000B82  EC05  F00B         	call	_strstr	;wreg free
  4567   000B86  5007               	movf	?_strstr^0,w,c
  4568   000B88  1008               	iorwf	(?_strstr+1)^0,w,c
  4569   000B8A  A4D8               	btfss	status,2,c
  4570   000B8C  EFCA  F005         	goto	u2821
  4571   000B90  EFCC  F005         	goto	u2820
  4572   000B94                     u2821:
  4573   000B94  EFCF  F005         	goto	l3146
  4574   000B98                     u2820:
  4575   000B98  0E00               	movlw	0
  4576   000B9A  EFD1  F006         	goto	l207
  4577   000B9E                     l3146:
  4578                           
  4579                           ;GPS.c: 82:     strncpy(buf, msg, sizeof(buf)-1);
  4580   000B9E  0E60               	movlw	low GPS_ParseGPRMC@buf
  4581   000BA0  6E01               	movwf	strncpy@d^0,c
  4582   000BA2  6A02               	clrf	(strncpy@d+1)^0,c
  4583   000BA4  C00E  F003         	movff	GPS_ParseGPRMC@msg,strncpy@s
  4584   000BA8  C00F  F004         	movff	GPS_ParseGPRMC@msg+1,strncpy@s+1
  4585   000BAC  0E00               	movlw	0
  4586   000BAE  6E06               	movwf	(strncpy@n+1)^0,c
  4587   000BB0  0E63               	movlw	99
  4588   000BB2  6E05               	movwf	strncpy@n^0,c
  4589   000BB4  EC6C  F00F         	call	_strncpy	;wreg free
  4590   000BB8                     
  4591                           ;GPS.c: 83:     buf[sizeof(buf)-1] = '\0';
  4592   000BB8  0100               	movlb	0	; () banked
  4593   000BBA  6BC3               	clrf	(GPS_ParseGPRMC@buf+99)& (0+255),b
  4594   000BBC                     
  4595                           ; BSR set to: 0
  4596                           ;GPS.c: 86:     token = strtok(buf, ",");
  4597   000BBC  0E60               	movlw	low GPS_ParseGPRMC@buf
  4598   000BBE  6E0C               	movwf	strtok@s^0,c
  4599   000BC0  0EE6               	movlw	low STR_20
  4600   000BC2  6E0D               	movwf	strtok@sep^0,c
  4601   000BC4  EC9B  F00E         	call	_strtok	;wreg free
  4602   000BC8  0100               	movlb	0	; () banked
  4603   000BCA  6FC7               	movwf	GPS_ParseGPRMC@token& (0+255),b
  4604                           
  4605                           ;GPS.c: 87:     while(token && field <= 6) {
  4606   000BCC  EFAD  F006         	goto	l3194
  4607   000BD0                     l3152:
  4608                           
  4609                           ; BSR set to: 0
  4610                           ;GPS.c: 90:                 data_valid = (token[0] == 'A');
  4611   000BD0  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4612   000BD2  6ED9               	movwf	fsr2l,c
  4613   000BD4  6ADA               	clrf	fsr2h,c
  4614   000BD6  0E41               	movlw	65
  4615   000BD8  18DE               	xorwf	postinc2,w,c
  4616   000BDA  B4D8               	btfsc	status,2,c
  4617   000BDC  EFF2  F005         	goto	u2831
  4618   000BE0  EFF5  F005         	goto	u2830
  4619   000BE4                     u2831:
  4620   000BE4  0E01               	movlw	1
  4621   000BE6  EFF6  F005         	goto	u2840
  4622   000BEA                     u2830:
  4623   000BEA  0E00               	movlw	0
  4624   000BEC                     u2840:
  4625   000BEC  6FC6               	movwf	GPS_ParseGPRMC@data_valid& (0+255),b
  4626                           
  4627                           ;GPS.c: 91:                 break;
  4628   000BEE  EFA4  F006         	goto	l3190
  4629   000BF2                     l3154:
  4630                           
  4631                           ; BSR set to: 0
  4632                           ;GPS.c: 93:                 if(lat && data_valid) {
  4633   000BF2  5010               	movf	GPS_ParseGPRMC@lat^0,w,c
  4634   000BF4  1011               	iorwf	(GPS_ParseGPRMC@lat+1)^0,w,c
  4635   000BF6  B4D8               	btfsc	status,2,c
  4636   000BF8  EF00  F006         	goto	u2851
  4637   000BFC  EF02  F006         	goto	u2850
  4638   000C00                     u2851:
  4639   000C00  EFA4  F006         	goto	l3190
  4640   000C04                     u2850:
  4641   000C04                     
  4642                           ; BSR set to: 0
  4643   000C04  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4644   000C06  B4D8               	btfsc	status,2,c
  4645   000C08  EF08  F006         	goto	u2861
  4646   000C0C  EF0A  F006         	goto	u2860
  4647   000C10                     u2861:
  4648   000C10  EFA4  F006         	goto	l3190
  4649   000C14                     u2860:
  4650   000C14                     
  4651                           ; BSR set to: 0
  4652                           ;GPS.c: 94:                     strncpy(lat, token, 7);
  4653   000C14  C010  F001         	movff	GPS_ParseGPRMC@lat,strncpy@d
  4654   000C18  C011  F002         	movff	GPS_ParseGPRMC@lat+1,strncpy@d+1
  4655   000C1C  C0C7  F003         	movff	GPS_ParseGPRMC@token,strncpy@s
  4656   000C20  6A04               	clrf	(strncpy@s+1)^0,c
  4657   000C22  0E00               	movlw	0
  4658   000C24  6E06               	movwf	(strncpy@n+1)^0,c
  4659   000C26  0E07               	movlw	7
  4660   000C28  6E05               	movwf	strncpy@n^0,c
  4661   000C2A  EC6C  F00F         	call	_strncpy	;wreg free
  4662   000C2E                     
  4663                           ;GPS.c: 95:                     lat[7] = '\0';
  4664   000C2E  EE20 F007          	lfsr	2,7
  4665   000C32  5010               	movf	GPS_ParseGPRMC@lat^0,w,c
  4666   000C34  26D9               	addwf	fsr2l,f,c
  4667   000C36  5011               	movf	(GPS_ParseGPRMC@lat+1)^0,w,c
  4668   000C38  22DA               	addwfc	fsr2h,f,c
  4669   000C3A  6ADF               	clrf	indf2,c
  4670   000C3C  EFA4  F006         	goto	l3190
  4671   000C40                     l3162:
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;GPS.c: 99:                 if(ns && data_valid) {
  4675   000C40  5012               	movf	GPS_ParseGPRMC@ns^0,w,c
  4676   000C42  1013               	iorwf	(GPS_ParseGPRMC@ns+1)^0,w,c
  4677   000C44  B4D8               	btfsc	status,2,c
  4678   000C46  EF27  F006         	goto	u2871
  4679   000C4A  EF29  F006         	goto	u2870
  4680   000C4E                     u2871:
  4681   000C4E  EFA4  F006         	goto	l3190
  4682   000C52                     u2870:
  4683   000C52                     
  4684                           ; BSR set to: 0
  4685   000C52  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4686   000C54  B4D8               	btfsc	status,2,c
  4687   000C56  EF2F  F006         	goto	u2881
  4688   000C5A  EF31  F006         	goto	u2880
  4689   000C5E                     u2881:
  4690   000C5E  EFA4  F006         	goto	l3190
  4691   000C62                     u2880:
  4692   000C62                     
  4693                           ; BSR set to: 0
  4694                           ;GPS.c: 100:                     ns[0] = token[0];
  4695   000C62  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4696   000C64  6ED9               	movwf	fsr2l,c
  4697   000C66  6ADA               	clrf	fsr2h,c
  4698   000C68  C012  FFE1         	movff	GPS_ParseGPRMC@ns,fsr1l
  4699   000C6C  C013  FFE2         	movff	GPS_ParseGPRMC@ns+1,fsr1h
  4700   000C70  CFDF FFE7          	movff	indf2,indf1
  4701   000C74                     
  4702                           ; BSR set to: 0
  4703                           ;GPS.c: 101:                     ns[1] = '\0';
  4704   000C74  EE20 F001          	lfsr	2,1
  4705   000C78  5012               	movf	GPS_ParseGPRMC@ns^0,w,c
  4706   000C7A  26D9               	addwf	fsr2l,f,c
  4707   000C7C  5013               	movf	(GPS_ParseGPRMC@ns+1)^0,w,c
  4708   000C7E  22DA               	addwfc	fsr2h,f,c
  4709   000C80  6ADF               	clrf	indf2,c
  4710   000C82  EFA4  F006         	goto	l3190
  4711   000C86                     l3170:
  4712                           
  4713                           ; BSR set to: 0
  4714                           ;GPS.c: 105:                 if(lon && data_valid) {
  4715   000C86  5014               	movf	GPS_ParseGPRMC@lon^0,w,c
  4716   000C88  1015               	iorwf	(GPS_ParseGPRMC@lon+1)^0,w,c
  4717   000C8A  B4D8               	btfsc	status,2,c
  4718   000C8C  EF4A  F006         	goto	u2891
  4719   000C90  EF4C  F006         	goto	u2890
  4720   000C94                     u2891:
  4721   000C94  EFA4  F006         	goto	l3190
  4722   000C98                     u2890:
  4723   000C98                     
  4724                           ; BSR set to: 0
  4725   000C98  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4726   000C9A  B4D8               	btfsc	status,2,c
  4727   000C9C  EF52  F006         	goto	u2901
  4728   000CA0  EF54  F006         	goto	u2900
  4729   000CA4                     u2901:
  4730   000CA4  EFA4  F006         	goto	l3190
  4731   000CA8                     u2900:
  4732   000CA8                     
  4733                           ; BSR set to: 0
  4734                           ;GPS.c: 106:                     strncpy(lon, token, 8);
  4735   000CA8  C014  F001         	movff	GPS_ParseGPRMC@lon,strncpy@d
  4736   000CAC  C015  F002         	movff	GPS_ParseGPRMC@lon+1,strncpy@d+1
  4737   000CB0  C0C7  F003         	movff	GPS_ParseGPRMC@token,strncpy@s
  4738   000CB4  6A04               	clrf	(strncpy@s+1)^0,c
  4739   000CB6  0E00               	movlw	0
  4740   000CB8  6E06               	movwf	(strncpy@n+1)^0,c
  4741   000CBA  0E08               	movlw	8
  4742   000CBC  6E05               	movwf	strncpy@n^0,c
  4743   000CBE  EC6C  F00F         	call	_strncpy	;wreg free
  4744   000CC2                     
  4745                           ;GPS.c: 107:                     lon[8] = '\0';
  4746   000CC2  EE20 F008          	lfsr	2,8
  4747   000CC6  5014               	movf	GPS_ParseGPRMC@lon^0,w,c
  4748   000CC8  26D9               	addwf	fsr2l,f,c
  4749   000CCA  5015               	movf	(GPS_ParseGPRMC@lon+1)^0,w,c
  4750   000CCC  22DA               	addwfc	fsr2h,f,c
  4751   000CCE  6ADF               	clrf	indf2,c
  4752   000CD0  EFA4  F006         	goto	l3190
  4753   000CD4                     l3178:
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;GPS.c: 111:                 if(ew && data_valid) {
  4757   000CD4  5016               	movf	GPS_ParseGPRMC@ew^0,w,c
  4758   000CD6  1017               	iorwf	(GPS_ParseGPRMC@ew+1)^0,w,c
  4759   000CD8  B4D8               	btfsc	status,2,c
  4760   000CDA  EF71  F006         	goto	u2911
  4761   000CDE  EF73  F006         	goto	u2910
  4762   000CE2                     u2911:
  4763   000CE2  EFA4  F006         	goto	l3190
  4764   000CE6                     u2910:
  4765   000CE6                     
  4766                           ; BSR set to: 0
  4767   000CE6  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4768   000CE8  B4D8               	btfsc	status,2,c
  4769   000CEA  EF79  F006         	goto	u2921
  4770   000CEE  EF7B  F006         	goto	u2920
  4771   000CF2                     u2921:
  4772   000CF2  EFA4  F006         	goto	l3190
  4773   000CF6                     u2920:
  4774   000CF6                     
  4775                           ; BSR set to: 0
  4776                           ;GPS.c: 112:                     ew[0] = token[0];
  4777   000CF6  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4778   000CF8  6ED9               	movwf	fsr2l,c
  4779   000CFA  6ADA               	clrf	fsr2h,c
  4780   000CFC  C016  FFE1         	movff	GPS_ParseGPRMC@ew,fsr1l
  4781   000D00  C017  FFE2         	movff	GPS_ParseGPRMC@ew+1,fsr1h
  4782   000D04  CFDF FFE7          	movff	indf2,indf1
  4783   000D08                     
  4784                           ; BSR set to: 0
  4785                           ;GPS.c: 113:                     ew[1] = '\0';
  4786   000D08  EE20 F001          	lfsr	2,1
  4787   000D0C  5016               	movf	GPS_ParseGPRMC@ew^0,w,c
  4788   000D0E  26D9               	addwf	fsr2l,f,c
  4789   000D10  5017               	movf	(GPS_ParseGPRMC@ew+1)^0,w,c
  4790   000D12  22DA               	addwfc	fsr2h,f,c
  4791   000D14  6ADF               	clrf	indf2,c
  4792   000D16  EFA4  F006         	goto	l3190
  4793   000D1A                     l3188:
  4794                           
  4795                           ; BSR set to: 0
  4796   000D1A  51C5               	movf	GPS_ParseGPRMC@field& (0+255),w,b
  4797                           
  4798                           ; Switch size 1, requested type "simple"
  4799                           ; Number of cases is 5, Range of values is 2 to 6
  4800                           ; switch strategies available:
  4801                           ; Name         Instructions Cycles
  4802                           ; simple_byte           16     9 (average)
  4803                           ;	Chosen strategy is simple_byte
  4804   000D1C  0A02               	xorlw	2	; case 2
  4805   000D1E  B4D8               	btfsc	status,2,c
  4806   000D20  EFE8  F005         	goto	l3152
  4807   000D24  0A01               	xorlw	1	; case 3
  4808   000D26  B4D8               	btfsc	status,2,c
  4809   000D28  EFF9  F005         	goto	l3154
  4810   000D2C  0A07               	xorlw	7	; case 4
  4811   000D2E  B4D8               	btfsc	status,2,c
  4812   000D30  EF20  F006         	goto	l3162
  4813   000D34  0A01               	xorlw	1	; case 5
  4814   000D36  B4D8               	btfsc	status,2,c
  4815   000D38  EF43  F006         	goto	l3170
  4816   000D3C  0A03               	xorlw	3	; case 6
  4817   000D3E  B4D8               	btfsc	status,2,c
  4818   000D40  EF6A  F006         	goto	l3178
  4819   000D44  EFA4  F006         	goto	l3190
  4820   000D48                     l3190:
  4821                           
  4822                           ;GPS.c: 117:         token = strtok(((void*)0), ",");
  4823   000D48  0E00               	movlw	0
  4824   000D4A  6E0C               	movwf	strtok@s^0,c
  4825   000D4C  0EE6               	movlw	low STR_20
  4826   000D4E  6E0D               	movwf	strtok@sep^0,c
  4827   000D50  EC9B  F00E         	call	_strtok	;wreg free
  4828   000D54  0100               	movlb	0	; () banked
  4829   000D56  6FC7               	movwf	GPS_ParseGPRMC@token& (0+255),b
  4830   000D58                     
  4831                           ; BSR set to: 0
  4832                           ;GPS.c: 118:         field++;
  4833   000D58  2BC5               	incf	GPS_ParseGPRMC@field& (0+255),f,b
  4834   000D5A                     l3194:
  4835                           
  4836                           ; BSR set to: 0
  4837                           ;GPS.c: 87:     while(token && field <= 6) {
  4838   000D5A  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4839   000D5C  B4D8               	btfsc	status,2,c
  4840   000D5E  EFB3  F006         	goto	u2931
  4841   000D62  EFB5  F006         	goto	u2930
  4842   000D66                     u2931:
  4843   000D66  EFBD  F006         	goto	l223
  4844   000D6A                     u2930:
  4845   000D6A                     
  4846                           ; BSR set to: 0
  4847   000D6A  0E06               	movlw	6
  4848   000D6C  65C5               	cpfsgt	GPS_ParseGPRMC@field& (0+255),b
  4849   000D6E  EFBB  F006         	goto	u2941
  4850   000D72  EFBD  F006         	goto	u2940
  4851   000D76                     u2941:
  4852   000D76  EF8D  F006         	goto	l3188
  4853   000D7A                     u2940:
  4854   000D7A                     l223:
  4855                           
  4856                           ; BSR set to: 0
  4857                           ;GPS.c: 120:     return (data_valid && field >= 6);
  4858   000D7A  6BC4               	clrf	_GPS_ParseGPRMC$653& (0+255),b
  4859   000D7C                     
  4860                           ; BSR set to: 0
  4861   000D7C  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4862   000D7E  B4D8               	btfsc	status,2,c
  4863   000D80  EFC4  F006         	goto	u2951
  4864   000D84  EFC6  F006         	goto	u2950
  4865   000D88                     u2951:
  4866   000D88  EFD0  F006         	goto	l225
  4867   000D8C                     u2950:
  4868   000D8C                     
  4869                           ; BSR set to: 0
  4870   000D8C  0E05               	movlw	5
  4871   000D8E  65C5               	cpfsgt	GPS_ParseGPRMC@field& (0+255),b
  4872   000D90  EFCC  F006         	goto	u2961
  4873   000D94  EFCE  F006         	goto	u2960
  4874   000D98                     u2961:
  4875   000D98  EFD0  F006         	goto	l225
  4876   000D9C                     u2960:
  4877   000D9C                     
  4878                           ; BSR set to: 0
  4879   000D9C  0E01               	movlw	1
  4880   000D9E  6FC4               	movwf	_GPS_ParseGPRMC$653& (0+255),b
  4881   000DA0                     l225:
  4882                           
  4883                           ; BSR set to: 0
  4884   000DA0  51C4               	movf	_GPS_ParseGPRMC$653& (0+255),w,b
  4885   000DA2                     l207:
  4886   000DA2  0012               	return		;funcret
  4887   000DA4                     __end_of_GPS_ParseGPRMC:
  4888                           	callstack 0
  4889                           
  4890 ;; *************** function _strtok *****************
  4891 ;; Defined at:
  4892 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strtok.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  s               1   11[COMRAM] PTR unsigned char 
  4895 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  4896 ;;  sep             1   12[COMRAM] PTR const unsigned char 
  4897 ;;		 -> STR_21(2), STR_20(2), 
  4898 ;; Auto vars:     Size  Location     Type
  4899 ;;		None
  4900 ;; Return value:  Size  Location     Type
  4901 ;;                  1   11[COMRAM] PTR unsigned char 
  4902 ;; Registers used:
  4903 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4904 ;; Tracked objects:
  4905 ;;		On entry : 0/0
  4906 ;;		On exit  : 0/0
  4907 ;;		Unchanged: 0/0
  4908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4909 ;;      Params:         2       0       0       0       0       0       0       0       0
  4910 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4911 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4912 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4913 ;;Total ram usage:        2 bytes
  4914 ;; Hardware stack levels used: 1
  4915 ;; Hardware stack levels required when called: 3
  4916 ;; This function calls:
  4917 ;;		_strcspn
  4918 ;;		_strspn
  4919 ;; This function is called by:
  4920 ;;		_GPS_ParseGPRMC
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924                           	psect	text22
  4925   001D36                     __ptext22:
  4926                           	callstack 0
  4927   001D36                     _strtok:
  4928                           	callstack 25
  4929   001D36  500C               	movf	strtok@s^0,w,c
  4930   001D38  A4D8               	btfss	status,2,c
  4931   001D3A  EFA1  F00E         	goto	u2531
  4932   001D3E  EFA3  F00E         	goto	u2530
  4933   001D42                     u2531:
  4934   001D42  EFB0  F00E         	goto	l2884
  4935   001D46                     u2530:
  4936   001D46  C054  F00C         	movff	strtok@p,strtok@s
  4937   001D4A  500C               	movf	strtok@s^0,w,c
  4938   001D4C  A4D8               	btfss	status,2,c
  4939   001D4E  EFAB  F00E         	goto	u2541
  4940   001D52  EFAD  F00E         	goto	u2540
  4941   001D56                     u2541:
  4942   001D56  EFB0  F00E         	goto	l2884
  4943   001D5A                     u2540:
  4944   001D5A  0E00               	movlw	0
  4945   001D5C  EFE5  F00E         	goto	l1289
  4946   001D60                     l2884:
  4947   001D60  C00C  F007         	movff	strtok@s,strspn@s
  4948   001D64  C00D  F008         	movff	strtok@sep,strspn@c
  4949   001D68  ECEA  F00F         	call	_strspn	;wreg free
  4950   001D6C  5007               	movf	?_strspn^0,w,c
  4951   001D6E  260C               	addwf	strtok@s^0,f,c
  4952   001D70  500C               	movf	strtok@s^0,w,c
  4953   001D72  6ED9               	movwf	fsr2l,c
  4954   001D74  6ADA               	clrf	fsr2h,c
  4955   001D76  50DF               	movf	indf2,w,c
  4956   001D78  A4D8               	btfss	status,2,c
  4957   001D7A  EFC1  F00E         	goto	u2551
  4958   001D7E  EFC3  F00E         	goto	u2550
  4959   001D82                     u2551:
  4960   001D82  EFC8  F00E         	goto	l2892
  4961   001D86                     u2550:
  4962   001D86  0E00               	movlw	0
  4963   001D88  6E54               	movwf	strtok@p^0,c
  4964   001D8A  5054               	movf	strtok@p^0,w,c
  4965   001D8C  EFE5  F00E         	goto	l1289
  4966   001D90                     l2892:
  4967   001D90  C00C  F007         	movff	strtok@s,strcspn@s
  4968   001D94  C00D  F008         	movff	strtok@sep,strcspn@c
  4969   001D98  EC1C  F010         	call	_strcspn	;wreg free
  4970   001D9C  500C               	movf	strtok@s^0,w,c
  4971   001D9E  2407               	addwf	?_strcspn^0,w,c
  4972   001DA0  6E54               	movwf	strtok@p^0,c
  4973   001DA2  5054               	movf	strtok@p^0,w,c
  4974   001DA4  6ED9               	movwf	fsr2l,c
  4975   001DA6  6ADA               	clrf	fsr2h,c
  4976   001DA8  50DF               	movf	indf2,w,c
  4977   001DAA  B4D8               	btfsc	status,2,c
  4978   001DAC  EFDA  F00E         	goto	u2561
  4979   001DB0  EFDC  F00E         	goto	u2560
  4980   001DB4                     u2561:
  4981   001DB4  EFE3  F00E         	goto	l1291
  4982   001DB8                     u2560:
  4983   001DB8  5054               	movf	strtok@p^0,w,c
  4984   001DBA  6ED9               	movwf	fsr2l,c
  4985   001DBC  6ADA               	clrf	fsr2h,c
  4986   001DBE  6ADF               	clrf	indf2,c
  4987   001DC0  2A54               	incf	strtok@p^0,f,c
  4988   001DC2  EFE4  F00E         	goto	l2900
  4989   001DC6                     l1291:
  4990   001DC6  6A54               	clrf	strtok@p^0,c
  4991   001DC8                     l2900:
  4992   001DC8  500C               	movf	strtok@s^0,w,c
  4993   001DCA                     l1289:
  4994   001DCA  0012               	return		;funcret
  4995   001DCC                     __end_of_strtok:
  4996                           	callstack 0
  4997                           
  4998 ;; *************** function _strspn *****************
  4999 ;; Defined at:
  5000 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strspn.c"
  5001 ;; Parameters:    Size  Location     Type
  5002 ;;  s               1    6[COMRAM] PTR const unsigned char 
  5003 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  5004 ;;  c               1    7[COMRAM] PTR const unsigned char 
  5005 ;;		 -> STR_21(2), STR_20(2), 
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;  i               2    9[COMRAM] unsigned int 
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  2    6[COMRAM] unsigned int 
  5010 ;; Registers used:
  5011 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5017 ;;      Params:         2       0       0       0       0       0       0       0       0
  5018 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5019 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5020 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5021 ;;Total ram usage:        5 bytes
  5022 ;; Hardware stack levels used: 1
  5023 ;; Hardware stack levels required when called: 2
  5024 ;; This function calls:
  5025 ;;		_strchr
  5026 ;; This function is called by:
  5027 ;;		_strtok
  5028 ;; This function uses a non-reentrant model
  5029 ;;
  5030                           
  5031                           	psect	text23
  5032   001FD4                     __ptext23:
  5033                           	callstack 0
  5034   001FD4                     _strspn:
  5035                           	callstack 25
  5036   001FD4  0E00               	movlw	0
  5037   001FD6  6E0B               	movwf	(strspn@i+1)^0,c
  5038   001FD8  0E00               	movlw	0
  5039   001FDA  6E0A               	movwf	strspn@i^0,c
  5040   001FDC  EFF3  F00F         	goto	l2788
  5041   001FE0                     l2786:
  5042   001FE0  2A07               	incf	strspn@s^0,f,c
  5043   001FE2  4A0A               	infsnz	strspn@i^0,f,c
  5044   001FE4  2A0B               	incf	(strspn@i+1)^0,f,c
  5045   001FE6                     l2788:
  5046   001FE6  5007               	movf	strspn@s^0,w,c
  5047   001FE8  6ED9               	movwf	fsr2l,c
  5048   001FEA  6ADA               	clrf	fsr2h,c
  5049   001FEC  50DF               	movf	indf2,w,c
  5050   001FEE  B4D8               	btfsc	status,2,c
  5051   001FF0  EFFC  F00F         	goto	u2351
  5052   001FF4  EFFE  F00F         	goto	u2350
  5053   001FF8                     u2351:
  5054   001FF8  EF17  F010         	goto	l1311
  5055   001FFC                     u2350:
  5056   001FFC  C008  F001         	movff	strspn@c,strchr@s
  5057   002000  5001               	movf	strchr@s^0,w,c
  5058   002002  A4D8               	btfss	status,2,c
  5059   002004  0E08               	movlw	high __smallconst
  5060   002006  6E02               	movwf	(strchr@s+1)^0,c
  5061   002008  5007               	movf	strspn@s^0,w,c
  5062   00200A  6ED9               	movwf	fsr2l,c
  5063   00200C  6ADA               	clrf	fsr2h,c
  5064   00200E  50DF               	movf	indf2,w,c
  5065   002010  6E09               	movwf	??_strspn^0,c
  5066   002012  5009               	movf	??_strspn^0,w,c
  5067   002014  6E03               	movwf	strchr@c^0,c
  5068   002016  6A04               	clrf	(strchr@c+1)^0,c
  5069   002018  EC2B  F00F         	call	_strchr	;wreg free
  5070   00201C  5001               	movf	?_strchr^0,w,c
  5071   00201E  1002               	iorwf	(?_strchr+1)^0,w,c
  5072   002020  A4D8               	btfss	status,2,c
  5073   002022  EF15  F010         	goto	u2361
  5074   002026  EF17  F010         	goto	u2360
  5075   00202A                     u2361:
  5076   00202A  EFF0  F00F         	goto	l2786
  5077   00202E                     u2360:
  5078   00202E                     l1311:
  5079   00202E  C00A  F007         	movff	strspn@i,?_strspn
  5080   002032  C00B  F008         	movff	strspn@i+1,?_strspn+1
  5081   002036  0012               	return		;funcret
  5082   002038                     __end_of_strspn:
  5083                           	callstack 0
  5084                           
  5085 ;; *************** function _strcspn *****************
  5086 ;; Defined at:
  5087 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcspn.c"
  5088 ;; Parameters:    Size  Location     Type
  5089 ;;  s               1    6[COMRAM] PTR const unsigned char 
  5090 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  5091 ;;  c               1    7[COMRAM] PTR const unsigned char 
  5092 ;;		 -> STR_21(2), STR_20(2), 
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  i               2    9[COMRAM] unsigned int 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  2    6[COMRAM] unsigned int 
  5097 ;; Registers used:
  5098 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5104 ;;      Params:         2       0       0       0       0       0       0       0       0
  5105 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5106 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5107 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5108 ;;Total ram usage:        5 bytes
  5109 ;; Hardware stack levels used: 1
  5110 ;; Hardware stack levels required when called: 2
  5111 ;; This function calls:
  5112 ;;		_strchr
  5113 ;; This function is called by:
  5114 ;;		_strtok
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           	psect	text24
  5119   002038                     __ptext24:
  5120                           	callstack 0
  5121   002038                     _strcspn:
  5122                           	callstack 25
  5123   002038  0E00               	movlw	0
  5124   00203A  6E0B               	movwf	(strcspn@i+1)^0,c
  5125   00203C  0E00               	movlw	0
  5126   00203E  6E0A               	movwf	strcspn@i^0,c
  5127   002040  EF25  F010         	goto	l2796
  5128   002044                     l2794:
  5129   002044  2A07               	incf	strcspn@s^0,f,c
  5130   002046  4A0A               	infsnz	strcspn@i^0,f,c
  5131   002048  2A0B               	incf	(strcspn@i+1)^0,f,c
  5132   00204A                     l2796:
  5133   00204A  5007               	movf	strcspn@s^0,w,c
  5134   00204C  6ED9               	movwf	fsr2l,c
  5135   00204E  6ADA               	clrf	fsr2h,c
  5136   002050  50DF               	movf	indf2,w,c
  5137   002052  B4D8               	btfsc	status,2,c
  5138   002054  EF2E  F010         	goto	u2371
  5139   002058  EF30  F010         	goto	u2370
  5140   00205C                     u2371:
  5141   00205C  EF49  F010         	goto	l1301
  5142   002060                     u2370:
  5143   002060  C008  F001         	movff	strcspn@c,strchr@s
  5144   002064  5001               	movf	strchr@s^0,w,c
  5145   002066  A4D8               	btfss	status,2,c
  5146   002068  0E08               	movlw	high __smallconst
  5147   00206A  6E02               	movwf	(strchr@s+1)^0,c
  5148   00206C  5007               	movf	strcspn@s^0,w,c
  5149   00206E  6ED9               	movwf	fsr2l,c
  5150   002070  6ADA               	clrf	fsr2h,c
  5151   002072  50DF               	movf	indf2,w,c
  5152   002074  6E09               	movwf	??_strcspn^0,c
  5153   002076  5009               	movf	??_strcspn^0,w,c
  5154   002078  6E03               	movwf	strchr@c^0,c
  5155   00207A  6A04               	clrf	(strchr@c+1)^0,c
  5156   00207C  EC2B  F00F         	call	_strchr	;wreg free
  5157   002080  5001               	movf	?_strchr^0,w,c
  5158   002082  1002               	iorwf	(?_strchr+1)^0,w,c
  5159   002084  B4D8               	btfsc	status,2,c
  5160   002086  EF47  F010         	goto	u2381
  5161   00208A  EF49  F010         	goto	u2380
  5162   00208E                     u2381:
  5163   00208E  EF22  F010         	goto	l2794
  5164   002092                     u2380:
  5165   002092                     l1301:
  5166   002092  C00A  F007         	movff	strcspn@i,?_strcspn
  5167   002096  C00B  F008         	movff	strcspn@i+1,?_strcspn+1
  5168   00209A  0012               	return		;funcret
  5169   00209C                     __end_of_strcspn:
  5170                           	callstack 0
  5171                           
  5172 ;; *************** function _strstr *****************
  5173 ;; Defined at:
  5174 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;  h               2    6[COMRAM] PTR const unsigned char 
  5177 ;;		 -> STR_21(2), STR_20(2), NULL(0), Display_GPS@buffer(100), 
  5178 ;;  n               1    8[COMRAM] PTR const unsigned char 
  5179 ;;		 -> STR_19(7), STR_10(7), 
  5180 ;; Auto vars:     Size  Location     Type
  5181 ;;  nl              2    9[COMRAM] unsigned int 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  2    6[COMRAM] PTR unsigned char 
  5184 ;; Registers used:
  5185 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5191 ;;      Params:         3       0       0       0       0       0       0       0       0
  5192 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5193 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5194 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5195 ;;Total ram usage:        5 bytes
  5196 ;; Hardware stack levels used: 1
  5197 ;; Hardware stack levels required when called: 2
  5198 ;; This function calls:
  5199 ;;		_strchr
  5200 ;;		_strlen
  5201 ;;		_strncmp
  5202 ;; This function is called by:
  5203 ;;		_Display_GPS
  5204 ;;		_GPS_ParseGPRMC
  5205 ;; This function uses a non-reentrant model
  5206 ;;
  5207                           
  5208                           	psect	text25
  5209   00160A                     __ptext25:
  5210                           	callstack 0
  5211   00160A                     _strstr:
  5212                           	callstack 27
  5213   00160A  5009               	movf	strstr@n^0,w,c
  5214   00160C  B4D8               	btfsc	status,2,c
  5215   00160E  EF0B  F00B         	goto	u2411
  5216   001612  EF0D  F00B         	goto	u2410
  5217   001616                     u2411:
  5218   001616  EF67  F00B         	goto	l2834
  5219   00161A                     u2410:
  5220   00161A  C009  F001         	movff	strstr@n,strlen@s
  5221   00161E  EC17  F012         	call	_strlen	;wreg free
  5222   001622  C001  F00A         	movff	?_strlen,strstr@nl
  5223   001626  C002  F00B         	movff	?_strlen+1,strstr@nl+1
  5224   00162A  EF46  F00B         	goto	l2830
  5225   00162E                     l2822:
  5226   00162E  C007  F001         	movff	strstr@h,strncmp@l
  5227   001632  C008  F002         	movff	strstr@h+1,strncmp@l+1
  5228   001636  C009  F003         	movff	strstr@n,strncmp@r
  5229   00163A  C00A  F004         	movff	strstr@nl,strncmp@n
  5230   00163E  C00B  F005         	movff	strstr@nl+1,strncmp@n+1
  5231   001642  EC92  F009         	call	_strncmp	;wreg free
  5232   001646  5001               	movf	?_strncmp^0,w,c
  5233   001648  1002               	iorwf	(?_strncmp+1)^0,w,c
  5234   00164A  A4D8               	btfss	status,2,c
  5235   00164C  EF2A  F00B         	goto	u2421
  5236   001650  EF2C  F00B         	goto	u2420
  5237   001654                     u2421:
  5238   001654  EF32  F00B         	goto	l2828
  5239   001658                     u2420:
  5240   001658  C007  F007         	movff	strstr@h,?_strstr
  5241   00165C  C008  F008         	movff	strstr@h+1,?_strstr+1
  5242   001660  EF6B  F00B         	goto	l1255
  5243   001664                     l2828:
  5244   001664  0E01               	movlw	1
  5245   001666  2407               	addwf	strstr@h^0,w,c
  5246   001668  6E01               	movwf	strchr@s^0,c
  5247   00166A  0E00               	movlw	0
  5248   00166C  2008               	addwfc	(strstr@h+1)^0,w,c
  5249   00166E  6E02               	movwf	(strchr@s+1)^0,c
  5250   001670  C009  FFF6         	movff	strstr@n,tblptrl
  5251   001674                     	if	1	;There is more than 1 active tblptr byte
  5252   001674  0E08               	movlw	high __smallconst
  5253   001676  6EF7               	movwf	tblptrh,c
  5254   001678                     	endif
  5255   001678                     	if	0	;tblptru may be non-zero
  5256   001678                     	endif
  5257   001678                     	if	0	;tblptru may be non-zero
  5258   001678                     	endif
  5259   001678  0008               	tblrd		*
  5260   00167A  50F5               	movf	tablat,w,c
  5261   00167C  6E03               	movwf	strchr@c^0,c
  5262   00167E  6A04               	clrf	(strchr@c+1)^0,c
  5263   001680  EC2B  F00F         	call	_strchr	;wreg free
  5264   001684  C001  F007         	movff	?_strchr,strstr@h
  5265   001688  C002  F008         	movff	?_strchr+1,strstr@h+1
  5266   00168C                     l2830:
  5267   00168C  5007               	movf	strstr@h^0,w,c
  5268   00168E  1008               	iorwf	(strstr@h+1)^0,w,c
  5269   001690  B4D8               	btfsc	status,2,c
  5270   001692  EF4D  F00B         	goto	u2431
  5271   001696  EF4F  F00B         	goto	u2430
  5272   00169A                     u2431:
  5273   00169A  EF67  F00B         	goto	l2834
  5274   00169E                     u2430:
  5275   00169E  C007  FFF6         	movff	strstr@h,tblptrl
  5276   0016A2  C008  FFF7         	movff	strstr@h+1,tblptrh
  5277   0016A6  6AF8               	clrf	tblptru,c
  5278   0016A8  0E07               	movlw	(high __ramtop+-1)
  5279   0016AA  64F7               	cpfsgt	tblptrh,c
  5280   0016AC  D003               	bra	u2447
  5281   0016AE  0008               	tblrd		*
  5282   0016B0  50F5               	movf	tablat,w,c
  5283   0016B2  D005               	bra	u2440
  5284   0016B4                     u2447:
  5285   0016B4  CFF6 FFE9          	movff	tblptrl,fsr0l
  5286   0016B8  CFF7 FFEA          	movff	tblptrh,fsr0h
  5287   0016BC  50EF               	movf	indf0,w,c
  5288   0016BE                     u2440:
  5289   0016BE  0900               	iorlw	0
  5290   0016C0  A4D8               	btfss	status,2,c
  5291   0016C2  EF65  F00B         	goto	u2451
  5292   0016C6  EF67  F00B         	goto	u2450
  5293   0016CA                     u2451:
  5294   0016CA  EF17  F00B         	goto	l2822
  5295   0016CE                     u2450:
  5296   0016CE                     l2834:
  5297   0016CE  0E00               	movlw	0
  5298   0016D0  6E07               	movwf	?_strstr^0,c
  5299   0016D2  0E00               	movlw	0
  5300   0016D4  6E08               	movwf	(?_strstr+1)^0,c
  5301   0016D6                     l1255:
  5302   0016D6  0012               	return		;funcret
  5303   0016D8                     __end_of_strstr:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function _strncmp *****************
  5307 ;; Defined at:
  5308 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;  l               2    0[COMRAM] PTR const unsigned char 
  5311 ;;		 -> STR_21(2), STR_20(2), NULL(0), Display_GPS@buffer(100), 
  5312 ;;  r               1    2[COMRAM] PTR const unsigned char 
  5313 ;;		 -> STR_19(7), STR_10(7), 
  5314 ;;  n               2    3[COMRAM] unsigned int 
  5315 ;; Auto vars:     Size  Location     Type
  5316 ;;		None
  5317 ;; Return value:  Size  Location     Type
  5318 ;;                  2    0[COMRAM] int 
  5319 ;; Registers used:
  5320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5321 ;; Tracked objects:
  5322 ;;		On entry : 0/0
  5323 ;;		On exit  : 0/0
  5324 ;;		Unchanged: 0/0
  5325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5326 ;;      Params:         5       0       0       0       0       0       0       0       0
  5327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5328 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5329 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5330 ;;Total ram usage:        6 bytes
  5331 ;; Hardware stack levels used: 1
  5332 ;; Hardware stack levels required when called: 1
  5333 ;; This function calls:
  5334 ;;		Nothing
  5335 ;; This function is called by:
  5336 ;;		_strstr
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	text26
  5341   001324                     __ptext26:
  5342                           	callstack 0
  5343   001324                     _strncmp:
  5344                           	callstack 27
  5345   001324  0604               	decf	strncmp@n^0,f,c
  5346   001326  A0D8               	btfss	status,0,c
  5347   001328  0605               	decf	(strncmp@n+1)^0,f,c
  5348   00132A  2804               	incf	strncmp@n^0,w,c
  5349   00132C  E106               	bnz	u2281
  5350   00132E  2805               	incf	(strncmp@n+1)^0,w,c
  5351   001330  A4D8               	btfss	status,2,c
  5352   001332  EF9D  F009         	goto	u2281
  5353   001336  EF9F  F009         	goto	u2280
  5354   00133A                     u2281:
  5355   00133A  EFAB  F009         	goto	l2772
  5356   00133E                     u2280:
  5357   00133E  0E00               	movlw	0
  5358   001340  6E02               	movwf	(?_strncmp+1)^0,c
  5359   001342  0E00               	movlw	0
  5360   001344  6E01               	movwf	?_strncmp^0,c
  5361   001346  EF15  F00A         	goto	l1274
  5362   00134A                     l2770:
  5363   00134A  4A01               	infsnz	strncmp@l^0,f,c
  5364   00134C  2A02               	incf	(strncmp@l+1)^0,f,c
  5365   00134E  2A03               	incf	strncmp@r^0,f,c
  5366   001350  0604               	decf	strncmp@n^0,f,c
  5367   001352  A0D8               	btfss	status,0,c
  5368   001354  0605               	decf	(strncmp@n+1)^0,f,c
  5369   001356                     l2772:
  5370   001356  C001  FFF6         	movff	strncmp@l,tblptrl
  5371   00135A  C002  FFF7         	movff	strncmp@l+1,tblptrh
  5372   00135E  6AF8               	clrf	tblptru,c
  5373   001360  0E07               	movlw	(high __ramtop+-1)
  5374   001362  64F7               	cpfsgt	tblptrh,c
  5375   001364  D003               	bra	u2297
  5376   001366  0008               	tblrd		*
  5377   001368  50F5               	movf	tablat,w,c
  5378   00136A  D005               	bra	u2290
  5379   00136C                     u2297:
  5380   00136C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5381   001370  CFF7 FFEA          	movff	tblptrh,fsr0h
  5382   001374  50EF               	movf	indf0,w,c
  5383   001376                     u2290:
  5384   001376  0900               	iorlw	0
  5385   001378  B4D8               	btfsc	status,2,c
  5386   00137A  EFC1  F009         	goto	u2301
  5387   00137E  EFC3  F009         	goto	u2300
  5388   001382                     u2301:
  5389   001382  EFF9  F009         	goto	l2780
  5390   001386                     u2300:
  5391   001386  C003  FFF6         	movff	strncmp@r,tblptrl
  5392   00138A                     	if	1	;There is more than 1 active tblptr byte
  5393   00138A  0E08               	movlw	high __smallconst
  5394   00138C  6EF7               	movwf	tblptrh,c
  5395   00138E                     	endif
  5396   00138E                     	if	0	;tblptru may be non-zero
  5397   00138E                     	endif
  5398   00138E                     	if	0	;tblptru may be non-zero
  5399   00138E                     	endif
  5400   00138E  0008               	tblrd		*
  5401   001390  50F5               	movf	tablat,w,c
  5402   001392  0900               	iorlw	0
  5403   001394  B4D8               	btfsc	status,2,c
  5404   001396  EFCF  F009         	goto	u2311
  5405   00139A  EFD1  F009         	goto	u2310
  5406   00139E                     u2311:
  5407   00139E  EFF9  F009         	goto	l2780
  5408   0013A2                     u2310:
  5409   0013A2  5004               	movf	strncmp@n^0,w,c
  5410   0013A4  1005               	iorwf	(strncmp@n+1)^0,w,c
  5411   0013A6  B4D8               	btfsc	status,2,c
  5412   0013A8  EFD8  F009         	goto	u2321
  5413   0013AC  EFDA  F009         	goto	u2320
  5414   0013B0                     u2321:
  5415   0013B0  EFF9  F009         	goto	l2780
  5416   0013B4                     u2320:
  5417   0013B4  C003  FFF6         	movff	strncmp@r,tblptrl
  5418   0013B8                     	if	1	;There is more than 1 active tblptr byte
  5419   0013B8  0E08               	movlw	high __smallconst
  5420   0013BA  6EF7               	movwf	tblptrh,c
  5421   0013BC                     	endif
  5422   0013BC                     	if	0	;tblptru may be non-zero
  5423   0013BC                     	endif
  5424   0013BC                     	if	0	;tblptru may be non-zero
  5425   0013BC                     	endif
  5426   0013BC  0008               	tblrd		*
  5427   0013BE  CFF5 F006          	movff	tablat,??_strncmp
  5428   0013C2  C001  FFF6         	movff	strncmp@l,tblptrl
  5429   0013C6  C002  FFF7         	movff	strncmp@l+1,tblptrh
  5430   0013CA  6AF8               	clrf	tblptru,c
  5431   0013CC  0E07               	movlw	(high __ramtop+-1)
  5432   0013CE  64F7               	cpfsgt	tblptrh,c
  5433   0013D0  D003               	bra	u2337
  5434   0013D2  0008               	tblrd		*
  5435   0013D4  50F5               	movf	tablat,w,c
  5436   0013D6  D005               	bra	u2335
  5437   0013D8                     u2337:
  5438   0013D8  CFF6 FFE9          	movff	tblptrl,fsr0l
  5439   0013DC  CFF7 FFEA          	movff	tblptrh,fsr0h
  5440   0013E0  50EF               	movf	indf0,w,c
  5441   0013E2                     u2335:
  5442   0013E2  1806               	xorwf	??_strncmp^0,w,c
  5443   0013E4  B4D8               	btfsc	status,2,c
  5444   0013E6  EFF7  F009         	goto	u2331
  5445   0013EA  EFF9  F009         	goto	u2330
  5446   0013EE                     u2331:
  5447   0013EE  EFA5  F009         	goto	l2770
  5448   0013F2                     u2330:
  5449   0013F2                     l2780:
  5450   0013F2  C001  FFF6         	movff	strncmp@l,tblptrl
  5451   0013F6  C002  FFF7         	movff	strncmp@l+1,tblptrh
  5452   0013FA  6AF8               	clrf	tblptru,c
  5453   0013FC  0E07               	movlw	(high __ramtop+-1)
  5454   0013FE  64F7               	cpfsgt	tblptrh,c
  5455   001400  D003               	bra	u2347
  5456   001402  0008               	tblrd		*
  5457   001404  50F5               	movf	tablat,w,c
  5458   001406  D005               	bra	u2340
  5459   001408                     u2347:
  5460   001408  CFF6 FFE9          	movff	tblptrl,fsr0l
  5461   00140C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5462   001410  50EF               	movf	indf0,w,c
  5463   001412                     u2340:
  5464   001412  6E06               	movwf	??_strncmp^0,c
  5465   001414  C003  FFF6         	movff	strncmp@r,tblptrl
  5466   001418                     	if	1	;There is more than 1 active tblptr byte
  5467   001418  0E08               	movlw	high __smallconst
  5468   00141A  6EF7               	movwf	tblptrh,c
  5469   00141C                     	endif
  5470   00141C                     	if	0	;tblptru may be non-zero
  5471   00141C                     	endif
  5472   00141C                     	if	0	;tblptru may be non-zero
  5473   00141C                     	endif
  5474   00141C  0008               	tblrd		*
  5475   00141E  50F5               	movf	tablat,w,c
  5476   001420  5C06               	subwf	??_strncmp^0,w,c
  5477   001422  6E01               	movwf	?_strncmp^0,c
  5478   001424  6A02               	clrf	(?_strncmp+1)^0,c
  5479   001426  A0D8               	btfss	status,0,c
  5480   001428  0602               	decf	(?_strncmp+1)^0,f,c
  5481   00142A                     l1274:
  5482   00142A  0012               	return		;funcret
  5483   00142C                     __end_of_strncmp:
  5484                           	callstack 0
  5485                           
  5486 ;; *************** function _strlen *****************
  5487 ;; Defined at:
  5488 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  5489 ;; Parameters:    Size  Location     Type
  5490 ;;  s               1    0[COMRAM] PTR const unsigned char 
  5491 ;;		 -> STR_19(7), STR_10(7), 
  5492 ;; Auto vars:     Size  Location     Type
  5493 ;;  a               1    2[COMRAM] PTR const unsigned char 
  5494 ;;		 -> STR_19(7), STR_10(7), 
  5495 ;; Return value:  Size  Location     Type
  5496 ;;                  2    0[COMRAM] unsigned int 
  5497 ;; Registers used:
  5498 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5499 ;; Tracked objects:
  5500 ;;		On entry : 0/0
  5501 ;;		On exit  : 0/0
  5502 ;;		Unchanged: 0/0
  5503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5504 ;;      Params:         2       0       0       0       0       0       0       0       0
  5505 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5506 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5507 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5508 ;;Total ram usage:        3 bytes
  5509 ;; Hardware stack levels used: 1
  5510 ;; Hardware stack levels required when called: 1
  5511 ;; This function calls:
  5512 ;;		Nothing
  5513 ;; This function is called by:
  5514 ;;		_strstr
  5515 ;; This function uses a non-reentrant model
  5516 ;;
  5517                           
  5518                           	psect	text27
  5519   00242E                     __ptext27:
  5520                           	callstack 0
  5521   00242E                     _strlen:
  5522                           	callstack 27
  5523   00242E  C001  F003         	movff	strlen@s,strlen@a
  5524   002432  EF1C  F012         	goto	l2758
  5525   002436                     l2756:
  5526   002436  2A01               	incf	strlen@s^0,f,c
  5527   002438                     l2758:
  5528   002438  C001  FFF6         	movff	strlen@s,tblptrl
  5529   00243C                     	if	1	;There is more than 1 active tblptr byte
  5530   00243C  0E08               	movlw	high __smallconst
  5531   00243E  6EF7               	movwf	tblptrh,c
  5532   002440                     	endif
  5533   002440                     	if	0	;tblptru may be non-zero
  5534   002440                     	endif
  5535   002440                     	if	0	;tblptru may be non-zero
  5536   002440                     	endif
  5537   002440  0008               	tblrd		*
  5538   002442  50F5               	movf	tablat,w,c
  5539   002444  0900               	iorlw	0
  5540   002446  A4D8               	btfss	status,2,c
  5541   002448  EF28  F012         	goto	u2271
  5542   00244C  EF2A  F012         	goto	u2270
  5543   002450                     u2271:
  5544   002450  EF1B  F012         	goto	l2756
  5545   002454                     u2270:
  5546   002454  5003               	movf	strlen@a^0,w,c
  5547   002456  5C01               	subwf	strlen@s^0,w,c
  5548   002458  6E01               	movwf	?_strlen^0,c
  5549   00245A  6A02               	clrf	(?_strlen+1)^0,c
  5550   00245C  BE01               	btfsc	?_strlen^0,7,c
  5551   00245E  0602               	decf	(?_strlen+1)^0,f,c
  5552   002460  0012               	return		;funcret
  5553   002462                     __end_of_strlen:
  5554                           	callstack 0
  5555                           
  5556 ;; *************** function _strchr *****************
  5557 ;; Defined at:
  5558 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  5559 ;; Parameters:    Size  Location     Type
  5560 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5561 ;;		 -> STR_21(2), STR_20(2), NULL(0), Display_GPS@buffer(100), 
  5562 ;;  c               2    2[COMRAM] int 
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;		None
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  2    0[COMRAM] PTR unsigned char 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5574 ;;      Params:         4       0       0       0       0       0       0       0       0
  5575 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5576 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5577 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5578 ;;Total ram usage:        6 bytes
  5579 ;; Hardware stack levels used: 1
  5580 ;; Hardware stack levels required when called: 1
  5581 ;; This function calls:
  5582 ;;		Nothing
  5583 ;; This function is called by:
  5584 ;;		_strstr
  5585 ;;		_strcspn
  5586 ;;		_strspn
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text28
  5591   001E56                     __ptext28:
  5592                           	callstack 0
  5593   001E56                     _strchr:
  5594                           	callstack 27
  5595   001E56                     l1261:
  5596   001E56  C001  FFF6         	movff	strchr@s,tblptrl
  5597   001E5A  C002  FFF7         	movff	strchr@s+1,tblptrh
  5598   001E5E  6AF8               	clrf	tblptru,c
  5599   001E60  0E07               	movlw	(high __ramtop+-1)
  5600   001E62  64F7               	cpfsgt	tblptrh,c
  5601   001E64  D003               	bra	u2077
  5602   001E66  0008               	tblrd		*
  5603   001E68  50F5               	movf	tablat,w,c
  5604   001E6A  D005               	bra	u2070
  5605   001E6C                     u2077:
  5606   001E6C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5607   001E70  CFF7 FFEA          	movff	tblptrh,fsr0h
  5608   001E74  50EF               	movf	indf0,w,c
  5609   001E76                     u2070:
  5610   001E76  1803               	xorwf	strchr@c^0,w,c
  5611   001E78  A4D8               	btfss	status,2,c
  5612   001E7A  EF41  F00F         	goto	u2081
  5613   001E7E  EF43  F00F         	goto	u2080
  5614   001E82                     u2081:
  5615   001E82  EF49  F00F         	goto	l2632
  5616   001E86                     u2080:
  5617   001E86  C001  F001         	movff	strchr@s,?_strchr
  5618   001E8A  C002  F002         	movff	strchr@s+1,?_strchr+1
  5619   001E8E  EF6B  F00F         	goto	l1263
  5620   001E92                     l2632:
  5621   001E92  5001               	movf	strchr@s^0,w,c
  5622   001E94  6E05               	movwf	??_strchr^0,c
  5623   001E96  5002               	movf	(strchr@s+1)^0,w,c
  5624   001E98  6E06               	movwf	(??_strchr+1)^0,c
  5625   001E9A  4A01               	infsnz	strchr@s^0,f,c
  5626   001E9C  2A02               	incf	(strchr@s+1)^0,f,c
  5627   001E9E  C005  FFF6         	movff	??_strchr,tblptrl
  5628   001EA2  C006  FFF7         	movff	??_strchr+1,tblptrh
  5629   001EA6  6AF8               	clrf	tblptru,c
  5630   001EA8  0E07               	movlw	(high __ramtop+-1)
  5631   001EAA  64F7               	cpfsgt	tblptrh,c
  5632   001EAC  D003               	bra	u2097
  5633   001EAE  0008               	tblrd		*
  5634   001EB0  50F5               	movf	tablat,w,c
  5635   001EB2  D005               	bra	u2090
  5636   001EB4                     u2097:
  5637   001EB4  CFF6 FFE9          	movff	tblptrl,fsr0l
  5638   001EB8  CFF7 FFEA          	movff	tblptrh,fsr0h
  5639   001EBC  50EF               	movf	indf0,w,c
  5640   001EBE                     u2090:
  5641   001EBE  0900               	iorlw	0
  5642   001EC0  A4D8               	btfss	status,2,c
  5643   001EC2  EF65  F00F         	goto	u2101
  5644   001EC6  EF67  F00F         	goto	u2100
  5645   001ECA                     u2101:
  5646   001ECA  EF2B  F00F         	goto	l1261
  5647   001ECE                     u2100:
  5648   001ECE  0E00               	movlw	0
  5649   001ED0  6E01               	movwf	?_strchr^0,c
  5650   001ED2  0E00               	movlw	0
  5651   001ED4  6E02               	movwf	(?_strchr+1)^0,c
  5652   001ED6                     l1263:
  5653   001ED6  0012               	return		;funcret
  5654   001ED8                     __end_of_strchr:
  5655                           	callstack 0
  5656                           
  5657 ;; *************** function _strncpy *****************
  5658 ;; Defined at:
  5659 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncpy.c"
  5660 ;; Parameters:    Size  Location     Type
  5661 ;;  d               2    0[COMRAM] PTR unsigned char 
  5662 ;;		 -> GPS_ParseGPRMC@buf(100), Display_GPS@lon(11), Display_GPS@lat(10), 
  5663 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5664 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), Display_GPS@buffer(100), 
  5665 ;;  n               2    4[COMRAM] unsigned int 
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  cp              2    6[COMRAM] PTR unsigned char 
  5668 ;;		 -> GPS_ParseGPRMC@buf(100), Display_GPS@lon(11), Display_GPS@lat(10), 
  5669 ;; Return value:  Size  Location     Type
  5670 ;;                  2    0[COMRAM] PTR unsigned char 
  5671 ;; Registers used:
  5672 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5673 ;; Tracked objects:
  5674 ;;		On entry : 0/0
  5675 ;;		On exit  : 0/0
  5676 ;;		Unchanged: 0/0
  5677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5678 ;;      Params:         6       0       0       0       0       0       0       0       0
  5679 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5681 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5682 ;;Total ram usage:        8 bytes
  5683 ;; Hardware stack levels used: 1
  5684 ;; Hardware stack levels required when called: 1
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_GPS_ParseGPRMC
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text29
  5693   001ED8                     __ptext29:
  5694                           	callstack 0
  5695   001ED8                     _strncpy:
  5696                           	callstack 27
  5697   001ED8  C001  F007         	movff	strncpy@d,strncpy@cp
  5698   001EDC  C002  F008         	movff	strncpy@d+1,strncpy@cp+1
  5699   001EE0  EF8D  F00F         	goto	l2868
  5700   001EE4                     l2862:
  5701   001EE4  0605               	decf	strncpy@n^0,f,c
  5702   001EE6  A0D8               	btfss	status,0,c
  5703   001EE8  0606               	decf	(strncpy@n+1)^0,f,c
  5704   001EEA  C003  FFD9         	movff	strncpy@s,fsr2l
  5705   001EEE  C004  FFDA         	movff	strncpy@s+1,fsr2h
  5706   001EF2  4A03               	infsnz	strncpy@s^0,f,c
  5707   001EF4  2A04               	incf	(strncpy@s+1)^0,f,c
  5708   001EF6  C007  FFE1         	movff	strncpy@cp,fsr1l
  5709   001EFA  C008  FFE2         	movff	strncpy@cp+1,fsr1h
  5710   001EFE  4A07               	infsnz	strncpy@cp^0,f,c
  5711   001F00  2A08               	incf	(strncpy@cp+1)^0,f,c
  5712   001F02  CFDF FFE7          	movff	indf2,indf1
  5713   001F06  50E7               	movf	indf1,w,c
  5714   001F08  A4D8               	btfss	status,2,c
  5715   001F0A  EF89  F00F         	goto	u2501
  5716   001F0E  EF8B  F00F         	goto	u2500
  5717   001F12                     u2501:
  5718   001F12  EF8D  F00F         	goto	l2868
  5719   001F16                     u2500:
  5720   001F16  EF9F  F00F         	goto	l2874
  5721   001F1A                     l2868:
  5722   001F1A  5005               	movf	strncpy@n^0,w,c
  5723   001F1C  1006               	iorwf	(strncpy@n+1)^0,w,c
  5724   001F1E  A4D8               	btfss	status,2,c
  5725   001F20  EF94  F00F         	goto	u2511
  5726   001F24  EF96  F00F         	goto	u2510
  5727   001F28                     u2511:
  5728   001F28  EF72  F00F         	goto	l2862
  5729   001F2C                     u2510:
  5730   001F2C  EF9F  F00F         	goto	l2874
  5731   001F30                     l2870:
  5732   001F30  C007  FFD9         	movff	strncpy@cp,fsr2l
  5733   001F34  C008  FFDA         	movff	strncpy@cp+1,fsr2h
  5734   001F38  6ADF               	clrf	indf2,c
  5735   001F3A  4A07               	infsnz	strncpy@cp^0,f,c
  5736   001F3C  2A08               	incf	(strncpy@cp+1)^0,f,c
  5737   001F3E                     l2874:
  5738   001F3E  0605               	decf	strncpy@n^0,f,c
  5739   001F40  A0D8               	btfss	status,0,c
  5740   001F42  0606               	decf	(strncpy@n+1)^0,f,c
  5741   001F44  2805               	incf	strncpy@n^0,w,c
  5742   001F46  E106               	bnz	u2521
  5743   001F48  2806               	incf	(strncpy@n+1)^0,w,c
  5744   001F4A  A4D8               	btfss	status,2,c
  5745   001F4C  EFAA  F00F         	goto	u2521
  5746   001F50  EFAC  F00F         	goto	u2520
  5747   001F54                     u2521:
  5748   001F54  EF98  F00F         	goto	l2870
  5749   001F58                     u2520:
  5750   001F58  0012               	return		;funcret
  5751   001F5A                     __end_of_strncpy:
  5752                           	callstack 0
  5753                           
  5754 ;; *************** function _Display_DHT11 *****************
  5755 ;; Defined at:
  5756 ;;		line 88 in file "main.c"
  5757 ;; Parameters:    Size  Location     Type
  5758 ;;		None
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  temp            1   68[COMRAM] unsigned char 
  5761 ;;  hum             1   67[COMRAM] unsigned char 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  1    wreg      void 
  5764 ;; Registers used:
  5765 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5771 ;;      Params:         0       0       0       0       0       0       0       0       0
  5772 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5774 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5775 ;;Total ram usage:        2 bytes
  5776 ;; Hardware stack levels used: 1
  5777 ;; Hardware stack levels required when called: 9
  5778 ;; This function calls:
  5779 ;;		_Clear_Line
  5780 ;;		_DHT11_Read
  5781 ;;		_LCD_String_xy
  5782 ;;		_sprintf
  5783 ;; This function is called by:
  5784 ;;		_main
  5785 ;; This function uses a non-reentrant model
  5786 ;;
  5787                           
  5788                           	psect	text30
  5789   001A92                     __ptext30:
  5790                           	callstack 0
  5791   001A92                     _Display_DHT11:
  5792                           	callstack 21
  5793   001A92                     
  5794                           ;main.c: 89:     unsigned char hum = 0, temp = 0;
  5795   001A92  6A44               	clrf	Display_DHT11@hum^0,c
  5796   001A94  6A45               	clrf	Display_DHT11@temp^0,c
  5797   001A96                     
  5798                           ;main.c: 90:     Clear_Line(0);
  5799   001A96  0E00               	movlw	0
  5800   001A98  EC7C  F011         	call	_Clear_Line
  5801                           
  5802                           ;main.c: 91:     Clear_Line(1);
  5803   001A9C  0E01               	movlw	1
  5804   001A9E  EC7C  F011         	call	_Clear_Line
  5805   001AA2                     
  5806                           ;main.c: 93:     if(DHT11_Read(&hum, &temp)) {
  5807   001AA2  0E44               	movlw	low Display_DHT11@hum
  5808   001AA4  6E03               	movwf	DHT11_Read@humidity^0,c
  5809   001AA6  0E45               	movlw	low Display_DHT11@temp
  5810   001AA8  6E04               	movwf	DHT11_Read@temperature^0,c
  5811   001AAA  EC32  F00C         	call	_DHT11_Read	;wreg free
  5812   001AAE  0900               	iorlw	0
  5813   001AB0  B4D8               	btfsc	status,2,c
  5814   001AB2  EF5D  F00D         	goto	u2971
  5815   001AB6  EF5F  F00D         	goto	u2970
  5816   001ABA                     u2971:
  5817   001ABA  EF89  F00D         	goto	l3254
  5818   001ABE                     u2970:
  5819   001ABE                     
  5820                           ;main.c: 94:         sprintf(lcd_buffer, "H: %d%%", hum);
  5821   001ABE  0E96               	movlw	low _lcd_buffer
  5822   001AC0  6E2F               	movwf	sprintf@s^0,c
  5823   001AC2  0E01               	movlw	high _lcd_buffer
  5824   001AC4  6E30               	movwf	(sprintf@s+1)^0,c
  5825   001AC6  0EC8               	movlw	low STR_5
  5826   001AC8  6E31               	movwf	sprintf@fmt^0,c
  5827   001ACA  C044  F032         	movff	Display_DHT11@hum,?_sprintf+3
  5828   001ACE  6A33               	clrf	(?_sprintf+4)^0,c
  5829   001AD0  ECC0  F011         	call	_sprintf	;wreg free
  5830   001AD4                     
  5831                           ;main.c: 95:         LCD_String_xy(0, 0, lcd_buffer);
  5832   001AD4  0E00               	movlw	0
  5833   001AD6  6E05               	movwf	LCD_String_xy@pos^0,c
  5834   001AD8  0E96               	movlw	low _lcd_buffer
  5835   001ADA  6E06               	movwf	LCD_String_xy@msg^0,c
  5836   001ADC  0E01               	movlw	high _lcd_buffer
  5837   001ADE  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  5838   001AE0  0E00               	movlw	0
  5839   001AE2  EC7D  F010         	call	_LCD_String_xy
  5840   001AE6                     
  5841                           ;main.c: 96:         sprintf(lcd_buffer, "T: %d\xDF""C", temp);
  5842   001AE6  0E96               	movlw	low _lcd_buffer
  5843   001AE8  6E2F               	movwf	sprintf@s^0,c
  5844   001AEA  0E01               	movlw	high _lcd_buffer
  5845   001AEC  6E30               	movwf	(sprintf@s+1)^0,c
  5846   001AEE  0ED0               	movlw	low STR_6
  5847   001AF0  6E31               	movwf	sprintf@fmt^0,c
  5848   001AF2  C045  F032         	movff	Display_DHT11@temp,?_sprintf+3
  5849   001AF6  6A33               	clrf	(?_sprintf+4)^0,c
  5850   001AF8  ECC0  F011         	call	_sprintf	;wreg free
  5851                           
  5852                           ;main.c: 97:         LCD_String_xy(1, 0, lcd_buffer);
  5853   001AFC  0E00               	movlw	0
  5854   001AFE  6E05               	movwf	LCD_String_xy@pos^0,c
  5855   001B00  0E96               	movlw	low _lcd_buffer
  5856   001B02  6E06               	movwf	LCD_String_xy@msg^0,c
  5857   001B04  0E01               	movlw	high _lcd_buffer
  5858   001B06  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  5859   001B08  0E01               	movlw	1
  5860   001B0A  EC7D  F010         	call	_LCD_String_xy
  5861                           
  5862                           ;main.c: 98:     } else {
  5863   001B0E  EF9F  F00D         	goto	l79
  5864   001B12                     l3254:
  5865                           
  5866                           ;main.c: 99:         LCD_String_xy(0, 0, "DHT11: Error");
  5867   001B12  0E00               	movlw	0
  5868   001B14  6E05               	movwf	LCD_String_xy@pos^0,c
  5869   001B16  0E86               	movlw	low STR_7
  5870   001B18  6E06               	movwf	LCD_String_xy@msg^0,c
  5871   001B1A  5006               	movf	LCD_String_xy@msg^0,w,c
  5872   001B1C  A4D8               	btfss	status,2,c
  5873   001B1E  0E08               	movlw	high __smallconst
  5874   001B20  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  5875   001B22  0E00               	movlw	0
  5876   001B24  EC7D  F010         	call	_LCD_String_xy
  5877                           
  5878                           ;main.c: 100:         LCD_String_xy(1, 0, "Reintentando...");
  5879   001B28  0E00               	movlw	0
  5880   001B2A  6E05               	movwf	LCD_String_xy@pos^0,c
  5881   001B2C  0E3E               	movlw	low STR_8
  5882   001B2E  6E06               	movwf	LCD_String_xy@msg^0,c
  5883   001B30  5006               	movf	LCD_String_xy@msg^0,w,c
  5884   001B32  A4D8               	btfss	status,2,c
  5885   001B34  0E08               	movlw	high __smallconst
  5886   001B36  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  5887   001B38  0E01               	movlw	1
  5888   001B3A  EC7D  F010         	call	_LCD_String_xy
  5889   001B3E                     l79:
  5890   001B3E  0012               	return		;funcret
  5891   001B40                     __end_of_Display_DHT11:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function _sprintf *****************
  5895 ;; Defined at:
  5896 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  s               2   46[COMRAM] PTR unsigned char 
  5899 ;;		 -> lcd_buffer(17), 
  5900 ;;  fmt             1   48[COMRAM] PTR const unsigned char 
  5901 ;;		 -> STR_18(21), STR_17(23), STR_12(9), STR_11(9), 
  5902 ;;		 -> STR_6(8), STR_5(8), 
  5903 ;; Auto vars:     Size  Location     Type
  5904 ;;  f              11   56[COMRAM] struct _IO_FILE
  5905 ;;  ret             2    0        int 
  5906 ;;  ap              1   55[COMRAM] PTR void [1]
  5907 ;;		 -> ?_sprintf(2), 
  5908 ;; Return value:  Size  Location     Type
  5909 ;;                  2   46[COMRAM] int 
  5910 ;; Registers used:
  5911 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5912 ;; Tracked objects:
  5913 ;;		On entry : 0/0
  5914 ;;		On exit  : 0/0
  5915 ;;		Unchanged: 0/0
  5916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5917 ;;      Params:         9       0       0       0       0       0       0       0       0
  5918 ;;      Locals:        12       0       0       0       0       0       0       0       0
  5919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5920 ;;      Totals:        21       0       0       0       0       0       0       0       0
  5921 ;;Total ram usage:       21 bytes
  5922 ;; Hardware stack levels used: 1
  5923 ;; Hardware stack levels required when called: 8
  5924 ;; This function calls:
  5925 ;;		_vfprintf
  5926 ;; This function is called by:
  5927 ;;		_Display_DHT11
  5928 ;;		_Display_GPS
  5929 ;;		_Display_RTC
  5930 ;; This function uses a non-reentrant model
  5931 ;;
  5932                           
  5933                           	psect	text31
  5934   002380                     __ptext31:
  5935                           	callstack 0
  5936   002380                     _sprintf:
  5937                           	callstack 21
  5938   002380  0E32               	movlw	low (?_sprintf+3)
  5939   002382  6E38               	movwf	sprintf@ap^0,c
  5940   002384  C02F  F039         	movff	sprintf@s,sprintf@f
  5941   002388  C030  F03A         	movff	sprintf@s+1,sprintf@f+1
  5942   00238C  0E00               	movlw	0
  5943   00238E  6E3C               	movwf	(sprintf@f+3)^0,c
  5944   002390  0E00               	movlw	0
  5945   002392  6E3B               	movwf	(sprintf@f+2)^0,c
  5946   002394  0E00               	movlw	0
  5947   002396  6E43               	movwf	(sprintf@f+10)^0,c
  5948   002398  0E00               	movlw	0
  5949   00239A  6E42               	movwf	(sprintf@f+9)^0,c
  5950   00239C  0E39               	movlw	low sprintf@f
  5951   00239E  6E2B               	movwf	vfprintf@fp^0,c
  5952   0023A0  C031  F02C         	movff	sprintf@fmt,vfprintf@fmt
  5953   0023A4  0E38               	movlw	low sprintf@ap
  5954   0023A6  6E2D               	movwf	vfprintf@ap^0,c
  5955   0023A8  ECA0  F011         	call	_vfprintf	;wreg free
  5956   0023AC  503B               	movf	(sprintf@f+2)^0,w,c
  5957   0023AE  242F               	addwf	sprintf@s^0,w,c
  5958   0023B0  6ED9               	movwf	fsr2l,c
  5959   0023B2  503C               	movf	(sprintf@f+3)^0,w,c
  5960   0023B4  2030               	addwfc	(sprintf@s+1)^0,w,c
  5961   0023B6  6EDA               	movwf	fsr2h,c
  5962   0023B8  6ADF               	clrf	indf2,c
  5963   0023BA  0012               	return		;funcret
  5964   0023BC                     __end_of_sprintf:
  5965                           	callstack 0
  5966                           
  5967 ;; *************** function _vfprintf *****************
  5968 ;; Defined at:
  5969 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  fp              1   42[COMRAM] PTR struct _IO_FILE
  5972 ;;		 -> sprintf@f(11), 
  5973 ;;  fmt             1   43[COMRAM] PTR const unsigned char 
  5974 ;;		 -> STR_18(21), STR_17(23), STR_12(9), STR_11(9), 
  5975 ;;		 -> STR_6(8), STR_5(8), 
  5976 ;;  ap              1   44[COMRAM] PTR PTR void 
  5977 ;;		 -> sprintf@ap(1), 
  5978 ;; Auto vars:     Size  Location     Type
  5979 ;;  cfmt            1   45[COMRAM] PTR unsigned char 
  5980 ;;		 -> STR_18(21), STR_17(23), STR_12(9), STR_11(9), 
  5981 ;;		 -> STR_6(8), STR_5(8), 
  5982 ;; Return value:  Size  Location     Type
  5983 ;;                  2   42[COMRAM] int 
  5984 ;; Registers used:
  5985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5986 ;; Tracked objects:
  5987 ;;		On entry : 0/0
  5988 ;;		On exit  : 0/0
  5989 ;;		Unchanged: 0/0
  5990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5991 ;;      Params:         3       0       0       0       0       0       0       0       0
  5992 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5993 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5994 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5995 ;;Total ram usage:        4 bytes
  5996 ;; Hardware stack levels used: 1
  5997 ;; Hardware stack levels required when called: 7
  5998 ;; This function calls:
  5999 ;;		_vfpfcnvrt
  6000 ;; This function is called by:
  6001 ;;		_sprintf
  6002 ;; This function uses a non-reentrant model
  6003 ;;
  6004                           
  6005                           	psect	text32
  6006   002340                     __ptext32:
  6007                           	callstack 0
  6008   002340                     _vfprintf:
  6009                           	callstack 21
  6010   002340                     
  6011                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  6012   002340  C02C  F02E         	movff	vfprintf@fmt,vfprintf@cfmt
  6013                           
  6014                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6015   002344  EFAD  F011         	goto	l2968
  6016   002348                     l2966:
  6017                           
  6018                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  6019   002348  C02B  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  6020   00234C  0E2E               	movlw	low vfprintf@cfmt
  6021   00234E  6E21               	movwf	vfpfcnvrt@fmt^0,c
  6022   002350  C02D  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  6023   002354  6A23               	clrf	(vfpfcnvrt@ap+1)^0,c
  6024   002356  EC75  F004         	call	_vfpfcnvrt	;wreg free
  6025   00235A                     l2968:
  6026                           
  6027                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  6028   00235A  C02E  FFF6         	movff	vfprintf@cfmt,tblptrl
  6029   00235E                     	if	1	;There is more than 1 active tblptr byte
  6030   00235E  0E08               	movlw	high __smallconst
  6031   002360  6EF7               	movwf	tblptrh,c
  6032   002362                     	endif
  6033   002362                     	if	0	;tblptru may be non-zero
  6034   002362                     	endif
  6035   002362                     	if	0	;tblptru may be non-zero
  6036   002362                     	endif
  6037   002362  0008               	tblrd		*
  6038   002364  50F5               	movf	tablat,w,c
  6039   002366  0900               	iorlw	0
  6040   002368  A4D8               	btfss	status,2,c
  6041   00236A  EFB9  F011         	goto	u2621
  6042   00236E  EFBB  F011         	goto	u2620
  6043   002372                     u2621:
  6044   002372  EFA4  F011         	goto	l2966
  6045   002376                     u2620:
  6046   002376                     
  6047                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  6048   002376  0E00               	movlw	0
  6049   002378  6E2C               	movwf	(?_vfprintf+1)^0,c
  6050   00237A  0E00               	movlw	0
  6051   00237C  6E2B               	movwf	?_vfprintf^0,c
  6052   00237E  0012               	return		;funcret
  6053   002380                     __end_of_vfprintf:
  6054                           	callstack 0
  6055                           
  6056 ;; *************** function _vfpfcnvrt *****************
  6057 ;; Defined at:
  6058 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6059 ;; Parameters:    Size  Location     Type
  6060 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  6061 ;;		 -> sprintf@f(11), 
  6062 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  6063 ;;		 -> vfprintf@cfmt(1), 
  6064 ;;  ap              2   33[COMRAM] PTR PTR void 
  6065 ;;		 -> sprintf@ap(1), 
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;  convarg         4   36[COMRAM] struct .
  6068 ;;  done            1   41[COMRAM] _Bool 
  6069 ;;  cp              1   40[COMRAM] PTR unsigned char 
  6070 ;;		 -> STR_18(21), STR_17(23), STR_12(9), STR_11(9), 
  6071 ;;		 -> STR_6(8), STR_5(8), 
  6072 ;;  c               1    0        unsigned char 
  6073 ;; Return value:  Size  Location     Type
  6074 ;;                  1    wreg      void 
  6075 ;; Registers used:
  6076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6077 ;; Tracked objects:
  6078 ;;		On entry : 0/0
  6079 ;;		On exit  : 0/0
  6080 ;;		Unchanged: 0/0
  6081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6082 ;;      Params:         4       0       0       0       0       0       0       0       0
  6083 ;;      Locals:         6       0       0       0       0       0       0       0       0
  6084 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6085 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6086 ;;Total ram usage:       11 bytes
  6087 ;; Hardware stack levels used: 1
  6088 ;; Hardware stack levels required when called: 6
  6089 ;; This function calls:
  6090 ;;		_dtoa
  6091 ;;		_fputc
  6092 ;;		_read_prec_or_width
  6093 ;;		_stoa
  6094 ;; This function is called by:
  6095 ;;		_vfprintf
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text33
  6100   0008EA                     __ptext33:
  6101                           	callstack 0
  6102   0008EA                     _vfpfcnvrt:
  6103                           	callstack 21
  6104   0008EA                     
  6105                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  6106   0008EA  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6107   0008EC  6ED9               	movwf	fsr2l,c
  6108   0008EE  6ADA               	clrf	fsr2h,c
  6109   0008F0  CFDF FFF6          	movff	indf2,tblptrl
  6110   0008F4                     	if	1	;There is more than 1 active tblptr byte
  6111   0008F4  0E08               	movlw	high __smallconst
  6112   0008F6  6EF7               	movwf	tblptrh,c
  6113   0008F8                     	endif
  6114   0008F8                     	if	0	;tblptru may be non-zero
  6115   0008F8                     	endif
  6116   0008F8                     	if	0	;tblptru may be non-zero
  6117   0008F8                     	endif
  6118   0008F8  0008               	tblrd		*
  6119   0008FA  50F5               	movf	tablat,w,c
  6120   0008FC  0A25               	xorlw	37
  6121   0008FE  A4D8               	btfss	status,2,c
  6122   000900  EF84  F004         	goto	u2161
  6123   000904  EF86  F004         	goto	u2160
  6124   000908                     u2161:
  6125   000908  EFA6  F005         	goto	l2748
  6126   00090C                     u2160:
  6127   00090C                     
  6128                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  6129   00090C  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6130   00090E  6ED9               	movwf	fsr2l,c
  6131   000910  6ADA               	clrf	fsr2h,c
  6132   000912  2ADF               	incf	indf2,f,c
  6133   000914                     
  6134                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  6135   000914  0E00               	movlw	0
  6136   000916  6E51               	movwf	(_width+1)^0,c
  6137   000918  0E00               	movlw	0
  6138   00091A  6E50               	movwf	_width^0,c
  6139   00091C  C050  F055         	movff	_width,_flags
  6140   000920                     
  6141                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  6142   000920  6852               	setf	_prec^0,c
  6143   000922  6853               	setf	(_prec+1)^0,c
  6144   000924                     
  6145                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  6146   000924  6A2A               	clrf	vfpfcnvrt@done^0,c
  6147                           
  6148                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6149   000926  EFAF  F004         	goto	l2692
  6150   00092A                     l2682:
  6151                           
  6152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  6153   00092A  8255               	bsf	_flags^0,1,c
  6154   00092C                     
  6155                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  6156   00092C  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6157   00092E  6ED9               	movwf	fsr2l,c
  6158   000930  6ADA               	clrf	fsr2h,c
  6159   000932  2ADF               	incf	indf2,f,c
  6160                           
  6161                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  6162   000934  EFAF  F004         	goto	l2692
  6163   000938                     l2686:
  6164                           
  6165                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  6166   000938  0E01               	movlw	1
  6167   00093A  6E2A               	movwf	vfpfcnvrt@done^0,c
  6168                           
  6169                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  6170   00093C  EFAF  F004         	goto	l2692
  6171   000940                     l2690:
  6172   000940  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6173   000942  6ED9               	movwf	fsr2l,c
  6174   000944  6ADA               	clrf	fsr2h,c
  6175   000946  CFDF FFF6          	movff	indf2,tblptrl
  6176   00094A                     	if	1	;There is more than 1 active tblptr byte
  6177   00094A  0E08               	movlw	high __smallconst
  6178   00094C  6EF7               	movwf	tblptrh,c
  6179   00094E                     	endif
  6180   00094E                     	if	0	;tblptru may be non-zero
  6181   00094E                     	endif
  6182   00094E                     	if	0	;tblptru may be non-zero
  6183   00094E                     	endif
  6184   00094E  0008               	tblrd		*
  6185   000950  50F5               	movf	tablat,w,c
  6186                           
  6187                           ; Switch size 1, requested type "simple"
  6188                           ; Number of cases is 1, Range of values is 48 to 48
  6189                           ; switch strategies available:
  6190                           ; Name         Instructions Cycles
  6191                           ; simple_byte            4     3 (average)
  6192                           ;	Chosen strategy is simple_byte
  6193   000952  0A30               	xorlw	48	; case 48
  6194   000954  B4D8               	btfsc	status,2,c
  6195   000956  EF95  F004         	goto	l2682
  6196   00095A  EF9C  F004         	goto	l2686
  6197   00095E                     l2692:
  6198                           
  6199                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  6200   00095E  502A               	movf	vfpfcnvrt@done^0,w,c
  6201   000960  B4D8               	btfsc	status,2,c
  6202   000962  EFB5  F004         	goto	u2171
  6203   000966  EFB7  F004         	goto	u2170
  6204   00096A                     u2171:
  6205   00096A  EFA0  F004         	goto	l2690
  6206   00096E                     u2170:
  6207   00096E                     
  6208                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  6209   00096E  C021  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  6210   000972  C022  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  6211   000976  EC49  F00E         	call	_read_prec_or_width	;wreg free
  6212   00097A  C001  F050         	movff	?_read_prec_or_width,_width
  6213   00097E  C002  F051         	movff	?_read_prec_or_width+1,_width+1
  6214   000982                     
  6215                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  6216   000982  BE51               	btfsc	(_width+1)^0,7,c
  6217   000984  EFC8  F004         	goto	u2180
  6218   000988  EFC6  F004         	goto	u2181
  6219   00098C                     u2181:
  6220   00098C  EFCD  F004         	goto	l2700
  6221   000990                     u2180:
  6222   000990                     
  6223                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  6224   000990  8055               	bsf	_flags^0,0,c
  6225                           
  6226                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  6227   000992  6C50               	negf	_width^0,c
  6228   000994  1E51               	comf	(_width+1)^0,f,c
  6229   000996  B0D8               	btfsc	status,0,c
  6230   000998  2A51               	incf	(_width+1)^0,f,c
  6231   00099A                     l2700:
  6232                           
  6233                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  6234   00099A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6235   00099C  6ED9               	movwf	fsr2l,c
  6236   00099E  6ADA               	clrf	fsr2h,c
  6237   0009A0  50DF               	movf	indf2,w,c
  6238   0009A2  6E29               	movwf	vfpfcnvrt@cp^0,c
  6239   0009A4                     
  6240                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  6241   0009A4  C029  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6242   0009A8                     	if	1	;There is more than 1 active tblptr byte
  6243   0009A8  0E08               	movlw	high __smallconst
  6244   0009AA  6EF7               	movwf	tblptrh,c
  6245   0009AC                     	endif
  6246   0009AC                     	if	0	;tblptru may be non-zero
  6247   0009AC                     	endif
  6248   0009AC                     	if	0	;tblptru may be non-zero
  6249   0009AC                     	endif
  6250   0009AC  0008               	tblrd		*
  6251   0009AE  50F5               	movf	tablat,w,c
  6252   0009B0  0A64               	xorlw	100
  6253   0009B2  B4D8               	btfsc	status,2,c
  6254   0009B4  EFDE  F004         	goto	u2191
  6255   0009B8  EFE0  F004         	goto	u2190
  6256   0009BC                     u2191:
  6257   0009BC  EFEE  F004         	goto	l2706
  6258   0009C0                     u2190:
  6259   0009C0  C029  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6260   0009C4                     	if	1	;There is more than 1 active tblptr byte
  6261   0009C4  0E08               	movlw	high __smallconst
  6262   0009C6  6EF7               	movwf	tblptrh,c
  6263   0009C8                     	endif
  6264   0009C8                     	if	0	;tblptru may be non-zero
  6265   0009C8                     	endif
  6266   0009C8                     	if	0	;tblptru may be non-zero
  6267   0009C8                     	endif
  6268   0009C8  0008               	tblrd		*
  6269   0009CA  50F5               	movf	tablat,w,c
  6270   0009CC  0A69               	xorlw	105
  6271   0009CE  A4D8               	btfss	status,2,c
  6272   0009D0  EFEC  F004         	goto	u2201
  6273   0009D4  EFEE  F004         	goto	u2200
  6274   0009D8                     u2201:
  6275   0009D8  EF0A  F005         	goto	l1188
  6276   0009DC                     u2200:
  6277   0009DC                     l2706:
  6278                           
  6279                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  6280   0009DC  C022  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6281   0009E0  C023  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6282   0009E4  0E02               	movlw	2
  6283   0009E6  26DF               	addwf	indf2,f,c
  6284   0009E8  5CDF               	subwf	indf2,w,c
  6285   0009EA  6ED9               	movwf	fsr2l,c
  6286   0009EC  6ADA               	clrf	fsr2h,c
  6287   0009EE  CFDE F025          	movff	postinc2,vfpfcnvrt@convarg
  6288   0009F2  CFDE F026          	movff	postinc2,vfpfcnvrt@convarg+1
  6289   0009F6                     
  6290                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  6291   0009F6  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6292   0009F8  6ED9               	movwf	fsr2l,c
  6293   0009FA  6ADA               	clrf	fsr2h,c
  6294   0009FC  2829               	incf	vfpfcnvrt@cp^0,w,c
  6295   0009FE  6EDF               	movwf	indf2,c
  6296   000A00                     
  6297                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  6298   000A00  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  6299   000A04  C025  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  6300   000A08  C026  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  6301   000A0C  EC9B  F007         	call	_dtoa	;wreg free
  6302   000A10  EFB7  F005         	goto	l1191
  6303   000A14                     l1188:
  6304                           
  6305                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  6306   000A14  6A2A               	clrf	vfpfcnvrt@done^0,c
  6307   000A16                     
  6308                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  6309   000A16  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6310   000A18  6ED9               	movwf	fsr2l,c
  6311   000A1A  6ADA               	clrf	fsr2h,c
  6312   000A1C  CFDF FFF6          	movff	indf2,tblptrl
  6313   000A20                     	if	1	;There is more than 1 active tblptr byte
  6314   000A20  0E08               	movlw	high __smallconst
  6315   000A22  6EF7               	movwf	tblptrh,c
  6316   000A24                     	endif
  6317   000A24                     	if	0	;tblptru may be non-zero
  6318   000A24                     	endif
  6319   000A24                     	if	0	;tblptru may be non-zero
  6320   000A24                     	endif
  6321   000A24  0008               	tblrd		*
  6322   000A26  50F5               	movf	tablat,w,c
  6323   000A28  0A73               	xorlw	115
  6324   000A2A  A4D8               	btfss	status,2,c
  6325   000A2C  EF1A  F005         	goto	u2211
  6326   000A30  EF1C  F005         	goto	u2210
  6327   000A34                     u2211:
  6328   000A34  EF24  F005         	goto	l2720
  6329   000A38                     u2210:
  6330   000A38                     
  6331                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  6332   000A38  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6333   000A3A  6ED9               	movwf	fsr2l,c
  6334   000A3C  6ADA               	clrf	fsr2h,c
  6335   000A3E  2ADF               	incf	indf2,f,c
  6336   000A40                     l2718:
  6337                           
  6338                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  6339   000A40  0E01               	movlw	1
  6340   000A42  6E2A               	movwf	vfpfcnvrt@done^0,c
  6341                           
  6342                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1660:   }
  6343   000A44  EF66  F005         	goto	l2730
  6344   000A48                     l2720:
  6345   000A48  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6346   000A4A  6ED9               	movwf	fsr2l,c
  6347   000A4C  6ADA               	clrf	fsr2h,c
  6348   000A4E  CFDF FFF6          	movff	indf2,tblptrl
  6349   000A52                     	if	1	;There is more than 1 active tblptr byte
  6350   000A52  0E08               	movlw	high __smallconst
  6351   000A54  6EF7               	movwf	tblptrh,c
  6352   000A56                     	endif
  6353   000A56                     	if	0	;tblptru may be non-zero
  6354   000A56                     	endif
  6355   000A56                     	if	0	;tblptru may be non-zero
  6356   000A56                     	endif
  6357   000A56  0008               	tblrd		*
  6358   000A58  50F5               	movf	tablat,w,c
  6359   000A5A  0A6C               	xorlw	108
  6360   000A5C  A4D8               	btfss	status,2,c
  6361   000A5E  EF33  F005         	goto	u2221
  6362   000A62  EF35  F005         	goto	u2220
  6363   000A66                     u2221:
  6364   000A66  EF66  F005         	goto	l2730
  6365   000A6A                     u2220:
  6366   000A6A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6367   000A6C  6ED9               	movwf	fsr2l,c
  6368   000A6E  6ADA               	clrf	fsr2h,c
  6369   000A70  50DF               	movf	indf2,w,c
  6370   000A72  6E24               	movwf	??_vfpfcnvrt^0,c
  6371   000A74  0E01               	movlw	1
  6372   000A76  2624               	addwf	??_vfpfcnvrt^0,f,c
  6373   000A78  C024  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6374   000A7C                     	if	1	;There is more than 1 active tblptr byte
  6375   000A7C  0E08               	movlw	high __smallconst
  6376   000A7E  6EF7               	movwf	tblptrh,c
  6377   000A80                     	endif
  6378   000A80                     	if	0	;tblptru may be non-zero
  6379   000A80                     	endif
  6380   000A80                     	if	0	;tblptru may be non-zero
  6381   000A80                     	endif
  6382   000A80  0008               	tblrd		*
  6383   000A82  50F5               	movf	tablat,w,c
  6384   000A84  0A6C               	xorlw	108
  6385   000A86  A4D8               	btfss	status,2,c
  6386   000A88  EF48  F005         	goto	u2231
  6387   000A8C  EF4A  F005         	goto	u2230
  6388   000A90                     u2231:
  6389   000A90  EF66  F005         	goto	l2730
  6390   000A94                     u2230:
  6391   000A94  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6392   000A96  6ED9               	movwf	fsr2l,c
  6393   000A98  6ADA               	clrf	fsr2h,c
  6394   000A9A  50DF               	movf	indf2,w,c
  6395   000A9C  6E24               	movwf	??_vfpfcnvrt^0,c
  6396   000A9E  0E02               	movlw	2
  6397   000AA0  2624               	addwf	??_vfpfcnvrt^0,f,c
  6398   000AA2  C024  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6399   000AA6                     	if	1	;There is more than 1 active tblptr byte
  6400   000AA6  0E08               	movlw	high __smallconst
  6401   000AA8  6EF7               	movwf	tblptrh,c
  6402   000AAA                     	endif
  6403   000AAA                     	if	0	;tblptru may be non-zero
  6404   000AAA                     	endif
  6405   000AAA                     	if	0	;tblptru may be non-zero
  6406   000AAA                     	endif
  6407   000AAA  0008               	tblrd		*
  6408   000AAC  50F5               	movf	tablat,w,c
  6409   000AAE  0A73               	xorlw	115
  6410   000AB0  A4D8               	btfss	status,2,c
  6411   000AB2  EF5D  F005         	goto	u2241
  6412   000AB6  EF5F  F005         	goto	u2240
  6413   000ABA                     u2241:
  6414   000ABA  EF66  F005         	goto	l2730
  6415   000ABE                     u2240:
  6416   000ABE                     
  6417                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  6418   000ABE  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6419   000AC0  6ED9               	movwf	fsr2l,c
  6420   000AC2  6ADA               	clrf	fsr2h,c
  6421   000AC4  0E03               	movlw	3
  6422   000AC6  26DF               	addwf	indf2,f,c
  6423   000AC8  EF20  F005         	goto	l2718
  6424   000ACC                     l2730:
  6425                           
  6426                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  6427   000ACC  502A               	movf	vfpfcnvrt@done^0,w,c
  6428   000ACE  B4D8               	btfsc	status,2,c
  6429   000AD0  EF6C  F005         	goto	u2251
  6430   000AD4  EF6E  F005         	goto	u2250
  6431   000AD8                     u2251:
  6432   000AD8  EF81  F005         	goto	l2736
  6433   000ADC                     u2250:
  6434   000ADC                     
  6435                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
  6436   000ADC  C020  F009         	movff	vfpfcnvrt@fp,stoa@fp
  6437   000AE0  C022  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6438   000AE4  C023  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6439   000AE8  0E02               	movlw	2
  6440   000AEA  26DF               	addwf	indf2,f,c
  6441   000AEC  5CDF               	subwf	indf2,w,c
  6442   000AEE  6ED9               	movwf	fsr2l,c
  6443   000AF0  6ADA               	clrf	fsr2h,c
  6444   000AF2  CFDE F00A          	movff	postinc2,stoa@s
  6445   000AF6  CFDE F00B          	movff	postinc2,stoa@s+1
  6446   000AFA  EC4D  F008         	call	_stoa	;wreg free
  6447   000AFE  EFB7  F005         	goto	l1191
  6448   000B02                     l2736:
  6449                           
  6450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  6451   000B02  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6452   000B04  6ED9               	movwf	fsr2l,c
  6453   000B06  6ADA               	clrf	fsr2h,c
  6454   000B08  CFDF FFF6          	movff	indf2,tblptrl
  6455   000B0C                     	if	1	;There is more than 1 active tblptr byte
  6456   000B0C  0E08               	movlw	high __smallconst
  6457   000B0E  6EF7               	movwf	tblptrh,c
  6458   000B10                     	endif
  6459   000B10                     	if	0	;tblptru may be non-zero
  6460   000B10                     	endif
  6461   000B10                     	if	0	;tblptru may be non-zero
  6462   000B10                     	endif
  6463   000B10  0008               	tblrd		*
  6464   000B12  50F5               	movf	tablat,w,c
  6465   000B14  0A25               	xorlw	37
  6466   000B16  A4D8               	btfss	status,2,c
  6467   000B18  EF90  F005         	goto	u2261
  6468   000B1C  EF92  F005         	goto	u2260
  6469   000B20                     u2261:
  6470   000B20  EFA0  F005         	goto	l2744
  6471   000B24                     u2260:
  6472   000B24                     
  6473                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  6474   000B24  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6475   000B26  6ED9               	movwf	fsr2l,c
  6476   000B28  6ADA               	clrf	fsr2h,c
  6477   000B2A  2ADF               	incf	indf2,f,c
  6478   000B2C                     
  6479                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  6480   000B2C  0E00               	movlw	0
  6481   000B2E  6E02               	movwf	(fputc@c+1)^0,c
  6482   000B30  0E25               	movlw	37
  6483   000B32  6E01               	movwf	fputc@c^0,c
  6484   000B34  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6485   000B38  EC93  F00C         	call	_fputc	;wreg free
  6486   000B3C  EFB7  F005         	goto	l1191
  6487   000B40                     l2744:
  6488                           
  6489                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6490   000B40  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6491   000B42  6ED9               	movwf	fsr2l,c
  6492   000B44  6ADA               	clrf	fsr2h,c
  6493   000B46  2ADF               	incf	indf2,f,c
  6494   000B48  EFB7  F005         	goto	l1191
  6495   000B4C                     l2748:
  6496                           
  6497                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6498   000B4C  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6499   000B4E  6ED9               	movwf	fsr2l,c
  6500   000B50  6ADA               	clrf	fsr2h,c
  6501   000B52  CFDF FFF6          	movff	indf2,tblptrl
  6502   000B56                     	if	1	;There is more than 1 active tblptr byte
  6503   000B56  0E08               	movlw	high __smallconst
  6504   000B58  6EF7               	movwf	tblptrh,c
  6505   000B5A                     	endif
  6506   000B5A                     	if	0	;tblptru may be non-zero
  6507   000B5A                     	endif
  6508   000B5A                     	if	0	;tblptru may be non-zero
  6509   000B5A                     	endif
  6510   000B5A  0008               	tblrd		*
  6511   000B5C  50F5               	movf	tablat,w,c
  6512   000B5E  6E01               	movwf	fputc@c^0,c
  6513   000B60  6A02               	clrf	(fputc@c+1)^0,c
  6514   000B62  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6515   000B66  EC93  F00C         	call	_fputc	;wreg free
  6516   000B6A  EFA0  F005         	goto	l2744
  6517   000B6E                     l1191:
  6518   000B6E  0012               	return		;funcret
  6519   000B70                     __end_of_vfpfcnvrt:
  6520                           	callstack 0
  6521                           
  6522 ;; *************** function _stoa *****************
  6523 ;; Defined at:
  6524 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6525 ;; Parameters:    Size  Location     Type
  6526 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
  6527 ;;		 -> sprintf@f(11), 
  6528 ;;  s               2    9[COMRAM] PTR unsigned char 
  6529 ;;		 -> ?_sprintf(2), Display_GPS@ew(2), Display_GPS@lon(11), Display_GPS@ns(2), 
  6530 ;;		 -> Display_GPS@lat(10), 
  6531 ;; Auto vars:     Size  Location     Type
  6532 ;;  l               2   19[COMRAM] int 
  6533 ;;  cp              2   17[COMRAM] PTR unsigned char 
  6534 ;;		 -> STR_23(7), ?_sprintf(2), Display_GPS@ew(2), Display_GPS@lon(11), 
  6535 ;;		 -> Display_GPS@ns(2), Display_GPS@lat(10), 
  6536 ;;  w               2   15[COMRAM] int 
  6537 ;;  p               2   13[COMRAM] int 
  6538 ;; Return value:  Size  Location     Type
  6539 ;;                  1    wreg      void 
  6540 ;; Registers used:
  6541 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6542 ;; Tracked objects:
  6543 ;;		On entry : 0/0
  6544 ;;		On exit  : 0/0
  6545 ;;		Unchanged: 0/0
  6546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6547 ;;      Params:         3       0       0       0       0       0       0       0       0
  6548 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6549 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6550 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6551 ;;Total ram usage:       13 bytes
  6552 ;; Hardware stack levels used: 1
  6553 ;; Hardware stack levels required when called: 3
  6554 ;; This function calls:
  6555 ;;		_fputc
  6556 ;; This function is called by:
  6557 ;;		_vfpfcnvrt
  6558 ;; This function uses a non-reentrant model
  6559 ;;
  6560                           
  6561                           	psect	text34
  6562   00109A                     __ptext34:
  6563                           	callstack 0
  6564   00109A                     _stoa:
  6565                           	callstack 23
  6566   00109A                     
  6567                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
  6568   00109A  C00A  F012         	movff	stoa@s,stoa@cp
  6569   00109E  C00B  F013         	movff	stoa@s+1,stoa@cp+1
  6570                           
  6571                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
  6572   0010A2  5012               	movf	stoa@cp^0,w,c
  6573   0010A4  1013               	iorwf	(stoa@cp+1)^0,w,c
  6574   0010A6  A4D8               	btfss	status,2,c
  6575   0010A8  EF58  F008         	goto	u1961
  6576   0010AC  EF5A  F008         	goto	u1960
  6577   0010B0                     u1961:
  6578   0010B0  EF60  F008         	goto	l2584
  6579   0010B4                     u1960:
  6580   0010B4                     
  6581                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
  6582   0010B4  0ED8               	movlw	low STR_23
  6583   0010B6  6E12               	movwf	stoa@cp^0,c
  6584   0010B8  5012               	movf	stoa@cp^0,w,c
  6585   0010BA  A4D8               	btfss	status,2,c
  6586   0010BC  0E08               	movlw	high __smallconst
  6587   0010BE  6E13               	movwf	(stoa@cp+1)^0,c
  6588   0010C0                     l2584:
  6589                           
  6590                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
  6591   0010C0  0E00               	movlw	0
  6592   0010C2  6E15               	movwf	(stoa@l+1)^0,c
  6593   0010C4  0E00               	movlw	0
  6594   0010C6  6E14               	movwf	stoa@l^0,c
  6595   0010C8  EF68  F008         	goto	l2588
  6596   0010CC                     l2586:
  6597   0010CC  4A14               	infsnz	stoa@l^0,f,c
  6598   0010CE  2A15               	incf	(stoa@l+1)^0,f,c
  6599   0010D0                     l2588:
  6600   0010D0  5014               	movf	stoa@l^0,w,c
  6601   0010D2  2412               	addwf	stoa@cp^0,w,c
  6602   0010D4  6E0C               	movwf	??_stoa^0,c
  6603   0010D6  5015               	movf	(stoa@l+1)^0,w,c
  6604   0010D8  2013               	addwfc	(stoa@cp+1)^0,w,c
  6605   0010DA  6E0D               	movwf	(??_stoa+1)^0,c
  6606   0010DC  C00C  FFF6         	movff	??_stoa,tblptrl
  6607   0010E0  C00D  FFF7         	movff	??_stoa+1,tblptrh
  6608   0010E4  6AF8               	clrf	tblptru,c
  6609   0010E6  0E07               	movlw	(high __ramtop+-1)
  6610   0010E8  64F7               	cpfsgt	tblptrh,c
  6611   0010EA  D003               	bra	u1977
  6612   0010EC  0008               	tblrd		*
  6613   0010EE  50F5               	movf	tablat,w,c
  6614   0010F0  D005               	bra	u1970
  6615   0010F2                     u1977:
  6616   0010F2  CFF6 FFE9          	movff	tblptrl,fsr0l
  6617   0010F6  CFF7 FFEA          	movff	tblptrh,fsr0h
  6618   0010FA  50EF               	movf	indf0,w,c
  6619   0010FC                     u1970:
  6620   0010FC  0900               	iorlw	0
  6621   0010FE  A4D8               	btfss	status,2,c
  6622   001100  EF84  F008         	goto	u1981
  6623   001104  EF86  F008         	goto	u1980
  6624   001108                     u1981:
  6625   001108  EF66  F008         	goto	l2586
  6626   00110C                     u1980:
  6627   00110C                     
  6628                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 965:     p = l;
  6629   00110C  C014  F00E         	movff	stoa@l,stoa@p
  6630   001110  C015  F00F         	movff	stoa@l+1,stoa@p+1
  6631                           
  6632                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
  6633   001114  C050  F010         	movff	_width,stoa@w
  6634   001118  C051  F011         	movff	_width+1,stoa@w+1
  6635                           
  6636                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
  6637   00111C  B055               	btfsc	_flags^0,0,c
  6638   00111E  EF93  F008         	goto	u1991
  6639   001122  EF95  F008         	goto	u1990
  6640   001126                     u1991:
  6641   001126  EFCC  F008         	goto	l2602
  6642   00112A                     u1990:
  6643   00112A  EFA1  F008         	goto	l2596
  6644   00112E                     l2592:
  6645                           
  6646                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
  6647   00112E  0E00               	movlw	0
  6648   001130  6E02               	movwf	(fputc@c+1)^0,c
  6649   001132  0E20               	movlw	32
  6650   001134  6E01               	movwf	fputc@c^0,c
  6651   001136  C009  F003         	movff	stoa@fp,fputc@fp
  6652   00113A  EC93  F00C         	call	_fputc	;wreg free
  6653   00113E                     
  6654                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
  6655   00113E  4A14               	infsnz	stoa@l^0,f,c
  6656   001140  2A15               	incf	(stoa@l+1)^0,f,c
  6657   001142                     l2596:
  6658                           
  6659                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
  6660   001142  5010               	movf	stoa@w^0,w,c
  6661   001144  5C14               	subwf	stoa@l^0,w,c
  6662   001146  5015               	movf	(stoa@l+1)^0,w,c
  6663   001148  0A80               	xorlw	128
  6664   00114A  6E0C               	movwf	??_stoa^0,c
  6665   00114C  5011               	movf	(stoa@w+1)^0,w,c
  6666   00114E  0A80               	xorlw	128
  6667   001150  580C               	subwfb	??_stoa^0,w,c
  6668   001152  A0D8               	btfss	status,0,c
  6669   001154  EFAE  F008         	goto	u2001
  6670   001158  EFB0  F008         	goto	u2000
  6671   00115C                     u2001:
  6672   00115C  EF97  F008         	goto	l2592
  6673   001160                     u2000:
  6674   001160  EFCC  F008         	goto	l2602
  6675   001164                     l2598:
  6676                           
  6677                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
  6678   001164  C012  FFF6         	movff	stoa@cp,tblptrl
  6679   001168  C013  FFF7         	movff	stoa@cp+1,tblptrh
  6680   00116C  6AF8               	clrf	tblptru,c
  6681   00116E  0E07               	movlw	(high __ramtop+-1)
  6682   001170  64F7               	cpfsgt	tblptrh,c
  6683   001172  D003               	bra	u2017
  6684   001174  0008               	tblrd		*
  6685   001176  50F5               	movf	tablat,w,c
  6686   001178  D005               	bra	u2010
  6687   00117A                     u2017:
  6688   00117A  CFF6 FFE9          	movff	tblptrl,fsr0l
  6689   00117E  CFF7 FFEA          	movff	tblptrh,fsr0h
  6690   001182  50EF               	movf	indf0,w,c
  6691   001184                     u2010:
  6692   001184  6E0C               	movwf	??_stoa^0,c
  6693   001186  500C               	movf	??_stoa^0,w,c
  6694   001188  6E01               	movwf	fputc@c^0,c
  6695   00118A  6A02               	clrf	(fputc@c+1)^0,c
  6696   00118C  C009  F003         	movff	stoa@fp,fputc@fp
  6697   001190  EC93  F00C         	call	_fputc	;wreg free
  6698   001194                     
  6699                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
  6700   001194  4A12               	infsnz	stoa@cp^0,f,c
  6701   001196  2A13               	incf	(stoa@cp+1)^0,f,c
  6702   001198                     l2602:
  6703                           
  6704                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
  6705   001198  060E               	decf	stoa@p^0,f,c
  6706   00119A  A0D8               	btfss	status,0,c
  6707   00119C  060F               	decf	(stoa@p+1)^0,f,c
  6708   00119E  280E               	incf	stoa@p^0,w,c
  6709   0011A0  E106               	bnz	u2021
  6710   0011A2  280F               	incf	(stoa@p+1)^0,w,c
  6711   0011A4  A4D8               	btfss	status,2,c
  6712   0011A6  EFD7  F008         	goto	u2021
  6713   0011AA  EFD9  F008         	goto	u2020
  6714   0011AE                     u2021:
  6715   0011AE  EFB2  F008         	goto	l2598
  6716   0011B2                     u2020:
  6717   0011B2                     
  6718                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
  6719   0011B2  A055               	btfss	_flags^0,0,c
  6720   0011B4  EFDE  F008         	goto	u2031
  6721   0011B8  EFE0  F008         	goto	u2030
  6722   0011BC                     u2031:
  6723   0011BC  EFFB  F008         	goto	l1168
  6724   0011C0                     u2030:
  6725   0011C0  EFEC  F008         	goto	l2610
  6726   0011C4                     l2606:
  6727                           
  6728                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
  6729   0011C4  0E00               	movlw	0
  6730   0011C6  6E02               	movwf	(fputc@c+1)^0,c
  6731   0011C8  0E20               	movlw	32
  6732   0011CA  6E01               	movwf	fputc@c^0,c
  6733   0011CC  C009  F003         	movff	stoa@fp,fputc@fp
  6734   0011D0  EC93  F00C         	call	_fputc	;wreg free
  6735   0011D4                     
  6736                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
  6737   0011D4  4A14               	infsnz	stoa@l^0,f,c
  6738   0011D6  2A15               	incf	(stoa@l+1)^0,f,c
  6739   0011D8                     l2610:
  6740                           
  6741                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
  6742   0011D8  5010               	movf	stoa@w^0,w,c
  6743   0011DA  5C14               	subwf	stoa@l^0,w,c
  6744   0011DC  5015               	movf	(stoa@l+1)^0,w,c
  6745   0011DE  0A80               	xorlw	128
  6746   0011E0  6E0C               	movwf	??_stoa^0,c
  6747   0011E2  5011               	movf	(stoa@w+1)^0,w,c
  6748   0011E4  0A80               	xorlw	128
  6749   0011E6  580C               	subwfb	??_stoa^0,w,c
  6750   0011E8  A0D8               	btfss	status,0,c
  6751   0011EA  EFF9  F008         	goto	u2041
  6752   0011EE  EFFB  F008         	goto	u2040
  6753   0011F2                     u2041:
  6754   0011F2  EFE2  F008         	goto	l2606
  6755   0011F6                     u2040:
  6756   0011F6                     l1168:
  6757   0011F6  0012               	return		;funcret
  6758   0011F8                     __end_of_stoa:
  6759                           	callstack 0
  6760                           
  6761 ;; *************** function _read_prec_or_width *****************
  6762 ;; Defined at:
  6763 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6764 ;; Parameters:    Size  Location     Type
  6765 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  6766 ;;		 -> vfprintf@cfmt(1), 
  6767 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  6768 ;;		 -> sprintf@ap(1), 
  6769 ;; Auto vars:     Size  Location     Type
  6770 ;;  c               1    4[COMRAM] unsigned char 
  6771 ;;  n               2    5[COMRAM] int 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  2    0[COMRAM] int 
  6774 ;; Registers used:
  6775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6781 ;;      Params:         2       0       0       0       0       0       0       0       0
  6782 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6783 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6784 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6785 ;;Total ram usage:        7 bytes
  6786 ;; Hardware stack levels used: 1
  6787 ;; Hardware stack levels required when called: 1
  6788 ;; This function calls:
  6789 ;;		Nothing
  6790 ;; This function is called by:
  6791 ;;		_vfpfcnvrt
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text35
  6796   001C92                     __ptext35:
  6797                           	callstack 0
  6798   001C92                     _read_prec_or_width:
  6799                           	callstack 25
  6800   001C92                     
  6801                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  6802   001C92  0E00               	movlw	0
  6803   001C94  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  6804   001C96  0E00               	movlw	0
  6805   001C98  6E06               	movwf	read_prec_or_width@n^0,c
  6806   001C9A                     
  6807                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  6808   001C9A  5001               	movf	read_prec_or_width@fmt^0,w,c
  6809   001C9C  6ED9               	movwf	fsr2l,c
  6810   001C9E  6ADA               	clrf	fsr2h,c
  6811   001CA0  CFDF FFF6          	movff	indf2,tblptrl
  6812   001CA4                     	if	1	;There is more than 1 active tblptr byte
  6813   001CA4  0E08               	movlw	high __smallconst
  6814   001CA6  6EF7               	movwf	tblptrh,c
  6815   001CA8                     	endif
  6816   001CA8                     	if	0	;tblptru may be non-zero
  6817   001CA8                     	endif
  6818   001CA8                     	if	0	;tblptru may be non-zero
  6819   001CA8                     	endif
  6820   001CA8  0008               	tblrd		*
  6821   001CAA  50F5               	movf	tablat,w,c
  6822   001CAC  0A2A               	xorlw	42
  6823   001CAE  A4D8               	btfss	status,2,c
  6824   001CB0  EF5C  F00E         	goto	u2051
  6825   001CB4  EF5E  F00E         	goto	u2050
  6826   001CB8                     u2051:
  6827   001CB8  EF83  F00E         	goto	l2624
  6828   001CBC                     u2050:
  6829   001CBC                     
  6830                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  6831   001CBC  5001               	movf	read_prec_or_width@fmt^0,w,c
  6832   001CBE  6ED9               	movwf	fsr2l,c
  6833   001CC0  6ADA               	clrf	fsr2h,c
  6834   001CC2  2ADF               	incf	indf2,f,c
  6835   001CC4                     
  6836                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  6837   001CC4  5002               	movf	read_prec_or_width@ap^0,w,c
  6838   001CC6  6ED9               	movwf	fsr2l,c
  6839   001CC8  6ADA               	clrf	fsr2h,c
  6840   001CCA  0E02               	movlw	2
  6841   001CCC  26DF               	addwf	indf2,f,c
  6842   001CCE  5CDF               	subwf	indf2,w,c
  6843   001CD0  6ED9               	movwf	fsr2l,c
  6844   001CD2  6ADA               	clrf	fsr2h,c
  6845   001CD4  CFDE F006          	movff	postinc2,read_prec_or_width@n
  6846   001CD8  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  6847                           
  6848                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  6849   001CDC  EF96  F00E         	goto	l1172
  6850   001CE0                     l2620:
  6851                           
  6852                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  6853   001CE0  0E0A               	movlw	10
  6854   001CE2  0206               	mulwf	read_prec_or_width@n^0,c
  6855   001CE4  CFF3 F003          	movff	prodl,??_read_prec_or_width
  6856   001CE8  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  6857   001CEC  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  6858   001CEE  50F3               	movf	prodl,w,c
  6859   001CF0  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  6860   001CF2  5005               	movf	read_prec_or_width@c^0,w,c
  6861   001CF4  2403               	addwf	??_read_prec_or_width^0,w,c
  6862   001CF6  6E06               	movwf	read_prec_or_width@n^0,c
  6863   001CF8  0E00               	movlw	0
  6864   001CFA  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  6865   001CFC  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  6866   001CFE                     
  6867                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  6868   001CFE  5001               	movf	read_prec_or_width@fmt^0,w,c
  6869   001D00  6ED9               	movwf	fsr2l,c
  6870   001D02  6ADA               	clrf	fsr2h,c
  6871   001D04  2ADF               	incf	indf2,f,c
  6872   001D06                     l2624:
  6873                           
  6874                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  6875   001D06  5001               	movf	read_prec_or_width@fmt^0,w,c
  6876   001D08  6ED9               	movwf	fsr2l,c
  6877   001D0A  6ADA               	clrf	fsr2h,c
  6878   001D0C  CFDF FFF6          	movff	indf2,tblptrl
  6879   001D10                     	if	1	;There is more than 1 active tblptr byte
  6880   001D10  0E08               	movlw	high __smallconst
  6881   001D12  6EF7               	movwf	tblptrh,c
  6882   001D14                     	endif
  6883   001D14                     	if	0	;tblptru may be non-zero
  6884   001D14                     	endif
  6885   001D14                     	if	0	;tblptru may be non-zero
  6886   001D14                     	endif
  6887   001D14  0008               	tblrd		*
  6888   001D16  50F5               	movf	tablat,w,c
  6889   001D18  0FD0               	addlw	208
  6890   001D1A  6E05               	movwf	read_prec_or_width@c^0,c
  6891   001D1C  0E09               	movlw	9
  6892   001D1E  6405               	cpfsgt	read_prec_or_width@c^0,c
  6893   001D20  EF94  F00E         	goto	u2061
  6894   001D24  EF96  F00E         	goto	u2060
  6895   001D28                     u2061:
  6896   001D28  EF70  F00E         	goto	l2620
  6897   001D2C                     u2060:
  6898   001D2C                     l1172:
  6899                           
  6900                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  6901   001D2C  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  6902   001D30  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  6903   001D34  0012               	return		;funcret
  6904   001D36                     __end_of_read_prec_or_width:
  6905                           	callstack 0
  6906                           
  6907 ;; *************** function _dtoa *****************
  6908 ;; Defined at:
  6909 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6910 ;; Parameters:    Size  Location     Type
  6911 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  6912 ;;		 -> sprintf@f(11), 
  6913 ;;  d               2   21[COMRAM] int 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  i               2   29[COMRAM] int 
  6916 ;;  w               2   26[COMRAM] int 
  6917 ;;  s               1   28[COMRAM] unsigned char 
  6918 ;;  p               1   25[COMRAM] _Bool 
  6919 ;; Return value:  Size  Location     Type
  6920 ;;                  1    wreg      void 
  6921 ;; Registers used:
  6922 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6928 ;;      Params:         3       0       0       0       0       0       0       0       0
  6929 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6931 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6932 ;;Total ram usage:       11 bytes
  6933 ;; Hardware stack levels used: 1
  6934 ;; Hardware stack levels required when called: 5
  6935 ;; This function calls:
  6936 ;;		___awdiv
  6937 ;;		___awmod
  6938 ;;		_abs
  6939 ;;		_pad
  6940 ;; This function is called by:
  6941 ;;		_vfpfcnvrt
  6942 ;; This function uses a non-reentrant model
  6943 ;;
  6944                           
  6945                           	psect	text36
  6946   000F36                     __ptext36:
  6947                           	callstack 0
  6948   000F36                     _dtoa:
  6949                           	callstack 21
  6950   000F36                     
  6951                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  6952   000F36  0E01               	movlw	1
  6953   000F38  6E1A               	movwf	dtoa@p^0,c
  6954   000F3A                     
  6955                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  6956   000F3A  BE17               	btfsc	(dtoa@d+1)^0,7,c
  6957   000F3C  EFA2  F007         	goto	u1861
  6958   000F40  EFA5  F007         	goto	u1860
  6959   000F44                     u1861:
  6960   000F44  0E01               	movlw	1
  6961   000F46  EFA6  F007         	goto	u1870
  6962   000F4A                     u1860:
  6963   000F4A  0E00               	movlw	0
  6964   000F4C                     u1870:
  6965   000F4C  6E1D               	movwf	dtoa@s^0,c
  6966   000F4E                     
  6967                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6968   000F4E  C050  F01B         	movff	_width,dtoa@w
  6969   000F52  C051  F01C         	movff	_width+1,dtoa@w+1
  6970   000F56                     
  6971                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
  6972   000F56  501D               	movf	dtoa@s^0,w,c
  6973   000F58  B4D8               	btfsc	status,2,c
  6974   000F5A  EFB1  F007         	goto	u1881
  6975   000F5E  EFB3  F007         	goto	u1880
  6976   000F62                     u1881:
  6977   000F62  EFCA  F007         	goto	l1136
  6978   000F66                     u1880:
  6979   000F66                     
  6980                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
  6981   000F66  061B               	decf	dtoa@w^0,f,c
  6982   000F68  A0D8               	btfss	status,0,c
  6983   000F6A  061C               	decf	(dtoa@w+1)^0,f,c
  6984   000F6C                     
  6985                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6986   000F6C  501D               	movf	dtoa@s^0,w,c
  6987   000F6E  A4D8               	btfss	status,2,c
  6988   000F70  EFBC  F007         	goto	u1891
  6989   000F74  EFBE  F007         	goto	u1890
  6990   000F78                     u1891:
  6991   000F78  EFC4  F007         	goto	l2544
  6992   000F7C                     u1890:
  6993   000F7C  0E00               	movlw	0
  6994   000F7E  6E19               	movwf	(_dtoa$1481+1)^0,c
  6995   000F80  0E2B               	movlw	43
  6996   000F82  6E18               	movwf	_dtoa$1481^0,c
  6997   000F84  EFC8  F007         	goto	l2546
  6998   000F88                     l2544:
  6999   000F88  0E00               	movlw	0
  7000   000F8A  6E19               	movwf	(_dtoa$1481+1)^0,c
  7001   000F8C  0E2D               	movlw	45
  7002   000F8E  6E18               	movwf	_dtoa$1481^0,c
  7003   000F90                     l2546:
  7004   000F90  C018  F01D         	movff	_dtoa$1481,dtoa@s
  7005   000F94                     l1136:
  7006                           
  7007                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  7008   000F94  0E00               	movlw	0
  7009   000F96  6E1F               	movwf	(dtoa@i+1)^0,c
  7010   000F98  0E1F               	movlw	31
  7011   000F9A  6E1E               	movwf	dtoa@i^0,c
  7012   000F9C                     
  7013                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  7014   000F9C  0100               	movlb	0	; () banked
  7015   000F9E  6BE7               	clrf	(_dbuf+31)& (0+255),b
  7016                           
  7017                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7018   000FA0  EFFE  F007         	goto	l2560
  7019   000FA4                     l2550:
  7020                           
  7021                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
  7022   000FA4  061E               	decf	dtoa@i^0,f,c
  7023   000FA6  A0D8               	btfss	status,0,c
  7024   000FA8  061F               	decf	(dtoa@i+1)^0,f,c
  7025   000FAA                     
  7026                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  7027   000FAA  501E               	movf	dtoa@i^0,w,c
  7028   000FAC  0FC8               	addlw	low _dbuf
  7029   000FAE  6ED9               	movwf	fsr2l,c
  7030   000FB0  6ADA               	clrf	fsr2h,c
  7031   000FB2  C016  F001         	movff	dtoa@d,___awmod@dividend
  7032   000FB6  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  7033   000FBA  0E00               	movlw	0
  7034   000FBC  6E04               	movwf	(___awmod@divisor+1)^0,c
  7035   000FBE  0E0A               	movlw	10
  7036   000FC0  6E03               	movwf	___awmod@divisor^0,c
  7037   000FC2  ECA0  F00D         	call	___awmod	;wreg free
  7038   000FC6  C001  F007         	movff	?___awmod,abs@a
  7039   000FCA  C002  F008         	movff	?___awmod+1,abs@a+1
  7040   000FCE  EC31  F012         	call	_abs	;wreg free
  7041   000FD2  5007               	movf	?_abs^0,w,c
  7042   000FD4  0F30               	addlw	48
  7043   000FD6  6EDF               	movwf	indf2,c
  7044   000FD8                     
  7045                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  7046   000FD8  6A1A               	clrf	dtoa@p^0,c
  7047   000FDA                     
  7048                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
  7049   000FDA  061B               	decf	dtoa@w^0,f,c
  7050   000FDC  A0D8               	btfss	status,0,c
  7051   000FDE  061C               	decf	(dtoa@w+1)^0,f,c
  7052   000FE0                     
  7053                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  7054   000FE0  C016  F001         	movff	dtoa@d,___awdiv@dividend
  7055   000FE4  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  7056   000FE8  0E00               	movlw	0
  7057   000FEA  6E04               	movwf	(___awdiv@divisor+1)^0,c
  7058   000FEC  0E0A               	movlw	10
  7059   000FEE  6E03               	movwf	___awdiv@divisor^0,c
  7060   000FF0  ECD1  F00B         	call	___awdiv	;wreg free
  7061   000FF4  C001  F016         	movff	?___awdiv,dtoa@d
  7062   000FF8  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  7063   000FFC                     l2560:
  7064                           
  7065                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  7066   000FFC  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  7067   000FFE  EF09  F008         	goto	u1901
  7068   001002  501F               	movf	(dtoa@i+1)^0,w,c
  7069   001004  E108               	bnz	u1900
  7070   001006  041E               	decf	dtoa@i^0,w,c
  7071   001008  A0D8               	btfss	status,0,c
  7072   00100A  EF09  F008         	goto	u1901
  7073   00100E  EF0B  F008         	goto	u1900
  7074   001012                     u1901:
  7075   001012  EF30  F008         	goto	l2570
  7076   001016                     u1900:
  7077   001016  5016               	movf	dtoa@d^0,w,c
  7078   001018  1017               	iorwf	(dtoa@d+1)^0,w,c
  7079   00101A  A4D8               	btfss	status,2,c
  7080   00101C  EF12  F008         	goto	u1911
  7081   001020  EF14  F008         	goto	u1910
  7082   001024                     u1911:
  7083   001024  EFD2  F007         	goto	l2550
  7084   001028                     u1910:
  7085   001028  501A               	movf	dtoa@p^0,w,c
  7086   00102A  A4D8               	btfss	status,2,c
  7087   00102C  EF1A  F008         	goto	u1921
  7088   001030  EF1C  F008         	goto	u1920
  7089   001034                     u1921:
  7090   001034  EFD2  F007         	goto	l2550
  7091   001038                     u1920:
  7092   001038  BE1C               	btfsc	(dtoa@w+1)^0,7,c
  7093   00103A  EF27  F008         	goto	u1931
  7094   00103E  501C               	movf	(dtoa@w+1)^0,w,c
  7095   001040  E108               	bnz	u1930
  7096   001042  041B               	decf	dtoa@w^0,w,c
  7097   001044  A0D8               	btfss	status,0,c
  7098   001046  EF27  F008         	goto	u1931
  7099   00104A  EF29  F008         	goto	u1930
  7100   00104E                     u1931:
  7101   00104E  EF30  F008         	goto	l2570
  7102   001052                     u1930:
  7103   001052  B255               	btfsc	_flags^0,1,c
  7104   001054  EF2E  F008         	goto	u1941
  7105   001058  EF30  F008         	goto	u1940
  7106   00105C                     u1941:
  7107   00105C  EFD2  F007         	goto	l2550
  7108   001060                     u1940:
  7109   001060                     l2570:
  7110                           
  7111                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  7112   001060  501D               	movf	dtoa@s^0,w,c
  7113   001062  B4D8               	btfsc	status,2,c
  7114   001064  EF36  F008         	goto	u1951
  7115   001068  EF38  F008         	goto	u1950
  7116   00106C                     u1951:
  7117   00106C  EF41  F008         	goto	l2576
  7118   001070                     u1950:
  7119   001070                     
  7120                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
  7121   001070  061E               	decf	dtoa@i^0,f,c
  7122   001072  A0D8               	btfss	status,0,c
  7123   001074  061F               	decf	(dtoa@i+1)^0,f,c
  7124   001076                     
  7125                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  7126   001076  501E               	movf	dtoa@i^0,w,c
  7127   001078  0FC8               	addlw	low _dbuf
  7128   00107A  6ED9               	movwf	fsr2l,c
  7129   00107C  6ADA               	clrf	fsr2h,c
  7130   00107E  C01D  FFDF         	movff	dtoa@s,indf2
  7131   001082                     l2576:
  7132                           
  7133                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  7134   001082  C015  F00E         	movff	dtoa@fp,pad@fp
  7135   001086  501E               	movf	dtoa@i^0,w,c
  7136   001088  0FC8               	addlw	low _dbuf
  7137   00108A  6E0F               	movwf	pad@buf^0,c
  7138   00108C  C01B  F010         	movff	dtoa@w,pad@p
  7139   001090  C01C  F011         	movff	dtoa@w+1,pad@p+1
  7140   001094  ECE6  F00E         	call	_pad	;wreg free
  7141   001098  0012               	return		;funcret
  7142   00109A                     __end_of_dtoa:
  7143                           	callstack 0
  7144                           
  7145 ;; *************** function _pad *****************
  7146 ;; Defined at:
  7147 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  7150 ;;		 -> sprintf@f(11), 
  7151 ;;  buf             1   14[COMRAM] PTR unsigned char 
  7152 ;;		 -> dbuf(32), 
  7153 ;;  p               2   15[COMRAM] int 
  7154 ;; Auto vars:     Size  Location     Type
  7155 ;;  i               2   18[COMRAM] int 
  7156 ;; Return value:  Size  Location     Type
  7157 ;;                  1    wreg      void 
  7158 ;; Registers used:
  7159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7160 ;; Tracked objects:
  7161 ;;		On entry : 0/0
  7162 ;;		On exit  : 0/0
  7163 ;;		Unchanged: 0/0
  7164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7165 ;;      Params:         4       0       0       0       0       0       0       0       0
  7166 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7167 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7168 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7169 ;;Total ram usage:        7 bytes
  7170 ;; Hardware stack levels used: 1
  7171 ;; Hardware stack levels required when called: 4
  7172 ;; This function calls:
  7173 ;;		_fputc
  7174 ;;		_fputs
  7175 ;; This function is called by:
  7176 ;;		_dtoa
  7177 ;; This function uses a non-reentrant model
  7178 ;;
  7179                           
  7180                           	psect	text37
  7181   001DCC                     __ptext37:
  7182                           	callstack 0
  7183   001DCC                     _pad:
  7184                           	callstack 21
  7185   001DCC                     
  7186                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  7187   001DCC  A055               	btfss	_flags^0,0,c
  7188   001DCE  EFEB  F00E         	goto	u1811
  7189   001DD2  EFED  F00E         	goto	u1810
  7190   001DD6                     u1811:
  7191   001DD6  EFF3  F00E         	goto	l2494
  7192   001DDA                     u1810:
  7193   001DDA                     
  7194                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  7195   001DDA  C00F  F009         	movff	pad@buf,fputs@s
  7196   001DDE  C00E  F00A         	movff	pad@fp,fputs@fp
  7197   001DE2  ECDE  F011         	call	_fputs	;wreg free
  7198   001DE6                     l2494:
  7199                           
  7200                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  7201   001DE6  BE11               	btfsc	(pad@p+1)^0,7,c
  7202   001DE8  EFFA  F00E         	goto	u1820
  7203   001DEC  EFF8  F00E         	goto	u1821
  7204   001DF0                     u1821:
  7205   001DF0  EFFE  F00E         	goto	l1128
  7206   001DF4                     u1820:
  7207   001DF4                     
  7208                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  7209   001DF4  0E00               	movlw	0
  7210   001DF6  6E11               	movwf	(pad@p+1)^0,c
  7211   001DF8  0E00               	movlw	0
  7212   001DFA  6E10               	movwf	pad@p^0,c
  7213   001DFC                     l1128:
  7214                           
  7215                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  7216   001DFC  0E00               	movlw	0
  7217   001DFE  6E14               	movwf	(pad@i+1)^0,c
  7218   001E00  0E00               	movlw	0
  7219   001E02  6E13               	movwf	pad@i^0,c
  7220                           
  7221                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7222   001E04  EF0E  F00F         	goto	l2502
  7223   001E08                     l2498:
  7224                           
  7225                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  7226   001E08  0E00               	movlw	0
  7227   001E0A  6E02               	movwf	(fputc@c+1)^0,c
  7228   001E0C  0E20               	movlw	32
  7229   001E0E  6E01               	movwf	fputc@c^0,c
  7230   001E10  C00E  F003         	movff	pad@fp,fputc@fp
  7231   001E14  EC93  F00C         	call	_fputc	;wreg free
  7232   001E18                     
  7233                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  7234   001E18  4A13               	infsnz	pad@i^0,f,c
  7235   001E1A  2A14               	incf	(pad@i+1)^0,f,c
  7236   001E1C                     l2502:
  7237                           
  7238                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  7239   001E1C  5010               	movf	pad@p^0,w,c
  7240   001E1E  5C13               	subwf	pad@i^0,w,c
  7241   001E20  5014               	movf	(pad@i+1)^0,w,c
  7242   001E22  0A80               	xorlw	128
  7243   001E24  6E12               	movwf	??_pad^0,c
  7244   001E26  5011               	movf	(pad@p+1)^0,w,c
  7245   001E28  0A80               	xorlw	128
  7246   001E2A  5812               	subwfb	??_pad^0,w,c
  7247   001E2C  A0D8               	btfss	status,0,c
  7248   001E2E  EF1B  F00F         	goto	u1831
  7249   001E32  EF1D  F00F         	goto	u1830
  7250   001E36                     u1831:
  7251   001E36  EF04  F00F         	goto	l2498
  7252   001E3A                     u1830:
  7253   001E3A                     
  7254                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  7255   001E3A  B055               	btfsc	_flags^0,0,c
  7256   001E3C  EF22  F00F         	goto	u1841
  7257   001E40  EF24  F00F         	goto	u1840
  7258   001E44                     u1841:
  7259   001E44  EF2A  F00F         	goto	l1133
  7260   001E48                     u1840:
  7261   001E48                     
  7262                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  7263   001E48  C00F  F009         	movff	pad@buf,fputs@s
  7264   001E4C  C00E  F00A         	movff	pad@fp,fputs@fp
  7265   001E50  ECDE  F011         	call	_fputs	;wreg free
  7266   001E54                     l1133:
  7267   001E54  0012               	return		;funcret
  7268   001E56                     __end_of_pad:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function _fputs *****************
  7272 ;; Defined at:
  7273 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  s               1    8[COMRAM] PTR const unsigned char 
  7276 ;;		 -> dbuf(32), 
  7277 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  7278 ;;		 -> sprintf@f(11), 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  i               2   11[COMRAM] int 
  7281 ;;  c               1   10[COMRAM] unsigned char 
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  2    8[COMRAM] int 
  7284 ;; Registers used:
  7285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/0
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7291 ;;      Params:         2       0       0       0       0       0       0       0       0
  7292 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7294 ;;      Totals:         5       0       0       0       0       0       0       0       0
  7295 ;;Total ram usage:        5 bytes
  7296 ;; Hardware stack levels used: 1
  7297 ;; Hardware stack levels required when called: 3
  7298 ;; This function calls:
  7299 ;;		_fputc
  7300 ;; This function is called by:
  7301 ;;		_pad
  7302 ;; This function uses a non-reentrant model
  7303 ;;
  7304                           
  7305                           	psect	text38
  7306   0023BC                     __ptext38:
  7307                           	callstack 0
  7308   0023BC                     _fputs:
  7309                           	callstack 21
  7310   0023BC  0E00               	movlw	0
  7311   0023BE  6E0D               	movwf	(fputs@i+1)^0,c
  7312   0023C0  0E00               	movlw	0
  7313   0023C2  6E0C               	movwf	fputs@i^0,c
  7314   0023C4  EFED  F011         	goto	l2408
  7315   0023C8                     l2404:
  7316   0023C8  C00B  F001         	movff	fputs@c,fputc@c
  7317   0023CC  6A02               	clrf	(fputc@c+1)^0,c
  7318   0023CE  C00A  F003         	movff	fputs@fp,fputc@fp
  7319   0023D2  EC93  F00C         	call	_fputc	;wreg free
  7320   0023D6  4A0C               	infsnz	fputs@i^0,f,c
  7321   0023D8  2A0D               	incf	(fputs@i+1)^0,f,c
  7322   0023DA                     l2408:
  7323   0023DA  5009               	movf	fputs@s^0,w,c
  7324   0023DC  240C               	addwf	fputs@i^0,w,c
  7325   0023DE  6ED9               	movwf	fsr2l,c
  7326   0023E0  6ADA               	clrf	fsr2h,c
  7327   0023E2  50DF               	movf	indf2,w,c
  7328   0023E4  6E0B               	movwf	fputs@c^0,c
  7329   0023E6  500B               	movf	fputs@c^0,w,c
  7330   0023E8  A4D8               	btfss	status,2,c
  7331   0023EA  EFF9  F011         	goto	u1681
  7332   0023EE  EFFB  F011         	goto	u1680
  7333   0023F2                     u1681:
  7334   0023F2  EFE4  F011         	goto	l2404
  7335   0023F6                     u1680:
  7336   0023F6  0012               	return		;funcret
  7337   0023F8                     __end_of_fputs:
  7338                           	callstack 0
  7339                           
  7340 ;; *************** function _fputc *****************
  7341 ;; Defined at:
  7342 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  c               2    0[COMRAM] int 
  7345 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  7346 ;;		 -> sprintf@f(11), 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  2    0[COMRAM] int 
  7351 ;; Registers used:
  7352 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7353 ;; Tracked objects:
  7354 ;;		On entry : 0/0
  7355 ;;		On exit  : 0/0
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7358 ;;      Params:         3       0       0       0       0       0       0       0       0
  7359 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7360 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7361 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7362 ;;Total ram usage:        8 bytes
  7363 ;; Hardware stack levels used: 1
  7364 ;; Hardware stack levels required when called: 2
  7365 ;; This function calls:
  7366 ;;		_putch
  7367 ;; This function is called by:
  7368 ;;		_pad
  7369 ;;		_stoa
  7370 ;;		_vfpfcnvrt
  7371 ;;		_fputs
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text39
  7376   001926                     __ptext39:
  7377                           	callstack 0
  7378   001926                     _fputc:
  7379                           	callstack 23
  7380   001926  5003               	movf	fputc@fp^0,w,c
  7381   001928  B4D8               	btfsc	status,2,c
  7382   00192A  EF99  F00C         	goto	u1641
  7383   00192E  EF9B  F00C         	goto	u1640
  7384   001932                     u1641:
  7385   001932  EFA3  F00C         	goto	l2392
  7386   001936                     u1640:
  7387   001936  5003               	movf	fputc@fp^0,w,c
  7388   001938  A4D8               	btfss	status,2,c
  7389   00193A  EFA1  F00C         	goto	u1651
  7390   00193E  EFA3  F00C         	goto	u1650
  7391   001942                     u1651:
  7392   001942  EFA8  F00C         	goto	l2394
  7393   001946                     u1650:
  7394   001946                     l2392:
  7395   001946  5001               	movf	fputc@c^0,w,c
  7396   001948  ECE7  F012         	call	_putch
  7397   00194C  EFEF  F00C         	goto	l1221
  7398   001950                     l2394:
  7399   001950  5003               	movf	fputc@fp^0,w,c
  7400   001952  6ED9               	movwf	fsr2l,c
  7401   001954  6ADA               	clrf	fsr2h,c
  7402   001956  0E09               	movlw	9
  7403   001958  26D9               	addwf	fsr2l,f,c
  7404   00195A  50DE               	movf	postinc2,w,c
  7405   00195C  10DE               	iorwf	postinc2,w,c
  7406   00195E  B4D8               	btfsc	status,2,c
  7407   001960  EFB4  F00C         	goto	u1661
  7408   001964  EFB6  F00C         	goto	u1660
  7409   001968                     u1661:
  7410   001968  EFCF  F00C         	goto	l2398
  7411   00196C                     u1660:
  7412   00196C  5003               	movf	fputc@fp^0,w,c
  7413   00196E  6ED9               	movwf	fsr2l,c
  7414   001970  6ADA               	clrf	fsr2h,c
  7415   001972  0E09               	movlw	9
  7416   001974  26D9               	addwf	fsr2l,f,c
  7417   001976  5003               	movf	fputc@fp^0,w,c
  7418   001978  6EE1               	movwf	fsr1l,c
  7419   00197A  6AE2               	clrf	fsr1h,c
  7420   00197C  0E02               	movlw	2
  7421   00197E  26E1               	addwf	fsr1l,f,c
  7422   001980  50DE               	movf	postinc2,w,c
  7423   001982  5CE6               	subwf	postinc1,w,c
  7424   001984  50E6               	movf	postinc1,w,c
  7425   001986  0A80               	xorlw	128
  7426   001988  6E08               	movwf	(??_fputc+4)^0,c
  7427   00198A  50DE               	movf	postinc2,w,c
  7428   00198C  0A80               	xorlw	128
  7429   00198E  5808               	subwfb	(??_fputc+4)^0,w,c
  7430   001990  B0D8               	btfsc	status,0,c
  7431   001992  EFCD  F00C         	goto	u1671
  7432   001996  EFCF  F00C         	goto	u1670
  7433   00199A                     u1671:
  7434   00199A  EFEF  F00C         	goto	l1221
  7435   00199E                     u1670:
  7436   00199E                     l2398:
  7437   00199E  5003               	movf	fputc@fp^0,w,c
  7438   0019A0  6ED9               	movwf	fsr2l,c
  7439   0019A2  6ADA               	clrf	fsr2h,c
  7440   0019A4  0E02               	movlw	2
  7441   0019A6  26D9               	addwf	fsr2l,f,c
  7442   0019A8  CFDE F004          	movff	postinc2,??_fputc
  7443   0019AC  CFDD F005          	movff	postdec2,??_fputc+1
  7444   0019B0  5003               	movf	fputc@fp^0,w,c
  7445   0019B2  6ED9               	movwf	fsr2l,c
  7446   0019B4  6ADA               	clrf	fsr2h,c
  7447   0019B6  CFDE F006          	movff	postinc2,??_fputc+2
  7448   0019BA  CFDD F007          	movff	postdec2,??_fputc+3
  7449   0019BE  5004               	movf	??_fputc^0,w,c
  7450   0019C0  2406               	addwf	(??_fputc+2)^0,w,c
  7451   0019C2  6ED9               	movwf	fsr2l,c
  7452   0019C4  5005               	movf	(??_fputc+1)^0,w,c
  7453   0019C6  2007               	addwfc	(??_fputc+3)^0,w,c
  7454   0019C8  6EDA               	movwf	fsr2h,c
  7455   0019CA  C001  FFDF         	movff	fputc@c,indf2
  7456   0019CE  5003               	movf	fputc@fp^0,w,c
  7457   0019D0  6ED9               	movwf	fsr2l,c
  7458   0019D2  6ADA               	clrf	fsr2h,c
  7459   0019D4  0E02               	movlw	2
  7460   0019D6  26D9               	addwf	fsr2l,f,c
  7461   0019D8  2ADE               	incf	postinc2,f,c
  7462   0019DA  0E00               	movlw	0
  7463   0019DC  22DD               	addwfc	postdec2,f,c
  7464   0019DE                     l1221:
  7465   0019DE  0012               	return		;funcret
  7466   0019E0                     __end_of_fputc:
  7467                           	callstack 0
  7468                           
  7469 ;; *************** function _putch *****************
  7470 ;; Defined at:
  7471 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  c               1    wreg     unsigned char 
  7474 ;; Auto vars:     Size  Location     Type
  7475 ;;  c               1    0[COMRAM] unsigned char 
  7476 ;; Return value:  Size  Location     Type
  7477 ;;                  1    wreg      void 
  7478 ;; Registers used:
  7479 ;;		wreg
  7480 ;; Tracked objects:
  7481 ;;		On entry : 0/0
  7482 ;;		On exit  : 0/0
  7483 ;;		Unchanged: 0/0
  7484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7485 ;;      Params:         0       0       0       0       0       0       0       0       0
  7486 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7488 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7489 ;;Total ram usage:        0 bytes
  7490 ;; Hardware stack levels used: 1
  7491 ;; Hardware stack levels required when called: 1
  7492 ;; This function calls:
  7493 ;;		Nothing
  7494 ;; This function is called by:
  7495 ;;		_fputc
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text40
  7500   0025CE                     __ptext40:
  7501                           	callstack 0
  7502   0025CE                     _putch:
  7503                           	callstack 23
  7504   0025CE  0012               	return		;funcret
  7505   0025D0                     __end_of_putch:
  7506                           	callstack 0
  7507                           
  7508 ;; *************** function _abs *****************
  7509 ;; Defined at:
  7510 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  7511 ;; Parameters:    Size  Location     Type
  7512 ;;  a               2    6[COMRAM] int 
  7513 ;; Auto vars:     Size  Location     Type
  7514 ;;		None
  7515 ;; Return value:  Size  Location     Type
  7516 ;;                  2    6[COMRAM] int 
  7517 ;; Registers used:
  7518 ;;		wreg, status,2, status,0
  7519 ;; Tracked objects:
  7520 ;;		On entry : 0/0
  7521 ;;		On exit  : 0/0
  7522 ;;		Unchanged: 0/0
  7523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7524 ;;      Params:         2       0       0       0       0       0       0       0       0
  7525 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7526 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7527 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7528 ;;Total ram usage:        4 bytes
  7529 ;; Hardware stack levels used: 1
  7530 ;; Hardware stack levels required when called: 1
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_dtoa
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text41
  7539   002462                     __ptext41:
  7540                           	callstack 0
  7541   002462                     _abs:
  7542                           	callstack 24
  7543   002462  BE08               	btfsc	(abs@a+1)^0,7,c
  7544   002464  EF36  F012         	goto	u1851
  7545   002468  EF38  F012         	goto	u1850
  7546   00246C                     u1851:
  7547   00246C  EF3E  F012         	goto	l1206
  7548   002470                     u1850:
  7549   002470  C007  F007         	movff	abs@a,?_abs
  7550   002474  C008  F008         	movff	abs@a+1,?_abs+1
  7551   002478  EF4A  F012         	goto	l1209
  7552   00247C                     l1206:
  7553   00247C  C007  F009         	movff	abs@a,??_abs
  7554   002480  C008  F00A         	movff	abs@a+1,??_abs+1
  7555   002484  1E09               	comf	??_abs^0,f,c
  7556   002486  1E0A               	comf	(??_abs+1)^0,f,c
  7557   002488  4A09               	infsnz	??_abs^0,f,c
  7558   00248A  2A0A               	incf	(??_abs+1)^0,f,c
  7559   00248C  C009  F007         	movff	??_abs,?_abs
  7560   002490  C00A  F008         	movff	??_abs+1,?_abs+1
  7561   002494                     l1209:
  7562   002494  0012               	return		;funcret
  7563   002496                     __end_of_abs:
  7564                           	callstack 0
  7565                           
  7566 ;; *************** function ___awmod *****************
  7567 ;; Defined at:
  7568 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  7569 ;; Parameters:    Size  Location     Type
  7570 ;;  dividend        2    0[COMRAM] int 
  7571 ;;  divisor         2    2[COMRAM] int 
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;  sign            1    5[COMRAM] unsigned char 
  7574 ;;  counter         1    4[COMRAM] unsigned char 
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  2    0[COMRAM] int 
  7577 ;; Registers used:
  7578 ;;		wreg, status,2, status,0
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7584 ;;      Params:         4       0       0       0       0       0       0       0       0
  7585 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7586 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7587 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7588 ;;Total ram usage:        6 bytes
  7589 ;; Hardware stack levels used: 1
  7590 ;; Hardware stack levels required when called: 1
  7591 ;; This function calls:
  7592 ;;		Nothing
  7593 ;; This function is called by:
  7594 ;;		_dtoa
  7595 ;;		_DEC2BCD
  7596 ;; This function uses a non-reentrant model
  7597 ;;
  7598                           
  7599                           	psect	text42
  7600   001B40                     __ptext42:
  7601                           	callstack 0
  7602   001B40                     ___awmod:
  7603                           	callstack 24
  7604   001B40  6A06               	clrf	___awmod@sign^0,c
  7605   001B42  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7606   001B44  EFA8  F00D         	goto	u1750
  7607   001B48  EFA6  F00D         	goto	u1751
  7608   001B4C                     u1751:
  7609   001B4C  EFAE  F00D         	goto	l2462
  7610   001B50                     u1750:
  7611   001B50  6C01               	negf	___awmod@dividend^0,c
  7612   001B52  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7613   001B54  B0D8               	btfsc	status,0,c
  7614   001B56  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7615   001B58  0E01               	movlw	1
  7616   001B5A  6E06               	movwf	___awmod@sign^0,c
  7617   001B5C                     l2462:
  7618   001B5C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7619   001B5E  EFB5  F00D         	goto	u1760
  7620   001B62  EFB3  F00D         	goto	u1761
  7621   001B66                     u1761:
  7622   001B66  EFB9  F00D         	goto	l2466
  7623   001B6A                     u1760:
  7624   001B6A  6C03               	negf	___awmod@divisor^0,c
  7625   001B6C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7626   001B6E  B0D8               	btfsc	status,0,c
  7627   001B70  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7628   001B72                     l2466:
  7629   001B72  5003               	movf	___awmod@divisor^0,w,c
  7630   001B74  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7631   001B76  B4D8               	btfsc	status,2,c
  7632   001B78  EFC0  F00D         	goto	u1771
  7633   001B7C  EFC2  F00D         	goto	u1770
  7634   001B80                     u1771:
  7635   001B80  EFE6  F00D         	goto	l2482
  7636   001B84                     u1770:
  7637   001B84  0E01               	movlw	1
  7638   001B86  6E05               	movwf	___awmod@counter^0,c
  7639   001B88  EFCA  F00D         	goto	l2472
  7640   001B8C                     l2470:
  7641   001B8C  90D8               	bcf	status,0,c
  7642   001B8E  3603               	rlcf	___awmod@divisor^0,f,c
  7643   001B90  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7644   001B92  2A05               	incf	___awmod@counter^0,f,c
  7645   001B94                     l2472:
  7646   001B94  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7647   001B96  EFCF  F00D         	goto	u1781
  7648   001B9A  EFD1  F00D         	goto	u1780
  7649   001B9E                     u1781:
  7650   001B9E  EFC6  F00D         	goto	l2470
  7651   001BA2                     u1780:
  7652   001BA2                     l2474:
  7653   001BA2  5003               	movf	___awmod@divisor^0,w,c
  7654   001BA4  5C01               	subwf	___awmod@dividend^0,w,c
  7655   001BA6  5004               	movf	(___awmod@divisor+1)^0,w,c
  7656   001BA8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7657   001BAA  A0D8               	btfss	status,0,c
  7658   001BAC  EFDA  F00D         	goto	u1791
  7659   001BB0  EFDC  F00D         	goto	u1790
  7660   001BB4                     u1791:
  7661   001BB4  EFE0  F00D         	goto	l2478
  7662   001BB8                     u1790:
  7663   001BB8  5003               	movf	___awmod@divisor^0,w,c
  7664   001BBA  5E01               	subwf	___awmod@dividend^0,f,c
  7665   001BBC  5004               	movf	(___awmod@divisor+1)^0,w,c
  7666   001BBE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7667   001BC0                     l2478:
  7668   001BC0  90D8               	bcf	status,0,c
  7669   001BC2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7670   001BC4  3203               	rrcf	___awmod@divisor^0,f,c
  7671   001BC6  2E05               	decfsz	___awmod@counter^0,f,c
  7672   001BC8  EFD1  F00D         	goto	l2474
  7673   001BCC                     l2482:
  7674   001BCC  5006               	movf	___awmod@sign^0,w,c
  7675   001BCE  B4D8               	btfsc	status,2,c
  7676   001BD0  EFEC  F00D         	goto	u1801
  7677   001BD4  EFEE  F00D         	goto	u1800
  7678   001BD8                     u1801:
  7679   001BD8  EFF2  F00D         	goto	l2486
  7680   001BDC                     u1800:
  7681   001BDC  6C01               	negf	___awmod@dividend^0,c
  7682   001BDE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7683   001BE0  B0D8               	btfsc	status,0,c
  7684   001BE2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7685   001BE4                     l2486:
  7686   001BE4  C001  F001         	movff	___awmod@dividend,?___awmod
  7687   001BE8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7688   001BEC  0012               	return		;funcret
  7689   001BEE                     __end_of___awmod:
  7690                           	callstack 0
  7691                           
  7692 ;; *************** function ___awdiv *****************
  7693 ;; Defined at:
  7694 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;  dividend        2    0[COMRAM] int 
  7697 ;;  divisor         2    2[COMRAM] int 
  7698 ;; Auto vars:     Size  Location     Type
  7699 ;;  quotient        2    6[COMRAM] int 
  7700 ;;  sign            1    5[COMRAM] unsigned char 
  7701 ;;  counter         1    4[COMRAM] unsigned char 
  7702 ;; Return value:  Size  Location     Type
  7703 ;;                  2    0[COMRAM] int 
  7704 ;; Registers used:
  7705 ;;		wreg, status,2, status,0
  7706 ;; Tracked objects:
  7707 ;;		On entry : 0/0
  7708 ;;		On exit  : 0/0
  7709 ;;		Unchanged: 0/0
  7710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7711 ;;      Params:         4       0       0       0       0       0       0       0       0
  7712 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7714 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7715 ;;Total ram usage:        8 bytes
  7716 ;; Hardware stack levels used: 1
  7717 ;; Hardware stack levels required when called: 1
  7718 ;; This function calls:
  7719 ;;		Nothing
  7720 ;; This function is called by:
  7721 ;;		_dtoa
  7722 ;;		_DEC2BCD
  7723 ;; This function uses a non-reentrant model
  7724 ;;
  7725                           
  7726                           	psect	text43
  7727   0017A2                     __ptext43:
  7728                           	callstack 0
  7729   0017A2                     ___awdiv:
  7730                           	callstack 24
  7731   0017A2  6A06               	clrf	___awdiv@sign^0,c
  7732   0017A4  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7733   0017A6  EFD9  F00B         	goto	u1690
  7734   0017AA  EFD7  F00B         	goto	u1691
  7735   0017AE                     u1691:
  7736   0017AE  EFDF  F00B         	goto	l2418
  7737   0017B2                     u1690:
  7738   0017B2  6C03               	negf	___awdiv@divisor^0,c
  7739   0017B4  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7740   0017B6  B0D8               	btfsc	status,0,c
  7741   0017B8  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7742   0017BA  0E01               	movlw	1
  7743   0017BC  6E06               	movwf	___awdiv@sign^0,c
  7744   0017BE                     l2418:
  7745   0017BE  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7746   0017C0  EFE6  F00B         	goto	u1700
  7747   0017C4  EFE4  F00B         	goto	u1701
  7748   0017C8                     u1701:
  7749   0017C8  EFEC  F00B         	goto	l2424
  7750   0017CC                     u1700:
  7751   0017CC  6C01               	negf	___awdiv@dividend^0,c
  7752   0017CE  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7753   0017D0  B0D8               	btfsc	status,0,c
  7754   0017D2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7755   0017D4  0E01               	movlw	1
  7756   0017D6  1A06               	xorwf	___awdiv@sign^0,f,c
  7757   0017D8                     l2424:
  7758   0017D8  0E00               	movlw	0
  7759   0017DA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7760   0017DC  0E00               	movlw	0
  7761   0017DE  6E07               	movwf	___awdiv@quotient^0,c
  7762   0017E0  5003               	movf	___awdiv@divisor^0,w,c
  7763   0017E2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7764   0017E4  B4D8               	btfsc	status,2,c
  7765   0017E6  EFF7  F00B         	goto	u1711
  7766   0017EA  EFF9  F00B         	goto	u1710
  7767   0017EE                     u1711:
  7768   0017EE  EF21  F00C         	goto	l2446
  7769   0017F2                     u1710:
  7770   0017F2  0E01               	movlw	1
  7771   0017F4  6E05               	movwf	___awdiv@counter^0,c
  7772   0017F6  EF01  F00C         	goto	l2432
  7773   0017FA                     l2430:
  7774   0017FA  90D8               	bcf	status,0,c
  7775   0017FC  3603               	rlcf	___awdiv@divisor^0,f,c
  7776   0017FE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7777   001800  2A05               	incf	___awdiv@counter^0,f,c
  7778   001802                     l2432:
  7779   001802  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7780   001804  EF06  F00C         	goto	u1721
  7781   001808  EF08  F00C         	goto	u1720
  7782   00180C                     u1721:
  7783   00180C  EFFD  F00B         	goto	l2430
  7784   001810                     u1720:
  7785   001810                     l2434:
  7786   001810  90D8               	bcf	status,0,c
  7787   001812  3607               	rlcf	___awdiv@quotient^0,f,c
  7788   001814  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7789   001816  5003               	movf	___awdiv@divisor^0,w,c
  7790   001818  5C01               	subwf	___awdiv@dividend^0,w,c
  7791   00181A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7792   00181C  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7793   00181E  A0D8               	btfss	status,0,c
  7794   001820  EF14  F00C         	goto	u1731
  7795   001824  EF16  F00C         	goto	u1730
  7796   001828                     u1731:
  7797   001828  EF1B  F00C         	goto	l2442
  7798   00182C                     u1730:
  7799   00182C  5003               	movf	___awdiv@divisor^0,w,c
  7800   00182E  5E01               	subwf	___awdiv@dividend^0,f,c
  7801   001830  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7802   001832  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7803   001834  8007               	bsf	___awdiv@quotient^0,0,c
  7804   001836                     l2442:
  7805   001836  90D8               	bcf	status,0,c
  7806   001838  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7807   00183A  3203               	rrcf	___awdiv@divisor^0,f,c
  7808   00183C  2E05               	decfsz	___awdiv@counter^0,f,c
  7809   00183E  EF08  F00C         	goto	l2434
  7810   001842                     l2446:
  7811   001842  5006               	movf	___awdiv@sign^0,w,c
  7812   001844  B4D8               	btfsc	status,2,c
  7813   001846  EF27  F00C         	goto	u1741
  7814   00184A  EF29  F00C         	goto	u1740
  7815   00184E                     u1741:
  7816   00184E  EF2D  F00C         	goto	l2450
  7817   001852                     u1740:
  7818   001852  6C07               	negf	___awdiv@quotient^0,c
  7819   001854  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7820   001856  B0D8               	btfsc	status,0,c
  7821   001858  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7822   00185A                     l2450:
  7823   00185A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7824   00185E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7825   001862  0012               	return		;funcret
  7826   001864                     __end_of___awdiv:
  7827                           	callstack 0
  7828                           
  7829 ;; *************** function _LCD_String_xy *****************
  7830 ;; Defined at:
  7831 ;;		line 50 in file "LCD.c"
  7832 ;; Parameters:    Size  Location     Type
  7833 ;;  row             1    wreg     unsigned char 
  7834 ;;  pos             1    4[COMRAM] unsigned char 
  7835 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  7836 ;;		 -> STR_22(13), STR_16(16), STR_15(11), STR_14(12), 
  7837 ;;		 -> STR_13(15), STR_8(16), STR_7(13), lcd_buffer(17), 
  7838 ;;		 -> STR_4(13), STR_3(12), STR_2(17), STR_1(15), 
  7839 ;; Auto vars:     Size  Location     Type
  7840 ;;  row             1    7[COMRAM] unsigned char 
  7841 ;;  location        1   10[COMRAM] unsigned char 
  7842 ;; Return value:  Size  Location     Type
  7843 ;;                  1    wreg      void 
  7844 ;; Registers used:
  7845 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7846 ;; Tracked objects:
  7847 ;;		On entry : 0/0
  7848 ;;		On exit  : 0/0
  7849 ;;		Unchanged: 0/0
  7850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7851 ;;      Params:         3       0       0       0       0       0       0       0       0
  7852 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7853 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7854 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7855 ;;Total ram usage:        7 bytes
  7856 ;; Hardware stack levels used: 1
  7857 ;; Hardware stack levels required when called: 3
  7858 ;; This function calls:
  7859 ;;		_LCD_Command
  7860 ;;		_LCD_String
  7861 ;; This function is called by:
  7862 ;;		_Initialize_System
  7863 ;;		_Enter_Low_Power_Mode
  7864 ;;		_Display_DHT11
  7865 ;;		_Display_GPS
  7866 ;;		_Display_RTC
  7867 ;;		_RTC_Init
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text44
  7872   0020FA                     __ptext44:
  7873                           	callstack 0
  7874   0020FA                     _LCD_String_xy:
  7875                           	callstack 25
  7876                           
  7877                           ;incstack = 0
  7878                           ;LCD_String_xy@row stored from wreg
  7879   0020FA  6E08               	movwf	LCD_String_xy@row^0,c
  7880   0020FC                     
  7881                           ;LCD.c: 51:     uint8_t location;;LCD.c: 52:     pos = (pos > 15) ? 15 : pos;
  7882   0020FC  0E10               	movlw	16
  7883   0020FE  6005               	cpfslt	LCD_String_xy@pos^0,c
  7884   002100  EF84  F010         	goto	u2391
  7885   002104  EF86  F010         	goto	u2390
  7886   002108                     u2391:
  7887   002108  EF8B  F010         	goto	l2806
  7888   00210C                     u2390:
  7889   00210C  C005  F009         	movff	LCD_String_xy@pos,_LCD_String_xy$674
  7890   002110  6A0A               	clrf	(_LCD_String_xy$674+1)^0,c
  7891   002112  EF8F  F010         	goto	l2808
  7892   002116                     l2806:
  7893   002116  0E00               	movlw	0
  7894   002118  6E0A               	movwf	(_LCD_String_xy$674+1)^0,c
  7895   00211A  0E0F               	movlw	15
  7896   00211C  6E09               	movwf	_LCD_String_xy$674^0,c
  7897   00211E                     l2808:
  7898   00211E  C009  F005         	movff	_LCD_String_xy$674,LCD_String_xy@pos
  7899                           
  7900                           ;LCD.c: 54:     if(row == 0) {
  7901   002122  5008               	movf	LCD_String_xy@row^0,w,c
  7902   002124  A4D8               	btfss	status,2,c
  7903   002126  EF97  F010         	goto	u2401
  7904   00212A  EF99  F010         	goto	u2400
  7905   00212E                     u2401:
  7906   00212E  EF9E  F010         	goto	l2812
  7907   002132                     u2400:
  7908   002132                     
  7909                           ;LCD.c: 55:         location = 0x80 + pos;
  7910   002132  5005               	movf	LCD_String_xy@pos^0,w,c
  7911   002134  0F80               	addlw	128
  7912   002136  6E0B               	movwf	LCD_String_xy@location^0,c
  7913                           
  7914                           ;LCD.c: 56:     } else {
  7915   002138  EFA1  F010         	goto	l2814
  7916   00213C                     l2812:
  7917                           
  7918                           ;LCD.c: 57:         location = 0xC0 + pos;
  7919   00213C  5005               	movf	LCD_String_xy@pos^0,w,c
  7920   00213E  0FC0               	addlw	192
  7921   002140  6E0B               	movwf	LCD_String_xy@location^0,c
  7922   002142                     l2814:
  7923                           
  7924                           ;LCD.c: 60:     LCD_Command(location);
  7925   002142  500B               	movf	LCD_String_xy@location^0,w,c
  7926   002144  ECD7  F010         	call	_LCD_Command
  7927   002148                     
  7928                           ;LCD.c: 61:     LCD_String(msg);
  7929   002148  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  7930   00214C  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7931   002150  EC4E  F010         	call	_LCD_String	;wreg free
  7932   002154  0012               	return		;funcret
  7933   002156                     __end_of_LCD_String_xy:
  7934                           	callstack 0
  7935                           
  7936 ;; *************** function _LCD_String *****************
  7937 ;; Defined at:
  7938 ;;		line 43 in file "LCD.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  7941 ;;		 -> STR_22(13), STR_16(16), STR_15(11), STR_14(12), 
  7942 ;;		 -> STR_13(15), STR_8(16), STR_7(13), lcd_buffer(17), 
  7943 ;;		 -> STR_4(13), STR_3(12), STR_2(17), STR_1(15), 
  7944 ;; Auto vars:     Size  Location     Type
  7945 ;;		None
  7946 ;; Return value:  Size  Location     Type
  7947 ;;                  1    wreg      void 
  7948 ;; Registers used:
  7949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7950 ;; Tracked objects:
  7951 ;;		On entry : 0/0
  7952 ;;		On exit  : 0/0
  7953 ;;		Unchanged: 0/0
  7954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7955 ;;      Params:         2       0       0       0       0       0       0       0       0
  7956 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7957 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7958 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7959 ;;Total ram usage:        2 bytes
  7960 ;; Hardware stack levels used: 1
  7961 ;; Hardware stack levels required when called: 2
  7962 ;; This function calls:
  7963 ;;		_LCD_Char
  7964 ;; This function is called by:
  7965 ;;		_LCD_String_xy
  7966 ;; This function uses a non-reentrant model
  7967 ;;
  7968                           
  7969                           	psect	text45
  7970   00209C                     __ptext45:
  7971                           	callstack 0
  7972   00209C                     _LCD_String:
  7973                           	callstack 25
  7974   00209C                     
  7975                           ;LCD.c: 44:     while(*msg != 0) {
  7976   00209C  EF64  F010         	goto	l2664
  7977   0020A0                     l2660:
  7978                           
  7979                           ;LCD.c: 45:         LCD_Char(*msg);
  7980   0020A0  C003  FFF6         	movff	LCD_String@msg,tblptrl
  7981   0020A4  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  7982   0020A8  6AF8               	clrf	tblptru,c
  7983   0020AA  0E07               	movlw	(high __ramtop+-1)
  7984   0020AC  64F7               	cpfsgt	tblptrh,c
  7985   0020AE  D003               	bra	u2117
  7986   0020B0  0008               	tblrd		*
  7987   0020B2  50F5               	movf	tablat,w,c
  7988   0020B4  D005               	bra	u2110
  7989   0020B6                     u2117:
  7990   0020B6  CFF6 FFE9          	movff	tblptrl,fsr0l
  7991   0020BA  CFF7 FFEA          	movff	tblptrh,fsr0h
  7992   0020BE  50EF               	movf	indf0,w,c
  7993   0020C0                     u2110:
  7994   0020C0  EC01  F011         	call	_LCD_Char
  7995   0020C4                     
  7996                           ;LCD.c: 46:         msg++;
  7997   0020C4  4A03               	infsnz	LCD_String@msg^0,f,c
  7998   0020C6  2A04               	incf	(LCD_String@msg+1)^0,f,c
  7999   0020C8                     l2664:
  8000                           
  8001                           ;LCD.c: 44:     while(*msg != 0) {
  8002   0020C8  C003  FFF6         	movff	LCD_String@msg,tblptrl
  8003   0020CC  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  8004   0020D0  6AF8               	clrf	tblptru,c
  8005   0020D2  0E07               	movlw	(high __ramtop+-1)
  8006   0020D4  64F7               	cpfsgt	tblptrh,c
  8007   0020D6  D003               	bra	u2127
  8008   0020D8  0008               	tblrd		*
  8009   0020DA  50F5               	movf	tablat,w,c
  8010   0020DC  D005               	bra	u2120
  8011   0020DE                     u2127:
  8012   0020DE  CFF6 FFE9          	movff	tblptrl,fsr0l
  8013   0020E2  CFF7 FFEA          	movff	tblptrh,fsr0h
  8014   0020E6  50EF               	movf	indf0,w,c
  8015   0020E8                     u2120:
  8016   0020E8  0900               	iorlw	0
  8017   0020EA  A4D8               	btfss	status,2,c
  8018   0020EC  EF7A  F010         	goto	u2131
  8019   0020F0  EF7C  F010         	goto	u2130
  8020   0020F4                     u2131:
  8021   0020F4  EF50  F010         	goto	l2660
  8022   0020F8                     u2130:
  8023   0020F8  0012               	return		;funcret
  8024   0020FA                     __end_of_LCD_String:
  8025                           	callstack 0
  8026                           
  8027 ;; *************** function _DHT11_Read *****************
  8028 ;; Defined at:
  8029 ;;		line 16 in file "DHT11.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;  humidity        1    2[COMRAM] PTR unsigned char 
  8032 ;;		 -> Display_DHT11@hum(1), 
  8033 ;;  temperature     1    3[COMRAM] PTR unsigned char 
  8034 ;;		 -> Display_DHT11@temp(1), 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  i               1   13[COMRAM] unsigned char 
  8037 ;;  data            5    8[COMRAM] unsigned char [5]
  8038 ;; Return value:  Size  Location     Type
  8039 ;;                  1    wreg      unsigned char 
  8040 ;; Registers used:
  8041 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8042 ;; Tracked objects:
  8043 ;;		On entry : 0/0
  8044 ;;		On exit  : 0/0
  8045 ;;		Unchanged: 0/0
  8046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8047 ;;      Params:         2       0       0       0       0       0       0       0       0
  8048 ;;      Locals:         6       0       0       0       0       0       0       0       0
  8049 ;;      Temps:          4       0       0       0       0       0       0       0       0
  8050 ;;      Totals:        12       0       0       0       0       0       0       0       0
  8051 ;;Total ram usage:       12 bytes
  8052 ;; Hardware stack levels used: 1
  8053 ;; Hardware stack levels required when called: 2
  8054 ;; This function calls:
  8055 ;;		_DHT11_ReadByte
  8056 ;; This function is called by:
  8057 ;;		_Display_DHT11
  8058 ;; This function uses a non-reentrant model
  8059 ;;
  8060                           
  8061                           	psect	text46
  8062   001864                     __ptext46:
  8063                           	callstack 0
  8064   001864                     _DHT11_Read:
  8065                           	callstack 27
  8066   001864                     
  8067                           ;DHT11.c: 17:     TRISAbits.TRISA0 = 0;
  8068   001864  9092               	bcf	146,0,c	;volatile
  8069                           
  8070                           ;DHT11.c: 18:     PORTAbits.RA0 = 0;
  8071   001866  9080               	bcf	128,0,c	;volatile
  8072   001868                     
  8073                           ;DHT11.c: 19:     _delay((unsigned long)((18)*(8000000/4000.0)));
  8074   001868  0E2F               	movlw	47
  8075   00186A  6E05               	movwf	??_DHT11_Read^0,c
  8076   00186C  0EC0               	movlw	192
  8077   00186E                     u3207:
  8078   00186E  2EE8               	decfsz	wreg,f,c
  8079   001870  D7FE               	bra	u3207
  8080   001872  2E05               	decfsz	??_DHT11_Read^0,f,c
  8081   001874  D7FC               	bra	u3207
  8082   001876                     
  8083                           ;DHT11.c: 20:     PORTAbits.RA0 = 1;
  8084   001876  8080               	bsf	128,0,c	;volatile
  8085                           
  8086                           ;DHT11.c: 21:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  8087   001878  0E14               	movlw	20
  8088   00187A                     u3217:
  8089   00187A  2EE8               	decfsz	wreg,f,c
  8090   00187C  D7FE               	bra	u3217
  8091   00187E                     
  8092                           ;DHT11.c: 22:     TRISAbits.TRISA0 = 1;
  8093   00187E  8092               	bsf	146,0,c	;volatile
  8094   001880                     
  8095                           ;DHT11.c: 24:     if (PORTAbits.RA0 == 0) {
  8096   001880  B080               	btfsc	128,0,c	;volatile
  8097   001882  EF45  F00C         	goto	u2671
  8098   001886  EF47  F00C         	goto	u2670
  8099   00188A                     u2671:
  8100   00188A  EF91  F00C         	goto	l3068
  8101   00188E                     u2670:
  8102   00188E                     l143:
  8103   00188E  A080               	btfss	128,0,c	;volatile
  8104   001890  EF4C  F00C         	goto	u2681
  8105   001894  EF4E  F00C         	goto	u2680
  8106   001898                     u2681:
  8107   001898  EF47  F00C         	goto	l143
  8108   00189C                     u2680:
  8109   00189C                     l146:
  8110   00189C  B080               	btfsc	128,0,c	;volatile
  8111   00189E  EF53  F00C         	goto	u2691
  8112   0018A2  EF55  F00C         	goto	u2690
  8113   0018A6                     u2691:
  8114   0018A6  EF4E  F00C         	goto	l146
  8115   0018AA                     u2690:
  8116   0018AA                     
  8117                           ;DHT11.c: 29:         uint8_t data[5];;DHT11.c: 30:         for (uint8_t i = 0; i < 5; i
      +                          ++) {
  8118   0018AA  6A0E               	clrf	DHT11_Read@i^0,c
  8119   0018AC                     l3054:
  8120                           
  8121                           ;DHT11.c: 31:             data[i] = DHT11_ReadByte();
  8122   0018AC  500E               	movf	DHT11_Read@i^0,w,c
  8123   0018AE  0F09               	addlw	low DHT11_Read@data
  8124   0018B0  6ED9               	movwf	fsr2l,c
  8125   0018B2  6ADA               	clrf	fsr2h,c
  8126   0018B4  EC2B  F011         	call	_DHT11_ReadByte	;wreg free
  8127   0018B8  6EDF               	movwf	indf2,c
  8128   0018BA                     
  8129                           ;DHT11.c: 32:         }
  8130   0018BA  2A0E               	incf	DHT11_Read@i^0,f,c
  8131   0018BC  0E04               	movlw	4
  8132   0018BE  640E               	cpfsgt	DHT11_Read@i^0,c
  8133   0018C0  EF64  F00C         	goto	u2701
  8134   0018C4  EF66  F00C         	goto	u2700
  8135   0018C8                     u2701:
  8136   0018C8  EF56  F00C         	goto	l3054
  8137   0018CC                     u2700:
  8138   0018CC                     
  8139                           ;DHT11.c: 35:         if ((data[0] + data[1] + data[2] + data[3]) == data[4]) {
  8140   0018CC  500D               	movf	(DHT11_Read@data+4)^0,w,c
  8141   0018CE  6E05               	movwf	??_DHT11_Read^0,c
  8142   0018D0  6A06               	clrf	(??_DHT11_Read+1)^0,c
  8143   0018D2  500A               	movf	(DHT11_Read@data+1)^0,w,c
  8144   0018D4  C009  F007         	movff	DHT11_Read@data,??_DHT11_Read+2
  8145   0018D8  6A08               	clrf	(??_DHT11_Read+3)^0,c
  8146   0018DA  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  8147   0018DC  0E00               	movlw	0
  8148   0018DE  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  8149   0018E0  500B               	movf	(DHT11_Read@data+2)^0,w,c
  8150   0018E2  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  8151   0018E4  0E00               	movlw	0
  8152   0018E6  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  8153   0018E8  500C               	movf	(DHT11_Read@data+3)^0,w,c
  8154   0018EA  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  8155   0018EC  0E00               	movlw	0
  8156   0018EE  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  8157   0018F0  5005               	movf	??_DHT11_Read^0,w,c
  8158   0018F2  1807               	xorwf	(??_DHT11_Read+2)^0,w,c
  8159   0018F4  E107               	bnz	u2711
  8160   0018F6  5006               	movf	(??_DHT11_Read+1)^0,w,c
  8161   0018F8  1808               	xorwf	(??_DHT11_Read+3)^0,w,c
  8162   0018FA  A4D8               	btfss	status,2,c
  8163   0018FC  EF82  F00C         	goto	u2711
  8164   001900  EF84  F00C         	goto	u2710
  8165   001904                     u2711:
  8166   001904  EF91  F00C         	goto	l3068
  8167   001908                     u2710:
  8168   001908                     
  8169                           ;DHT11.c: 36:             *humidity = data[0];
  8170   001908  5003               	movf	DHT11_Read@humidity^0,w,c
  8171   00190A  6ED9               	movwf	fsr2l,c
  8172   00190C  6ADA               	clrf	fsr2h,c
  8173   00190E  C009  FFDF         	movff	DHT11_Read@data,indf2
  8174                           
  8175                           ;DHT11.c: 37:             *temperature = data[2];
  8176   001912  5004               	movf	DHT11_Read@temperature^0,w,c
  8177   001914  6ED9               	movwf	fsr2l,c
  8178   001916  6ADA               	clrf	fsr2h,c
  8179   001918  C00B  FFDF         	movff	DHT11_Read@data+2,indf2
  8180   00191C                     
  8181                           ;DHT11.c: 38:             return 1;
  8182   00191C  0E01               	movlw	1
  8183   00191E  EF92  F00C         	goto	l152
  8184   001922                     l3068:
  8185                           
  8186                           ;DHT11.c: 41:     return 0;
  8187   001922  0E00               	movlw	0
  8188   001924                     l152:
  8189   001924  0012               	return		;funcret
  8190   001926                     __end_of_DHT11_Read:
  8191                           	callstack 0
  8192                           
  8193 ;; *************** function _DHT11_ReadByte *****************
  8194 ;; Defined at:
  8195 ;;		line 4 in file "DHT11.c"
  8196 ;; Parameters:    Size  Location     Type
  8197 ;;		None
  8198 ;; Auto vars:     Size  Location     Type
  8199 ;;  i               1    1[COMRAM] unsigned char 
  8200 ;;  data            1    0[COMRAM] unsigned char 
  8201 ;; Return value:  Size  Location     Type
  8202 ;;                  1    wreg      unsigned char 
  8203 ;; Registers used:
  8204 ;;		wreg, status,2, status,0
  8205 ;; Tracked objects:
  8206 ;;		On entry : 0/0
  8207 ;;		On exit  : 0/0
  8208 ;;		Unchanged: 0/0
  8209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8210 ;;      Params:         0       0       0       0       0       0       0       0       0
  8211 ;;      Locals:         2       0       0       0       0       0       0       0       0
  8212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8213 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8214 ;;Total ram usage:        2 bytes
  8215 ;; Hardware stack levels used: 1
  8216 ;; Hardware stack levels required when called: 1
  8217 ;; This function calls:
  8218 ;;		Nothing
  8219 ;; This function is called by:
  8220 ;;		_DHT11_Read
  8221 ;; This function uses a non-reentrant model
  8222 ;;
  8223                           
  8224                           	psect	text47
  8225   002256                     __ptext47:
  8226                           	callstack 0
  8227   002256                     _DHT11_ReadByte:
  8228                           	callstack 27
  8229   002256                     
  8230                           ;DHT11.c: 5:     uint8_t data = 0;
  8231   002256  6A01               	clrf	DHT11_ReadByte@data^0,c
  8232                           
  8233                           ;DHT11.c: 6:     for (uint8_t i = 0; i < 8; i++) {
  8234   002258  6A02               	clrf	DHT11_ReadByte@i^0,c
  8235   00225A                     l132:
  8236   00225A  A080               	btfss	128,0,c	;volatile
  8237   00225C  EF32  F011         	goto	u2461
  8238   002260  EF34  F011         	goto	u2460
  8239   002264                     u2461:
  8240   002264  EF2D  F011         	goto	l132
  8241   002268                     u2460:
  8242   002268                     
  8243                           ;DHT11.c: 8:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  8244   002268  0E21               	movlw	33
  8245   00226A                     u3227:
  8246   00226A  2EE8               	decfsz	wreg,f,c
  8247   00226C  D7FE               	bra	u3227
  8248   00226E  0000               	nop	
  8249   002270                     
  8250                           ;DHT11.c: 9:         data <<= 1;
  8251   002270  90D8               	bcf	status,0,c
  8252   002272  3601               	rlcf	DHT11_ReadByte@data^0,f,c
  8253   002274                     
  8254                           ;DHT11.c: 10:         if (PORTAbits.RA0) data |= 1;
  8255   002274  A080               	btfss	128,0,c	;volatile
  8256   002276  EF3F  F011         	goto	u2471
  8257   00227A  EF41  F011         	goto	u2470
  8258   00227E                     u2471:
  8259   00227E  EF42  F011         	goto	l136
  8260   002282                     u2470:
  8261   002282  8001               	bsf	DHT11_ReadByte@data^0,0,c
  8262   002284                     l136:
  8263   002284  B080               	btfsc	128,0,c	;volatile
  8264   002286  EF47  F011         	goto	u2481
  8265   00228A  EF49  F011         	goto	u2480
  8266   00228E                     u2481:
  8267   00228E  EF42  F011         	goto	l136
  8268   002292                     u2480:
  8269   002292                     
  8270                           ;DHT11.c: 12:     }
  8271   002292  2A02               	incf	DHT11_ReadByte@i^0,f,c
  8272   002294  0E07               	movlw	7
  8273   002296  6402               	cpfsgt	DHT11_ReadByte@i^0,c
  8274   002298  EF50  F011         	goto	u2491
  8275   00229C  EF52  F011         	goto	u2490
  8276   0022A0                     u2491:
  8277   0022A0  EF2D  F011         	goto	l132
  8278   0022A4                     u2490:
  8279   0022A4                     
  8280                           ;DHT11.c: 13:     return data;
  8281   0022A4  5001               	movf	DHT11_ReadByte@data^0,w,c
  8282   0022A6  0012               	return		;funcret
  8283   0022A8                     __end_of_DHT11_ReadByte:
  8284                           	callstack 0
  8285                           
  8286 ;; *************** function _Clear_Line *****************
  8287 ;; Defined at:
  8288 ;;		line 83 in file "main.c"
  8289 ;; Parameters:    Size  Location     Type
  8290 ;;  line            1    wreg     unsigned char 
  8291 ;; Auto vars:     Size  Location     Type
  8292 ;;  line            1    2[COMRAM] unsigned char 
  8293 ;;  i               1    5[COMRAM] unsigned char 
  8294 ;; Return value:  Size  Location     Type
  8295 ;;                  1    wreg      void 
  8296 ;; Registers used:
  8297 ;;		wreg, status,2, status,0, cstack
  8298 ;; Tracked objects:
  8299 ;;		On entry : 0/0
  8300 ;;		On exit  : 0/0
  8301 ;;		Unchanged: 0/0
  8302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8303 ;;      Params:         0       0       0       0       0       0       0       0       0
  8304 ;;      Locals:         4       0       0       0       0       0       0       0       0
  8305 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8306 ;;      Totals:         4       0       0       0       0       0       0       0       0
  8307 ;;Total ram usage:        4 bytes
  8308 ;; Hardware stack levels used: 1
  8309 ;; Hardware stack levels required when called: 2
  8310 ;; This function calls:
  8311 ;;		_LCD_Char
  8312 ;;		_LCD_Command
  8313 ;; This function is called by:
  8314 ;;		_Display_DHT11
  8315 ;;		_Display_GPS
  8316 ;;		_Display_RTC
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text48
  8321   0022F8                     __ptext48:
  8322                           	callstack 0
  8323   0022F8                     _Clear_Line:
  8324                           	callstack 27
  8325                           
  8326                           ;incstack = 0
  8327                           ;Clear_Line@line stored from wreg
  8328   0022F8  6E03               	movwf	Clear_Line@line^0,c
  8329   0022FA                     
  8330                           ;main.c: 84:     LCD_Command(line == 0 ? 0x80 : 0xC0);
  8331   0022FA  5003               	movf	Clear_Line@line^0,w,c
  8332   0022FC  B4D8               	btfsc	status,2,c
  8333   0022FE  EF83  F011         	goto	u2651
  8334   002302  EF85  F011         	goto	u2650
  8335   002306                     u2651:
  8336   002306  EF8B  F011         	goto	l3022
  8337   00230A                     u2650:
  8338   00230A  0E00               	movlw	0
  8339   00230C  6E05               	movwf	(_Clear_Line$326+1)^0,c
  8340   00230E  0EC0               	movlw	192
  8341   002310  6E04               	movwf	_Clear_Line$326^0,c
  8342   002312  EF8F  F011         	goto	l3024
  8343   002316                     l3022:
  8344   002316  0E00               	movlw	0
  8345   002318  6E05               	movwf	(_Clear_Line$326+1)^0,c
  8346   00231A  0E80               	movlw	128
  8347   00231C  6E04               	movwf	_Clear_Line$326^0,c
  8348   00231E                     l3024:
  8349   00231E  5004               	movf	_Clear_Line$326^0,w,c
  8350   002320  ECD7  F010         	call	_LCD_Command
  8351   002324                     
  8352                           ;main.c: 85:     for(unsigned char i=0; i<16; i++) LCD_Char(' ');
  8353   002324  6A06               	clrf	Clear_Line@i^0,c
  8354   002326                     l3032:
  8355   002326  0E20               	movlw	32
  8356   002328  EC01  F011         	call	_LCD_Char
  8357   00232C  2A06               	incf	Clear_Line@i^0,f,c
  8358   00232E  0E0F               	movlw	15
  8359   002330  6406               	cpfsgt	Clear_Line@i^0,c
  8360   002332  EF9D  F011         	goto	u2661
  8361   002336  EF9F  F011         	goto	u2660
  8362   00233A                     u2661:
  8363   00233A  EF93  F011         	goto	l3032
  8364   00233E                     u2660:
  8365   00233E  0012               	return		;funcret
  8366   002340                     __end_of_Clear_Line:
  8367                           	callstack 0
  8368                           
  8369 ;; *************** function _LCD_Command *****************
  8370 ;; Defined at:
  8371 ;;		line 13 in file "LCD.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;  cmd             1    wreg     unsigned char 
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;  cmd             1    1[COMRAM] unsigned char 
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		wreg, status,2, status,0
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0
  8386 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8387 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8388 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8389 ;;Total ram usage:        2 bytes
  8390 ;; Hardware stack levels used: 1
  8391 ;; Hardware stack levels required when called: 1
  8392 ;; This function calls:
  8393 ;;		Nothing
  8394 ;; This function is called by:
  8395 ;;		_Clear_Line
  8396 ;;		_LCD_Init
  8397 ;;		_LCD_String_xy
  8398 ;;		_LCD_Clear
  8399 ;; This function uses a non-reentrant model
  8400 ;;
  8401                           
  8402                           	psect	text49
  8403   0021AE                     __ptext49:
  8404                           	callstack 0
  8405   0021AE                     _LCD_Command:
  8406                           	callstack 26
  8407                           
  8408                           ;incstack = 0
  8409                           ;LCD_Command@cmd stored from wreg
  8410   0021AE  6E02               	movwf	LCD_Command@cmd^0,c
  8411   0021B0                     
  8412                           ;LCD.c: 14:     LATD = (LATD & 0x0F) | (cmd & 0xF0);
  8413   0021B0  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  8414   0021B4  0EF0               	movlw	240
  8415   0021B6  1601               	andwf	??_LCD_Command^0,f,c
  8416   0021B8  508C               	movf	140,w,c	;volatile
  8417   0021BA  0B0F               	andlw	15
  8418   0021BC  1001               	iorwf	??_LCD_Command^0,w,c
  8419   0021BE  6E8C               	movwf	140,c	;volatile
  8420   0021C0                     
  8421                           ;LCD.c: 15:     LATD0 = 0;
  8422   0021C0  908C               	bcf	3980,0,c	;volatile
  8423   0021C2                     
  8424                           ;LCD.c: 16:     LATD1 = 1;
  8425   0021C2  828C               	bsf	3980,1,c	;volatile
  8426   0021C4                     
  8427                           ;LCD.c: 17:     __nop();
  8428   0021C4  0000               	nop	
  8429   0021C6                     
  8430                           ;LCD.c: 18:     LATD1 = 0;
  8431   0021C6  928C               	bcf	3980,1,c	;volatile
  8432   0021C8                     
  8433                           ;LCD.c: 19:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8434   0021C8  0E03               	movlw	3
  8435   0021CA  6E01               	movwf	??_LCD_Command^0,c
  8436   0021CC  0E98               	movlw	152
  8437   0021CE                     u3237:
  8438   0021CE  2EE8               	decfsz	wreg,f,c
  8439   0021D0  D7FE               	bra	u3237
  8440   0021D2  2E01               	decfsz	??_LCD_Command^0,f,c
  8441   0021D4  D7FC               	bra	u3237
  8442   0021D6                     
  8443                           ;LCD.c: 21:     LATD = (LATD & 0x0F) | ((cmd << 4) & 0xF0);
  8444   0021D6  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  8445   0021DA  3A01               	swapf	??_LCD_Command^0,f,c
  8446   0021DC  0EF0               	movlw	240
  8447   0021DE  1601               	andwf	??_LCD_Command^0,f,c
  8448   0021E0  0EF0               	movlw	240
  8449   0021E2  1601               	andwf	??_LCD_Command^0,f,c
  8450   0021E4  508C               	movf	140,w,c	;volatile
  8451   0021E6  0B0F               	andlw	15
  8452   0021E8  1001               	iorwf	??_LCD_Command^0,w,c
  8453   0021EA  6E8C               	movwf	140,c	;volatile
  8454   0021EC                     
  8455                           ;LCD.c: 22:     LATD1 = 1;
  8456   0021EC  828C               	bsf	3980,1,c	;volatile
  8457   0021EE                     
  8458                           ;LCD.c: 23:     __nop();
  8459   0021EE  0000               	nop	
  8460   0021F0                     
  8461                           ;LCD.c: 24:     LATD1 = 0;
  8462   0021F0  928C               	bcf	3980,1,c	;volatile
  8463                           
  8464                           ;LCD.c: 25:     _delay((unsigned long)((3)*(8000000/4000.0)));
  8465   0021F2  0E08               	movlw	8
  8466   0021F4  6E01               	movwf	??_LCD_Command^0,c
  8467   0021F6  0ECA               	movlw	202
  8468   0021F8                     u3247:
  8469   0021F8  2EE8               	decfsz	wreg,f,c
  8470   0021FA  D7FE               	bra	u3247
  8471   0021FC  2E01               	decfsz	??_LCD_Command^0,f,c
  8472   0021FE  D7FC               	bra	u3247
  8473   002200  0012               	return		;funcret
  8474   002202                     __end_of_LCD_Command:
  8475                           	callstack 0
  8476                           
  8477 ;; *************** function _LCD_Char *****************
  8478 ;; Defined at:
  8479 ;;		line 28 in file "LCD.c"
  8480 ;; Parameters:    Size  Location     Type
  8481 ;;  dat             1    wreg     unsigned char 
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;  dat             1    1[COMRAM] unsigned char 
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      void 
  8486 ;; Registers used:
  8487 ;;		wreg, status,2, status,0
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8493 ;;      Params:         0       0       0       0       0       0       0       0       0
  8494 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8495 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8496 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8497 ;;Total ram usage:        2 bytes
  8498 ;; Hardware stack levels used: 1
  8499 ;; Hardware stack levels required when called: 1
  8500 ;; This function calls:
  8501 ;;		Nothing
  8502 ;; This function is called by:
  8503 ;;		_Clear_Line
  8504 ;;		_LCD_String
  8505 ;; This function uses a non-reentrant model
  8506 ;;
  8507                           
  8508                           	psect	text50
  8509   002202                     __ptext50:
  8510                           	callstack 0
  8511   002202                     _LCD_Char:
  8512                           	callstack 25
  8513                           
  8514                           ;incstack = 0
  8515                           ;LCD_Char@dat stored from wreg
  8516   002202  6E02               	movwf	LCD_Char@dat^0,c
  8517   002204                     
  8518                           ;LCD.c: 29:     LATD = (LATD & 0x0F) | (dat & 0xF0);
  8519   002204  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  8520   002208  0EF0               	movlw	240
  8521   00220A  1601               	andwf	??_LCD_Char^0,f,c
  8522   00220C  508C               	movf	140,w,c	;volatile
  8523   00220E  0B0F               	andlw	15
  8524   002210  1001               	iorwf	??_LCD_Char^0,w,c
  8525   002212  6E8C               	movwf	140,c	;volatile
  8526   002214                     
  8527                           ;LCD.c: 30:     LATD0 = 1;
  8528   002214  808C               	bsf	3980,0,c	;volatile
  8529   002216                     
  8530                           ;LCD.c: 31:     LATD1 = 1;
  8531   002216  828C               	bsf	3980,1,c	;volatile
  8532   002218                     
  8533                           ;LCD.c: 32:     __nop();
  8534   002218  0000               	nop	
  8535   00221A                     
  8536                           ;LCD.c: 33:     LATD1 = 0;
  8537   00221A  928C               	bcf	3980,1,c	;volatile
  8538   00221C                     
  8539                           ;LCD.c: 34:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8540   00221C  0E03               	movlw	3
  8541   00221E  6E01               	movwf	??_LCD_Char^0,c
  8542   002220  0E98               	movlw	152
  8543   002222                     u3257:
  8544   002222  2EE8               	decfsz	wreg,f,c
  8545   002224  D7FE               	bra	u3257
  8546   002226  2E01               	decfsz	??_LCD_Char^0,f,c
  8547   002228  D7FC               	bra	u3257
  8548   00222A                     
  8549                           ;LCD.c: 36:     LATD = (LATD & 0x0F) | ((dat << 4) & 0xF0);
  8550   00222A  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  8551   00222E  3A01               	swapf	??_LCD_Char^0,f,c
  8552   002230  0EF0               	movlw	240
  8553   002232  1601               	andwf	??_LCD_Char^0,f,c
  8554   002234  0EF0               	movlw	240
  8555   002236  1601               	andwf	??_LCD_Char^0,f,c
  8556   002238  508C               	movf	140,w,c	;volatile
  8557   00223A  0B0F               	andlw	15
  8558   00223C  1001               	iorwf	??_LCD_Char^0,w,c
  8559   00223E  6E8C               	movwf	140,c	;volatile
  8560   002240                     
  8561                           ;LCD.c: 37:     LATD1 = 1;
  8562   002240  828C               	bsf	3980,1,c	;volatile
  8563   002242                     
  8564                           ;LCD.c: 38:     __nop();
  8565   002242  0000               	nop	
  8566   002244                     
  8567                           ;LCD.c: 39:     LATD1 = 0;
  8568   002244  928C               	bcf	3980,1,c	;volatile
  8569                           
  8570                           ;LCD.c: 40:     _delay((unsigned long)((3)*(8000000/4000.0)));
  8571   002246  0E08               	movlw	8
  8572   002248  6E01               	movwf	??_LCD_Char^0,c
  8573   00224A  0ECA               	movlw	202
  8574   00224C                     u3267:
  8575   00224C  2EE8               	decfsz	wreg,f,c
  8576   00224E  D7FE               	bra	u3267
  8577   002250  2E01               	decfsz	??_LCD_Char^0,f,c
  8578   002252  D7FC               	bra	u3267
  8579   002254  0012               	return		;funcret
  8580   002256                     __end_of_LCD_Char:
  8581                           	callstack 0
  8582                           
  8583 ;; *************** function _HighPriorityISR *****************
  8584 ;; Defined at:
  8585 ;;		line 64 in file "main.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;		None
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;		None
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  1    wreg      void 
  8592 ;; Registers used:
  8593 ;;		wreg, status,2
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 0/0
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8599 ;;      Params:         0       0       0       0       0       0       0       0       0
  8600 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8601 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8602 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8603 ;;Total ram usage:        0 bytes
  8604 ;; Hardware stack levels used: 1
  8605 ;; This function calls:
  8606 ;;		Nothing
  8607 ;; This function is called by:
  8608 ;;		Interrupt level 2
  8609 ;; This function uses a non-reentrant model
  8610 ;;
  8611                           
  8612                           	psect	intcode
  8613   000008                     __pintcode:
  8614                           	callstack 0
  8615   000008                     _HighPriorityISR:
  8616                           	callstack 21
  8617                           
  8618                           ;incstack = 0
  8619   000008  8258               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8620   00000A  ED7D  F012         	call	int_func,f	;refresh shadow registers
  8621                           
  8622                           	psect	intcode_body
  8623   0024FA                     __pintcode_body:
  8624                           	callstack 21
  8625   0024FA                     int_func:
  8626                           	callstack 21
  8627   0024FA  0006               	pop		; remove dummy address from shadow register refresh
  8628   0024FC                     
  8629                           ;main.c: 65:     if (INTCONbits.INT0IF) {
  8630   0024FC  A2F2               	btfss	242,1,c	;volatile
  8631   0024FE  EF83  F012         	goto	i2u148_41
  8632   002502  EF85  F012         	goto	i2u148_40
  8633   002506                     i2u148_41:
  8634   002506  EF93  F012         	goto	i2l62
  8635   00250A                     i2u148_40:
  8636   00250A                     
  8637                           ;main.c: 66:         system_state = !system_state;
  8638   00250A  5057               	movf	_system_state^0,w,c	;volatile
  8639   00250C  B4D8               	btfsc	status,2,c
  8640   00250E  EF8B  F012         	goto	i2u149_41
  8641   002512  EF8E  F012         	goto	i2u149_40
  8642   002516                     i2u149_41:
  8643   002516  0E01               	movlw	1
  8644   002518  EF8F  F012         	goto	i2u150_40
  8645   00251C                     i2u149_40:
  8646   00251C  0E00               	movlw	0
  8647   00251E                     i2u150_40:
  8648   00251E  6E57               	movwf	_system_state^0,c	;volatile
  8649                           
  8650                           ;main.c: 67:         system_needs_reset = 1;
  8651   002520  0E01               	movlw	1
  8652   002522  6E56               	movwf	_system_needs_reset^0,c	;volatile
  8653   002524                     
  8654                           ;main.c: 68:         INTCONbits.INT0IF = 0;
  8655   002524  92F2               	bcf	242,1,c	;volatile
  8656   002526                     i2l62:
  8657   002526  9258               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8658   002528  0011               	retfie		f
  8659   00252A                     __end_of_HighPriorityISR:
  8660                           	callstack 0
  8661                           
  8662                           	psect	rparam
  8663   000001                     ___rparam_used  equ	1
  8664   000000                     ___param_bank   equ	0
  8665   000000                     __Lparam        equ	__Lrparam
  8666   000000                     __Hparam        equ	__Hrparam
  8667                           
  8668                           	psect	temp
  8669   000058                     btemp:
  8670                           	callstack 0
  8671   000058                     	ds	1
  8672   000058                     int$flags       set	btemp
  8673   000059                     wtemp8          set	btemp+1
  8674   000059                     ttemp5          set	btemp+1
  8675   00005C                     ttemp6          set	btemp+4
  8676   000060                     ttemp7          set	btemp+8
  8677                           
  8678                           	psect	idloc
  8679                           
  8680                           ;Config register IDLOC0 @ 0x200000
  8681                           ;	unspecified, using default values
  8682   200000                     	org	2097152
  8683   200000  FF                 	db	255
  8684                           
  8685                           ;Config register IDLOC1 @ 0x200001
  8686                           ;	unspecified, using default values
  8687   200001                     	org	2097153
  8688   200001  FF                 	db	255
  8689                           
  8690                           ;Config register IDLOC2 @ 0x200002
  8691                           ;	unspecified, using default values
  8692   200002                     	org	2097154
  8693   200002  FF                 	db	255
  8694                           
  8695                           ;Config register IDLOC3 @ 0x200003
  8696                           ;	unspecified, using default values
  8697   200003                     	org	2097155
  8698   200003  FF                 	db	255
  8699                           
  8700                           ;Config register IDLOC4 @ 0x200004
  8701                           ;	unspecified, using default values
  8702   200004                     	org	2097156
  8703   200004  FF                 	db	255
  8704                           
  8705                           ;Config register IDLOC5 @ 0x200005
  8706                           ;	unspecified, using default values
  8707   200005                     	org	2097157
  8708   200005  FF                 	db	255
  8709                           
  8710                           ;Config register IDLOC6 @ 0x200006
  8711                           ;	unspecified, using default values
  8712   200006                     	org	2097158
  8713   200006  FF                 	db	255
  8714                           
  8715                           ;Config register IDLOC7 @ 0x200007
  8716                           ;	unspecified, using default values
  8717   200007                     	org	2097159
  8718   200007  FF                 	db	255
  8719                           
  8720                           	psect	config
  8721                           
  8722                           ;Config register CONFIG1L @ 0x300000
  8723                           ;	PLL Prescaler Selection bits
  8724                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8725                           ;	System Clock Postscaler Selection bits
  8726                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8727                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8728                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8729   300000                     	org	3145728
  8730   300000  00                 	db	0
  8731                           
  8732                           ;Config register CONFIG1H @ 0x300001
  8733                           ;	Oscillator Selection bits
  8734                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8735                           ;	Fail-Safe Clock Monitor Enable bit
  8736                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8737                           ;	Internal/External Oscillator Switchover bit
  8738                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8739   300001                     	org	3145729
  8740   300001  09                 	db	9
  8741                           
  8742                           ;Config register CONFIG2L @ 0x300002
  8743                           ;	Power-up Timer Enable bit
  8744                           ;	PWRT = OFF, PWRT disabled
  8745                           ;	Brown-out Reset Enable bits
  8746                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8747                           ;	Brown-out Reset Voltage bits
  8748                           ;	BORV = 3, Minimum setting 2.05V
  8749                           ;	USB Voltage Regulator Enable bit
  8750                           ;	VREGEN = OFF, USB voltage regulator disabled
  8751   300002                     	org	3145730
  8752   300002  1F                 	db	31
  8753                           
  8754                           ;Config register CONFIG2H @ 0x300003
  8755                           ;	Watchdog Timer Enable bit
  8756                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8757                           ;	Watchdog Timer Postscale Select bits
  8758                           ;	WDTPS = 32768, 1:32768
  8759   300003                     	org	3145731
  8760   300003  1E                 	db	30
  8761                           
  8762                           ; Padding undefined space
  8763   300004                     	org	3145732
  8764   300004  FF                 	db	255
  8765                           
  8766                           ;Config register CONFIG3H @ 0x300005
  8767                           ;	CCP2 MUX bit
  8768                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8769                           ;	PORTB A/D Enable bit
  8770                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8771                           ;	Low-Power Timer 1 Oscillator Enable bit
  8772                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8773                           ;	MCLR Pin Enable bit
  8774                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8775   300005                     	org	3145733
  8776   300005  01                 	db	1
  8777                           
  8778                           ;Config register CONFIG4L @ 0x300006
  8779                           ;	Stack Full/Underflow Reset Enable bit
  8780                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8781                           ;	Single-Supply ICSP Enable bit
  8782                           ;	LVP = OFF, Single-Supply ICSP disabled
  8783                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8784                           ;	ICPRT = OFF, ICPORT disabled
  8785                           ;	Extended Instruction Set Enable bit
  8786                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8787                           ;	Background Debugger Enable bit
  8788                           ;	DEBUG = 0x1, unprogrammed default
  8789   300006                     	org	3145734
  8790   300006  81                 	db	129
  8791                           
  8792                           ; Padding undefined space
  8793   300007                     	org	3145735
  8794   300007  FF                 	db	255
  8795                           
  8796                           ;Config register CONFIG5L @ 0x300008
  8797                           ;	Code Protection bit
  8798                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8799                           ;	Code Protection bit
  8800                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8801                           ;	Code Protection bit
  8802                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8803                           ;	Code Protection bit
  8804                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8805   300008                     	org	3145736
  8806   300008  0F                 	db	15
  8807                           
  8808                           ;Config register CONFIG5H @ 0x300009
  8809                           ;	Boot Block Code Protection bit
  8810                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8811                           ;	Data EEPROM Code Protection bit
  8812                           ;	CPD = OFF, Data EEPROM is not code-protected
  8813   300009                     	org	3145737
  8814   300009  C0                 	db	192
  8815                           
  8816                           ;Config register CONFIG6L @ 0x30000A
  8817                           ;	Write Protection bit
  8818                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8819                           ;	Write Protection bit
  8820                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8821                           ;	Write Protection bit
  8822                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8823                           ;	Write Protection bit
  8824                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8825   30000A                     	org	3145738
  8826   30000A  0F                 	db	15
  8827                           
  8828                           ;Config register CONFIG6H @ 0x30000B
  8829                           ;	Configuration Register Write Protection bit
  8830                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8831                           ;	Boot Block Write Protection bit
  8832                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8833                           ;	Data EEPROM Write Protection bit
  8834                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8835   30000B                     	org	3145739
  8836   30000B  E0                 	db	224
  8837                           
  8838                           ;Config register CONFIG7L @ 0x30000C
  8839                           ;	Table Read Protection bit
  8840                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8841                           ;	Table Read Protection bit
  8842                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8843                           ;	Table Read Protection bit
  8844                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8845                           ;	Table Read Protection bit
  8846                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8847   30000C                     	org	3145740
  8848   30000C  0F                 	db	15
  8849                           
  8850                           ;Config register CONFIG7H @ 0x30000D
  8851                           ;	Boot Block Table Read Protection bit
  8852                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8853   30000D                     	org	3145741
  8854   30000D  40                 	db	64
  8855                           tosu	equ	0xFFF
  8856                           tosh	equ	0xFFE
  8857                           tosl	equ	0xFFD
  8858                           stkptr	equ	0xFFC
  8859                           pclatu	equ	0xFFB
  8860                           pclath	equ	0xFFA
  8861                           pcl	equ	0xFF9
  8862                           tblptru	equ	0xFF8
  8863                           tblptrh	equ	0xFF7
  8864                           tblptrl	equ	0xFF6
  8865                           tablat	equ	0xFF5
  8866                           prodh	equ	0xFF4
  8867                           prodl	equ	0xFF3
  8868                           indf0	equ	0xFEF
  8869                           postinc0	equ	0xFEE
  8870                           postdec0	equ	0xFED
  8871                           preinc0	equ	0xFEC
  8872                           plusw0	equ	0xFEB
  8873                           fsr0h	equ	0xFEA
  8874                           fsr0l	equ	0xFE9
  8875                           wreg	equ	0xFE8
  8876                           indf1	equ	0xFE7
  8877                           postinc1	equ	0xFE6
  8878                           postdec1	equ	0xFE5
  8879                           preinc1	equ	0xFE4
  8880                           plusw1	equ	0xFE3
  8881                           fsr1h	equ	0xFE2
  8882                           fsr1l	equ	0xFE1
  8883                           bsr	equ	0xFE0
  8884                           indf2	equ	0xFDF
  8885                           postinc2	equ	0xFDE
  8886                           postdec2	equ	0xFDD
  8887                           preinc2	equ	0xFDC
  8888                           plusw2	equ	0xFDB
  8889                           fsr2h	equ	0xFDA
  8890                           fsr2l	equ	0xFD9
  8891                           status	equ	0xFD8

Data Sizes:
    Strings     231
    Constant    0
    Data        1
    BSS         181
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     79      87
    BANK0           160    104     136
    BANK1           256    125     167
    BANK2           256      0     100
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DHT11_Read@humidity	PTR unsigned char  size(1) Largest target is 1
		 -> Display_DHT11@hum(COMRAM[1]), 

    DHT11_Read@temperature	PTR unsigned char  size(1) Largest target is 1
		 -> Display_DHT11@temp(COMRAM[1]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    GPS_ParseGPRMC@ew	PTR unsigned char  size(2) Largest target is 2
		 -> Display_GPS@ew(BANK1[2]), 

    GPS_ParseGPRMC@lat	PTR unsigned char  size(2) Largest target is 10
		 -> Display_GPS@lat(BANK1[10]), 

    GPS_ParseGPRMC@lon	PTR unsigned char  size(2) Largest target is 11
		 -> Display_GPS@lon(BANK1[11]), 

    GPS_ParseGPRMC@msg	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), 

    GPS_ParseGPRMC@ns	PTR unsigned char  size(2) Largest target is 2
		 -> Display_GPS@ns(BANK1[2]), 

    GPS_ParseGPRMC@token	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    GPS_ReadSentence@buffer	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), STR_1(CODE[15]), STR_13(CODE[15]), STR_14(CODE[12]), 
		 -> STR_15(CODE[11]), STR_16(CODE[16]), STR_2(CODE[17]), STR_22(CODE[13]), 
		 -> STR_3(CODE[12]), STR_4(CODE[13]), STR_7(CODE[13]), STR_8(CODE[16]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), STR_1(CODE[15]), STR_13(CODE[15]), STR_14(CODE[12]), 
		 -> STR_15(CODE[11]), STR_16(CODE[16]), STR_2(CODE[17]), STR_22(CODE[13]), 
		 -> STR_3(CODE[12]), STR_4(CODE[13]), STR_7(CODE[13]), STR_8(CODE[16]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    RTC_GetDateTime@day	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@day(COMRAM[1]), 

    RTC_GetDateTime@hour	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@h(COMRAM[1]), 

    RTC_GetDateTime@min	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@m(COMRAM[1]), 

    RTC_GetDateTime@month	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@mon(COMRAM[1]), 

    RTC_GetDateTime@sec	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@s(COMRAM[1]), 

    RTC_GetDateTime@year	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@year(COMRAM[1]), 

    S1402$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), 

    S1402$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_20(CODE[2]), STR_21(CODE[2]), NULL(NULL[0]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), GPS_ParseGPRMC@buf(BANK0[100]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_20(CODE[2]), STR_21(CODE[2]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_11(CODE[9]), STR_12(CODE[9]), STR_17(CODE[23]), STR_18(CODE[21]), 
		 -> STR_5(CODE[8]), STR_6(CODE[8]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 11
		 -> Display_GPS@ew(BANK1[2]), Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), Display_GPS@ns(BANK1[2]), 
		 -> ?_sprintf(COMRAM[2]), STR_23(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 11
		 -> Display_GPS@ew(BANK1[2]), Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), Display_GPS@ns(BANK1[2]), 
		 -> ?_sprintf(COMRAM[2]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_20(CODE[2]), STR_21(CODE[2]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_20(CODE[2]), STR_21(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_10(CODE[7]), STR_19(CODE[7]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_10(CODE[7]), STR_19(CODE[7]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_20(CODE[2]), STR_21(CODE[2]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_10(CODE[7]), STR_19(CODE[7]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), GPS_ParseGPRMC@buf(BANK0[100]), 

    strncpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), GPS_ParseGPRMC@buf(BANK0[100]), 

    strncpy@s	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_20(CODE[2]), STR_21(CODE[2]), 

    strspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_20(CODE[2]), STR_21(CODE[2]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_10(CODE[7]), STR_19(CODE[7]), 

    strtok@p	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strtok@sep	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_20(CODE[2]), STR_21(CODE[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 23
		 -> STR_11(CODE[9]), STR_12(CODE[9]), STR_17(CODE[23]), STR_18(CODE[21]), 
		 -> STR_5(CODE[8]), STR_6(CODE[8]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_11(CODE[9]), STR_12(CODE[9]), STR_17(CODE[23]), STR_18(CODE[21]), 
		 -> STR_5(CODE[8]), STR_6(CODE[8]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_11(CODE[9]), STR_12(CODE[9]), STR_17(CODE[23]), STR_18(CODE[21]), 
		 -> STR_5(CODE[8]), STR_6(CODE[8]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_Display_RTC
    _Initialize_System->_I2C_Master_Init
    _RTC_Init->_LCD_String_xy
    _LCD_Init->_LCD_Command
    _I2C_Master_Init->___lldiv
    _Enter_Low_Power_Mode->_LCD_String_xy
    _LCD_Clear->_LCD_Command
    _Display_RTC->_sprintf
    _RTC_GetDateTime->_I2C_Master_Read
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _Display_GPS->_sprintf
    _GPS_ParseGPRMC->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strchr
    _strstr->_strncmp
    _Display_DHT11->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _DHT11_Read->_DHT11_ReadByte
    _Clear_Line->_LCD_Char
    _Clear_Line->_LCD_Command

Critical Paths under _HighPriorityISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _Display_GPS->_GPS_ParseGPRMC

Critical Paths under _HighPriorityISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Display_GPS

Critical Paths under _HighPriorityISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _HighPriorityISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _HighPriorityISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _HighPriorityISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _HighPriorityISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _HighPriorityISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _HighPriorityISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   19498
                                             77 COMRAM     2     2      0
                      _Display_DHT11
                        _Display_GPS
                        _Display_RTC
               _Enter_Low_Power_Mode
                  _Initialize_System
                   _Setup_Interrupts
 ---------------------------------------------------------------------------------
 (1) _Setup_Interrupts                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_System                                    2     2      0    1267
                                             21 COMRAM     2     2      0
                           _GPS_Init
                    _I2C_Master_Init
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                           _RTC_Init
 ---------------------------------------------------------------------------------
 (2) _RTC_Init                                             3     3      0     580
                                             11 COMRAM     3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_Init                                             1     1      0      58
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     187
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     164
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) _GPS_Init                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Enter_Low_Power_Mode                                 0     0      0     442
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (3) _LCD_Clear                                            0     0      0      58
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _Display_RTC                                         10    10      0    5072
                                             67 COMRAM    10    10      0
                         _Clear_Line
                      _LCD_String_xy
                    _RTC_GetDateTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_GetDateTime                                      6     0      6     289
                                              5 COMRAM     6     0      6
                            _BCD2DEC
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2      40
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2      53
                                              1 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BCD2DEC                                              2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Display_GPS                                        125   125      0    7778
                                              0 BANK1    125   125      0
                         _Clear_Line
                     _GPS_ParseGPRMC
                   _GPS_ReadSentence
                      _LCD_String_xy
                            _sprintf
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _GPS_ReadSentence                                    15     9      6     386
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) _GPS_ParseGPRMC                                     115   105     10    2034
                                             13 COMRAM    11     1     10
                                              0 BANK0    104   104      0
                            _strncpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               2     0      2     556
                                             11 COMRAM     2     0      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               5     3      2     187
                                              6 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              5     3      2     187
                                              6 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               5     2      3     593
                                              6 COMRAM     5     2      3
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              6     1      5     182
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               6     2      4      94
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     150
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _Display_DHT11                                        2     2      0    4939
                                             67 COMRAM     2     2      0
                         _Clear_Line
                         _DHT11_Read
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    14      9    3878
                                             46 COMRAM    21    12      9
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3663
                                             42 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     8      4    3518
                                             31 COMRAM    11     7      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                13    10      3     559
                                              8 COMRAM    13    10      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    1845
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4     763
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2     341
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     240
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     300
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     304
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _LCD_String_xy                                        7     4      3     384
                                              4 COMRAM     7     4      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (4) _LCD_String                                           2     0      2     104
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read                                          12    10      2     368
                                              2 COMRAM    12    10      2
                     _DHT11_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DHT11_ReadByte                                       2     2      0      71
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Clear_Line                                           4     4      0     215
                                              2 COMRAM     4     4      0
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (4) _LCD_Command                                          2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _LCD_Char                                             2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _HighPriorityISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_DHT11
     _Clear_Line
       _LCD_Char
       _LCD_Command
     _DHT11_Read
       _DHT11_ReadByte
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
           _stoa
             _fputc
   _Display_GPS
     _Clear_Line
     _GPS_ParseGPRMC
       _strncpy
       _strstr
         _strchr
         _strlen
         _strncmp
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _GPS_ReadSentence
     _LCD_String_xy
     _sprintf
     _strstr
   _Display_RTC
     _Clear_Line
     _LCD_String_xy
     _RTC_GetDateTime
       _BCD2DEC
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sprintf
   _Enter_Low_Power_Mode
     _LCD_Clear
       _LCD_Command
     _LCD_String_xy
   _Initialize_System
     _GPS_Init
     _I2C_Master_Init
       ___lldiv
     _LCD_Clear
     _LCD_Init
       _LCD_Command
     _LCD_String_xy
     _RTC_Init
       _I2C_Master_Read
       _I2C_Master_RepeatedStart
       _I2C_Master_Start
       _I2C_Master_Stop
       _I2C_Master_Write
       _LCD_Clear
       _LCD_String_xy
   _Setup_Interrupts

 _HighPriorityISR (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0     100     39.1%
BITBANK1           256      0       0      0.0%
BANK1              256    125     167     65.2%
BITBANK0           160      0       0      0.0%
BANK0              160    104     136     85.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     79      87     92.6%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     489      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue May 06 20:21:40 2025

               _LCD_String_xy$674 0009                      ?_LCD_Command 0001                                l53 1FD2  
                              l56 259E                                l65 24F8                                l74 233E  
                              l79 1B3E                                l96 0F34                      ___awdiv@sign 0006  
                     ?_LCD_String 0003                   __end_of_BCD2DEC 2592                               l201 1322  
                             l105 152E                               l132 225A                               l143 188E  
                             l223 0D7A                               l207 0DA2                               l136 2284  
                             l152 1924                               l225 0DA0                               l146 189C  
                             l242 24C6                               l139 22A6                               l148 18AA  
                             l245 2200                               l341 25CC                               l181 2544  
                             l254 20F8                               l350 242C                               l182 2540  
                             l263 2154                               l191 122A                               l335 257A  
                             l183 2552                               l248 2254                               l344 25BC  
                             l184 2554                               l329 21AC                               l338 25C4  
                             l266 25B4                               l187 1210                               l347 25AC  
                             l196 12FE                               l188 120C                               l292 1A90  
                             l285 2590                               l464 1C90                               l457 1C80  
                             l298 1608                               l661 1862                               l674 1BEC  
                             _PEN 7E2A                               _SEN 7E28           __end_of_HighPriorityISR 252A  
                             _abs 2462                               _pad 1DCC                      ___awmod@sign 0006  
                             wreg 0FE8                       LCD_Char@dat 0002                              l1202 237E  
                            l1131 1E3A                              ?_abs 0007                              l1108 23BA  
                            l1221 19DE                              l1133 1E54                              l1301 2092  
                            l1206 247C                              l1302 209A                              l1311 202E  
                            l1232 25CE                              l1128 1DFC                              l1136 0F94  
                            l1312 2036                              l3000 1A20                              l1209 2494  
                            l1242 1F58                              l3010 1A62                              l3002 1A2E  
                            l1163 11B2                              l3020 230A                              l1172 1D2C  
                            l1156 110C                              l3100 1252                              l3012 1A6E  
                            l3004 1A32                              l1229 23F6                              l1149 1098  
                            l1261 1E56                              l3022 2316                              l1270 2460  
                            l3102 1262                              l3110 1290                              l3014 1A7A  
                            l3006 1A48                              l1191 0B6E                              l1263 1ED6  
                            l1255 16D6                              l3032 2326                              l3024 231E  
                            l3040 1868                              l1176 1D34                              l1168 11F6  
                            l3200 0D8C                              l3112 12A0                              l3104 1274  
                            l3016 1A8C                              l3008 1A5E                              l3034 232C  
                            l3026 2324                              l3018 22FA                              l3042 1876  
                            l2410 17A2                              l2402 23BC                              l1274 142A  
                            l3202 0D9C                              l3122 12E8                              l3114 12B2  
                            l3106 1278                              l3130 1306                              l3210 1576  
                            l1291 1DC6                              l3036 232E                              l3060 18CC  
                            l3044 187E                              l2420 17CC                              l2412 17A4  
                            l2404 23C8                              l2500 1E18                              l1188 0A14  
                            l3140 0B76                              l3116 12D4                              l3108 1288  
                            l3132 130A                              l3212 1590                              l3300 14D4  
                            l3220 1F6A                              l2510 2204                              l3062 1908  
                            l3054 18AC                              l3046 1880                              l3038 1864  
                            l2430 17FA                              l2422 17D4                              l2414 17B2  
                            l2406 23D6                              l2502 1E1C                              l3150 0BBC  
                            l3142 0B98                              l3134 1320                              l3118 12E2  
                            l3214 15AA                              l3206 1530                              l3310 151E  
                            l3302 14EA                              l3230 1F8E                              l3222 1F6E  
                            l2166 2592                              l2520 221C                              l2512 2214  
                            l3064 191C                              l3056 18BA                              l2440 1834  
                            l2432 1802                              l2424 17D8                              l2416 17BA  
                            l2408 23DA                              l2504 1E48                              l2600 1194  
                            l3080 23AC                              l3072 2380                              l3160 0C2E  
                            l3152 0BD0                              l3128 12FE                              l3216 1604  
                            l3208 155C                              l3304 14EE                              l3240 24E2  
                            l3232 1FA4                              l3224 1F82                              l3320 16E0  
                            l1289 1DCA                              l2522 222A                              l2514 2216  
                            l3058 18BC                              l2450 185A                              l2442 1836  
                            l2434 1810                              l2426 17E0                              l2418 17BE  
                            l2506 2462                              l2530 0F36                              l2610 11D8  
                            l2602 1198                              l3074 238C                              l3250 1AD4  
                            l3242 1A92                              l3170 0C86                              l3162 0C40  
                            l3154 0BF2                              l3146 0B9E                              l3138 0B70  
                            l3090 1204                              l3234 1FBA                              l3226 1F86  
                            l3218 1F5A                              l3330 170A                              l3322 16F0  
                            l2524 2240                              l2516 2218                              l3068 1922  
                            l2444 183C                              l2436 1816                              l2428 17F2  
                            l2460 1B58                              l2508 2470                              l2540 0F6C  
                            l2532 0F3A                              l2620 1CE0                              l2612 1C92  
                            l2700 099A                              l3076 2394                              l3252 1AE6  
                            l3244 1A96                              l3180 0CE6                              l3172 0C98  
                            l3164 0C52                              l3156 0C04                              l3148 0BB8  
                            l3092 1206                              l3084 11F8                              l3260 0DC6  
                            l3308 1502                              l3236 24C8                              l3228 1F8A  
                            l3340 174E                              l3332 1720                              l3324 1700  
                            l3316 16D8                              l2526 2242                              l2518 221A  
                            l2438 182C                              l2446 1842                              l2470 1B8C  
                            l2462 1B5C                              l2454 1B40                              l2390 1936  
                            l2550 0FA4                              l2542 0F7C                              l2534 0F4E  
                            l2622 1CFE                              l2614 1C9A                              l2606 11C4  
                            l2710 0A00                              l2702 09A4                              l3078 239C  
                            l3254 1B12                              l3246 1AA2                              l3182 0CF6  
                            l3174 0CA8                              l3166 0C62                              l3158 0C14  
                            l3190 0D48                              l3094 121E                              l3086 1200  
                            l3270 0E34                              l3262 0DDA                              l3238 24CC  
                            l3350 178A                              l3326 1704                              l3318 16DC  
                            l2528 2244                              l2640 21C0                              l2448 1852  
                            l2480 1BC6                              l2472 1B94                              l2464 1B6A  
                            l2456 1B42                              l2392 1946                              l2552 0FAA  
                            l2560 0FFC                              l2544 0F88                              l2536 0F56  
                            l2616 1CBC                              l2624 1D06                              l2608 11D4  
                            l2720 0A48                              l2704 09C0                              l3248 1ABE  
                            l2632 1E92                              l3192 0D58                              l3184 0D08  
                            l3176 0CC2                              l3168 0C74                              l3096 1238  
                            l3088 1202                              l3272 0E70                              l3280 0F08  
                            l3264 0DE0                              l3256 0DA4                              l2800 25AE  
                            l3344 1762                              l3336 1734                              l3328 1706  
                            l2650 21D6                              l2642 21C2                              l2810 2132  
                            l2802 20FC                              l2474 1BA2                              l2482 1BCC  
                            l2466 1B72                              l2458 1B50                              l2394 1950  
                            l2490 1DCC                              l2562 1016                              l2570 1060  
                            l2554 0FD8                              l2546 0F90                              l2538 0F66  
                            l2618 1CC4                              l2722 0A6A                              l2730 0ACC  
                            l2714 0A16                              l2706 09DC                              l2634 1ECE  
                            l2626 1E56                              l3178 0CD4                              l3194 0D5A  
                            l3098 124A                              l3274 0E90                              l3266 0DE6  
                            l3258 0DBC                              l3290 1466                              l3282 142C  
                            l3338 1738                              l3346 176A                              l2652 21EC  
                            l2644 21C4                              l2660 20A0                              l2812 213C  
                            l2804 210C                              l2484 1BDC                              l2476 1BB8  
                            l2468 1B84                              l2396 196C                              l2388 1926  
                            l2492 1DDA                              l2572 1070                              l2564 1028  
                            l2556 0FDA                              l2548 0F9C                              l2580 109A  
                            l2740 0B2C                              l2732 0ADC                              l2724 0A94  
                            l2716 0A38                              l2708 09F6                              l2628 1E86  
                            l2820 161A                              l2900 1DC8                              l3196 0D6A  
                            l3188 0D1A                              l3276 0EA2                              l3268 0E12  
                            l3292 1488                              l3284 1438                              l3348 1772  
                            l2654 21EE                              l2646 21C6                              l2638 21B0  
                            l2662 20C4                              l2814 2142                              l2806 2116  
                            l2486 1BE4                              l2478 1BC0                              l2398 199E  
                            l2494 1DE6                              l2574 1076                              l2566 1038  
                            l2558 0FE0                              l2582 10B4                              l2726 0ABE  
                            l2718 0A40                              l2822 162E                              l2830 168C  
                            l3198 0D7C                              l3278 0ED8                              l2670 256C  
                            l2910 25C2                              l3294 149A                              l3286 1444  
                            l2656 21F0                              l2648 21C8                              l2664 20C8  
                            l2816 2148                              l2808 211E                              l2496 1DF4  
                            l2576 1082                              l2568 1052                              l2592 112E  
                            l2584 10C0                              l2744 0B40                              l2736 0B02  
                            l2680 0924                              l2672 08EA                              l2760 2454  
                            l2832 169E                              l2824 1658                              l2904 257E  
                            l2920 25C6                              l2912 25A0                              l3296 14A0  
                            l3288 1460                              l1944 252A                              l2850 2282  
                            l2658 209C                              l2498 1E08                              l2594 113E  
                            l2586 10CC                              l2738 0B24                              l2690 0940  
                            l2682 092A                              l2674 090C                              l2754 242E  
                            l2770 134A                              l2834 16CE                              l2818 160A  
                            l2666 2556                              l2930 240C                              l2922 25CA  
                            l2914 25A4                              l3298 14C2                              l1946 252C  
                            l2852 2292                              l2844 2268                              l2596 1142  
                            l2588 10D0                              l2684 092C                              l2692 095E  
                            l2676 0914                              l2748 0B4C                              l2860 1ED8  
                            l2756 2436                              l2780 13F2                              l2772 1356  
                            l2764 1324                              l2828 1664                              l2668 2556  
                            l2932 2422                              l2924 23F8                              l2908 25BE  
                            l2940 25BA                              l2916 25AC                              l2854 2294  
                            l2846 2270                              l2838 2256                              l2598 1164  
                            l2694 096E                              l2686 0938                              l2678 0920  
                            l2870 1F30                              l2862 1EE4                              l2758 2438  
                            l2774 1386                              l2766 133E                              l2790 1FFC  
                            l2934 2424                              l2926 23FC                              l2950 1C28  
                            l2942 1BEE                              ?_pad 000E                              l2856 22A4  
                            l2848 2274                              l2696 0982                              l2872 1F3A  
                            l2864 1EEA                              l2776 13A2                              l2792 2038  
                            l2784 1FD4                              l2880 1D5A                              l2928 2402  
                            l2960 1C70                              l2952 1C36                              l2944 1BFE  
                            l2698 0990                              l2970 2376                              l2874 1F3E  
                            l2778 13B4                              l2794 2044                              l2786 1FE0  
                            l2938 25B6                              l2962 1C7A                              l2954 1C40  
                            l2946 1C14                              l2964 2340                              l2868 1F1A  
                            l2796 204A                              l2788 1FE6                              l2892 1D90  
                            l2884 1D60                              l2876 1D36                              l2956 1C5E  
                            l2948 1C1C                              l2980 24AE                              l2966 2348  
                            l2798 2060                              l2894 1DA2                              l2886 1D70  
                            l2878 1D46                              l2958 1C6E                              l2990 215A  
                            l2982 24B4                              l2974 2496                              l2968 235A  
                            l2896 1DB8                              l2888 1D86                              l2992 215E  
                            l2984 24BA                              l2976 2498                              l2898 1DC0  
                            l2994 2160                              l2986 24C0                              l2978 24A8  
                            l2996 21AA                              l2988 2156                              l2998 19E0  
                            STR_1 084E                              STR_2 082D                              STR_3 089F  
                            STR_4 0879                              STR_5 08C8                              STR_6 08D0  
                            STR_7 0886                              STR_8 083E                              STR_9 08DF  
                            _CREN 7D5C                              u1020 2552                              u1021 254E  
                            u2000 1160                              u2001 115C                              u2010 1184  
                            u2020 11B2                              u2100 1ECE                              u2021 11AE  
                            u2101 1ECA                              u2110 20C0                              u2030 11C0  
                            u2031 11BC                              u2120 20E8                              u2040 11F6  
                            u2200 09DC                              u2041 11F2                              u2017 117A  
                            u2201 09D8                              u3001 0DCC                              u2130 20F8  
                            u2050 1CBC                              u2210 0A38                              u3010 0E12  
                            u2131 20F4                              u2051 1CB8                              u2211 0A34  
                            u3011 0E0E                              u2060 1D2C                              u2220 0A6A  
                            u2300 1386                              u3020 0E34                              u2140 256C  
                            u3100 175E                              u2117 20B6                              u2061 1D28  
                            u2221 0A66                              u2301 1382                              u3021 0E30  
                            u2141 2568                              u3101 175A                              u2230 0A94  
                            u2070 1E76                              u2310 13A2                              u3030 0E70  
                            u2150 257A                              u3110 179A                              u2127 20DE  
                            u2231 0A90                              u2311 139E                              u3031 0E6C  
                            u2151 2576                              u3111 1796                              u2400 2132  
                            u2240 0ABE                              u2160 090C                              u2080 1E86  
                            u2320 13B4                              u3040 14FE                              _LATD 0F8C  
                            u2401 212E                              u2241 0ABA                              u2161 0908  
                            u2081 1E82                              u2321 13B0                              u3041 14FA  
                            u2250 0ADC                              u2170 096E                              u2090 1EBE  
                            u2330 13F2                              u2410 161A                              u3050 151E  
                            u2251 0AD8                              u2171 096A                              u2331 13EE  
                            u2411 1616                              u3051 151A                              u1700 17CC  
                            u2260 0B24                              u2180 0990                              u2500 1F16  
                            u2340 1412                              u2420 1658                              u3060 152E  
                            u1701 17C8                              u2261 0B20                              u2181 098C  
                            u2501 1F12                              u2077 1E6C                              u2421 1654  
                            u3061 152A                              u1710 17F2                              u2190 09C0  
                            u2510 1F2C                              u2270 2454                              u2430 169E  
                            u2350 1FFC                              u3070 16F0                              u3207 186E  
                            u1711 17EE                              u2191 09BC                              u2511 1F28  
                            u2271 2450                              u2335 13E2                              u2431 169A  
                            u2351 1FF8                              u3127 1714                              u3071 16EC  
                            u1720 1810                              u1800 1BDC                              u1640 1936  
                            u2520 1F58                              u2280 133E                              u2440 16BE  
                            u2360 202E                              u2600 1C36                              u3080 1700  
                            u3217 187A                              u1721 180C                              u1801 1BD8  
                            u1641 1932                              u2521 1F54                              u2097 1EB4  
                            u2337 13D8                              u2281 133A                              u2361 202A  
                            u2601 1C32                              u3137 1742                              u3081 16FC  
                            u1730 182C                              u1650 1946                              u1810 1DDA  
                            u2290 1376                              u2450 16CE                              u2370 2060  
                            u2530 1D46                              u2610 1C5E                              u3090 1730  
                            u3227 226A                              u1731 1828                              u1651 1942  
                            u1811 1DD6                              u2347 1408                              u2451 16CA  
                            u2371 205C                              u2531 1D42                              u2611 1C5A  
                            u3147 177C                              u3091 172C                              u2460 2268  
                            u2700 18CC                              u1740 1852                              u1660 196C  
                            u1820 1DF4                              u1900 1016                              u2620 2376  
                            u2380 2092                              u2540 1D5A                              u3237 21CE  
                            u2461 2264                              u2701 18C8                              u1741 184E  
                            u1661 1968                              u1821 1DF0                              u1901 1012  
                            u2621 2372                              u2381 208E                              u2541 1D56  
                            u3157 1FC4                              u2470 2282                              u2710 1908  
                            u2390 210C                              u1750 1B50                              u1670 199E  
                            u1830 1E3A                              u1910 1028                              u2550 1D86  
                            u3247 21F8                              u2471 227E                              u2711 1904  
                            u2391 2108                              u1751 1B4C                              u1671 199A  
                            u1831 1E36                              u1911 1024                              u2447 16B4  
                            u2551 1D82                              u3167 1A52                              u2480 2292  
                            u1760 1B6A                              u1680 23F6                              u1840 1E48  
                            u1920 1038                              u2560 1DB8                              u2800 12FA  
                            u2720 121E                              u2640 1A2E                              u3257 2222  
                            u2481 228E                              u1761 1B66                              u1681 23F2  
                            u1841 1E44                              u1921 1034                              u2297 136C  
                            u2561 1DB4                              u2801 12F6                              u2721 121A  
                            u3177 249E                              u2641 1A2A                              u2650 230A  
                            u2490 22A4                              u1690 17B2                              u1770 1B84  
                            u1850 2470                              u1930 1052                              u2810 1320  
                            u2730 1238                              u2570 2420                              u3267 224C  
                            u2651 2306                              u2491 22A0                              u1691 17AE  
                            u1771 1B80                              u1851 246C                              u1931 104E  
                            u2811 131C                              u2731 1234                              u2571 241A  
                            u3187 14DE                              u2635 2182                              u2660 233E  
                            u1780 1BA2                              u1940 1060                              u1860 0F4A  
                            u2900 0CA8                              u2820 0B98                              u2740 124A  
                            u2661 233A                              u1781 1B9E                              u1941 105C  
                            u1861 0F44                              u2901 0CA4                              u2821 0B94  
                            u3197 1300                              u2741 1246                              u2670 188E  
                            u1790 1BB8                              u1950 1070                              u1870 0F4C  
                            u2910 0CE6                              u2830 0BEA                              u2750 1262  
                            u2590 1C14                              u2671 188A                              u1791 1BB4  
                            u1951 106C                              u2911 0CE2                              u2831 0BE4  
                            u2751 125E                              u2591 1C10                              u2680 189C  
                            u1880 0F66                              u1960 10B4                              u2920 0CF6  
                            u2840 0BEC                              u2760 1274                              u2681 1898  
                            u1881 0F62                              u1961 10B0                              u2921 0CF2  
                            u2761 1270                              u2585 2422                              u2690 18AA  
                            u1890 0F7C                              u1970 10FC                              u2930 0D6A  
                            u2850 0C04                              u2770 12A0                              u2691 18A6  
                            u1891 0F78                              u2931 0D66                              u2851 0C00  
                            u2771 129C                              u1980 110C                              u2940 0D7A  
                            u2860 0C14                              u2780 12B2                              u1981 1108  
                            u2941 0D76                              u2861 0C10                              u2781 12AE  
                            u1990 112A                              u2950 0D8C                              u2870 0C52  
                            u2790 12D4                              u1991 1126                              u2951 0D88  
                            u2871 0C4E                              u2791 12D0                              u2960 0D9C  
                            u2880 0C62                              u1977 10F2                              u2961 0D98  
                            u2881 0C5E                              u2970 1ABE                              u2890 0C98  
                            u2971 1ABA                              u2891 0C94                              _RCEN 7E2B  
                            _RCIF 7CF5                              u2981 0DAA                              u2991 0DB6  
                            i2l62 2526                              _RSEN 7E29                              _TXIF 7CF4  
                            abs@a 0007                              _dbuf 00C8  __end_of_I2C_Master_RepeatedStart 25CE  
                            _main 16D8                              _dtoa 0F36                              _prec 0052  
                            pad@i 0013                              pad@p 0010                              fsr0h 0FEA  
                            fsr1h 0FE2                              indf0 0FEF                              fsr2h 0FDA  
                            fsr0l 0FE9                              indf1 0FE7                              indf2 0FDF  
                            fsr1l 0FE1                              fsr2l 0FD9                              _stoa 109A  
                            btemp 0058          __end_of_Setup_Interrupts 25A0                        _Clear_Line 22F8  
                            prodh 0FF4                              prodl 0FF3                              start 000E  
                ??_DHT11_ReadByte 0001                     _LCD_String_xy 20FA                      ___param_bank 0000  
                           ??_abs 0009                             ??_pad 0012                  __end_of_LCD_Char 2256  
                __end_of_LCD_Init 24C8                  ?_I2C_Master_Init 000E                  ?_I2C_Master_Read 0002  
                ?_I2C_Master_Wait 0001          __end_of_GPS_ReadSentence 1324                  ?_I2C_Master_Stop 0001  
             __end_of_Display_GPS 0F36               __end_of_Display_RTC 1530                             ?_main 0001  
                           ?_dtoa 0015                             _ACKEN 7E2C                             _ACKDT 7E2D  
                 __end_of___awdiv 1864                             STR_10 08DF                             STR_11 08BF  
                           STR_20 08E6                             STR_12 08B6                             STR_21 08E6  
                           STR_13 085D                             STR_14 0893                             STR_22 086C  
                           STR_23 08D8                             STR_15 08AB                             STR_16 083E  
                           STR_17 0801                             STR_18 0818                             STR_19 08DF  
                 __end_of___awmod 1BEE                             _CMCON 0FB4                             ?_stoa 0009  
                 __end_of___lldiv 1C92                   ___awdiv@divisor 0003                             _LATD0 7C60  
                           _LATD1 7C61                  __end_of_GPS_Init 2556                   ___awdiv@counter 0005  
                           _RCREG 0FAE                             _RCSTA 0FAB                      vfpfcnvrt@fmt 0021  
                           _SPBRG 0FAF                             _TRISB 0F93                             _TRISD 0F95  
                           _TXREG 0FAD                             _TXSTA 0FAC                  ??_GPS_ParseGPRMC 0018  
                           _flags 0055               read_prec_or_width@c 0005               read_prec_or_width@n 0006  
                           _fputc 1926                             _fputs 23BC                  __end_of_RTC_Init 1A92  
                           pad@fp 000E                             _width 0050                             _putch 25CE  
                           dtoa@d 0016                             dtoa@i 001E                             dtoa@p 001A  
                           dtoa@s 001D                             dtoa@w 001B                             tablat 0FF5  
                           stoa@l 0014                             stoa@p 000E                             stoa@s 000A  
                           stoa@w 0010                             ttemp5 0059                             ttemp6 005C  
                           ttemp7 0060                             status 0FD8                             wtemp8 0059  
                 __end_of_sprintf 23BC                   __end_of_strcspn 209C                   __end_of_strncmp 142C  
                 __end_of_strncpy 1F5A                    ?_LCD_String_xy 0005                   __initialization 22A8  
                    __end_of_main 17A2                      __end_of_dtoa 109A                      __end_of_stoa 11F8  
                       ??_BCD2DEC 0001                            ??_main 004E                            ??_dtoa 0018  
                          ??_stoa 000C                 __end_of_LCD_Clear 25B6                     __activetblptr 0002  
                ?_HighPriorityISR 0001        __end_of_read_prec_or_width 1D36                 ?_I2C_Master_Start 0001  
               ?_I2C_Master_Write 0002                ??_I2C_Master_Start 0002                            _ADCON1 0FC1  
              ??_I2C_Master_Write 0004                            ?_fputc 0001                            ?_fputs 0009  
                ___awdiv@dividend 0001                            ?_putch 0001                  LCD_String_xy@msg 0006  
                LCD_String_xy@pos 0005                  LCD_String_xy@row 0008                            i2l2270 250A  
                          i2l2272 2524                            i2l2268 24FC                            _OSCCON 0FD3  
                   vfpfcnvrt@done 002A                            _SSPADD 0FC8                            _TRISB0 7C98  
                          _TRISB1 7C99                            _TRISC6 7CA6                            _TRISC7 7CA7  
                          _SSPBUF 0FC9                       ?_Clear_Line 0001                      ??_DHT11_Read 0005  
        _I2C_Master_RepeatedStart 25C6                       _Display_GPS 0DA4                       _Display_RTC 142C  
                    vfprintf@cfmt 002E                         ??___awdiv 0005                         ??___awmod 0005  
                       ??___lldiv 0009              read_prec_or_width@ap 0002                            clear_0 22C0  
                          clear_1 22CC                            clear_2 22D8                            clear_3 22E4  
                ___awdiv@quotient 0007                   ___awmod@divisor 0003                            isa$std 0001  
                 ___awmod@counter 0005                            pad@buf 000F                            dtoa@fp 0015  
                          _strchr 1E56                            _strlen 242E                            _strtok 1D36  
                          _strspn 1FD4                            _strstr 160A                            fputc@c 0001  
                          fputs@c 000B                            fputs@i 000C                      __pdataCOMRAM 0057  
                          fputs@s 0009                        BCD2DEC@val 0002                      __mediumconst 0800  
                          tblptrh 0FF7                            tblptrl 0FF6                            tblptru 0FF8  
              __end_of_DHT11_Read 1926                            stoa@cp 0012                            stoa@fp 0009  
                          putch@c 0001                  __end_of_vfprintf 2380                         ??_sprintf 0038  
                       ??_strcspn 0009                         ??_strncmp 0006                         ??_strncpy 0007  
                       ?_LCD_Char 0001                        __accesstop 0060           __end_of__initialization 22EA  
                       ?_LCD_Init 0001                   ??_LCD_String_xy 0008                     ___rparam_used 0001  
                       ?_GPS_Init 0001                    __pcstackCOMRAM 0001                      _system_state 0057  
                   __end_of_fputc 19E0                     __end_of_fputs 23F8                     __end_of_putch 25D0  
                    ??_LCD_String 0005                         ?_RTC_Init 0001                           ??_fputc 0004  
                         ??_fputs 000B                           ??_putch 0001                        __pbssBANK0 00C8  
                      __pbssBANK1 017D                        __pbssBANK2 0200                        ??_LCD_Char 0001  
                      ??_LCD_Init 0003                __end_of_LCD_String 20FA                 ?_Setup_Interrupts 0001  
           __end_of_Display_DHT11 1B40                        ??_GPS_Init 0001                ??_Setup_Interrupts 0001  
                         _BCD2DEC 257C                           _BAUDCON 0FB8                           _ACKSTAT 7E2E  
                      ??_RTC_Init 000C                 ?_GPS_ReadSentence 0001                           ?_strchr 0001  
                         ?_strlen 0001                           ?_strtok 000C                           ?_strspn 0007  
                         ?_strstr 0007             GPS_ReadSentence@dummy 000B                ??_GPS_ReadSentence 0007  
                      _lcd_buffer 0196                           _SSPCON1 0FC6                           _SSPCON2 0FC5  
                         _SSPSTAT 0FC7                    Clear_Line@line 0003                     LCD_String@msg 0003  
                         __Hparam 0000                           __Lparam 0000                           ___awdiv 17A2  
                         ___awmod 1B40                           ___lldiv 1BEE                         ?_vfprintf 002B  
                    __psmallconst 0800                           __pcinit 22A8                           __ramtop 0800  
                         __ptext0 16D8                           __ptext1 2592                           __ptext2 1F5A  
                         __ptext3 19E0                           __ptext4 2496                           __ptext5 2156  
                         __ptext6 1BEE                           __ptext7 252A                           __ptext8 24C8  
                         __ptext9 25AE             read_prec_or_width@fmt 0001                  ___awmod@dividend 0001  
         GPS_ReadSentence@max_len 0003                         _LCD_Clear 25AE                           _sprintf 2380  
                         _strcspn 2038                           _strncmp 1324                    __pintcode_body 24FA  
                         _strncpy 1ED8              end_of_initialization 22EA           GPS_ReadSentence@started 000C  
      ??_I2C_Master_RepeatedStart 0002                           fputc@fp 0003                    LCD_Command@cmd 0002  
                   __Lmediumconst 0000                           int_func 24FA                           fputs@fp 000A  
              _read_prec_or_width 1C92                      ??_Clear_Line 0003                 ??_RTC_GetDateTime 000C  
                 ___lldiv@divisor 0005                   ___lldiv@counter 000D                      ?_Display_GPS 0001  
                    ?_Display_RTC 0001                 __end_of_vfpfcnvrt 0B70                         _RCSTAbits 0FAB  
                I2C_Master_Init@c 000E                  I2C_Master_Read@a 0002                           postdec2 0FDD  
             ?_read_prec_or_width 0001                           postinc0 0FEE                           postinc1 0FE6  
                         postinc2 0FDE                  vfpfcnvrt@convarg 0025             DHT11_Read@temperature 0004  
                      ??_vfprintf 002E                           strchr@c 0003                           strchr@s 0001  
                         strlen@a 0003                           strlen@s 0001                           strspn@c 0008  
                         strspn@i 000A                           strtok@p 0054                           strtok@s 000C  
                         strspn@s 0007                           strstr@h 0007                           strstr@n 0009  
                       _PORTAbits 0F80                         _PORTBbits 0F81                   Display_RTC@year 004D  
                       _TRISAbits 0F92                         _TRISBbits 0F93                __end_of_Clear_Line 2340  
                      ?_LCD_Clear 0001              ??_read_prec_or_width 0003                _system_needs_reset 0056  
                   ??_LCD_Command 0001      __end_of_Enter_Low_Power_Mode 24FA                       vfpfcnvrt@ap 0022  
                     vfpfcnvrt@cp 0029                       vfpfcnvrt@fp 0020                       RTC_Init@sec 000E  
                   __pidataCOMRAM 25D0                DHT11_Read@humidity 0003                    __end_of_strchr 1ED8  
                  __end_of_strlen 2462                    __end_of_strtok 1DCC                    __end_of_strspn 2038  
                  __end_of_strstr 16D8               start_initialization 22A8                _GPS_ParseGPRMC$653 00C4  
                     __end_of_abs 2496                       __end_of_pad 1E56                DHT11_ReadByte@data 0001  
               ??_I2C_Master_Init 0012                 ??_I2C_Master_Read 0004               GPS_ParseGPRMC@field 00C5  
               ??_I2C_Master_Wait 0001                 ??_I2C_Master_Stop 0002               GPS_ParseGPRMC@token 00C7  
           __end_of_LCD_String_xy 2156                       vfprintf@fmt 002C                          ?_BCD2DEC 0001  
                        ??_strchr 0005                          ??_strlen 0003                          ??_strtok 000E  
                        ??_strspn 0009              RTC_GetDateTime@month 000A                          ??_strstr 000A  
             __end_of_LCD_Command 2202                       __pbssCOMRAM 0050                     __pcstackBANK0 0060  
                   __pcstackBANK1 0100                       ??_LCD_Clear 0003                  _I2C_Master_Start 25BE  
                _I2C_Master_Write 25A0                 ??_HighPriorityISR 0001                         _dtoa$1481 0018  
                       __pintcode 0008                          ?___awdiv 0001                          ?___awmod 0001  
                        ?___lldiv 0001          GPS_ParseGPRMC@data_valid 00C6                    _DHT11_ReadByte 2256  
                     __smallconst 0800                 _Initialize_System 1F5A                   _RTC_GetDateTime 1530  
           LCD_String_xy@location 000B                          ?_sprintf 002F                          ?_strcspn 0007  
                        ?_strncmp 0001                          ?_strncpy 0001                 GPS_ReadSentence@c 000F  
               GPS_ReadSentence@i 000D                 GPS_ReadSentence@t 0009                ?_Initialize_System 0001  
      GPS_ReadSentence@timeout_ms 0005            GPS_ReadSentence@buffer 0001              _Enter_Low_Power_Mode 24C8  
                        _LCD_Char 2202                          _LCD_Init 2496                          _LATBbits 0F8A  
                  _GPS_ParseGPRMC 0B70               ??_Initialize_System 0016                          _GPS_Init 252A  
                        i2u150_40 251E                          i2u148_40 250A                          i2u148_41 2506  
                        i2u149_40 251C                          i2u149_41 2516                          _PIR1bits 0F9E  
                        _RCONbits 0FD0                       DHT11_Read@i 000E                    Display_GPS@lat 016F  
                  Display_GPS@lon 0164            __end_of_DHT11_ReadByte 22A8                       _LCD_Command 21AE  
                       _vfpfcnvrt 08EA                    Display_RTC@day 004B                    Display_RTC@mon 004C  
                        _RTC_Init 19E0         __end_of_Initialize_System 1FD4               I2C_Master_Read@temp 0004  
                     _INTCON2bits 0FF1             ?_Enter_Low_Power_Mode 0001            __end_of_GPS_ParseGPRMC 0DA4  
        Display_RTC@refresh_count 0046                        _DHT11_Read 1864                          __Hrparam 0000  
                   _Display_DHT11 1A92                       Clear_Line@i 0006                 Display_DHT11@temp 0045  
                      vfprintf@ap 002D                          __Lrparam 0000                        vfprintf@fp 002B  
             RTC_GetDateTime@hour 0006               RTC_GetDateTime@year 000B                   ?_DHT11_ReadByte 0001  
       ?_I2C_Master_RepeatedStart 0001                        ?_vfpfcnvrt 0020           __end_of_RTC_GetDateTime 160A  
                _Setup_Interrupts 2592                   DHT11_ReadByte@i 0002                        sprintf@fmt 0031  
                 _I2C_Master_Init 2156                   _I2C_Master_Read 23F8                   _I2C_Master_Wait 2556  
                 _I2C_Master_Stop 25B6                          __ptext10 142C                          __ptext11 1530  
                        __ptext20 11F8                          __ptext12 25A0                          __ptext21 0B70  
                        __ptext13 25B6                          __ptext30 1A92                          __ptext22 1D36  
                        __ptext14 25BE                          __ptext31 2380                          __ptext23 1FD4  
                        __ptext15 25C6                          __ptext40 25CE                          __ptext32 2340  
                        __ptext24 2038                          __ptext16 23F8                          __ptext41 2462  
                        __ptext33 08EA                          __ptext25 160A                          __ptext17 2556  
                        __ptext50 2202                          __ptext42 1B40                          __ptext34 109A  
                        __ptext26 1324                          __ptext18 257C                          __ptext43 17A2  
                        __ptext35 1C92                          __ptext27 242E                          __ptext19 0DA4  
                        __ptext44 20FA                          __ptext36 0F36                          __ptext28 1E56  
                        __ptext45 209C                          __ptext37 1DCC                          __ptext29 1ED8  
                        __ptext46 1864                          __ptext38 23BC                          __ptext47 2256  
                        __ptext39 1926                          __ptext48 22F8                          __ptext49 21AE  
                _GPS_ReadSentence 11F8                   ?_GPS_ParseGPRMC 000E                    ?_Display_DHT11 0001  
                   Display_GPS@ew 017B                          isa$xinst 0000                     Display_GPS@ns 0179  
                        int$flags 0058                          _vfprintf 2340                        _LCD_String 209C  
        __end_of_I2C_Master_Start 25C6          __end_of_I2C_Master_Write 25AE                        _INTCONbits 0FF2  
               GPS_ParseGPRMC@buf 0060                 GPS_ParseGPRMC@lat 0010                 GPS_ParseGPRMC@lon 0014  
               GPS_ParseGPRMC@msg 000E                  Display_DHT11@hum 0044                RTC_GetDateTime@day 0009  
              RTC_GetDateTime@min 0007                RTC_GetDateTime@sec 0008                   _HighPriorityISR 0008  
          ??_Enter_Low_Power_Mode 000C                    DHT11_Read@data 0009                 Display_GPS@buffer 0100  
                        intlevel2 0000                         sprintf@ap 0038                    _Clear_Line$326 0004  
                ___lldiv@dividend 0001                       ?_DHT11_Read 0003                         strncpy@cp 0007  
                Display_GPS@F3780 0194                  Display_GPS@F3782 017D                  Display_GPS@F3776 0200  
                Display_GPS@F3784 0192                  Display_GPS@F3778 0188                      Display_RTC@h 0048  
                    Display_RTC@m 0049                      Display_RTC@s 004A                         strtok@sep 000D  
         __end_of_I2C_Master_Init 21AE           __end_of_I2C_Master_Read 242E           __end_of_I2C_Master_Wait 257C  
         __end_of_I2C_Master_Stop 25BE                       ??_vfpfcnvrt 0024                  GPS_ParseGPRMC@ew 0016  
                GPS_ParseGPRMC@ns 0012                  ?_RTC_GetDateTime 0006                          sprintf@f 0039  
                        sprintf@s 002F                  ___lldiv@quotient 0009                 I2C_Master_Write@d 0002  
                        strcspn@c 0008                          strcspn@i 000A                          strcspn@s 0007  
                        strncmp@l 0001                          strncmp@n 0004                          strncmp@r 0003  
                        strncpy@d 0001                          strncpy@n 0005                          strncpy@s 0003  
                   GPS_Init@dummy 0001                          strstr@nl 000A                   ??_Display_DHT11 0044  
                   ??_Display_GPS 0044                     ??_Display_RTC 0044  
