

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri May 09 09:35:31 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=3
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=3
    49                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=3
    51                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=2
    52                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=2
    53                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=1
    54                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    62                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Version 2.20
    67                           ; Generated 12/02/2020 GMT
    68                           ; 
    69                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    70                           ; All rights reserved.
    71                           ; 
    72                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    73                           ; 
    74                           ; Redistribution and use in source and binary forms, with or without modification, are
    75                           ; permitted provided that the following conditions are met:
    76                           ; 
    77                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    78                           ;        conditions and the following disclaimer.
    79                           ; 
    80                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    81                           ;        of conditions and the following disclaimer in the documentation and/or other
    82                           ;        materials provided with the distribution.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F4550 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000FE0                     bsr             equ	4064
   101   000FE9                     fsr0            equ	4073
   102   000FEA                     fsr0h           equ	4074
   103   000FE9                     fsr0l           equ	4073
   104   000FE1                     fsr1            equ	4065
   105   000FE2                     fsr1h           equ	4066
   106   000FE1                     fsr1l           equ	4065
   107   000FD9                     fsr2            equ	4057
   108   000FDA                     fsr2h           equ	4058
   109   000FD9                     fsr2l           equ	4057
   110   000FEF                     indf0           equ	4079
   111   000FE7                     indf1           equ	4071
   112   000FDF                     indf2           equ	4063
   113   000FF2                     intcon          equ	4082
   114   000000                     nvmcon          equ	0
   115   000FF9                     pcl             equ	4089
   116   000FFA                     pclath          equ	4090
   117   000FFB                     pclatu          equ	4091
   118   000FEB                     plusw0          equ	4075
   119   000FE3                     plusw1          equ	4067
   120   000FDB                     plusw2          equ	4059
   121   000FED                     postdec0        equ	4077
   122   000FE5                     postdec1        equ	4069
   123   000FDD                     postdec2        equ	4061
   124   000FEE                     postinc0        equ	4078
   125   000FE6                     postinc1        equ	4070
   126   000FDE                     postinc2        equ	4062
   127   000FEC                     preinc0         equ	4076
   128   000FE4                     preinc1         equ	4068
   129   000FDC                     preinc2         equ	4060
   130   000FF3                     prod            equ	4083
   131   000FF4                     prodh           equ	4084
   132   000FF3                     prodl           equ	4083
   133   000FD8                     status          equ	4056
   134   000FF5                     tablat          equ	4085
   135   000FF6                     tblptr          equ	4086
   136   000FF7                     tblptrh         equ	4087
   137   000FF6                     tblptrl         equ	4086
   138   000FF8                     tblptru         equ	4088
   139   000FFD                     tosl            equ	4093
   140   000FE8                     wreg            equ	4072
   141   000F62                     SPPDATA         equ	3938	;# 
   142   000F63                     SPPCFG          equ	3939	;# 
   143   000F64                     SPPEPS          equ	3940	;# 
   144   000F65                     SPPCON          equ	3941	;# 
   145   000F66                     UFRM            equ	3942	;# 
   146   000F66                     UFRML           equ	3942	;# 
   147   000F67                     UFRMH           equ	3943	;# 
   148   000F68                     UIR             equ	3944	;# 
   149   000F69                     UIE             equ	3945	;# 
   150   000F6A                     UEIR            equ	3946	;# 
   151   000F6B                     UEIE            equ	3947	;# 
   152   000F6C                     USTAT           equ	3948	;# 
   153   000F6D                     UCON            equ	3949	;# 
   154   000F6E                     UADDR           equ	3950	;# 
   155   000F6F                     UCFG            equ	3951	;# 
   156   000F70                     UEP0            equ	3952	;# 
   157   000F71                     UEP1            equ	3953	;# 
   158   000F72                     UEP2            equ	3954	;# 
   159   000F73                     UEP3            equ	3955	;# 
   160   000F74                     UEP4            equ	3956	;# 
   161   000F75                     UEP5            equ	3957	;# 
   162   000F76                     UEP6            equ	3958	;# 
   163   000F77                     UEP7            equ	3959	;# 
   164   000F78                     UEP8            equ	3960	;# 
   165   000F79                     UEP9            equ	3961	;# 
   166   000F7A                     UEP10           equ	3962	;# 
   167   000F7B                     UEP11           equ	3963	;# 
   168   000F7C                     UEP12           equ	3964	;# 
   169   000F7D                     UEP13           equ	3965	;# 
   170   000F7E                     UEP14           equ	3966	;# 
   171   000F7F                     UEP15           equ	3967	;# 
   172   000F80                     PORTA           equ	3968	;# 
   173   000F81                     PORTB           equ	3969	;# 
   174   000F82                     PORTC           equ	3970	;# 
   175   000F83                     PORTD           equ	3971	;# 
   176   000F84                     PORTE           equ	3972	;# 
   177   000F89                     LATA            equ	3977	;# 
   178   000F8A                     LATB            equ	3978	;# 
   179   000F8B                     LATC            equ	3979	;# 
   180   000F8C                     LATD            equ	3980	;# 
   181   000F8D                     LATE            equ	3981	;# 
   182   000F92                     TRISA           equ	3986	;# 
   183   000F92                     DDRA            equ	3986	;# 
   184   000F93                     TRISB           equ	3987	;# 
   185   000F93                     DDRB            equ	3987	;# 
   186   000F94                     TRISC           equ	3988	;# 
   187   000F94                     DDRC            equ	3988	;# 
   188   000F95                     TRISD           equ	3989	;# 
   189   000F95                     DDRD            equ	3989	;# 
   190   000F96                     TRISE           equ	3990	;# 
   191   000F96                     DDRE            equ	3990	;# 
   192   000F9B                     OSCTUNE         equ	3995	;# 
   193   000F9D                     PIE1            equ	3997	;# 
   194   000F9E                     PIR1            equ	3998	;# 
   195   000F9F                     IPR1            equ	3999	;# 
   196   000FA0                     PIE2            equ	4000	;# 
   197   000FA1                     PIR2            equ	4001	;# 
   198   000FA2                     IPR2            equ	4002	;# 
   199   000FA6                     EECON1          equ	4006	;# 
   200   000FA7                     EECON2          equ	4007	;# 
   201   000FA8                     EEDATA          equ	4008	;# 
   202   000FA9                     EEADR           equ	4009	;# 
   203   000FAB                     RCSTA           equ	4011	;# 
   204   000FAB                     RCSTA1          equ	4011	;# 
   205   000FAC                     TXSTA           equ	4012	;# 
   206   000FAC                     TXSTA1          equ	4012	;# 
   207   000FAD                     TXREG           equ	4013	;# 
   208   000FAD                     TXREG1          equ	4013	;# 
   209   000FAE                     RCREG           equ	4014	;# 
   210   000FAE                     RCREG1          equ	4014	;# 
   211   000FAF                     SPBRG           equ	4015	;# 
   212   000FAF                     SPBRG1          equ	4015	;# 
   213   000FB0                     SPBRGH          equ	4016	;# 
   214   000FB1                     T3CON           equ	4017	;# 
   215   000FB2                     TMR3            equ	4018	;# 
   216   000FB2                     TMR3L           equ	4018	;# 
   217   000FB3                     TMR3H           equ	4019	;# 
   218   000FB4                     CMCON           equ	4020	;# 
   219   000FB5                     CVRCON          equ	4021	;# 
   220   000FB6                     ECCP1AS         equ	4022	;# 
   221   000FB6                     CCP1AS          equ	4022	;# 
   222   000FB7                     ECCP1DEL        equ	4023	;# 
   223   000FB7                     CCP1DEL         equ	4023	;# 
   224   000FB8                     BAUDCON         equ	4024	;# 
   225   000FB8                     BAUDCTL         equ	4024	;# 
   226   000FBA                     CCP2CON         equ	4026	;# 
   227   000FBB                     CCPR2           equ	4027	;# 
   228   000FBB                     CCPR2L          equ	4027	;# 
   229   000FBC                     CCPR2H          equ	4028	;# 
   230   000FBD                     CCP1CON         equ	4029	;# 
   231   000FBD                     ECCP1CON        equ	4029	;# 
   232   000FBE                     CCPR1           equ	4030	;# 
   233   000FBE                     CCPR1L          equ	4030	;# 
   234   000FBF                     CCPR1H          equ	4031	;# 
   235   000FC0                     ADCON2          equ	4032	;# 
   236   000FC1                     ADCON1          equ	4033	;# 
   237   000FC2                     ADCON0          equ	4034	;# 
   238   000FC3                     ADRES           equ	4035	;# 
   239   000FC3                     ADRESL          equ	4035	;# 
   240   000FC4                     ADRESH          equ	4036	;# 
   241   000FC5                     SSPCON2         equ	4037	;# 
   242   000FC6                     SSPCON1         equ	4038	;# 
   243   000FC7                     SSPSTAT         equ	4039	;# 
   244   000FC8                     SSPADD          equ	4040	;# 
   245   000FC9                     SSPBUF          equ	4041	;# 
   246   000FCA                     T2CON           equ	4042	;# 
   247   000FCB                     PR2             equ	4043	;# 
   248   000FCB                     MEMCON          equ	4043	;# 
   249   000FCC                     TMR2            equ	4044	;# 
   250   000FCD                     T1CON           equ	4045	;# 
   251   000FCE                     TMR1            equ	4046	;# 
   252   000FCE                     TMR1L           equ	4046	;# 
   253   000FCF                     TMR1H           equ	4047	;# 
   254   000FD0                     RCON            equ	4048	;# 
   255   000FD1                     WDTCON          equ	4049	;# 
   256   000FD2                     HLVDCON         equ	4050	;# 
   257   000FD2                     LVDCON          equ	4050	;# 
   258   000FD3                     OSCCON          equ	4051	;# 
   259   000FD5                     T0CON           equ	4053	;# 
   260   000FD6                     TMR0            equ	4054	;# 
   261   000FD6                     TMR0L           equ	4054	;# 
   262   000FD7                     TMR0H           equ	4055	;# 
   263   000FD8                     STATUS          equ	4056	;# 
   264   000FD9                     FSR2            equ	4057	;# 
   265   000FD9                     FSR2L           equ	4057	;# 
   266   000FDA                     FSR2H           equ	4058	;# 
   267   000FDB                     PLUSW2          equ	4059	;# 
   268   000FDC                     PREINC2         equ	4060	;# 
   269   000FDD                     POSTDEC2        equ	4061	;# 
   270   000FDE                     POSTINC2        equ	4062	;# 
   271   000FDF                     INDF2           equ	4063	;# 
   272   000FE0                     BSR             equ	4064	;# 
   273   000FE1                     FSR1            equ	4065	;# 
   274   000FE1                     FSR1L           equ	4065	;# 
   275   000FE2                     FSR1H           equ	4066	;# 
   276   000FE3                     PLUSW1          equ	4067	;# 
   277   000FE4                     PREINC1         equ	4068	;# 
   278   000FE5                     POSTDEC1        equ	4069	;# 
   279   000FE6                     POSTINC1        equ	4070	;# 
   280   000FE7                     INDF1           equ	4071	;# 
   281   000FE8                     WREG            equ	4072	;# 
   282   000FE9                     FSR0            equ	4073	;# 
   283   000FE9                     FSR0L           equ	4073	;# 
   284   000FEA                     FSR0H           equ	4074	;# 
   285   000FEB                     PLUSW0          equ	4075	;# 
   286   000FEC                     PREINC0         equ	4076	;# 
   287   000FED                     POSTDEC0        equ	4077	;# 
   288   000FEE                     POSTINC0        equ	4078	;# 
   289   000FEF                     INDF0           equ	4079	;# 
   290   000FF0                     INTCON3         equ	4080	;# 
   291   000FF1                     INTCON2         equ	4081	;# 
   292   000FF2                     INTCON          equ	4082	;# 
   293   000FF3                     PROD            equ	4083	;# 
   294   000FF3                     PRODL           equ	4083	;# 
   295   000FF4                     PRODH           equ	4084	;# 
   296   000FF5                     TABLAT          equ	4085	;# 
   297   000FF6                     TBLPTR          equ	4086	;# 
   298   000FF6                     TBLPTRL         equ	4086	;# 
   299   000FF7                     TBLPTRH         equ	4087	;# 
   300   000FF8                     TBLPTRU         equ	4088	;# 
   301   000FF9                     PCLAT           equ	4089	;# 
   302   000FF9                     PC              equ	4089	;# 
   303   000FF9                     PCL             equ	4089	;# 
   304   000FFA                     PCLATH          equ	4090	;# 
   305   000FFB                     PCLATU          equ	4091	;# 
   306   000FFC                     STKPTR          equ	4092	;# 
   307   000FFD                     TOS             equ	4093	;# 
   308   000FFD                     TOSL            equ	4093	;# 
   309   000FFE                     TOSH            equ	4094	;# 
   310   000FFF                     TOSU            equ	4095	;# 
   311   000F62                     SPPDATA         equ	3938	;# 
   312   000F63                     SPPCFG          equ	3939	;# 
   313   000F64                     SPPEPS          equ	3940	;# 
   314   000F65                     SPPCON          equ	3941	;# 
   315   000F66                     UFRM            equ	3942	;# 
   316   000F66                     UFRML           equ	3942	;# 
   317   000F67                     UFRMH           equ	3943	;# 
   318   000F68                     UIR             equ	3944	;# 
   319   000F69                     UIE             equ	3945	;# 
   320   000F6A                     UEIR            equ	3946	;# 
   321   000F6B                     UEIE            equ	3947	;# 
   322   000F6C                     USTAT           equ	3948	;# 
   323   000F6D                     UCON            equ	3949	;# 
   324   000F6E                     UADDR           equ	3950	;# 
   325   000F6F                     UCFG            equ	3951	;# 
   326   000F70                     UEP0            equ	3952	;# 
   327   000F71                     UEP1            equ	3953	;# 
   328   000F72                     UEP2            equ	3954	;# 
   329   000F73                     UEP3            equ	3955	;# 
   330   000F74                     UEP4            equ	3956	;# 
   331   000F75                     UEP5            equ	3957	;# 
   332   000F76                     UEP6            equ	3958	;# 
   333   000F77                     UEP7            equ	3959	;# 
   334   000F78                     UEP8            equ	3960	;# 
   335   000F79                     UEP9            equ	3961	;# 
   336   000F7A                     UEP10           equ	3962	;# 
   337   000F7B                     UEP11           equ	3963	;# 
   338   000F7C                     UEP12           equ	3964	;# 
   339   000F7D                     UEP13           equ	3965	;# 
   340   000F7E                     UEP14           equ	3966	;# 
   341   000F7F                     UEP15           equ	3967	;# 
   342   000F80                     PORTA           equ	3968	;# 
   343   000F81                     PORTB           equ	3969	;# 
   344   000F82                     PORTC           equ	3970	;# 
   345   000F83                     PORTD           equ	3971	;# 
   346   000F84                     PORTE           equ	3972	;# 
   347   000F89                     LATA            equ	3977	;# 
   348   000F8A                     LATB            equ	3978	;# 
   349   000F8B                     LATC            equ	3979	;# 
   350   000F8C                     LATD            equ	3980	;# 
   351   000F8D                     LATE            equ	3981	;# 
   352   000F92                     TRISA           equ	3986	;# 
   353   000F92                     DDRA            equ	3986	;# 
   354   000F93                     TRISB           equ	3987	;# 
   355   000F93                     DDRB            equ	3987	;# 
   356   000F94                     TRISC           equ	3988	;# 
   357   000F94                     DDRC            equ	3988	;# 
   358   000F95                     TRISD           equ	3989	;# 
   359   000F95                     DDRD            equ	3989	;# 
   360   000F96                     TRISE           equ	3990	;# 
   361   000F96                     DDRE            equ	3990	;# 
   362   000F9B                     OSCTUNE         equ	3995	;# 
   363   000F9D                     PIE1            equ	3997	;# 
   364   000F9E                     PIR1            equ	3998	;# 
   365   000F9F                     IPR1            equ	3999	;# 
   366   000FA0                     PIE2            equ	4000	;# 
   367   000FA1                     PIR2            equ	4001	;# 
   368   000FA2                     IPR2            equ	4002	;# 
   369   000FA6                     EECON1          equ	4006	;# 
   370   000FA7                     EECON2          equ	4007	;# 
   371   000FA8                     EEDATA          equ	4008	;# 
   372   000FA9                     EEADR           equ	4009	;# 
   373   000FAB                     RCSTA           equ	4011	;# 
   374   000FAB                     RCSTA1          equ	4011	;# 
   375   000FAC                     TXSTA           equ	4012	;# 
   376   000FAC                     TXSTA1          equ	4012	;# 
   377   000FAD                     TXREG           equ	4013	;# 
   378   000FAD                     TXREG1          equ	4013	;# 
   379   000FAE                     RCREG           equ	4014	;# 
   380   000FAE                     RCREG1          equ	4014	;# 
   381   000FAF                     SPBRG           equ	4015	;# 
   382   000FAF                     SPBRG1          equ	4015	;# 
   383   000FB0                     SPBRGH          equ	4016	;# 
   384   000FB1                     T3CON           equ	4017	;# 
   385   000FB2                     TMR3            equ	4018	;# 
   386   000FB2                     TMR3L           equ	4018	;# 
   387   000FB3                     TMR3H           equ	4019	;# 
   388   000FB4                     CMCON           equ	4020	;# 
   389   000FB5                     CVRCON          equ	4021	;# 
   390   000FB6                     ECCP1AS         equ	4022	;# 
   391   000FB6                     CCP1AS          equ	4022	;# 
   392   000FB7                     ECCP1DEL        equ	4023	;# 
   393   000FB7                     CCP1DEL         equ	4023	;# 
   394   000FB8                     BAUDCON         equ	4024	;# 
   395   000FB8                     BAUDCTL         equ	4024	;# 
   396   000FBA                     CCP2CON         equ	4026	;# 
   397   000FBB                     CCPR2           equ	4027	;# 
   398   000FBB                     CCPR2L          equ	4027	;# 
   399   000FBC                     CCPR2H          equ	4028	;# 
   400   000FBD                     CCP1CON         equ	4029	;# 
   401   000FBD                     ECCP1CON        equ	4029	;# 
   402   000FBE                     CCPR1           equ	4030	;# 
   403   000FBE                     CCPR1L          equ	4030	;# 
   404   000FBF                     CCPR1H          equ	4031	;# 
   405   000FC0                     ADCON2          equ	4032	;# 
   406   000FC1                     ADCON1          equ	4033	;# 
   407   000FC2                     ADCON0          equ	4034	;# 
   408   000FC3                     ADRES           equ	4035	;# 
   409   000FC3                     ADRESL          equ	4035	;# 
   410   000FC4                     ADRESH          equ	4036	;# 
   411   000FC5                     SSPCON2         equ	4037	;# 
   412   000FC6                     SSPCON1         equ	4038	;# 
   413   000FC7                     SSPSTAT         equ	4039	;# 
   414   000FC8                     SSPADD          equ	4040	;# 
   415   000FC9                     SSPBUF          equ	4041	;# 
   416   000FCA                     T2CON           equ	4042	;# 
   417   000FCB                     PR2             equ	4043	;# 
   418   000FCB                     MEMCON          equ	4043	;# 
   419   000FCC                     TMR2            equ	4044	;# 
   420   000FCD                     T1CON           equ	4045	;# 
   421   000FCE                     TMR1            equ	4046	;# 
   422   000FCE                     TMR1L           equ	4046	;# 
   423   000FCF                     TMR1H           equ	4047	;# 
   424   000FD0                     RCON            equ	4048	;# 
   425   000FD1                     WDTCON          equ	4049	;# 
   426   000FD2                     HLVDCON         equ	4050	;# 
   427   000FD2                     LVDCON          equ	4050	;# 
   428   000FD3                     OSCCON          equ	4051	;# 
   429   000FD5                     T0CON           equ	4053	;# 
   430   000FD6                     TMR0            equ	4054	;# 
   431   000FD6                     TMR0L           equ	4054	;# 
   432   000FD7                     TMR0H           equ	4055	;# 
   433   000FD8                     STATUS          equ	4056	;# 
   434   000FD9                     FSR2            equ	4057	;# 
   435   000FD9                     FSR2L           equ	4057	;# 
   436   000FDA                     FSR2H           equ	4058	;# 
   437   000FDB                     PLUSW2          equ	4059	;# 
   438   000FDC                     PREINC2         equ	4060	;# 
   439   000FDD                     POSTDEC2        equ	4061	;# 
   440   000FDE                     POSTINC2        equ	4062	;# 
   441   000FDF                     INDF2           equ	4063	;# 
   442   000FE0                     BSR             equ	4064	;# 
   443   000FE1                     FSR1            equ	4065	;# 
   444   000FE1                     FSR1L           equ	4065	;# 
   445   000FE2                     FSR1H           equ	4066	;# 
   446   000FE3                     PLUSW1          equ	4067	;# 
   447   000FE4                     PREINC1         equ	4068	;# 
   448   000FE5                     POSTDEC1        equ	4069	;# 
   449   000FE6                     POSTINC1        equ	4070	;# 
   450   000FE7                     INDF1           equ	4071	;# 
   451   000FE8                     WREG            equ	4072	;# 
   452   000FE9                     FSR0            equ	4073	;# 
   453   000FE9                     FSR0L           equ	4073	;# 
   454   000FEA                     FSR0H           equ	4074	;# 
   455   000FEB                     PLUSW0          equ	4075	;# 
   456   000FEC                     PREINC0         equ	4076	;# 
   457   000FED                     POSTDEC0        equ	4077	;# 
   458   000FEE                     POSTINC0        equ	4078	;# 
   459   000FEF                     INDF0           equ	4079	;# 
   460   000FF0                     INTCON3         equ	4080	;# 
   461   000FF1                     INTCON2         equ	4081	;# 
   462   000FF2                     INTCON          equ	4082	;# 
   463   000FF3                     PROD            equ	4083	;# 
   464   000FF3                     PRODL           equ	4083	;# 
   465   000FF4                     PRODH           equ	4084	;# 
   466   000FF5                     TABLAT          equ	4085	;# 
   467   000FF6                     TBLPTR          equ	4086	;# 
   468   000FF6                     TBLPTRL         equ	4086	;# 
   469   000FF7                     TBLPTRH         equ	4087	;# 
   470   000FF8                     TBLPTRU         equ	4088	;# 
   471   000FF9                     PCLAT           equ	4089	;# 
   472   000FF9                     PC              equ	4089	;# 
   473   000FF9                     PCL             equ	4089	;# 
   474   000FFA                     PCLATH          equ	4090	;# 
   475   000FFB                     PCLATU          equ	4091	;# 
   476   000FFC                     STKPTR          equ	4092	;# 
   477   000FFD                     TOS             equ	4093	;# 
   478   000FFD                     TOSL            equ	4093	;# 
   479   000FFE                     TOSH            equ	4094	;# 
   480   000FFF                     TOSU            equ	4095	;# 
   481   000F62                     SPPDATA         equ	3938	;# 
   482   000F63                     SPPCFG          equ	3939	;# 
   483   000F64                     SPPEPS          equ	3940	;# 
   484   000F65                     SPPCON          equ	3941	;# 
   485   000F66                     UFRM            equ	3942	;# 
   486   000F66                     UFRML           equ	3942	;# 
   487   000F67                     UFRMH           equ	3943	;# 
   488   000F68                     UIR             equ	3944	;# 
   489   000F69                     UIE             equ	3945	;# 
   490   000F6A                     UEIR            equ	3946	;# 
   491   000F6B                     UEIE            equ	3947	;# 
   492   000F6C                     USTAT           equ	3948	;# 
   493   000F6D                     UCON            equ	3949	;# 
   494   000F6E                     UADDR           equ	3950	;# 
   495   000F6F                     UCFG            equ	3951	;# 
   496   000F70                     UEP0            equ	3952	;# 
   497   000F71                     UEP1            equ	3953	;# 
   498   000F72                     UEP2            equ	3954	;# 
   499   000F73                     UEP3            equ	3955	;# 
   500   000F74                     UEP4            equ	3956	;# 
   501   000F75                     UEP5            equ	3957	;# 
   502   000F76                     UEP6            equ	3958	;# 
   503   000F77                     UEP7            equ	3959	;# 
   504   000F78                     UEP8            equ	3960	;# 
   505   000F79                     UEP9            equ	3961	;# 
   506   000F7A                     UEP10           equ	3962	;# 
   507   000F7B                     UEP11           equ	3963	;# 
   508   000F7C                     UEP12           equ	3964	;# 
   509   000F7D                     UEP13           equ	3965	;# 
   510   000F7E                     UEP14           equ	3966	;# 
   511   000F7F                     UEP15           equ	3967	;# 
   512   000F80                     PORTA           equ	3968	;# 
   513   000F81                     PORTB           equ	3969	;# 
   514   000F82                     PORTC           equ	3970	;# 
   515   000F83                     PORTD           equ	3971	;# 
   516   000F84                     PORTE           equ	3972	;# 
   517   000F89                     LATA            equ	3977	;# 
   518   000F8A                     LATB            equ	3978	;# 
   519   000F8B                     LATC            equ	3979	;# 
   520   000F8C                     LATD            equ	3980	;# 
   521   000F8D                     LATE            equ	3981	;# 
   522   000F92                     TRISA           equ	3986	;# 
   523   000F92                     DDRA            equ	3986	;# 
   524   000F93                     TRISB           equ	3987	;# 
   525   000F93                     DDRB            equ	3987	;# 
   526   000F94                     TRISC           equ	3988	;# 
   527   000F94                     DDRC            equ	3988	;# 
   528   000F95                     TRISD           equ	3989	;# 
   529   000F95                     DDRD            equ	3989	;# 
   530   000F96                     TRISE           equ	3990	;# 
   531   000F96                     DDRE            equ	3990	;# 
   532   000F9B                     OSCTUNE         equ	3995	;# 
   533   000F9D                     PIE1            equ	3997	;# 
   534   000F9E                     PIR1            equ	3998	;# 
   535   000F9F                     IPR1            equ	3999	;# 
   536   000FA0                     PIE2            equ	4000	;# 
   537   000FA1                     PIR2            equ	4001	;# 
   538   000FA2                     IPR2            equ	4002	;# 
   539   000FA6                     EECON1          equ	4006	;# 
   540   000FA7                     EECON2          equ	4007	;# 
   541   000FA8                     EEDATA          equ	4008	;# 
   542   000FA9                     EEADR           equ	4009	;# 
   543   000FAB                     RCSTA           equ	4011	;# 
   544   000FAB                     RCSTA1          equ	4011	;# 
   545   000FAC                     TXSTA           equ	4012	;# 
   546   000FAC                     TXSTA1          equ	4012	;# 
   547   000FAD                     TXREG           equ	4013	;# 
   548   000FAD                     TXREG1          equ	4013	;# 
   549   000FAE                     RCREG           equ	4014	;# 
   550   000FAE                     RCREG1          equ	4014	;# 
   551   000FAF                     SPBRG           equ	4015	;# 
   552   000FAF                     SPBRG1          equ	4015	;# 
   553   000FB0                     SPBRGH          equ	4016	;# 
   554   000FB1                     T3CON           equ	4017	;# 
   555   000FB2                     TMR3            equ	4018	;# 
   556   000FB2                     TMR3L           equ	4018	;# 
   557   000FB3                     TMR3H           equ	4019	;# 
   558   000FB4                     CMCON           equ	4020	;# 
   559   000FB5                     CVRCON          equ	4021	;# 
   560   000FB6                     ECCP1AS         equ	4022	;# 
   561   000FB6                     CCP1AS          equ	4022	;# 
   562   000FB7                     ECCP1DEL        equ	4023	;# 
   563   000FB7                     CCP1DEL         equ	4023	;# 
   564   000FB8                     BAUDCON         equ	4024	;# 
   565   000FB8                     BAUDCTL         equ	4024	;# 
   566   000FBA                     CCP2CON         equ	4026	;# 
   567   000FBB                     CCPR2           equ	4027	;# 
   568   000FBB                     CCPR2L          equ	4027	;# 
   569   000FBC                     CCPR2H          equ	4028	;# 
   570   000FBD                     CCP1CON         equ	4029	;# 
   571   000FBD                     ECCP1CON        equ	4029	;# 
   572   000FBE                     CCPR1           equ	4030	;# 
   573   000FBE                     CCPR1L          equ	4030	;# 
   574   000FBF                     CCPR1H          equ	4031	;# 
   575   000FC0                     ADCON2          equ	4032	;# 
   576   000FC1                     ADCON1          equ	4033	;# 
   577   000FC2                     ADCON0          equ	4034	;# 
   578   000FC3                     ADRES           equ	4035	;# 
   579   000FC3                     ADRESL          equ	4035	;# 
   580   000FC4                     ADRESH          equ	4036	;# 
   581   000FC5                     SSPCON2         equ	4037	;# 
   582   000FC6                     SSPCON1         equ	4038	;# 
   583   000FC7                     SSPSTAT         equ	4039	;# 
   584   000FC8                     SSPADD          equ	4040	;# 
   585   000FC9                     SSPBUF          equ	4041	;# 
   586   000FCA                     T2CON           equ	4042	;# 
   587   000FCB                     PR2             equ	4043	;# 
   588   000FCB                     MEMCON          equ	4043	;# 
   589   000FCC                     TMR2            equ	4044	;# 
   590   000FCD                     T1CON           equ	4045	;# 
   591   000FCE                     TMR1            equ	4046	;# 
   592   000FCE                     TMR1L           equ	4046	;# 
   593   000FCF                     TMR1H           equ	4047	;# 
   594   000FD0                     RCON            equ	4048	;# 
   595   000FD1                     WDTCON          equ	4049	;# 
   596   000FD2                     HLVDCON         equ	4050	;# 
   597   000FD2                     LVDCON          equ	4050	;# 
   598   000FD3                     OSCCON          equ	4051	;# 
   599   000FD5                     T0CON           equ	4053	;# 
   600   000FD6                     TMR0            equ	4054	;# 
   601   000FD6                     TMR0L           equ	4054	;# 
   602   000FD7                     TMR0H           equ	4055	;# 
   603   000FD8                     STATUS          equ	4056	;# 
   604   000FD9                     FSR2            equ	4057	;# 
   605   000FD9                     FSR2L           equ	4057	;# 
   606   000FDA                     FSR2H           equ	4058	;# 
   607   000FDB                     PLUSW2          equ	4059	;# 
   608   000FDC                     PREINC2         equ	4060	;# 
   609   000FDD                     POSTDEC2        equ	4061	;# 
   610   000FDE                     POSTINC2        equ	4062	;# 
   611   000FDF                     INDF2           equ	4063	;# 
   612   000FE0                     BSR             equ	4064	;# 
   613   000FE1                     FSR1            equ	4065	;# 
   614   000FE1                     FSR1L           equ	4065	;# 
   615   000FE2                     FSR1H           equ	4066	;# 
   616   000FE3                     PLUSW1          equ	4067	;# 
   617   000FE4                     PREINC1         equ	4068	;# 
   618   000FE5                     POSTDEC1        equ	4069	;# 
   619   000FE6                     POSTINC1        equ	4070	;# 
   620   000FE7                     INDF1           equ	4071	;# 
   621   000FE8                     WREG            equ	4072	;# 
   622   000FE9                     FSR0            equ	4073	;# 
   623   000FE9                     FSR0L           equ	4073	;# 
   624   000FEA                     FSR0H           equ	4074	;# 
   625   000FEB                     PLUSW0          equ	4075	;# 
   626   000FEC                     PREINC0         equ	4076	;# 
   627   000FED                     POSTDEC0        equ	4077	;# 
   628   000FEE                     POSTINC0        equ	4078	;# 
   629   000FEF                     INDF0           equ	4079	;# 
   630   000FF0                     INTCON3         equ	4080	;# 
   631   000FF1                     INTCON2         equ	4081	;# 
   632   000FF2                     INTCON          equ	4082	;# 
   633   000FF3                     PROD            equ	4083	;# 
   634   000FF3                     PRODL           equ	4083	;# 
   635   000FF4                     PRODH           equ	4084	;# 
   636   000FF5                     TABLAT          equ	4085	;# 
   637   000FF6                     TBLPTR          equ	4086	;# 
   638   000FF6                     TBLPTRL         equ	4086	;# 
   639   000FF7                     TBLPTRH         equ	4087	;# 
   640   000FF8                     TBLPTRU         equ	4088	;# 
   641   000FF9                     PCLAT           equ	4089	;# 
   642   000FF9                     PC              equ	4089	;# 
   643   000FF9                     PCL             equ	4089	;# 
   644   000FFA                     PCLATH          equ	4090	;# 
   645   000FFB                     PCLATU          equ	4091	;# 
   646   000FFC                     STKPTR          equ	4092	;# 
   647   000FFD                     TOS             equ	4093	;# 
   648   000FFD                     TOSL            equ	4093	;# 
   649   000FFE                     TOSH            equ	4094	;# 
   650   000FFF                     TOSU            equ	4095	;# 
   651   000F62                     SPPDATA         equ	3938	;# 
   652   000F63                     SPPCFG          equ	3939	;# 
   653   000F64                     SPPEPS          equ	3940	;# 
   654   000F65                     SPPCON          equ	3941	;# 
   655   000F66                     UFRM            equ	3942	;# 
   656   000F66                     UFRML           equ	3942	;# 
   657   000F67                     UFRMH           equ	3943	;# 
   658   000F68                     UIR             equ	3944	;# 
   659   000F69                     UIE             equ	3945	;# 
   660   000F6A                     UEIR            equ	3946	;# 
   661   000F6B                     UEIE            equ	3947	;# 
   662   000F6C                     USTAT           equ	3948	;# 
   663   000F6D                     UCON            equ	3949	;# 
   664   000F6E                     UADDR           equ	3950	;# 
   665   000F6F                     UCFG            equ	3951	;# 
   666   000F70                     UEP0            equ	3952	;# 
   667   000F71                     UEP1            equ	3953	;# 
   668   000F72                     UEP2            equ	3954	;# 
   669   000F73                     UEP3            equ	3955	;# 
   670   000F74                     UEP4            equ	3956	;# 
   671   000F75                     UEP5            equ	3957	;# 
   672   000F76                     UEP6            equ	3958	;# 
   673   000F77                     UEP7            equ	3959	;# 
   674   000F78                     UEP8            equ	3960	;# 
   675   000F79                     UEP9            equ	3961	;# 
   676   000F7A                     UEP10           equ	3962	;# 
   677   000F7B                     UEP11           equ	3963	;# 
   678   000F7C                     UEP12           equ	3964	;# 
   679   000F7D                     UEP13           equ	3965	;# 
   680   000F7E                     UEP14           equ	3966	;# 
   681   000F7F                     UEP15           equ	3967	;# 
   682   000F80                     PORTA           equ	3968	;# 
   683   000F81                     PORTB           equ	3969	;# 
   684   000F82                     PORTC           equ	3970	;# 
   685   000F83                     PORTD           equ	3971	;# 
   686   000F84                     PORTE           equ	3972	;# 
   687   000F89                     LATA            equ	3977	;# 
   688   000F8A                     LATB            equ	3978	;# 
   689   000F8B                     LATC            equ	3979	;# 
   690   000F8C                     LATD            equ	3980	;# 
   691   000F8D                     LATE            equ	3981	;# 
   692   000F92                     TRISA           equ	3986	;# 
   693   000F92                     DDRA            equ	3986	;# 
   694   000F93                     TRISB           equ	3987	;# 
   695   000F93                     DDRB            equ	3987	;# 
   696   000F94                     TRISC           equ	3988	;# 
   697   000F94                     DDRC            equ	3988	;# 
   698   000F95                     TRISD           equ	3989	;# 
   699   000F95                     DDRD            equ	3989	;# 
   700   000F96                     TRISE           equ	3990	;# 
   701   000F96                     DDRE            equ	3990	;# 
   702   000F9B                     OSCTUNE         equ	3995	;# 
   703   000F9D                     PIE1            equ	3997	;# 
   704   000F9E                     PIR1            equ	3998	;# 
   705   000F9F                     IPR1            equ	3999	;# 
   706   000FA0                     PIE2            equ	4000	;# 
   707   000FA1                     PIR2            equ	4001	;# 
   708   000FA2                     IPR2            equ	4002	;# 
   709   000FA6                     EECON1          equ	4006	;# 
   710   000FA7                     EECON2          equ	4007	;# 
   711   000FA8                     EEDATA          equ	4008	;# 
   712   000FA9                     EEADR           equ	4009	;# 
   713   000FAB                     RCSTA           equ	4011	;# 
   714   000FAB                     RCSTA1          equ	4011	;# 
   715   000FAC                     TXSTA           equ	4012	;# 
   716   000FAC                     TXSTA1          equ	4012	;# 
   717   000FAD                     TXREG           equ	4013	;# 
   718   000FAD                     TXREG1          equ	4013	;# 
   719   000FAE                     RCREG           equ	4014	;# 
   720   000FAE                     RCREG1          equ	4014	;# 
   721   000FAF                     SPBRG           equ	4015	;# 
   722   000FAF                     SPBRG1          equ	4015	;# 
   723   000FB0                     SPBRGH          equ	4016	;# 
   724   000FB1                     T3CON           equ	4017	;# 
   725   000FB2                     TMR3            equ	4018	;# 
   726   000FB2                     TMR3L           equ	4018	;# 
   727   000FB3                     TMR3H           equ	4019	;# 
   728   000FB4                     CMCON           equ	4020	;# 
   729   000FB5                     CVRCON          equ	4021	;# 
   730   000FB6                     ECCP1AS         equ	4022	;# 
   731   000FB6                     CCP1AS          equ	4022	;# 
   732   000FB7                     ECCP1DEL        equ	4023	;# 
   733   000FB7                     CCP1DEL         equ	4023	;# 
   734   000FB8                     BAUDCON         equ	4024	;# 
   735   000FB8                     BAUDCTL         equ	4024	;# 
   736   000FBA                     CCP2CON         equ	4026	;# 
   737   000FBB                     CCPR2           equ	4027	;# 
   738   000FBB                     CCPR2L          equ	4027	;# 
   739   000FBC                     CCPR2H          equ	4028	;# 
   740   000FBD                     CCP1CON         equ	4029	;# 
   741   000FBD                     ECCP1CON        equ	4029	;# 
   742   000FBE                     CCPR1           equ	4030	;# 
   743   000FBE                     CCPR1L          equ	4030	;# 
   744   000FBF                     CCPR1H          equ	4031	;# 
   745   000FC0                     ADCON2          equ	4032	;# 
   746   000FC1                     ADCON1          equ	4033	;# 
   747   000FC2                     ADCON0          equ	4034	;# 
   748   000FC3                     ADRES           equ	4035	;# 
   749   000FC3                     ADRESL          equ	4035	;# 
   750   000FC4                     ADRESH          equ	4036	;# 
   751   000FC5                     SSPCON2         equ	4037	;# 
   752   000FC6                     SSPCON1         equ	4038	;# 
   753   000FC7                     SSPSTAT         equ	4039	;# 
   754   000FC8                     SSPADD          equ	4040	;# 
   755   000FC9                     SSPBUF          equ	4041	;# 
   756   000FCA                     T2CON           equ	4042	;# 
   757   000FCB                     PR2             equ	4043	;# 
   758   000FCB                     MEMCON          equ	4043	;# 
   759   000FCC                     TMR2            equ	4044	;# 
   760   000FCD                     T1CON           equ	4045	;# 
   761   000FCE                     TMR1            equ	4046	;# 
   762   000FCE                     TMR1L           equ	4046	;# 
   763   000FCF                     TMR1H           equ	4047	;# 
   764   000FD0                     RCON            equ	4048	;# 
   765   000FD1                     WDTCON          equ	4049	;# 
   766   000FD2                     HLVDCON         equ	4050	;# 
   767   000FD2                     LVDCON          equ	4050	;# 
   768   000FD3                     OSCCON          equ	4051	;# 
   769   000FD5                     T0CON           equ	4053	;# 
   770   000FD6                     TMR0            equ	4054	;# 
   771   000FD6                     TMR0L           equ	4054	;# 
   772   000FD7                     TMR0H           equ	4055	;# 
   773   000FD8                     STATUS          equ	4056	;# 
   774   000FD9                     FSR2            equ	4057	;# 
   775   000FD9                     FSR2L           equ	4057	;# 
   776   000FDA                     FSR2H           equ	4058	;# 
   777   000FDB                     PLUSW2          equ	4059	;# 
   778   000FDC                     PREINC2         equ	4060	;# 
   779   000FDD                     POSTDEC2        equ	4061	;# 
   780   000FDE                     POSTINC2        equ	4062	;# 
   781   000FDF                     INDF2           equ	4063	;# 
   782   000FE0                     BSR             equ	4064	;# 
   783   000FE1                     FSR1            equ	4065	;# 
   784   000FE1                     FSR1L           equ	4065	;# 
   785   000FE2                     FSR1H           equ	4066	;# 
   786   000FE3                     PLUSW1          equ	4067	;# 
   787   000FE4                     PREINC1         equ	4068	;# 
   788   000FE5                     POSTDEC1        equ	4069	;# 
   789   000FE6                     POSTINC1        equ	4070	;# 
   790   000FE7                     INDF1           equ	4071	;# 
   791   000FE8                     WREG            equ	4072	;# 
   792   000FE9                     FSR0            equ	4073	;# 
   793   000FE9                     FSR0L           equ	4073	;# 
   794   000FEA                     FSR0H           equ	4074	;# 
   795   000FEB                     PLUSW0          equ	4075	;# 
   796   000FEC                     PREINC0         equ	4076	;# 
   797   000FED                     POSTDEC0        equ	4077	;# 
   798   000FEE                     POSTINC0        equ	4078	;# 
   799   000FEF                     INDF0           equ	4079	;# 
   800   000FF0                     INTCON3         equ	4080	;# 
   801   000FF1                     INTCON2         equ	4081	;# 
   802   000FF2                     INTCON          equ	4082	;# 
   803   000FF3                     PROD            equ	4083	;# 
   804   000FF3                     PRODL           equ	4083	;# 
   805   000FF4                     PRODH           equ	4084	;# 
   806   000FF5                     TABLAT          equ	4085	;# 
   807   000FF6                     TBLPTR          equ	4086	;# 
   808   000FF6                     TBLPTRL         equ	4086	;# 
   809   000FF7                     TBLPTRH         equ	4087	;# 
   810   000FF8                     TBLPTRU         equ	4088	;# 
   811   000FF9                     PCLAT           equ	4089	;# 
   812   000FF9                     PC              equ	4089	;# 
   813   000FF9                     PCL             equ	4089	;# 
   814   000FFA                     PCLATH          equ	4090	;# 
   815   000FFB                     PCLATU          equ	4091	;# 
   816   000FFC                     STKPTR          equ	4092	;# 
   817   000FFD                     TOS             equ	4093	;# 
   818   000FFD                     TOSL            equ	4093	;# 
   819   000FFE                     TOSH            equ	4094	;# 
   820   000FFF                     TOSU            equ	4095	;# 
   821   000F62                     SPPDATA         equ	3938	;# 
   822   000F63                     SPPCFG          equ	3939	;# 
   823   000F64                     SPPEPS          equ	3940	;# 
   824   000F65                     SPPCON          equ	3941	;# 
   825   000F66                     UFRM            equ	3942	;# 
   826   000F66                     UFRML           equ	3942	;# 
   827   000F67                     UFRMH           equ	3943	;# 
   828   000F68                     UIR             equ	3944	;# 
   829   000F69                     UIE             equ	3945	;# 
   830   000F6A                     UEIR            equ	3946	;# 
   831   000F6B                     UEIE            equ	3947	;# 
   832   000F6C                     USTAT           equ	3948	;# 
   833   000F6D                     UCON            equ	3949	;# 
   834   000F6E                     UADDR           equ	3950	;# 
   835   000F6F                     UCFG            equ	3951	;# 
   836   000F70                     UEP0            equ	3952	;# 
   837   000F71                     UEP1            equ	3953	;# 
   838   000F72                     UEP2            equ	3954	;# 
   839   000F73                     UEP3            equ	3955	;# 
   840   000F74                     UEP4            equ	3956	;# 
   841   000F75                     UEP5            equ	3957	;# 
   842   000F76                     UEP6            equ	3958	;# 
   843   000F77                     UEP7            equ	3959	;# 
   844   000F78                     UEP8            equ	3960	;# 
   845   000F79                     UEP9            equ	3961	;# 
   846   000F7A                     UEP10           equ	3962	;# 
   847   000F7B                     UEP11           equ	3963	;# 
   848   000F7C                     UEP12           equ	3964	;# 
   849   000F7D                     UEP13           equ	3965	;# 
   850   000F7E                     UEP14           equ	3966	;# 
   851   000F7F                     UEP15           equ	3967	;# 
   852   000F80                     PORTA           equ	3968	;# 
   853   000F81                     PORTB           equ	3969	;# 
   854   000F82                     PORTC           equ	3970	;# 
   855   000F83                     PORTD           equ	3971	;# 
   856   000F84                     PORTE           equ	3972	;# 
   857   000F89                     LATA            equ	3977	;# 
   858   000F8A                     LATB            equ	3978	;# 
   859   000F8B                     LATC            equ	3979	;# 
   860   000F8C                     LATD            equ	3980	;# 
   861   000F8D                     LATE            equ	3981	;# 
   862   000F92                     TRISA           equ	3986	;# 
   863   000F92                     DDRA            equ	3986	;# 
   864   000F93                     TRISB           equ	3987	;# 
   865   000F93                     DDRB            equ	3987	;# 
   866   000F94                     TRISC           equ	3988	;# 
   867   000F94                     DDRC            equ	3988	;# 
   868   000F95                     TRISD           equ	3989	;# 
   869   000F95                     DDRD            equ	3989	;# 
   870   000F96                     TRISE           equ	3990	;# 
   871   000F96                     DDRE            equ	3990	;# 
   872   000F9B                     OSCTUNE         equ	3995	;# 
   873   000F9D                     PIE1            equ	3997	;# 
   874   000F9E                     PIR1            equ	3998	;# 
   875   000F9F                     IPR1            equ	3999	;# 
   876   000FA0                     PIE2            equ	4000	;# 
   877   000FA1                     PIR2            equ	4001	;# 
   878   000FA2                     IPR2            equ	4002	;# 
   879   000FA6                     EECON1          equ	4006	;# 
   880   000FA7                     EECON2          equ	4007	;# 
   881   000FA8                     EEDATA          equ	4008	;# 
   882   000FA9                     EEADR           equ	4009	;# 
   883   000FAB                     RCSTA           equ	4011	;# 
   884   000FAB                     RCSTA1          equ	4011	;# 
   885   000FAC                     TXSTA           equ	4012	;# 
   886   000FAC                     TXSTA1          equ	4012	;# 
   887   000FAD                     TXREG           equ	4013	;# 
   888   000FAD                     TXREG1          equ	4013	;# 
   889   000FAE                     RCREG           equ	4014	;# 
   890   000FAE                     RCREG1          equ	4014	;# 
   891   000FAF                     SPBRG           equ	4015	;# 
   892   000FAF                     SPBRG1          equ	4015	;# 
   893   000FB0                     SPBRGH          equ	4016	;# 
   894   000FB1                     T3CON           equ	4017	;# 
   895   000FB2                     TMR3            equ	4018	;# 
   896   000FB2                     TMR3L           equ	4018	;# 
   897   000FB3                     TMR3H           equ	4019	;# 
   898   000FB4                     CMCON           equ	4020	;# 
   899   000FB5                     CVRCON          equ	4021	;# 
   900   000FB6                     ECCP1AS         equ	4022	;# 
   901   000FB6                     CCP1AS          equ	4022	;# 
   902   000FB7                     ECCP1DEL        equ	4023	;# 
   903   000FB7                     CCP1DEL         equ	4023	;# 
   904   000FB8                     BAUDCON         equ	4024	;# 
   905   000FB8                     BAUDCTL         equ	4024	;# 
   906   000FBA                     CCP2CON         equ	4026	;# 
   907   000FBB                     CCPR2           equ	4027	;# 
   908   000FBB                     CCPR2L          equ	4027	;# 
   909   000FBC                     CCPR2H          equ	4028	;# 
   910   000FBD                     CCP1CON         equ	4029	;# 
   911   000FBD                     ECCP1CON        equ	4029	;# 
   912   000FBE                     CCPR1           equ	4030	;# 
   913   000FBE                     CCPR1L          equ	4030	;# 
   914   000FBF                     CCPR1H          equ	4031	;# 
   915   000FC0                     ADCON2          equ	4032	;# 
   916   000FC1                     ADCON1          equ	4033	;# 
   917   000FC2                     ADCON0          equ	4034	;# 
   918   000FC3                     ADRES           equ	4035	;# 
   919   000FC3                     ADRESL          equ	4035	;# 
   920   000FC4                     ADRESH          equ	4036	;# 
   921   000FC5                     SSPCON2         equ	4037	;# 
   922   000FC6                     SSPCON1         equ	4038	;# 
   923   000FC7                     SSPSTAT         equ	4039	;# 
   924   000FC8                     SSPADD          equ	4040	;# 
   925   000FC9                     SSPBUF          equ	4041	;# 
   926   000FCA                     T2CON           equ	4042	;# 
   927   000FCB                     PR2             equ	4043	;# 
   928   000FCB                     MEMCON          equ	4043	;# 
   929   000FCC                     TMR2            equ	4044	;# 
   930   000FCD                     T1CON           equ	4045	;# 
   931   000FCE                     TMR1            equ	4046	;# 
   932   000FCE                     TMR1L           equ	4046	;# 
   933   000FCF                     TMR1H           equ	4047	;# 
   934   000FD0                     RCON            equ	4048	;# 
   935   000FD1                     WDTCON          equ	4049	;# 
   936   000FD2                     HLVDCON         equ	4050	;# 
   937   000FD2                     LVDCON          equ	4050	;# 
   938   000FD3                     OSCCON          equ	4051	;# 
   939   000FD5                     T0CON           equ	4053	;# 
   940   000FD6                     TMR0            equ	4054	;# 
   941   000FD6                     TMR0L           equ	4054	;# 
   942   000FD7                     TMR0H           equ	4055	;# 
   943   000FD8                     STATUS          equ	4056	;# 
   944   000FD9                     FSR2            equ	4057	;# 
   945   000FD9                     FSR2L           equ	4057	;# 
   946   000FDA                     FSR2H           equ	4058	;# 
   947   000FDB                     PLUSW2          equ	4059	;# 
   948   000FDC                     PREINC2         equ	4060	;# 
   949   000FDD                     POSTDEC2        equ	4061	;# 
   950   000FDE                     POSTINC2        equ	4062	;# 
   951   000FDF                     INDF2           equ	4063	;# 
   952   000FE0                     BSR             equ	4064	;# 
   953   000FE1                     FSR1            equ	4065	;# 
   954   000FE1                     FSR1L           equ	4065	;# 
   955   000FE2                     FSR1H           equ	4066	;# 
   956   000FE3                     PLUSW1          equ	4067	;# 
   957   000FE4                     PREINC1         equ	4068	;# 
   958   000FE5                     POSTDEC1        equ	4069	;# 
   959   000FE6                     POSTINC1        equ	4070	;# 
   960   000FE7                     INDF1           equ	4071	;# 
   961   000FE8                     WREG            equ	4072	;# 
   962   000FE9                     FSR0            equ	4073	;# 
   963   000FE9                     FSR0L           equ	4073	;# 
   964   000FEA                     FSR0H           equ	4074	;# 
   965   000FEB                     PLUSW0          equ	4075	;# 
   966   000FEC                     PREINC0         equ	4076	;# 
   967   000FED                     POSTDEC0        equ	4077	;# 
   968   000FEE                     POSTINC0        equ	4078	;# 
   969   000FEF                     INDF0           equ	4079	;# 
   970   000FF0                     INTCON3         equ	4080	;# 
   971   000FF1                     INTCON2         equ	4081	;# 
   972   000FF2                     INTCON          equ	4082	;# 
   973   000FF3                     PROD            equ	4083	;# 
   974   000FF3                     PRODL           equ	4083	;# 
   975   000FF4                     PRODH           equ	4084	;# 
   976   000FF5                     TABLAT          equ	4085	;# 
   977   000FF6                     TBLPTR          equ	4086	;# 
   978   000FF6                     TBLPTRL         equ	4086	;# 
   979   000FF7                     TBLPTRH         equ	4087	;# 
   980   000FF8                     TBLPTRU         equ	4088	;# 
   981   000FF9                     PCLAT           equ	4089	;# 
   982   000FF9                     PC              equ	4089	;# 
   983   000FF9                     PCL             equ	4089	;# 
   984   000FFA                     PCLATH          equ	4090	;# 
   985   000FFB                     PCLATU          equ	4091	;# 
   986   000FFC                     STKPTR          equ	4092	;# 
   987   000FFD                     TOS             equ	4093	;# 
   988   000FFD                     TOSL            equ	4093	;# 
   989   000FFE                     TOSH            equ	4094	;# 
   990   000FFF                     TOSU            equ	4095	;# 
   991   000F62                     SPPDATA         equ	3938	;# 
   992   000F63                     SPPCFG          equ	3939	;# 
   993   000F64                     SPPEPS          equ	3940	;# 
   994   000F65                     SPPCON          equ	3941	;# 
   995   000F66                     UFRM            equ	3942	;# 
   996   000F66                     UFRML           equ	3942	;# 
   997   000F67                     UFRMH           equ	3943	;# 
   998   000F68                     UIR             equ	3944	;# 
   999   000F69                     UIE             equ	3945	;# 
  1000   000F6A                     UEIR            equ	3946	;# 
  1001   000F6B                     UEIE            equ	3947	;# 
  1002   000F6C                     USTAT           equ	3948	;# 
  1003   000F6D                     UCON            equ	3949	;# 
  1004   000F6E                     UADDR           equ	3950	;# 
  1005   000F6F                     UCFG            equ	3951	;# 
  1006   000F70                     UEP0            equ	3952	;# 
  1007   000F71                     UEP1            equ	3953	;# 
  1008   000F72                     UEP2            equ	3954	;# 
  1009   000F73                     UEP3            equ	3955	;# 
  1010   000F74                     UEP4            equ	3956	;# 
  1011   000F75                     UEP5            equ	3957	;# 
  1012   000F76                     UEP6            equ	3958	;# 
  1013   000F77                     UEP7            equ	3959	;# 
  1014   000F78                     UEP8            equ	3960	;# 
  1015   000F79                     UEP9            equ	3961	;# 
  1016   000F7A                     UEP10           equ	3962	;# 
  1017   000F7B                     UEP11           equ	3963	;# 
  1018   000F7C                     UEP12           equ	3964	;# 
  1019   000F7D                     UEP13           equ	3965	;# 
  1020   000F7E                     UEP14           equ	3966	;# 
  1021   000F7F                     UEP15           equ	3967	;# 
  1022   000F80                     PORTA           equ	3968	;# 
  1023   000F81                     PORTB           equ	3969	;# 
  1024   000F82                     PORTC           equ	3970	;# 
  1025   000F83                     PORTD           equ	3971	;# 
  1026   000F84                     PORTE           equ	3972	;# 
  1027   000F89                     LATA            equ	3977	;# 
  1028   000F8A                     LATB            equ	3978	;# 
  1029   000F8B                     LATC            equ	3979	;# 
  1030   000F8C                     LATD            equ	3980	;# 
  1031   000F8D                     LATE            equ	3981	;# 
  1032   000F92                     TRISA           equ	3986	;# 
  1033   000F92                     DDRA            equ	3986	;# 
  1034   000F93                     TRISB           equ	3987	;# 
  1035   000F93                     DDRB            equ	3987	;# 
  1036   000F94                     TRISC           equ	3988	;# 
  1037   000F94                     DDRC            equ	3988	;# 
  1038   000F95                     TRISD           equ	3989	;# 
  1039   000F95                     DDRD            equ	3989	;# 
  1040   000F96                     TRISE           equ	3990	;# 
  1041   000F96                     DDRE            equ	3990	;# 
  1042   000F9B                     OSCTUNE         equ	3995	;# 
  1043   000F9D                     PIE1            equ	3997	;# 
  1044   000F9E                     PIR1            equ	3998	;# 
  1045   000F9F                     IPR1            equ	3999	;# 
  1046   000FA0                     PIE2            equ	4000	;# 
  1047   000FA1                     PIR2            equ	4001	;# 
  1048   000FA2                     IPR2            equ	4002	;# 
  1049   000FA6                     EECON1          equ	4006	;# 
  1050   000FA7                     EECON2          equ	4007	;# 
  1051   000FA8                     EEDATA          equ	4008	;# 
  1052   000FA9                     EEADR           equ	4009	;# 
  1053   000FAB                     RCSTA           equ	4011	;# 
  1054   000FAB                     RCSTA1          equ	4011	;# 
  1055   000FAC                     TXSTA           equ	4012	;# 
  1056   000FAC                     TXSTA1          equ	4012	;# 
  1057   000FAD                     TXREG           equ	4013	;# 
  1058   000FAD                     TXREG1          equ	4013	;# 
  1059   000FAE                     RCREG           equ	4014	;# 
  1060   000FAE                     RCREG1          equ	4014	;# 
  1061   000FAF                     SPBRG           equ	4015	;# 
  1062   000FAF                     SPBRG1          equ	4015	;# 
  1063   000FB0                     SPBRGH          equ	4016	;# 
  1064   000FB1                     T3CON           equ	4017	;# 
  1065   000FB2                     TMR3            equ	4018	;# 
  1066   000FB2                     TMR3L           equ	4018	;# 
  1067   000FB3                     TMR3H           equ	4019	;# 
  1068   000FB4                     CMCON           equ	4020	;# 
  1069   000FB5                     CVRCON          equ	4021	;# 
  1070   000FB6                     ECCP1AS         equ	4022	;# 
  1071   000FB6                     CCP1AS          equ	4022	;# 
  1072   000FB7                     ECCP1DEL        equ	4023	;# 
  1073   000FB7                     CCP1DEL         equ	4023	;# 
  1074   000FB8                     BAUDCON         equ	4024	;# 
  1075   000FB8                     BAUDCTL         equ	4024	;# 
  1076   000FBA                     CCP2CON         equ	4026	;# 
  1077   000FBB                     CCPR2           equ	4027	;# 
  1078   000FBB                     CCPR2L          equ	4027	;# 
  1079   000FBC                     CCPR2H          equ	4028	;# 
  1080   000FBD                     CCP1CON         equ	4029	;# 
  1081   000FBD                     ECCP1CON        equ	4029	;# 
  1082   000FBE                     CCPR1           equ	4030	;# 
  1083   000FBE                     CCPR1L          equ	4030	;# 
  1084   000FBF                     CCPR1H          equ	4031	;# 
  1085   000FC0                     ADCON2          equ	4032	;# 
  1086   000FC1                     ADCON1          equ	4033	;# 
  1087   000FC2                     ADCON0          equ	4034	;# 
  1088   000FC3                     ADRES           equ	4035	;# 
  1089   000FC3                     ADRESL          equ	4035	;# 
  1090   000FC4                     ADRESH          equ	4036	;# 
  1091   000FC5                     SSPCON2         equ	4037	;# 
  1092   000FC6                     SSPCON1         equ	4038	;# 
  1093   000FC7                     SSPSTAT         equ	4039	;# 
  1094   000FC8                     SSPADD          equ	4040	;# 
  1095   000FC9                     SSPBUF          equ	4041	;# 
  1096   000FCA                     T2CON           equ	4042	;# 
  1097   000FCB                     PR2             equ	4043	;# 
  1098   000FCB                     MEMCON          equ	4043	;# 
  1099   000FCC                     TMR2            equ	4044	;# 
  1100   000FCD                     T1CON           equ	4045	;# 
  1101   000FCE                     TMR1            equ	4046	;# 
  1102   000FCE                     TMR1L           equ	4046	;# 
  1103   000FCF                     TMR1H           equ	4047	;# 
  1104   000FD0                     RCON            equ	4048	;# 
  1105   000FD1                     WDTCON          equ	4049	;# 
  1106   000FD2                     HLVDCON         equ	4050	;# 
  1107   000FD2                     LVDCON          equ	4050	;# 
  1108   000FD3                     OSCCON          equ	4051	;# 
  1109   000FD5                     T0CON           equ	4053	;# 
  1110   000FD6                     TMR0            equ	4054	;# 
  1111   000FD6                     TMR0L           equ	4054	;# 
  1112   000FD7                     TMR0H           equ	4055	;# 
  1113   000FD8                     STATUS          equ	4056	;# 
  1114   000FD9                     FSR2            equ	4057	;# 
  1115   000FD9                     FSR2L           equ	4057	;# 
  1116   000FDA                     FSR2H           equ	4058	;# 
  1117   000FDB                     PLUSW2          equ	4059	;# 
  1118   000FDC                     PREINC2         equ	4060	;# 
  1119   000FDD                     POSTDEC2        equ	4061	;# 
  1120   000FDE                     POSTINC2        equ	4062	;# 
  1121   000FDF                     INDF2           equ	4063	;# 
  1122   000FE0                     BSR             equ	4064	;# 
  1123   000FE1                     FSR1            equ	4065	;# 
  1124   000FE1                     FSR1L           equ	4065	;# 
  1125   000FE2                     FSR1H           equ	4066	;# 
  1126   000FE3                     PLUSW1          equ	4067	;# 
  1127   000FE4                     PREINC1         equ	4068	;# 
  1128   000FE5                     POSTDEC1        equ	4069	;# 
  1129   000FE6                     POSTINC1        equ	4070	;# 
  1130   000FE7                     INDF1           equ	4071	;# 
  1131   000FE8                     WREG            equ	4072	;# 
  1132   000FE9                     FSR0            equ	4073	;# 
  1133   000FE9                     FSR0L           equ	4073	;# 
  1134   000FEA                     FSR0H           equ	4074	;# 
  1135   000FEB                     PLUSW0          equ	4075	;# 
  1136   000FEC                     PREINC0         equ	4076	;# 
  1137   000FED                     POSTDEC0        equ	4077	;# 
  1138   000FEE                     POSTINC0        equ	4078	;# 
  1139   000FEF                     INDF0           equ	4079	;# 
  1140   000FF0                     INTCON3         equ	4080	;# 
  1141   000FF1                     INTCON2         equ	4081	;# 
  1142   000FF2                     INTCON          equ	4082	;# 
  1143   000FF3                     PROD            equ	4083	;# 
  1144   000FF3                     PRODL           equ	4083	;# 
  1145   000FF4                     PRODH           equ	4084	;# 
  1146   000FF5                     TABLAT          equ	4085	;# 
  1147   000FF6                     TBLPTR          equ	4086	;# 
  1148   000FF6                     TBLPTRL         equ	4086	;# 
  1149   000FF7                     TBLPTRH         equ	4087	;# 
  1150   000FF8                     TBLPTRU         equ	4088	;# 
  1151   000FF9                     PCLAT           equ	4089	;# 
  1152   000FF9                     PC              equ	4089	;# 
  1153   000FF9                     PCL             equ	4089	;# 
  1154   000FFA                     PCLATH          equ	4090	;# 
  1155   000FFB                     PCLATU          equ	4091	;# 
  1156   000FFC                     STKPTR          equ	4092	;# 
  1157   000FFD                     TOS             equ	4093	;# 
  1158   000FFD                     TOSL            equ	4093	;# 
  1159   000FFE                     TOSH            equ	4094	;# 
  1160   000FFF                     TOSU            equ	4095	;# 
  1161   007E2C                     _ACKEN          set	32300
  1162   007E2D                     _ACKDT          set	32301
  1163   007E2B                     _RCEN           set	32299
  1164   007E2E                     _ACKSTAT        set	32302
  1165   007E2A                     _PEN            set	32298
  1166   007E29                     _RSEN           set	32297
  1167   007E28                     _SEN            set	32296
  1168   007C99                     _TRISB1         set	31897
  1169   007C98                     _TRISB0         set	31896
  1170   007C61                     _LATD1          set	31841
  1171   007C60                     _LATD0          set	31840
  1172   007CA7                     _TRISC7         set	31911
  1173   000FC9                     _SSPBUF         set	4041
  1174   000FC7                     _SSPSTAT        set	4039
  1175   000FC8                     _SSPADD         set	4040
  1176   000FC5                     _SSPCON2        set	4037
  1177   000FC6                     _SSPCON1        set	4038
  1178   000F8C                     _LATD           set	3980
  1179   000F95                     _TRISD          set	3989
  1180   000FAB                     _RCSTAbits      set	4011
  1181   000F9E                     _PIR1bits       set	3998
  1182   000FAE                     _RCREG          set	4014
  1183   000FAF                     _SPBRG          set	4015
  1184   000FAB                     _RCSTA          set	4011
  1185   000FAC                     _TXSTA          set	4012
  1186   000FB8                     _BAUDCON        set	4024
  1187   000F92                     _TRISAbits      set	3986
  1188   000F80                     _PORTAbits      set	3968
  1189   000FB4                     _CMCON          set	4020
  1190   000FC1                     _ADCON1         set	4033
  1191   000FD3                     _OSCCON         set	4051
  1192                           
  1193                           	psect	smallconst
  1194   000800                     __psmallconst:
  1195                           	callstack 0
  1196   000800  00                 	db	0
  1197   000801                     STR_1:
  1198   000801  20                 	db	32
  1199   000802  20                 	db	32
  1200   000803  20                 	db	32
  1201   000804  20                 	db	32
  1202   000805  20                 	db	32
  1203   000806  20                 	db	32
  1204   000807  20                 	db	32
  1205   000808  20                 	db	32
  1206   000809  20                 	db	32
  1207   00080A  20                 	db	32
  1208   00080B  20                 	db	32
  1209   00080C  20                 	db	32
  1210   00080D  20                 	db	32
  1211   00080E  20                 	db	32
  1212   00080F  20                 	db	32
  1213   000810  20                 	db	32
  1214   000811  00                 	db	0
  1215   000812                     STR_13:
  1216   000812  25                 	db	37
  1217   000813  30                 	db	48	;'0'
  1218   000814  32                 	db	50	;'2'
  1219   000815  75                 	db	117	;'u'
  1220   000816  2F                 	db	47
  1221   000817  25                 	db	37
  1222   000818  30                 	db	48	;'0'
  1223   000819  32                 	db	50	;'2'
  1224   00081A  75                 	db	117	;'u'
  1225   00081B  2F                 	db	47
  1226   00081C  32                 	db	50	;'2'
  1227   00081D  30                 	db	48	;'0'
  1228   00081E  25                 	db	37
  1229   00081F  30                 	db	48	;'0'
  1230   000820  32                 	db	50	;'2'
  1231   000821  75                 	db	117	;'u'
  1232   000822  00                 	db	0
  1233   000823                     STR_4:
  1234   000823  52                 	db	82	;'R'
  1235   000824  65                 	db	101	;'e'
  1236   000825  69                 	db	105	;'i'
  1237   000826  6E                 	db	110	;'n'
  1238   000827  74                 	db	116	;'t'
  1239   000828  65                 	db	101	;'e'
  1240   000829  6E                 	db	110	;'n'
  1241   00082A  74                 	db	116	;'t'
  1242   00082B  61                 	db	97	;'a'
  1243   00082C  6E                 	db	110	;'n'
  1244   00082D  64                 	db	100	;'d'
  1245   00082E  6F                 	db	111	;'o'
  1246   00082F  2E                 	db	46
  1247   000830  2E                 	db	46
  1248   000831  2E                 	db	46
  1249   000832  00                 	db	0
  1250   000833                     STR_11:
  1251   000833  47                 	db	71	;'G'
  1252   000834  50                 	db	80	;'P'
  1253   000835  53                 	db	83	;'S'
  1254   000836  3A                 	db	58	;':'
  1255   000837  20                 	db	32
  1256   000838  53                 	db	83	;'S'
  1257   000839  69                 	db	105	;'i'
  1258   00083A  6E                 	db	110	;'n'
  1259   00083B  20                 	db	32
  1260   00083C  73                 	db	115	;'s'
  1261   00083D  65                 	db	101	;'e'
  1262   00083E  6E                 	db	110	;'n'
  1263   00083F  61                 	db	97	;'a'
  1264   000840  6C                 	db	108	;'l'
  1265   000841  00                 	db	0
  1266   000842                     STR_14:
  1267   000842  25                 	db	37
  1268   000843  30                 	db	48	;'0'
  1269   000844  32                 	db	50	;'2'
  1270   000845  75                 	db	117	;'u'
  1271   000846  3A                 	db	58	;':'
  1272   000847  25                 	db	37
  1273   000848  30                 	db	48	;'0'
  1274   000849  32                 	db	50	;'2'
  1275   00084A  75                 	db	117	;'u'
  1276   00084B  3A                 	db	58	;':'
  1277   00084C  25                 	db	37
  1278   00084D  30                 	db	48	;'0'
  1279   00084E  32                 	db	50	;'2'
  1280   00084F  75                 	db	117	;'u'
  1281   000850  00                 	db	0
  1282   000851                     STR_20:
  1283   000851  52                 	db	82	;'R'
  1284   000852  54                 	db	84	;'T'
  1285   000853  43                 	db	67	;'C'
  1286   000854  20                 	db	32
  1287   000855  64                 	db	100	;'d'
  1288   000856  65                 	db	101	;'e'
  1289   000857  74                 	db	116	;'t'
  1290   000858  65                 	db	101	;'e'
  1291   000859  6E                 	db	110	;'n'
  1292   00085A  69                 	db	105	;'i'
  1293   00085B  64                 	db	100	;'d'
  1294   00085C  6F                 	db	111	;'o'
  1295   00085D  00                 	db	0
  1296   00085E                     STR_16:
  1297   00085E  49                 	db	73	;'I'
  1298   00085F  6E                 	db	110	;'n'
  1299   000860  69                 	db	105	;'i'
  1300   000861  63                 	db	99	;'c'
  1301   000862  69                 	db	105	;'i'
  1302   000863  61                 	db	97	;'a'
  1303   000864  6E                 	db	110	;'n'
  1304   000865  64                 	db	100	;'d'
  1305   000866  6F                 	db	111	;'o'
  1306   000867  2E                 	db	46
  1307   000868  2E                 	db	46
  1308   000869  2E                 	db	46
  1309   00086A  00                 	db	0
  1310   00086B                     STR_2:
  1311   00086B  48                 	db	72	;'H'
  1312   00086C  3A                 	db	58	;':'
  1313   00086D  25                 	db	37
  1314   00086E  75                 	db	117	;'u'
  1315   00086F  25                 	db	37
  1316   000870  25                 	db	37
  1317   000871  20                 	db	32
  1318   000872  54                 	db	84	;'T'
  1319   000873  3A                 	db	58	;':'
  1320   000874  25                 	db	37
  1321   000875  75                 	db	117	;'u'
  1322   000876  43                 	db	67	;'C'
  1323   000877  00                 	db	0
  1324   000878                     STR_12:
  1325   000878  52                 	db	82	;'R'
  1326   000879  65                 	db	101	;'e'
  1327   00087A  69                 	db	105	;'i'
  1328   00087B  6E                 	db	110	;'n'
  1329   00087C  74                 	db	116	;'t'
  1330   00087D  65                 	db	101	;'e'
  1331   00087E  6E                 	db	110	;'n'
  1332   00087F  74                 	db	116	;'t'
  1333   000880  61                 	db	97	;'a'
  1334   000881  6E                 	db	110	;'n'
  1335   000882  64                 	db	100	;'d'
  1336   000883  6F                 	db	111	;'o'
  1337   000884  00                 	db	0
  1338   000885                     STR_3:
  1339   000885  44                 	db	68	;'D'
  1340   000886  48                 	db	72	;'H'
  1341   000887  54                 	db	84	;'T'
  1342   000888  31                 	db	49	;'1'
  1343   000889  31                 	db	49	;'1'
  1344   00088A  3A                 	db	58	;':'
  1345   00088B  20                 	db	32
  1346   00088C  45                 	db	69	;'E'
  1347   00088D  72                 	db	114	;'r'
  1348   00088E  72                 	db	114	;'r'
  1349   00088F  6F                 	db	111	;'o'
  1350   000890  72                 	db	114	;'r'
  1351   000891  00                 	db	0
  1352   000892                     STR_15:
  1353   000892  45                 	db	69	;'E'
  1354   000893  73                 	db	115	;'s'
  1355   000894  74                 	db	116	;'t'
  1356   000895  61                 	db	97	;'a'
  1357   000896  63                 	db	99	;'c'
  1358   000897  69                 	db	105	;'i'
  1359   000898  6F                 	db	111	;'o'
  1360   000899  6E                 	db	110	;'n'
  1361   00089A  20                 	db	32
  1362   00089B  4D                 	db	77	;'M'
  1363   00089C  65                 	db	101	;'e'
  1364   00089D  74                 	db	116	;'t'
  1365   00089E  00                 	db	0
  1366   00089F                     STR_17:
  1367   00089F  24                 	db	36
  1368   0008A0  47                 	db	71	;'G'
  1369   0008A1  50                 	db	80	;'P'
  1370   0008A2  52                 	db	82	;'R'
  1371   0008A3  4D                 	db	77	;'M'
  1372   0008A4  43                 	db	67	;'C'
  1373   0008A5  00                 	db	0
  1374   0008A6                     STR_10:
  1375   0008A6  4C                 	db	76	;'L'
  1376   0008A7  6F                 	db	111	;'o'
  1377   0008A8  6E                 	db	110	;'n'
  1378   0008A9  3A                 	db	58	;':'
  1379   0008AA  00                 	db	0
  1380   0008AB                     STR_9:
  1381   0008AB  4C                 	db	76	;'L'
  1382   0008AC  61                 	db	97	;'a'
  1383   0008AD  74                 	db	116	;'t'
  1384   0008AE  3A                 	db	58	;':'
  1385   0008AF  00                 	db	0
  1386   0008B0                     STR_6:
  1387   0008B0  27                 	db	39
  1388   0008B1  20                 	db	32
  1389   0008B2  00                 	db	0
  1390   0008B3                     STR_18:
  1391   0008B3  2C                 	db	44
  1392   0008B4  00                 	db	0
  1393   0008B5                     STR_5:
  1394   0008B5  DF                 	db	-33
  1395   0008B6  00                 	db	0
  1396   0008B3                     STR_19          equ	STR_18
  1397   0008B0                     STR_8           equ	STR_6
  1398   0008B5                     STR_7           equ	STR_5
  1399   0008B7  00                 	db	0	; dummy byte at the end
  1400   000800                     __smallconst    set	__psmallconst
  1401   000800                     __mediumconst   set	__psmallconst
  1402   000002                     __activetblptr  equ	2
  1403                           
  1404                           ; #config settings
  1405                           
  1406                           	psect	cinit
  1407   002174                     __pcinit:
  1408                           	callstack 0
  1409   002174                     start_initialization:
  1410                           	callstack 0
  1411   002174                     __initialization:
  1412                           	callstack 0
  1413                           
  1414                           ; Clear objects allocated to BANK1 (53 bytes)
  1415   002174  EE01  F0A1         	lfsr	0,__pbssBANK1
  1416   002178  0E35               	movlw	53
  1417   00217A                     clear_0:
  1418   00217A  6AEE               	clrf	postinc0,c
  1419   00217C  06E8               	decf	wreg,f,c
  1420   00217E  E1FD               	bnz	clear_0
  1421                           
  1422                           ; Clear objects allocated to BANK0 (45 bytes)
  1423   002180  EE00  F0C8         	lfsr	0,__pbssBANK0
  1424   002184  0E2D               	movlw	45
  1425   002186                     clear_1:
  1426   002186  6AEE               	clrf	postinc0,c
  1427   002188  06E8               	decf	wreg,f,c
  1428   00218A  E1FD               	bnz	clear_1
  1429                           
  1430                           ; Clear objects allocated to COMRAM (17 bytes)
  1431   00218C  EE00  F04B         	lfsr	0,__pbssCOMRAM
  1432   002190  0E11               	movlw	17
  1433   002192                     clear_2:
  1434   002192  6AEE               	clrf	postinc0,c
  1435   002194  06E8               	decf	wreg,f,c
  1436   002196  E1FD               	bnz	clear_2
  1437   002198                     end_of_initialization:
  1438                           	callstack 0
  1439   002198                     __end_of__initialization:
  1440                           	callstack 0
  1441   002198  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1442   00219A  6EF8               	movwf	tblptru,c
  1443   00219C  0100               	movlb	0
  1444   00219E  EF93  F008         	goto	_main	;jump to C main() function
  1445                           
  1446                           	psect	bssCOMRAM
  1447   00004B                     __pbssCOMRAM:
  1448                           	callstack 0
  1449   00004B                     	ds	10
  1450   000055                     _width:
  1451                           	callstack 0
  1452   000055                     	ds	2
  1453   000057                     _prec:
  1454                           	callstack 0
  1455   000057                     	ds	2
  1456   000059                     strtok@p:
  1457                           	callstack 0
  1458   000059                     	ds	1
  1459   00005A                     _flags:
  1460                           	callstack 0
  1461   00005A                     	ds	1
  1462   00005B                     _current_display:
  1463                           	callstack 0
  1464   00005B                     	ds	1
  1465                           
  1466                           	psect	bssBANK0
  1467   0000C8                     __pbssBANK0:
  1468                           	callstack 0
  1469   0000C8                     	ds	17
  1470   0000D9                     	ds	11
  1471   0000E4                     _lcd_buffer:
  1472                           	callstack 0
  1473   0000E4                     	ds	17
  1474                           
  1475                           	psect	bssBANK1
  1476   0001A1                     __pbssBANK1:
  1477                           	callstack 0
  1478   0001A1                     	ds	17
  1479   0001B2                     	ds	2
  1480   0001B4                     	ds	2
  1481   0001B6                     _dbuf:
  1482                           	callstack 0
  1483   0001B6                     	ds	32
  1484                           
  1485                           	psect	cstackBANK1
  1486   000100                     __pcstackBANK1:
  1487                           	callstack 0
  1488   000100                     Display_GPS@buffer:
  1489                           	callstack 0
  1490                           
  1491                           ; 100 bytes @ 0x0
  1492   000100                     	ds	100
  1493   000164                     Display_GPS@lon:
  1494                           	callstack 0
  1495                           
  1496                           ; 11 bytes @ 0x64
  1497   000164                     	ds	11
  1498   00016F                     Display_GPS@lat:
  1499                           	callstack 0
  1500                           
  1501                           ; 10 bytes @ 0x6F
  1502   00016F                     	ds	10
  1503   000179                     Display_GPS@formatted_lat:
  1504                           	callstack 0
  1505                           
  1506                           ; 17 bytes @ 0x79
  1507   000179                     	ds	17
  1508   00018A                     Display_GPS@formatted_lon:
  1509                           	callstack 0
  1510                           
  1511                           ; 17 bytes @ 0x8A
  1512   00018A                     	ds	17
  1513   00019B                     Display_GPS@ns:
  1514                           	callstack 0
  1515                           
  1516                           ; 2 bytes @ 0x9B
  1517   00019B                     	ds	2
  1518   00019D                     Display_GPS@ew:
  1519                           	callstack 0
  1520                           
  1521                           ; 2 bytes @ 0x9D
  1522   00019D                     	ds	2
  1523   00019F                     Display_GPS@i:
  1524                           	callstack 0
  1525                           
  1526                           ; 1 bytes @ 0x9F
  1527   00019F                     	ds	1
  1528   0001A0                     Display_GPS@valid:
  1529                           	callstack 0
  1530                           
  1531                           ; 1 bytes @ 0xA0
  1532   0001A0                     	ds	1
  1533                           
  1534                           	psect	cstackBANK0
  1535   000060                     __pcstackBANK0:
  1536                           	callstack 0
  1537   000060                     GPS_ParseGPRMC@buf:
  1538                           	callstack 0
  1539                           
  1540                           ; 100 bytes @ 0x0
  1541   000060                     	ds	100
  1542   0000C4                     _GPS_ParseGPRMC$456:
  1543                           	callstack 0
  1544                           
  1545                           ; 1 bytes @ 0x64
  1546   0000C4                     	ds	1
  1547   0000C5                     GPS_ParseGPRMC@field:
  1548                           	callstack 0
  1549                           
  1550                           ; 1 bytes @ 0x65
  1551   0000C5                     	ds	1
  1552   0000C6                     GPS_ParseGPRMC@data_valid:
  1553                           	callstack 0
  1554                           
  1555                           ; 1 bytes @ 0x66
  1556   0000C6                     	ds	1
  1557   0000C7                     GPS_ParseGPRMC@token:
  1558                           	callstack 0
  1559                           
  1560                           ; 1 bytes @ 0x67
  1561   0000C7                     	ds	1
  1562                           
  1563                           	psect	cstackCOMRAM
  1564   000001                     __pcstackCOMRAM:
  1565                           	callstack 0
  1566   000001                     ?_strlen:
  1567                           	callstack 0
  1568   000001                     ?_strncmp:
  1569                           	callstack 0
  1570   000001                     ?_strchr:
  1571                           	callstack 0
  1572   000001                     ?___lwdiv:
  1573                           	callstack 0
  1574   000001                     ?___lwmod:
  1575                           	callstack 0
  1576   000001                     ?_read_prec_or_width:
  1577                           	callstack 0
  1578   000001                     ?___lldiv:
  1579                           	callstack 0
  1580   000001                     DHT11_ReadByte@data:
  1581                           	callstack 0
  1582   000001                     GPS_Init@dummy:
  1583                           	callstack 0
  1584   000001                     read_prec_or_width@fmt:
  1585                           	callstack 0
  1586   000001                     strlen@s:
  1587                           	callstack 0
  1588   000001                     GPS_ReadSentence@buffer:
  1589                           	callstack 0
  1590   000001                     ___lwdiv@dividend:
  1591                           	callstack 0
  1592   000001                     ___lwmod@dividend:
  1593                           	callstack 0
  1594   000001                     fputc@c:
  1595                           	callstack 0
  1596   000001                     strcat@dest:
  1597                           	callstack 0
  1598   000001                     strncat@dest:
  1599                           	callstack 0
  1600   000001                     strncpy@d:
  1601                           	callstack 0
  1602   000001                     strchr@s:
  1603                           	callstack 0
  1604   000001                     strncmp@l:
  1605                           	callstack 0
  1606   000001                     ___lldiv@dividend:
  1607                           	callstack 0
  1608   000001                     ??_LCD_Command:
  1609   000001                     ??_LCD_Char:
  1610   000001                     ??_BCD2DEC:
  1611   000001                     ??_I2C_Master_Wait:
  1612                           
  1613                           ; 1 bytes @ 0x0
  1614   000001                     	ds	1
  1615   000002                     ?_I2C_Master_Read:
  1616                           	callstack 0
  1617   000002                     DHT11_ReadByte@i:
  1618                           	callstack 0
  1619   000002                     LCD_Command@cmd:
  1620                           	callstack 0
  1621   000002                     LCD_Char@dat:
  1622                           	callstack 0
  1623   000002                     BCD2DEC@val:
  1624                           	callstack 0
  1625   000002                     read_prec_or_width@ap:
  1626                           	callstack 0
  1627   000002                     I2C_Master_Write@d:
  1628                           	callstack 0
  1629   000002                     I2C_Master_Read@a:
  1630                           	callstack 0
  1631   000002                     
  1632                           ; 1 bytes @ 0x1
  1633   000002                     	ds	1
  1634   000003                     DHT11_Read@humidity:
  1635                           	callstack 0
  1636   000003                     fputc@fp:
  1637                           	callstack 0
  1638   000003                     strlen@a:
  1639                           	callstack 0
  1640   000003                     strncmp@r:
  1641                           	callstack 0
  1642   000003                     GPS_ReadSentence@max_len:
  1643                           	callstack 0
  1644   000003                     LCD_String@msg:
  1645                           	callstack 0
  1646   000003                     ___lwdiv@divisor:
  1647                           	callstack 0
  1648   000003                     ___lwmod@divisor:
  1649                           	callstack 0
  1650   000003                     strcat@src:
  1651                           	callstack 0
  1652   000003                     strncat@src:
  1653                           	callstack 0
  1654   000003                     strncpy@s:
  1655                           	callstack 0
  1656   000003                     strchr@c:
  1657                           	callstack 0
  1658   000003                     ??_LCD_Init:
  1659   000003                     ??_read_prec_or_width:
  1660                           
  1661                           ; 1 bytes @ 0x2
  1662   000003                     	ds	1
  1663   000004                     DHT11_Read@temperature:
  1664                           	callstack 0
  1665   000004                     I2C_Master_Read@temp:
  1666                           	callstack 0
  1667   000004                     strncmp@n:
  1668                           	callstack 0
  1669   000004                     ??_fputc:
  1670                           
  1671                           ; 1 bytes @ 0x3
  1672   000004                     	ds	1
  1673   000005                     LCD_String_xy@pos:
  1674                           	callstack 0
  1675   000005                     ___lwmod@counter:
  1676                           	callstack 0
  1677   000005                     read_prec_or_width@c:
  1678                           	callstack 0
  1679   000005                     GPS_ReadSentence@timeout_ms:
  1680                           	callstack 0
  1681   000005                     ___lwdiv@quotient:
  1682                           	callstack 0
  1683   000005                     strcat@i:
  1684                           	callstack 0
  1685   000005                     strncat@n:
  1686                           	callstack 0
  1687   000005                     strncpy@n:
  1688                           	callstack 0
  1689   000005                     ___lldiv@divisor:
  1690                           	callstack 0
  1691   000005                     ??_DHT11_Read:
  1692   000005                     ??_strchr:
  1693   000005                     
  1694                           ; 1 bytes @ 0x4
  1695   000005                     	ds	1
  1696   000006                     RTC_GetDateTime@hour:
  1697                           	callstack 0
  1698   000006                     LCD_String_xy@msg:
  1699                           	callstack 0
  1700   000006                     read_prec_or_width@n:
  1701                           	callstack 0
  1702   000006                     ??_strncmp:
  1703                           
  1704                           ; 1 bytes @ 0x5
  1705   000006                     	ds	1
  1706   000007                     ?_strstr:
  1707                           	callstack 0
  1708   000007                     ?_strspn:
  1709                           	callstack 0
  1710   000007                     ?_strcspn:
  1711                           	callstack 0
  1712   000007                     RTC_GetDateTime@min:
  1713                           	callstack 0
  1714   000007                     ___lwdiv@counter:
  1715                           	callstack 0
  1716   000007                     strcspn@s:
  1717                           	callstack 0
  1718   000007                     strspn@s:
  1719                           	callstack 0
  1720   000007                     strncat@cp:
  1721                           	callstack 0
  1722   000007                     strncpy@cp:
  1723                           	callstack 0
  1724   000007                     strstr@h:
  1725                           	callstack 0
  1726   000007                     ??_GPS_ReadSentence:
  1727   000007                     
  1728                           ; 1 bytes @ 0x6
  1729   000007                     	ds	1
  1730   000008                     LCD_String_xy@row:
  1731                           	callstack 0
  1732   000008                     RTC_GetDateTime@sec:
  1733                           	callstack 0
  1734   000008                     strcspn@c:
  1735                           	callstack 0
  1736   000008                     strspn@c:
  1737                           	callstack 0
  1738   000008                     
  1739                           ; 1 bytes @ 0x7
  1740   000008                     	ds	1
  1741   000009                     RTC_GetDateTime@day:
  1742                           	callstack 0
  1743   000009                     strstr@n:
  1744                           	callstack 0
  1745   000009                     GPS_ReadSentence@t:
  1746                           	callstack 0
  1747   000009                     _LCD_String_xy$482:
  1748                           	callstack 0
  1749   000009                     fputs@s:
  1750                           	callstack 0
  1751   000009                     ___lldiv@quotient:
  1752                           	callstack 0
  1753   000009                     DHT11_Read@data:
  1754                           	callstack 0
  1755   000009                     ??_strspn:
  1756   000009                     ??_strcspn:
  1757   000009                     
  1758                           ; 1 bytes @ 0x8
  1759   000009                     	ds	1
  1760   00000A                     RTC_GetDateTime@month:
  1761                           	callstack 0
  1762   00000A                     strstr@nl:
  1763                           	callstack 0
  1764   00000A                     strcspn@i:
  1765                           	callstack 0
  1766   00000A                     strspn@i:
  1767                           	callstack 0
  1768   00000A                     
  1769                           ; 1 bytes @ 0x9
  1770   00000A                     	ds	1
  1771   00000B                     GPS_ReadSentence@dummy:
  1772                           	callstack 0
  1773   00000B                     LCD_String_xy@location:
  1774                           	callstack 0
  1775   00000B                     RTC_GetDateTime@year:
  1776                           	callstack 0
  1777   00000B                     fputs@fp:
  1778                           	callstack 0
  1779                           
  1780                           ; 1 bytes @ 0xA
  1781   00000B                     	ds	1
  1782   00000C                     Clear_Line@line:
  1783                           	callstack 0
  1784   00000C                     GPS_ReadSentence@started:
  1785                           	callstack 0
  1786   00000C                     fputs@c:
  1787                           	callstack 0
  1788   00000C                     strtok@s:
  1789                           	callstack 0
  1790   00000C                     ??_RTC_Init:
  1791   00000C                     
  1792                           ; 1 bytes @ 0xB
  1793   00000C                     	ds	1
  1794   00000D                     ___lldiv@counter:
  1795                           	callstack 0
  1796   00000D                     strtok@sep:
  1797                           	callstack 0
  1798   00000D                     GPS_ReadSentence@i:
  1799                           	callstack 0
  1800   00000D                     fputs@i:
  1801                           	callstack 0
  1802                           
  1803                           ; 2 bytes @ 0xC
  1804   00000D                     	ds	1
  1805   00000E                     DHT11_Read@i:
  1806                           	callstack 0
  1807   00000E                     RTC_Init@sec:
  1808                           	callstack 0
  1809   00000E                     GPS_ParseGPRMC@msg:
  1810                           	callstack 0
  1811   00000E                     I2C_Master_Init@c:
  1812                           	callstack 0
  1813   00000E                     
  1814                           ; 1 bytes @ 0xD
  1815   00000E                     	ds	1
  1816   00000F                     GPS_ReadSentence@c:
  1817                           	callstack 0
  1818   00000F                     pad@fp:
  1819                           	callstack 0
  1820                           
  1821                           ; 1 bytes @ 0xE
  1822   00000F                     	ds	1
  1823   000010                     GPS_ParseGPRMC@lat:
  1824                           	callstack 0
  1825   000010                     pad@buf:
  1826                           	callstack 0
  1827                           
  1828                           ; 2 bytes @ 0xF
  1829   000010                     	ds	2
  1830   000012                     GPS_ParseGPRMC@ns:
  1831                           	callstack 0
  1832   000012                     pad@p:
  1833                           	callstack 0
  1834   000012                     ??_I2C_Master_Init:
  1835                           
  1836                           ; 1 bytes @ 0x11
  1837   000012                     	ds	2
  1838   000014                     GPS_ParseGPRMC@lon:
  1839                           	callstack 0
  1840   000014                     ??_pad:
  1841                           
  1842                           ; 1 bytes @ 0x13
  1843   000014                     	ds	1
  1844   000015                     pad@i:
  1845                           	callstack 0
  1846                           
  1847                           ; 2 bytes @ 0x14
  1848   000015                     	ds	1
  1849   000016                     GPS_ParseGPRMC@ew:
  1850                           	callstack 0
  1851                           
  1852                           ; 2 bytes @ 0x15
  1853   000016                     	ds	1
  1854   000017                     utoa@fp:
  1855                           	callstack 0
  1856                           
  1857                           ; 1 bytes @ 0x16
  1858   000017                     	ds	1
  1859   000018                     utoa@d:
  1860                           	callstack 0
  1861   000018                     
  1862                           ; 1 bytes @ 0x17
  1863   000018                     	ds	1
  1864   000019                     ??_Display_GPS:
  1865                           
  1866                           ; 1 bytes @ 0x18
  1867   000019                     	ds	1
  1868   00001A                     utoa@p:
  1869                           	callstack 0
  1870   00001A                     
  1871                           ; 1 bytes @ 0x19
  1872   00001A                     	ds	1
  1873   00001B                     utoa@w:
  1874                           	callstack 0
  1875                           
  1876                           ; 2 bytes @ 0x1A
  1877   00001B                     	ds	2
  1878   00001D                     utoa@i:
  1879                           	callstack 0
  1880                           
  1881                           ; 2 bytes @ 0x1C
  1882   00001D                     	ds	2
  1883   00001F                     vfpfcnvrt@fp:
  1884                           	callstack 0
  1885                           
  1886                           ; 1 bytes @ 0x1E
  1887   00001F                     	ds	1
  1888   000020                     vfpfcnvrt@fmt:
  1889                           	callstack 0
  1890                           
  1891                           ; 1 bytes @ 0x1F
  1892   000020                     	ds	1
  1893   000021                     vfpfcnvrt@ap:
  1894                           	callstack 0
  1895                           
  1896                           ; 1 bytes @ 0x20
  1897   000021                     	ds	1
  1898   000022                     vfpfcnvrt@convarg:
  1899                           	callstack 0
  1900   000022                     
  1901                           ; 1 bytes @ 0x21
  1902   000022                     	ds	4
  1903   000026                     vfpfcnvrt@done:
  1904                           	callstack 0
  1905                           
  1906                           ; 1 bytes @ 0x25
  1907   000026                     	ds	1
  1908   000027                     vfpfcnvrt@cp:
  1909                           	callstack 0
  1910                           
  1911                           ; 1 bytes @ 0x26
  1912   000027                     	ds	1
  1913   000028                     ?_vfprintf:
  1914                           	callstack 0
  1915   000028                     vfprintf@fp:
  1916                           	callstack 0
  1917                           
  1918                           ; 1 bytes @ 0x27
  1919   000028                     	ds	1
  1920   000029                     vfprintf@fmt:
  1921                           	callstack 0
  1922                           
  1923                           ; 1 bytes @ 0x28
  1924   000029                     	ds	1
  1925   00002A                     vfprintf@ap:
  1926                           	callstack 0
  1927                           
  1928                           ; 1 bytes @ 0x29
  1929   00002A                     	ds	1
  1930   00002B                     vfprintf@cfmt:
  1931                           	callstack 0
  1932   00002B                     
  1933                           ; 1 bytes @ 0x2A
  1934   00002B                     	ds	1
  1935   00002C                     ?_sprintf:
  1936                           	callstack 0
  1937   00002C                     sprintf@s:
  1938                           	callstack 0
  1939                           
  1940                           ; 1 bytes @ 0x2B
  1941   00002C                     	ds	1
  1942   00002D                     sprintf@fmt:
  1943                           	callstack 0
  1944                           
  1945                           ; 1 bytes @ 0x2C
  1946   00002D                     	ds	7
  1947   000034                     sprintf@ap:
  1948                           	callstack 0
  1949   000034                     
  1950                           ; 1 bytes @ 0x33
  1951   000034                     	ds	1
  1952   000035                     sprintf@f:
  1953                           	callstack 0
  1954                           
  1955                           ; 11 bytes @ 0x34
  1956   000035                     	ds	11
  1957   000040                     Display_DHT11@hum:
  1958                           	callstack 0
  1959   000040                     ??_Display_RTC:
  1960                           
  1961                           ; 1 bytes @ 0x3F
  1962   000040                     	ds	1
  1963   000041                     Display_DHT11@temp:
  1964                           	callstack 0
  1965                           
  1966                           ; 1 bytes @ 0x40
  1967   000041                     	ds	1
  1968   000042                     Display_RTC@h:
  1969                           	callstack 0
  1970                           
  1971                           ; 1 bytes @ 0x41
  1972   000042                     	ds	1
  1973   000043                     Display_RTC@m:
  1974                           	callstack 0
  1975                           
  1976                           ; 1 bytes @ 0x42
  1977   000043                     	ds	1
  1978   000044                     Display_RTC@s:
  1979                           	callstack 0
  1980                           
  1981                           ; 1 bytes @ 0x43
  1982   000044                     	ds	1
  1983   000045                     Display_RTC@day:
  1984                           	callstack 0
  1985                           
  1986                           ; 1 bytes @ 0x44
  1987   000045                     	ds	1
  1988   000046                     Display_RTC@mon:
  1989                           	callstack 0
  1990                           
  1991                           ; 1 bytes @ 0x45
  1992   000046                     	ds	1
  1993   000047                     Display_RTC@year:
  1994                           	callstack 0
  1995                           
  1996                           ; 1 bytes @ 0x46
  1997   000047                     	ds	1
  1998   000048                     Display_RTC@cnt:
  1999                           	callstack 0
  2000                           
  2001                           ; 1 bytes @ 0x47
  2002   000048                     	ds	1
  2003   000049                     ??_main:
  2004                           
  2005                           ; 1 bytes @ 0x48
  2006   000049                     	ds	2
  2007                           
  2008 ;;
  2009 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2010 ;;
  2011 ;; *************** function _main *****************
  2012 ;; Defined at:
  2013 ;;		line 99 in file "main.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;		None
  2016 ;; Auto vars:     Size  Location     Type
  2017 ;;		None
  2018 ;; Return value:  Size  Location     Type
  2019 ;;                  1    wreg      void 
  2020 ;; Registers used:
  2021 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2022 ;; Tracked objects:
  2023 ;;		On entry : 0/0
  2024 ;;		On exit  : 0/0
  2025 ;;		Unchanged: 0/0
  2026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2027 ;;      Params:         0       0       0       0       0       0       0       0       0
  2028 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2029 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2030 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2031 ;;Total ram usage:        2 bytes
  2032 ;; Hardware stack levels required when called: 9
  2033 ;; This function calls:
  2034 ;;		_Display_DHT11
  2035 ;;		_Display_GPS
  2036 ;;		_Display_RTC
  2037 ;;		_GPS_Init
  2038 ;;		_I2C_Master_Init
  2039 ;;		_LCD_Clear
  2040 ;;		_LCD_Init
  2041 ;;		_LCD_String_xy
  2042 ;;		_RTC_Init
  2043 ;;		___lwmod
  2044 ;; This function is called by:
  2045 ;;		Startup code after reset
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text0
  2050   001126                     __ptext0:
  2051                           	callstack 0
  2052   001126                     _main:
  2053                           	callstack 22
  2054   001126                     
  2055                           ;main.c: 100:     OSCCON = 0x72;
  2056   001126  0E72               	movlw	114
  2057   001128  6ED3               	movwf	211,c	;volatile
  2058                           
  2059                           ;main.c: 101:     ADCON1 = 0x0F;
  2060   00112A  0E0F               	movlw	15
  2061   00112C  6EC1               	movwf	193,c	;volatile
  2062                           
  2063                           ;main.c: 102:     CMCON = 0x07;
  2064   00112E  0E07               	movlw	7
  2065   001130  6EB4               	movwf	180,c	;volatile
  2066   001132                     
  2067                           ;main.c: 103:     LCD_Init();
  2068   001132  ECA1  F010         	call	_LCD_Init	;wreg free
  2069   001136                     
  2070                           ;main.c: 104:     I2C_Master_Init(100000);
  2071   001136  0EA0               	movlw	160
  2072   001138  6E0E               	movwf	I2C_Master_Init@c^0,c
  2073   00113A  0E86               	movlw	134
  2074   00113C  6E0F               	movwf	(I2C_Master_Init@c+1)^0,c
  2075   00113E  0E01               	movlw	1
  2076   001140  6E10               	movwf	(I2C_Master_Init@c+2)^0,c
  2077   001142  0E00               	movlw	0
  2078   001144  6E11               	movwf	(I2C_Master_Init@c+3)^0,c
  2079   001146  EC6A  F00F         	call	_I2C_Master_Init	;wreg free
  2080   00114A                     
  2081                           ;main.c: 105:     RTC_Init();
  2082   00114A  ECB9  F00A         	call	_RTC_Init	;wreg free
  2083   00114E                     
  2084                           ;main.c: 106:     GPS_Init();
  2085   00114E  ECD1  F010         	call	_GPS_Init	;wreg free
  2086   001152                     
  2087                           ;main.c: 108:     LCD_Clear();
  2088   001152  EC19  F011         	call	_LCD_Clear	;wreg free
  2089   001156                     
  2090                           ;main.c: 109:     LCD_String_xy(0,0,"Estacion Met");
  2091   001156  0E00               	movlw	0
  2092   001158  6E05               	movwf	LCD_String_xy@pos^0,c
  2093   00115A  0E92               	movlw	low STR_15
  2094   00115C  6E06               	movwf	LCD_String_xy@msg^0,c
  2095   00115E  5006               	movf	LCD_String_xy@msg^0,w,c
  2096   001160  A4D8               	btfss	status,2,c
  2097   001162  0E08               	movlw	high __smallconst
  2098   001164  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2099   001166  0E00               	movlw	0
  2100   001168  EC3C  F00F         	call	_LCD_String_xy
  2101   00116C                     
  2102                           ;main.c: 110:     LCD_String_xy(1,0,"Iniciando...");
  2103   00116C  0E00               	movlw	0
  2104   00116E  6E05               	movwf	LCD_String_xy@pos^0,c
  2105   001170  0E5E               	movlw	low STR_16
  2106   001172  6E06               	movwf	LCD_String_xy@msg^0,c
  2107   001174  5006               	movf	LCD_String_xy@msg^0,w,c
  2108   001176  A4D8               	btfss	status,2,c
  2109   001178  0E08               	movlw	high __smallconst
  2110   00117A  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2111   00117C  0E01               	movlw	1
  2112   00117E  EC3C  F00F         	call	_LCD_String_xy
  2113   001182                     
  2114                           ;main.c: 111:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  2115   001182  0E15               	movlw	21
  2116   001184  6E4A               	movwf	(??_main+1)^0,c
  2117   001186  0E4B               	movlw	75
  2118   001188  6E49               	movwf	??_main^0,c
  2119   00118A  0EBE               	movlw	190
  2120   00118C                     u2447:
  2121   00118C  2EE8               	decfsz	wreg,f,c
  2122   00118E  D7FE               	bra	u2447
  2123   001190  2E49               	decfsz	??_main^0,f,c
  2124   001192  D7FC               	bra	u2447
  2125   001194  2E4A               	decfsz	(??_main+1)^0,f,c
  2126   001196  D7FA               	bra	u2447
  2127   001198  D000               	nop2	
  2128   00119A  EFDB  F008         	goto	l2937
  2129   00119E                     l2929:
  2130   00119E  ECC0  F00D         	call	_Display_DHT11	;wreg free
  2131   0011A2  EFF4  F008         	goto	l2939
  2132   0011A6                     l2931:
  2133   0011A6  EC5C  F004         	call	_Display_GPS	;wreg free
  2134   0011AA  EFF4  F008         	goto	l2939
  2135   0011AE                     l2933:
  2136   0011AE  EC12  F00B         	call	_Display_RTC	;wreg free
  2137   0011B2  EFF4  F008         	goto	l2939
  2138   0011B6                     l2937:
  2139   0011B6  505B               	movf	_current_display^0,w,c
  2140   0011B8  6E49               	movwf	??_main^0,c
  2141   0011BA  6A4A               	clrf	(??_main+1)^0,c
  2142                           
  2143                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2144                           ; Switch size 1, requested type "simple"
  2145                           ; Number of cases is 1, Range of values is 0 to 0
  2146                           ; switch strategies available:
  2147                           ; Name         Instructions Cycles
  2148                           ; simple_byte            4     3 (average)
  2149                           ;	Chosen strategy is simple_byte
  2150   0011BC  504A               	movf	(??_main+1)^0,w,c
  2151   0011BE  0A00               	xorlw	0	; case 0
  2152   0011C0  B4D8               	btfsc	status,2,c
  2153   0011C2  EFE5  F008         	goto	l2991
  2154   0011C6  EFF4  F008         	goto	l2939
  2155   0011CA                     l2991:
  2156                           
  2157                           ; Switch size 1, requested type "simple"
  2158                           ; Number of cases is 3, Range of values is 0 to 2
  2159                           ; switch strategies available:
  2160                           ; Name         Instructions Cycles
  2161                           ; simple_byte           10     6 (average)
  2162                           ;	Chosen strategy is simple_byte
  2163   0011CA  5049               	movf	??_main^0,w,c
  2164   0011CC  0A00               	xorlw	0	; case 0
  2165   0011CE  B4D8               	btfsc	status,2,c
  2166   0011D0  EFCF  F008         	goto	l2929
  2167   0011D4  0A01               	xorlw	1	; case 1
  2168   0011D6  B4D8               	btfsc	status,2,c
  2169   0011D8  EFD3  F008         	goto	l2931
  2170   0011DC  0A03               	xorlw	3	; case 2
  2171   0011DE  B4D8               	btfsc	status,2,c
  2172   0011E0  EFD7  F008         	goto	l2933
  2173   0011E4  EFF4  F008         	goto	l2939
  2174   0011E8                     l2939:
  2175                           
  2176                           ;main.c: 119:         current_display = (current_display + 1) % NUM_DISPLAYS;
  2177   0011E8  0E01               	movlw	1
  2178   0011EA  245B               	addwf	_current_display^0,w,c
  2179   0011EC  6E01               	movwf	___lwmod@dividend^0,c
  2180   0011EE  6A02               	clrf	(___lwmod@dividend+1)^0,c
  2181   0011F0  0E00               	movlw	0
  2182   0011F2  2202               	addwfc	(___lwmod@dividend+1)^0,f,c
  2183   0011F4  0E00               	movlw	0
  2184   0011F6  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2185   0011F8  0E03               	movlw	3
  2186   0011FA  6E03               	movwf	___lwmod@divisor^0,c
  2187   0011FC  ECDB  F00E         	call	___lwmod	;wreg free
  2188   001200  5001               	movf	?___lwmod^0,w,c
  2189   001202  6E5B               	movwf	_current_display^0,c
  2190   001204                     
  2191                           ;main.c: 120:         _delay((unsigned long)((5000)*(8000000/4000.0)));
  2192   001204  0E33               	movlw	51
  2193   001206  6E4A               	movwf	(??_main+1)^0,c
  2194   001208  0EBB               	movlw	187
  2195   00120A  6E49               	movwf	??_main^0,c
  2196   00120C  0EE0               	movlw	224
  2197   00120E                     u2457:
  2198   00120E  2EE8               	decfsz	wreg,f,c
  2199   001210  D7FE               	bra	u2457
  2200   001212  2E49               	decfsz	??_main^0,f,c
  2201   001214  D7FC               	bra	u2457
  2202   001216  2E4A               	decfsz	(??_main+1)^0,f,c
  2203   001218  D7FA               	bra	u2457
  2204   00121A  EFDB  F008         	goto	l2937
  2205   00121E  EFFE  F03F         	goto	start
  2206   001222                     __end_of_main:
  2207                           	callstack 0
  2208                           
  2209 ;; *************** function _RTC_Init *****************
  2210 ;; Defined at:
  2211 ;;		line 14 in file "ds1307.c"
  2212 ;; Parameters:    Size  Location     Type
  2213 ;;		None
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  sec             1   13[COMRAM] unsigned char 
  2216 ;; Return value:  Size  Location     Type
  2217 ;;                  1    wreg      void 
  2218 ;; Registers used:
  2219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2220 ;; Tracked objects:
  2221 ;;		On entry : 0/0
  2222 ;;		On exit  : 0/0
  2223 ;;		Unchanged: 0/0
  2224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2225 ;;      Params:         0       0       0       0       0       0       0       0       0
  2226 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2227 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2228 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2229 ;;Total ram usage:        3 bytes
  2230 ;; Hardware stack levels used: 1
  2231 ;; Hardware stack levels required when called: 3
  2232 ;; This function calls:
  2233 ;;		_I2C_Master_Read
  2234 ;;		_I2C_Master_RepeatedStart
  2235 ;;		_I2C_Master_Start
  2236 ;;		_I2C_Master_Stop
  2237 ;;		_I2C_Master_Write
  2238 ;;		_LCD_Clear
  2239 ;;		_LCD_String_xy
  2240 ;; This function is called by:
  2241 ;;		_main
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           	psect	text1
  2246   001572                     __ptext1:
  2247                           	callstack 0
  2248   001572                     _RTC_Init:
  2249                           	callstack 27
  2250   001572                     
  2251                           ;ds1307.c: 15:     unsigned char sec;;ds1307.c: 17:     I2C_Master_Start();
  2252   001572  EC21  F011         	call	_I2C_Master_Start	;wreg free
  2253                           
  2254                           ;ds1307.c: 18:     I2C_Master_Write(0b11010000);
  2255   001576  0E00               	movlw	0
  2256   001578  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2257   00157A  0ED0               	movlw	208
  2258   00157C  6E02               	movwf	I2C_Master_Write@d^0,c
  2259   00157E  EC12  F011         	call	_I2C_Master_Write	;wreg free
  2260                           
  2261                           ;ds1307.c: 19:     I2C_Master_Write(0x00);
  2262   001582  0E00               	movlw	0
  2263   001584  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2264   001586  0E00               	movlw	0
  2265   001588  6E02               	movwf	I2C_Master_Write@d^0,c
  2266   00158A  EC12  F011         	call	_I2C_Master_Write	;wreg free
  2267                           
  2268                           ;ds1307.c: 20:     I2C_Master_RepeatedStart();
  2269   00158E  EC25  F011         	call	_I2C_Master_RepeatedStart	;wreg free
  2270                           
  2271                           ;ds1307.c: 21:     I2C_Master_Write(0b11010000 | 1);
  2272   001592  0E00               	movlw	0
  2273   001594  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2274   001596  0ED1               	movlw	209
  2275   001598  6E02               	movwf	I2C_Master_Write@d^0,c
  2276   00159A  EC12  F011         	call	_I2C_Master_Write	;wreg free
  2277                           
  2278                           ;ds1307.c: 22:     sec = I2C_Master_Read(0);
  2279   00159E  0E00               	movlw	0
  2280   0015A0  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  2281   0015A2  0E00               	movlw	0
  2282   0015A4  6E02               	movwf	I2C_Master_Read@a^0,c
  2283   0015A6  EC52  F010         	call	_I2C_Master_Read	;wreg free
  2284   0015AA  5002               	movf	?_I2C_Master_Read^0,w,c
  2285   0015AC  6E0E               	movwf	RTC_Init@sec^0,c
  2286                           
  2287                           ;ds1307.c: 23:     I2C_Master_Stop();
  2288   0015AE  EC1D  F011         	call	_I2C_Master_Stop	;wreg free
  2289   0015B2                     
  2290                           ;ds1307.c: 25:     if (sec & 0x80) {
  2291   0015B2  AE0E               	btfss	RTC_Init@sec^0,7,c
  2292   0015B4  EFDE  F00A         	goto	u2431
  2293   0015B8  EFE0  F00A         	goto	u2430
  2294   0015BC                     u2431:
  2295   0015BC  EF11  F00B         	goto	l260
  2296   0015C0                     u2430:
  2297   0015C0                     
  2298                           ;ds1307.c: 27:         LCD_Clear();
  2299   0015C0  EC19  F011         	call	_LCD_Clear	;wreg free
  2300   0015C4                     
  2301                           ;ds1307.c: 28:         LCD_String_xy(0, 0, "RTC detenido");
  2302   0015C4  0E00               	movlw	0
  2303   0015C6  6E05               	movwf	LCD_String_xy@pos^0,c
  2304   0015C8  0E51               	movlw	low STR_20
  2305   0015CA  6E06               	movwf	LCD_String_xy@msg^0,c
  2306   0015CC  5006               	movf	LCD_String_xy@msg^0,w,c
  2307   0015CE  A4D8               	btfss	status,2,c
  2308   0015D0  0E08               	movlw	high __smallconst
  2309   0015D2  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2310   0015D4  0E00               	movlw	0
  2311   0015D6  EC3C  F00F         	call	_LCD_String_xy
  2312   0015DA                     
  2313                           ;ds1307.c: 29:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  2314   0015DA  0E0B               	movlw	11
  2315   0015DC  6E0D               	movwf	(??_RTC_Init+1)^0,c
  2316   0015DE  0E26               	movlw	38
  2317   0015E0  6E0C               	movwf	??_RTC_Init^0,c
  2318   0015E2  0E5E               	movlw	94
  2319   0015E4                     u2467:
  2320   0015E4  2EE8               	decfsz	wreg,f,c
  2321   0015E6  D7FE               	bra	u2467
  2322   0015E8  2E0C               	decfsz	??_RTC_Init^0,f,c
  2323   0015EA  D7FC               	bra	u2467
  2324   0015EC  2E0D               	decfsz	(??_RTC_Init+1)^0,f,c
  2325   0015EE  D7FA               	bra	u2467
  2326   0015F0                     
  2327                           ;ds1307.c: 31:         I2C_Master_Start();
  2328   0015F0  EC21  F011         	call	_I2C_Master_Start	;wreg free
  2329   0015F4                     
  2330                           ;ds1307.c: 32:         I2C_Master_Write(0b11010000);
  2331   0015F4  0E00               	movlw	0
  2332   0015F6  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2333   0015F8  0ED0               	movlw	208
  2334   0015FA  6E02               	movwf	I2C_Master_Write@d^0,c
  2335   0015FC  EC12  F011         	call	_I2C_Master_Write	;wreg free
  2336   001600                     
  2337                           ;ds1307.c: 33:         I2C_Master_Write(0x00);
  2338   001600  0E00               	movlw	0
  2339   001602  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2340   001604  0E00               	movlw	0
  2341   001606  6E02               	movwf	I2C_Master_Write@d^0,c
  2342   001608  EC12  F011         	call	_I2C_Master_Write	;wreg free
  2343   00160C                     
  2344                           ;ds1307.c: 34:         I2C_Master_Write(sec & 0x7F);
  2345   00160C  C00E  F00C         	movff	RTC_Init@sec,??_RTC_Init
  2346   001610  0E7F               	movlw	127
  2347   001612  160C               	andwf	??_RTC_Init^0,f,c
  2348   001614  500C               	movf	??_RTC_Init^0,w,c
  2349   001616  6E02               	movwf	I2C_Master_Write@d^0,c
  2350   001618  6A03               	clrf	(I2C_Master_Write@d+1)^0,c
  2351   00161A  EC12  F011         	call	_I2C_Master_Write	;wreg free
  2352   00161E                     
  2353                           ;ds1307.c: 35:         I2C_Master_Stop();
  2354   00161E  EC1D  F011         	call	_I2C_Master_Stop	;wreg free
  2355   001622                     l260:
  2356   001622  0012               	return		;funcret
  2357   001624                     __end_of_RTC_Init:
  2358                           	callstack 0
  2359                           
  2360 ;; *************** function _LCD_Clear *****************
  2361 ;; Defined at:
  2362 ;;		line 64 in file "LCD.c"
  2363 ;; Parameters:    Size  Location     Type
  2364 ;;		None
  2365 ;; Auto vars:     Size  Location     Type
  2366 ;;		None
  2367 ;; Return value:  Size  Location     Type
  2368 ;;                  1    wreg      void 
  2369 ;; Registers used:
  2370 ;;		wreg, status,2, status,0, cstack
  2371 ;; Tracked objects:
  2372 ;;		On entry : 0/0
  2373 ;;		On exit  : 0/0
  2374 ;;		Unchanged: 0/0
  2375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2376 ;;      Params:         0       0       0       0       0       0       0       0       0
  2377 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2378 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2379 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2380 ;;Total ram usage:        0 bytes
  2381 ;; Hardware stack levels used: 1
  2382 ;; Hardware stack levels required when called: 1
  2383 ;; This function calls:
  2384 ;;		_LCD_Command
  2385 ;; This function is called by:
  2386 ;;		_main
  2387 ;;		_RTC_Init
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           
  2391                           	psect	text2
  2392   002232                     __ptext2:
  2393                           	callstack 0
  2394   002232                     _LCD_Clear:
  2395                           	callstack 28
  2396   002232                     
  2397                           ;LCD.c: 65:     LCD_Command(0x01);
  2398   002232  0E01               	movlw	1
  2399   002234  ECC0  F00F         	call	_LCD_Command
  2400   002238  0012               	return		;funcret
  2401   00223A                     __end_of_LCD_Clear:
  2402                           	callstack 0
  2403                           
  2404 ;; *************** function _LCD_Init *****************
  2405 ;; Defined at:
  2406 ;;		line 3 in file "LCD.c"
  2407 ;; Parameters:    Size  Location     Type
  2408 ;;		None
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;		None
  2411 ;; Return value:  Size  Location     Type
  2412 ;;                  1    wreg      void 
  2413 ;; Registers used:
  2414 ;;		wreg, status,2, status,0, cstack
  2415 ;; Tracked objects:
  2416 ;;		On entry : 0/0
  2417 ;;		On exit  : 0/0
  2418 ;;		Unchanged: 0/0
  2419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2420 ;;      Params:         0       0       0       0       0       0       0       0       0
  2421 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2422 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2423 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2424 ;;Total ram usage:        1 bytes
  2425 ;; Hardware stack levels used: 1
  2426 ;; Hardware stack levels required when called: 1
  2427 ;; This function calls:
  2428 ;;		_LCD_Command
  2429 ;; This function is called by:
  2430 ;;		_main
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           
  2434                           	psect	text3
  2435   002142                     __ptext3:
  2436                           	callstack 0
  2437   002142                     _LCD_Init:
  2438                           	callstack 29
  2439   002142                     
  2440                           ;LCD.c: 4:     TRISD = 0;
  2441   002142  6A95               	clrf	149,c	;volatile
  2442   002144                     
  2443                           ;LCD.c: 5:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2444   002144  0E27               	movlw	39
  2445   002146  6E03               	movwf	??_LCD_Init^0,c
  2446   002148  0EF5               	movlw	245
  2447   00214A                     u2477:
  2448   00214A  2EE8               	decfsz	wreg,f,c
  2449   00214C  D7FE               	bra	u2477
  2450   00214E  2E03               	decfsz	??_LCD_Init^0,f,c
  2451   002150  D7FC               	bra	u2477
  2452   002152  0000               	nop	
  2453   002154                     
  2454                           ;LCD.c: 6:     LCD_Command(0x02);
  2455   002154  0E02               	movlw	2
  2456   002156  ECC0  F00F         	call	_LCD_Command
  2457   00215A                     
  2458                           ;LCD.c: 7:     LCD_Command(0x28);
  2459   00215A  0E28               	movlw	40
  2460   00215C  ECC0  F00F         	call	_LCD_Command
  2461   002160                     
  2462                           ;LCD.c: 8:     LCD_Command(0x01);
  2463   002160  0E01               	movlw	1
  2464   002162  ECC0  F00F         	call	_LCD_Command
  2465   002166                     
  2466                           ;LCD.c: 9:     LCD_Command(0x0C);
  2467   002166  0E0C               	movlw	12
  2468   002168  ECC0  F00F         	call	_LCD_Command
  2469   00216C                     
  2470                           ;LCD.c: 10:     LCD_Command(0x06);
  2471   00216C  0E06               	movlw	6
  2472   00216E  ECC0  F00F         	call	_LCD_Command
  2473   002172  0012               	return		;funcret
  2474   002174                     __end_of_LCD_Init:
  2475                           	callstack 0
  2476                           
  2477 ;; *************** function _I2C_Master_Init *****************
  2478 ;; Defined at:
  2479 ;;		line 4 in file "i2c.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  c               4   13[COMRAM] const unsigned long 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2493 ;;      Params:         4       0       0       0       0       0       0       0       0
  2494 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2495 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2496 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2497 ;;Total ram usage:        8 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 1
  2500 ;; This function calls:
  2501 ;;		___lldiv
  2502 ;; This function is called by:
  2503 ;;		_main
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text4
  2508   001ED4                     __ptext4:
  2509                           	callstack 0
  2510   001ED4                     _I2C_Master_Init:
  2511                           	callstack 29
  2512   001ED4                     
  2513                           ;i2c.c: 5:     TRISB0 = 1;
  2514   001ED4  8093               	bsf	3987,0,c	;volatile
  2515                           
  2516                           ;i2c.c: 6:     TRISB1 = 1;
  2517   001ED6  8293               	bsf	3987,1,c	;volatile
  2518   001ED8                     
  2519                           ;i2c.c: 7:     SSPCON1 = 0b00101000;
  2520   001ED8  0E28               	movlw	40
  2521   001EDA  6EC6               	movwf	198,c	;volatile
  2522   001EDC                     
  2523                           ;i2c.c: 8:     SSPCON2 = 0;
  2524   001EDC  6AC5               	clrf	197,c	;volatile
  2525   001EDE                     
  2526                           ;i2c.c: 9:     SSPADD = (8000000 / (4 * c)) - 1;
  2527   001EDE  0E00               	movlw	0
  2528   001EE0  6E01               	movwf	___lldiv@dividend^0,c
  2529   001EE2  0E12               	movlw	18
  2530   001EE4  6E02               	movwf	(___lldiv@dividend+1)^0,c
  2531   001EE6  0E7A               	movlw	122
  2532   001EE8  6E03               	movwf	(___lldiv@dividend+2)^0,c
  2533   001EEA  0E00               	movlw	0
  2534   001EEC  6E04               	movwf	(___lldiv@dividend+3)^0,c
  2535   001EEE  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  2536   001EF2  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  2537   001EF6  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  2538   001EFA  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  2539   001EFE  0E02               	movlw	2
  2540   001F00                     u2425:
  2541   001F00  90D8               	bcf	status,0,c
  2542   001F02  3612               	rlcf	??_I2C_Master_Init^0,f,c
  2543   001F04  3613               	rlcf	(??_I2C_Master_Init+1)^0,f,c
  2544   001F06  3614               	rlcf	(??_I2C_Master_Init+2)^0,f,c
  2545   001F08  3615               	rlcf	(??_I2C_Master_Init+3)^0,f,c
  2546   001F0A  2EE8               	decfsz	wreg,f,c
  2547   001F0C  EF80  F00F         	goto	u2425
  2548   001F10  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  2549   001F14  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2550   001F18  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2551   001F1C  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2552   001F20  ECBF  F00B         	call	___lldiv	;wreg free
  2553   001F24  0401               	decf	?___lldiv^0,w,c
  2554   001F26  6EC8               	movwf	200,c	;volatile
  2555   001F28                     
  2556                           ;i2c.c: 10:     SSPSTAT = 0;
  2557   001F28  6AC7               	clrf	199,c	;volatile
  2558   001F2A  0012               	return		;funcret
  2559   001F2C                     __end_of_I2C_Master_Init:
  2560                           	callstack 0
  2561                           
  2562 ;; *************** function ___lldiv *****************
  2563 ;; Defined at:
  2564 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\__lldiv.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  dividend        4    0[COMRAM] unsigned long 
  2567 ;;  divisor         4    4[COMRAM] unsigned long 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  quotient        4    8[COMRAM] unsigned long 
  2570 ;;  counter         1   12[COMRAM] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  4    0[COMRAM] unsigned long 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2580 ;;      Params:         8       0       0       0       0       0       0       0       0
  2581 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2582 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2583 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2584 ;;Total ram usage:       13 bytes
  2585 ;; Hardware stack levels used: 1
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_I2C_Master_Init
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text5
  2594   00177E                     __ptext5:
  2595                           	callstack 0
  2596   00177E                     ___lldiv:
  2597                           	callstack 29
  2598   00177E  0E00               	movlw	0
  2599   001780  6E09               	movwf	___lldiv@quotient^0,c
  2600   001782  0E00               	movlw	0
  2601   001784  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  2602   001786  0E00               	movlw	0
  2603   001788  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  2604   00178A  0E00               	movlw	0
  2605   00178C  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  2606   00178E  5005               	movf	___lldiv@divisor^0,w,c
  2607   001790  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  2608   001792  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  2609   001794  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  2610   001796  B4D8               	btfsc	status,2,c
  2611   001798  EFD0  F00B         	goto	u2291
  2612   00179C  EFD2  F00B         	goto	u2290
  2613   0017A0                     u2291:
  2614   0017A0  EF08  F00C         	goto	l348
  2615   0017A4                     u2290:
  2616   0017A4  0E01               	movlw	1
  2617   0017A6  6E0D               	movwf	___lldiv@counter^0,c
  2618   0017A8  EFDC  F00B         	goto	l2759
  2619   0017AC                     l2757:
  2620   0017AC  90D8               	bcf	status,0,c
  2621   0017AE  3605               	rlcf	___lldiv@divisor^0,f,c
  2622   0017B0  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  2623   0017B2  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  2624   0017B4  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  2625   0017B6  2A0D               	incf	___lldiv@counter^0,f,c
  2626   0017B8                     l2759:
  2627   0017B8  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  2628   0017BA  EFE1  F00B         	goto	u2301
  2629   0017BE  EFE3  F00B         	goto	u2300
  2630   0017C2                     u2301:
  2631   0017C2  EFD6  F00B         	goto	l2757
  2632   0017C6                     u2300:
  2633   0017C6                     l2761:
  2634   0017C6  90D8               	bcf	status,0,c
  2635   0017C8  3609               	rlcf	___lldiv@quotient^0,f,c
  2636   0017CA  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  2637   0017CC  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  2638   0017CE  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  2639   0017D0  5005               	movf	___lldiv@divisor^0,w,c
  2640   0017D2  5C01               	subwf	___lldiv@dividend^0,w,c
  2641   0017D4  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2642   0017D6  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  2643   0017D8  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2644   0017DA  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  2645   0017DC  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2646   0017DE  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  2647   0017E0  A0D8               	btfss	status,0,c
  2648   0017E2  EFF5  F00B         	goto	u2311
  2649   0017E6  EFF7  F00B         	goto	u2310
  2650   0017EA                     u2311:
  2651   0017EA  EF00  F00C         	goto	l2769
  2652   0017EE                     u2310:
  2653   0017EE  5005               	movf	___lldiv@divisor^0,w,c
  2654   0017F0  5E01               	subwf	___lldiv@dividend^0,f,c
  2655   0017F2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2656   0017F4  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  2657   0017F6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2658   0017F8  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  2659   0017FA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2660   0017FC  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  2661   0017FE  8009               	bsf	___lldiv@quotient^0,0,c
  2662   001800                     l2769:
  2663   001800  90D8               	bcf	status,0,c
  2664   001802  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  2665   001804  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  2666   001806  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  2667   001808  3205               	rrcf	___lldiv@divisor^0,f,c
  2668   00180A  2E0D               	decfsz	___lldiv@counter^0,f,c
  2669   00180C  EFE3  F00B         	goto	l2761
  2670   001810                     l348:
  2671   001810  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2672   001814  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2673   001818  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2674   00181C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2675   001820  0012               	return		;funcret
  2676   001822                     __end_of___lldiv:
  2677                           	callstack 0
  2678                           
  2679 ;; *************** function _GPS_Init *****************
  2680 ;; Defined at:
  2681 ;;		line 6 in file "GPS.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  dummy           1    0[COMRAM] volatile unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0
  2696 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2698 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2699 ;;Total ram usage:        1 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text6
  2709   0021A2                     __ptext6:
  2710                           	callstack 0
  2711   0021A2                     _GPS_Init:
  2712                           	callstack 30
  2713   0021A2                     
  2714                           ;GPS.c: 7:     TRISC7 = 1;
  2715   0021A2  8E94               	bsf	3988,7,c	;volatile
  2716   0021A4                     
  2717                           ;GPS.c: 10:     BAUDCON = 0x08;
  2718   0021A4  0E08               	movlw	8
  2719   0021A6  6EB8               	movwf	184,c	;volatile
  2720                           
  2721                           ;GPS.c: 11:     TXSTA = 0x24;
  2722   0021A8  0E24               	movlw	36
  2723   0021AA  6EAC               	movwf	172,c	;volatile
  2724                           
  2725                           ;GPS.c: 12:     RCSTA = 0x90;
  2726   0021AC  0E90               	movlw	144
  2727   0021AE  6EAB               	movwf	171,c	;volatile
  2728                           
  2729                           ;GPS.c: 13:     SPBRG = 207;
  2730   0021B0  0ECF               	movlw	207
  2731   0021B2  6EAF               	movwf	175,c	;volatile
  2732                           
  2733                           ;GPS.c: 16:     while(PIR1bits.RCIF) {
  2734   0021B4  EFDE  F010         	goto	l149
  2735   0021B8                     l150:
  2736                           
  2737                           ;GPS.c: 17:         volatile char dummy = RCREG;
  2738   0021B8  CFAE F001          	movff	4014,GPS_Init@dummy	;volatile
  2739   0021BC                     l149:
  2740                           
  2741                           ;GPS.c: 16:     while(PIR1bits.RCIF) {
  2742   0021BC  BA9E               	btfsc	158,5,c	;volatile
  2743   0021BE  EFE3  F010         	goto	u1221
  2744   0021C2  EFE5  F010         	goto	u1220
  2745   0021C6                     u1221:
  2746   0021C6  EFDC  F010         	goto	l150
  2747   0021CA                     u1220:
  2748   0021CA                     
  2749                           ;GPS.c: 20:     PIR1bits.RCIF = 0;
  2750   0021CA  9A9E               	bcf	158,5,c	;volatile
  2751   0021CC  0012               	return		;funcret
  2752   0021CE                     __end_of_GPS_Init:
  2753                           	callstack 0
  2754                           
  2755 ;; *************** function _Display_RTC *****************
  2756 ;; Defined at:
  2757 ;;		line 85 in file "main.c"
  2758 ;; Parameters:    Size  Location     Type
  2759 ;;		None
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  cnt             1   71[COMRAM] unsigned char 
  2762 ;;  year            1   70[COMRAM] unsigned char 
  2763 ;;  mon             1   69[COMRAM] unsigned char 
  2764 ;;  day             1   68[COMRAM] unsigned char 
  2765 ;;  s               1   67[COMRAM] unsigned char 
  2766 ;;  m               1   66[COMRAM] unsigned char 
  2767 ;;  h               1   65[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  1    wreg      void 
  2770 ;; Registers used:
  2771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2777 ;;      Params:         0       0       0       0       0       0       0       0       0
  2778 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2779 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2780 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2781 ;;Total ram usage:        9 bytes
  2782 ;; Hardware stack levels used: 1
  2783 ;; Hardware stack levels required when called: 8
  2784 ;; This function calls:
  2785 ;;		_Clear_Line
  2786 ;;		_LCD_String_xy
  2787 ;;		_RTC_GetDateTime
  2788 ;;		_sprintf
  2789 ;; This function is called by:
  2790 ;;		_main
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text7
  2795   001624                     __ptext7:
  2796                           	callstack 0
  2797   001624                     _Display_RTC:
  2798                           	callstack 22
  2799   001624                     
  2800                           ;main.c: 86:     unsigned char h,m,s,day,mon,year;;main.c: 87:     for(uint8_t cnt=0; cn
      +                          t<5; cnt++) {
  2801   001624  6A48               	clrf	Display_RTC@cnt^0,c
  2802   001626                     l2847:
  2803                           
  2804                           ;main.c: 88:         RTC_GetDateTime(&h,&m,&s,&day,&mon,&year);
  2805   001626  0E42               	movlw	low Display_RTC@h
  2806   001628  6E06               	movwf	RTC_GetDateTime@hour^0,c
  2807   00162A  0E43               	movlw	low Display_RTC@m
  2808   00162C  6E07               	movwf	RTC_GetDateTime@min^0,c
  2809   00162E  0E44               	movlw	low Display_RTC@s
  2810   001630  6E08               	movwf	RTC_GetDateTime@sec^0,c
  2811   001632  0E45               	movlw	low Display_RTC@day
  2812   001634  6E09               	movwf	RTC_GetDateTime@day^0,c
  2813   001636  0E46               	movlw	low Display_RTC@mon
  2814   001638  6E0A               	movwf	RTC_GetDateTime@month^0,c
  2815   00163A  0E47               	movlw	low Display_RTC@year
  2816   00163C  6E0B               	movwf	RTC_GetDateTime@year^0,c
  2817   00163E  EC84  F009         	call	_RTC_GetDateTime	;wreg free
  2818   001642                     
  2819                           ;main.c: 89:         Clear_Line(0);
  2820   001642  0E00               	movlw	0
  2821   001644  ECFA  F010         	call	_Clear_Line
  2822   001648                     
  2823                           ;main.c: 90:         sprintf(lcd_buffer, "%02u/%02u/20%02u", day,mon,year);
  2824   001648  0EE4               	movlw	low _lcd_buffer
  2825   00164A  6E2C               	movwf	sprintf@s^0,c
  2826   00164C  0E12               	movlw	low STR_13
  2827   00164E  6E2D               	movwf	sprintf@fmt^0,c
  2828   001650  C045  F02E         	movff	Display_RTC@day,?_sprintf+2
  2829   001654  6A2F               	clrf	(?_sprintf+3)^0,c
  2830   001656  C046  F030         	movff	Display_RTC@mon,?_sprintf+4
  2831   00165A  6A31               	clrf	(?_sprintf+5)^0,c
  2832   00165C  C047  F032         	movff	Display_RTC@year,?_sprintf+6
  2833   001660  6A33               	clrf	(?_sprintf+7)^0,c
  2834   001662  EC87  F010         	call	_sprintf	;wreg free
  2835   001666                     
  2836                           ;main.c: 91:         LCD_String_xy(0,0,lcd_buffer);
  2837   001666  0E00               	movlw	0
  2838   001668  6E05               	movwf	LCD_String_xy@pos^0,c
  2839   00166A  0EE4               	movlw	low _lcd_buffer
  2840   00166C  6E06               	movwf	LCD_String_xy@msg^0,c
  2841   00166E  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
  2842   001670  0E00               	movlw	0
  2843   001672  EC3C  F00F         	call	_LCD_String_xy
  2844   001676                     
  2845                           ;main.c: 92:         Clear_Line(1);
  2846   001676  0E01               	movlw	1
  2847   001678  ECFA  F010         	call	_Clear_Line
  2848   00167C                     
  2849                           ;main.c: 93:         sprintf(lcd_buffer, "%02u:%02u:%02u", h,m,s);
  2850   00167C  0EE4               	movlw	low _lcd_buffer
  2851   00167E  6E2C               	movwf	sprintf@s^0,c
  2852   001680  0E42               	movlw	low STR_14
  2853   001682  6E2D               	movwf	sprintf@fmt^0,c
  2854   001684  C042  F02E         	movff	Display_RTC@h,?_sprintf+2
  2855   001688  6A2F               	clrf	(?_sprintf+3)^0,c
  2856   00168A  C043  F030         	movff	Display_RTC@m,?_sprintf+4
  2857   00168E  6A31               	clrf	(?_sprintf+5)^0,c
  2858   001690  C044  F032         	movff	Display_RTC@s,?_sprintf+6
  2859   001694  6A33               	clrf	(?_sprintf+7)^0,c
  2860   001696  EC87  F010         	call	_sprintf	;wreg free
  2861   00169A                     
  2862                           ;main.c: 94:         LCD_String_xy(1,0,lcd_buffer);
  2863   00169A  0E00               	movlw	0
  2864   00169C  6E05               	movwf	LCD_String_xy@pos^0,c
  2865   00169E  0EE4               	movlw	low _lcd_buffer
  2866   0016A0  6E06               	movwf	LCD_String_xy@msg^0,c
  2867   0016A2  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
  2868   0016A4  0E01               	movlw	1
  2869   0016A6  EC3C  F00F         	call	_LCD_String_xy
  2870   0016AA                     
  2871                           ;main.c: 95:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  2872   0016AA  0E0B               	movlw	11
  2873   0016AC  6E41               	movwf	(??_Display_RTC+1)^0,c
  2874   0016AE  0E26               	movlw	38
  2875   0016B0  6E40               	movwf	??_Display_RTC^0,c
  2876   0016B2  0E5E               	movlw	94
  2877   0016B4                     u2487:
  2878   0016B4  2EE8               	decfsz	wreg,f,c
  2879   0016B6  D7FE               	bra	u2487
  2880   0016B8  2E40               	decfsz	??_Display_RTC^0,f,c
  2881   0016BA  D7FC               	bra	u2487
  2882   0016BC  2E41               	decfsz	(??_Display_RTC+1)^0,f,c
  2883   0016BE  D7FA               	bra	u2487
  2884   0016C0                     
  2885                           ;main.c: 96:     }
  2886   0016C0  2A48               	incf	Display_RTC@cnt^0,f,c
  2887   0016C2  0E04               	movlw	4
  2888   0016C4  6448               	cpfsgt	Display_RTC@cnt^0,c
  2889   0016C6  EF67  F00B         	goto	u2411
  2890   0016CA  EF69  F00B         	goto	u2410
  2891   0016CE                     u2411:
  2892   0016CE  EF13  F00B         	goto	l2847
  2893   0016D2                     u2410:
  2894   0016D2  0012               	return		;funcret
  2895   0016D4                     __end_of_Display_RTC:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _RTC_GetDateTime *****************
  2899 ;; Defined at:
  2900 ;;		line 63 in file "ds1307.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;  hour            1    5[COMRAM] PTR unsigned char 
  2903 ;;		 -> Display_RTC@h(1), 
  2904 ;;  min             1    6[COMRAM] PTR unsigned char 
  2905 ;;		 -> Display_RTC@m(1), 
  2906 ;;  sec             1    7[COMRAM] PTR unsigned char 
  2907 ;;		 -> Display_RTC@s(1), 
  2908 ;;  day             1    8[COMRAM] PTR unsigned char 
  2909 ;;		 -> Display_RTC@day(1), 
  2910 ;;  month           1    9[COMRAM] PTR unsigned char 
  2911 ;;		 -> Display_RTC@mon(1), 
  2912 ;;  year            1   10[COMRAM] PTR unsigned char 
  2913 ;;		 -> Display_RTC@year(1), 
  2914 ;; Auto vars:     Size  Location     Type
  2915 ;;		None
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  1    wreg      void 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2925 ;;      Params:         6       0       0       0       0       0       0       0       0
  2926 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2927 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2928 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2929 ;;Total ram usage:        6 bytes
  2930 ;; Hardware stack levels used: 1
  2931 ;; Hardware stack levels required when called: 2
  2932 ;; This function calls:
  2933 ;;		_BCD2DEC
  2934 ;;		_I2C_Master_Read
  2935 ;;		_I2C_Master_RepeatedStart
  2936 ;;		_I2C_Master_Start
  2937 ;;		_I2C_Master_Stop
  2938 ;;		_I2C_Master_Write
  2939 ;; This function is called by:
  2940 ;;		_Display_RTC
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           	psect	text8
  2945   001308                     __ptext8:
  2946                           	callstack 0
  2947   001308                     _RTC_GetDateTime:
  2948                           	callstack 27
  2949   001308                     
  2950                           ;ds1307.c: 63: void RTC_GetDateTime(unsigned char *hour, unsigned char *min, unsigned ch
      +                          ar *sec,;ds1307.c: 64:                      unsigned char *day, unsigned char *month, un
      +                          signed char *year) {;ds1307.c: 65:     I2C_Master_Start();
  2951   001308  EC21  F011         	call	_I2C_Master_Start	;wreg free
  2952                           
  2953                           ;ds1307.c: 66:     I2C_Master_Write(0b11010000);
  2954   00130C  0E00               	movlw	0
  2955   00130E  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2956   001310  0ED0               	movlw	208
  2957   001312  6E02               	movwf	I2C_Master_Write@d^0,c
  2958   001314  EC12  F011         	call	_I2C_Master_Write	;wreg free
  2959                           
  2960                           ;ds1307.c: 67:     I2C_Master_Write(0b00000000);
  2961   001318  0E00               	movlw	0
  2962   00131A  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2963   00131C  0E00               	movlw	0
  2964   00131E  6E02               	movwf	I2C_Master_Write@d^0,c
  2965   001320  EC12  F011         	call	_I2C_Master_Write	;wreg free
  2966                           
  2967                           ;ds1307.c: 68:     I2C_Master_RepeatedStart();
  2968   001324  EC25  F011         	call	_I2C_Master_RepeatedStart	;wreg free
  2969                           
  2970                           ;ds1307.c: 69:     I2C_Master_Write(0b11010000 | 1);
  2971   001328  0E00               	movlw	0
  2972   00132A  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2973   00132C  0ED1               	movlw	209
  2974   00132E  6E02               	movwf	I2C_Master_Write@d^0,c
  2975   001330  EC12  F011         	call	_I2C_Master_Write	;wreg free
  2976   001334                     
  2977                           ;ds1307.c: 71:     *sec = BCD2DEC(I2C_Master_Read(1));
  2978   001334  5008               	movf	RTC_GetDateTime@sec^0,w,c
  2979   001336  6ED9               	movwf	fsr2l,c
  2980   001338  6ADA               	clrf	fsr2h,c
  2981   00133A  0E00               	movlw	0
  2982   00133C  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  2983   00133E  0E01               	movlw	1
  2984   001340  6E02               	movwf	I2C_Master_Read@a^0,c
  2985   001342  EC52  F010         	call	_I2C_Master_Read	;wreg free
  2986   001346  5002               	movf	?_I2C_Master_Read^0,w,c
  2987   001348  EC07  F011         	call	_BCD2DEC
  2988   00134C  6EDF               	movwf	indf2,c
  2989   00134E                     
  2990                           ;ds1307.c: 72:     *min = BCD2DEC(I2C_Master_Read(1));
  2991   00134E  5007               	movf	RTC_GetDateTime@min^0,w,c
  2992   001350  6ED9               	movwf	fsr2l,c
  2993   001352  6ADA               	clrf	fsr2h,c
  2994   001354  0E00               	movlw	0
  2995   001356  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  2996   001358  0E01               	movlw	1
  2997   00135A  6E02               	movwf	I2C_Master_Read@a^0,c
  2998   00135C  EC52  F010         	call	_I2C_Master_Read	;wreg free
  2999   001360  5002               	movf	?_I2C_Master_Read^0,w,c
  3000   001362  EC07  F011         	call	_BCD2DEC
  3001   001366  6EDF               	movwf	indf2,c
  3002   001368                     
  3003                           ;ds1307.c: 73:     *hour = BCD2DEC(I2C_Master_Read(1));
  3004   001368  5006               	movf	RTC_GetDateTime@hour^0,w,c
  3005   00136A  6ED9               	movwf	fsr2l,c
  3006   00136C  6ADA               	clrf	fsr2h,c
  3007   00136E  0E00               	movlw	0
  3008   001370  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3009   001372  0E01               	movlw	1
  3010   001374  6E02               	movwf	I2C_Master_Read@a^0,c
  3011   001376  EC52  F010         	call	_I2C_Master_Read	;wreg free
  3012   00137A  5002               	movf	?_I2C_Master_Read^0,w,c
  3013   00137C  EC07  F011         	call	_BCD2DEC
  3014   001380  6EDF               	movwf	indf2,c
  3015   001382                     
  3016                           ;ds1307.c: 74:     I2C_Master_Read(1);
  3017   001382  0E00               	movlw	0
  3018   001384  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3019   001386  0E01               	movlw	1
  3020   001388  6E02               	movwf	I2C_Master_Read@a^0,c
  3021   00138A  EC52  F010         	call	_I2C_Master_Read	;wreg free
  3022                           
  3023                           ;ds1307.c: 75:     *day = BCD2DEC(I2C_Master_Read(1));
  3024   00138E  5009               	movf	RTC_GetDateTime@day^0,w,c
  3025   001390  6ED9               	movwf	fsr2l,c
  3026   001392  6ADA               	clrf	fsr2h,c
  3027   001394  0E00               	movlw	0
  3028   001396  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3029   001398  0E01               	movlw	1
  3030   00139A  6E02               	movwf	I2C_Master_Read@a^0,c
  3031   00139C  EC52  F010         	call	_I2C_Master_Read	;wreg free
  3032   0013A0  5002               	movf	?_I2C_Master_Read^0,w,c
  3033   0013A2  EC07  F011         	call	_BCD2DEC
  3034   0013A6  6EDF               	movwf	indf2,c
  3035                           
  3036                           ;ds1307.c: 76:     *month = BCD2DEC(I2C_Master_Read(1));
  3037   0013A8  500A               	movf	RTC_GetDateTime@month^0,w,c
  3038   0013AA  6ED9               	movwf	fsr2l,c
  3039   0013AC  6ADA               	clrf	fsr2h,c
  3040   0013AE  0E00               	movlw	0
  3041   0013B0  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3042   0013B2  0E01               	movlw	1
  3043   0013B4  6E02               	movwf	I2C_Master_Read@a^0,c
  3044   0013B6  EC52  F010         	call	_I2C_Master_Read	;wreg free
  3045   0013BA  5002               	movf	?_I2C_Master_Read^0,w,c
  3046   0013BC  EC07  F011         	call	_BCD2DEC
  3047   0013C0  6EDF               	movwf	indf2,c
  3048                           
  3049                           ;ds1307.c: 77:     *year = BCD2DEC(I2C_Master_Read(0));
  3050   0013C2  500B               	movf	RTC_GetDateTime@year^0,w,c
  3051   0013C4  6ED9               	movwf	fsr2l,c
  3052   0013C6  6ADA               	clrf	fsr2h,c
  3053   0013C8  0E00               	movlw	0
  3054   0013CA  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3055   0013CC  0E00               	movlw	0
  3056   0013CE  6E02               	movwf	I2C_Master_Read@a^0,c
  3057   0013D0  EC52  F010         	call	_I2C_Master_Read	;wreg free
  3058   0013D4  5002               	movf	?_I2C_Master_Read^0,w,c
  3059   0013D6  EC07  F011         	call	_BCD2DEC
  3060   0013DA  6EDF               	movwf	indf2,c
  3061   0013DC                     
  3062                           ;ds1307.c: 78:     I2C_Master_Stop();
  3063   0013DC  EC1D  F011         	call	_I2C_Master_Stop	;wreg free
  3064   0013E0  0012               	return		;funcret
  3065   0013E2                     __end_of_RTC_GetDateTime:
  3066                           	callstack 0
  3067                           
  3068 ;; *************** function _I2C_Master_Write *****************
  3069 ;; Defined at:
  3070 ;;		line 32 in file "i2c.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  d               2    1[COMRAM] unsigned int 
  3073 ;; Auto vars:     Size  Location     Type
  3074 ;;		None
  3075 ;; Return value:  Size  Location     Type
  3076 ;;                  1    wreg      unsigned char 
  3077 ;; Registers used:
  3078 ;;		wreg, status,2, status,0, cstack
  3079 ;; Tracked objects:
  3080 ;;		On entry : 0/0
  3081 ;;		On exit  : 0/0
  3082 ;;		Unchanged: 0/0
  3083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3084 ;;      Params:         2       0       0       0       0       0       0       0       0
  3085 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3086 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3087 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3088 ;;Total ram usage:        2 bytes
  3089 ;; Hardware stack levels used: 1
  3090 ;; Hardware stack levels required when called: 1
  3091 ;; This function calls:
  3092 ;;		_I2C_Master_Wait
  3093 ;; This function is called by:
  3094 ;;		_RTC_Init
  3095 ;;		_RTC_GetDateTime
  3096 ;;		_RTC_SetDateTime
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text9
  3101   002224                     __ptext9:
  3102                           	callstack 0
  3103   002224                     _I2C_Master_Write:
  3104                           	callstack 28
  3105   002224                     
  3106                           ;i2c.c: 33:     I2C_Master_Wait();
  3107   002224  ECE7  F010         	call	_I2C_Master_Wait	;wreg free
  3108   002228                     
  3109                           ;i2c.c: 34:     SSPBUF = d;
  3110   002228  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  3111                           
  3112                           ;i2c.c: 35:     I2C_Master_Wait();
  3113   00222C  ECE7  F010         	call	_I2C_Master_Wait	;wreg free
  3114   002230  0012               	return		;funcret
  3115   002232                     __end_of_I2C_Master_Write:
  3116                           	callstack 0
  3117                           
  3118 ;; *************** function _I2C_Master_Stop *****************
  3119 ;; Defined at:
  3120 ;;		line 27 in file "i2c.c"
  3121 ;; Parameters:    Size  Location     Type
  3122 ;;		None
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;		None
  3125 ;; Return value:  Size  Location     Type
  3126 ;;                  1    wreg      void 
  3127 ;; Registers used:
  3128 ;;		wreg, status,2, status,0, cstack
  3129 ;; Tracked objects:
  3130 ;;		On entry : 0/0
  3131 ;;		On exit  : 0/0
  3132 ;;		Unchanged: 0/0
  3133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3134 ;;      Params:         0       0       0       0       0       0       0       0       0
  3135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3136 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3137 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3138 ;;Total ram usage:        0 bytes
  3139 ;; Hardware stack levels used: 1
  3140 ;; Hardware stack levels required when called: 1
  3141 ;; This function calls:
  3142 ;;		_I2C_Master_Wait
  3143 ;; This function is called by:
  3144 ;;		_RTC_Init
  3145 ;;		_RTC_GetDateTime
  3146 ;;		_RTC_SetDateTime
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text10
  3151   00223A                     __ptext10:
  3152                           	callstack 0
  3153   00223A                     _I2C_Master_Stop:
  3154                           	callstack 28
  3155   00223A                     
  3156                           ;i2c.c: 28:     I2C_Master_Wait();
  3157   00223A  ECE7  F010         	call	_I2C_Master_Wait	;wreg free
  3158   00223E                     
  3159                           ;i2c.c: 29:     PEN = 1;
  3160   00223E  84C5               	bsf	4037,2,c	;volatile
  3161   002240  0012               	return		;funcret
  3162   002242                     __end_of_I2C_Master_Stop:
  3163                           	callstack 0
  3164                           
  3165 ;; *************** function _I2C_Master_Start *****************
  3166 ;; Defined at:
  3167 ;;		line 17 in file "i2c.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;		None
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;		None
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      void 
  3174 ;; Registers used:
  3175 ;;		wreg, status,2, status,0, cstack
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3181 ;;      Params:         0       0       0       0       0       0       0       0       0
  3182 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3183 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3184 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3185 ;;Total ram usage:        0 bytes
  3186 ;; Hardware stack levels used: 1
  3187 ;; Hardware stack levels required when called: 1
  3188 ;; This function calls:
  3189 ;;		_I2C_Master_Wait
  3190 ;; This function is called by:
  3191 ;;		_RTC_Init
  3192 ;;		_RTC_GetDateTime
  3193 ;;		_RTC_SetDateTime
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text11
  3198   002242                     __ptext11:
  3199                           	callstack 0
  3200   002242                     _I2C_Master_Start:
  3201                           	callstack 28
  3202   002242                     
  3203                           ;i2c.c: 18:     I2C_Master_Wait();
  3204   002242  ECE7  F010         	call	_I2C_Master_Wait	;wreg free
  3205   002246                     
  3206                           ;i2c.c: 19:     SEN = 1;
  3207   002246  80C5               	bsf	4037,0,c	;volatile
  3208   002248  0012               	return		;funcret
  3209   00224A                     __end_of_I2C_Master_Start:
  3210                           	callstack 0
  3211                           
  3212 ;; *************** function _I2C_Master_RepeatedStart *****************
  3213 ;; Defined at:
  3214 ;;		line 22 in file "i2c.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;		None
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3228 ;;      Params:         0       0       0       0       0       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3231 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3232 ;;Total ram usage:        0 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 1
  3235 ;; This function calls:
  3236 ;;		_I2C_Master_Wait
  3237 ;; This function is called by:
  3238 ;;		_RTC_Init
  3239 ;;		_RTC_GetDateTime
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text12
  3244   00224A                     __ptext12:
  3245                           	callstack 0
  3246   00224A                     _I2C_Master_RepeatedStart:
  3247                           	callstack 28
  3248   00224A                     
  3249                           ;i2c.c: 23:     I2C_Master_Wait();
  3250   00224A  ECE7  F010         	call	_I2C_Master_Wait	;wreg free
  3251   00224E                     
  3252                           ;i2c.c: 24:     RSEN = 1;
  3253   00224E  82C5               	bsf	4037,1,c	;volatile
  3254   002250  0012               	return		;funcret
  3255   002252                     __end_of_I2C_Master_RepeatedStart:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function _I2C_Master_Read *****************
  3259 ;; Defined at:
  3260 ;;		line 39 in file "i2c.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  a               2    1[COMRAM] unsigned short 
  3263 ;; Auto vars:     Size  Location     Type
  3264 ;;  temp            2    3[COMRAM] unsigned short 
  3265 ;; Return value:  Size  Location     Type
  3266 ;;                  2    1[COMRAM] unsigned short 
  3267 ;; Registers used:
  3268 ;;		wreg, status,2, status,0, cstack
  3269 ;; Tracked objects:
  3270 ;;		On entry : 0/0
  3271 ;;		On exit  : 0/0
  3272 ;;		Unchanged: 0/0
  3273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3274 ;;      Params:         2       0       0       0       0       0       0       0       0
  3275 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3276 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3277 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3278 ;;Total ram usage:        4 bytes
  3279 ;; Hardware stack levels used: 1
  3280 ;; Hardware stack levels required when called: 1
  3281 ;; This function calls:
  3282 ;;		_I2C_Master_Wait
  3283 ;; This function is called by:
  3284 ;;		_RTC_Init
  3285 ;;		_RTC_GetDateTime
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text13
  3290   0020A4                     __ptext13:
  3291                           	callstack 0
  3292   0020A4                     _I2C_Master_Read:
  3293                           	callstack 28
  3294   0020A4                     
  3295                           ;i2c.c: 40:     unsigned short temp;;i2c.c: 41:     I2C_Master_Wait();
  3296   0020A4  ECE7  F010         	call	_I2C_Master_Wait	;wreg free
  3297   0020A8                     
  3298                           ;i2c.c: 42:     RCEN = 1;
  3299   0020A8  86C5               	bsf	4037,3,c	;volatile
  3300                           
  3301                           ;i2c.c: 43:     I2C_Master_Wait();
  3302   0020AA  ECE7  F010         	call	_I2C_Master_Wait	;wreg free
  3303   0020AE                     
  3304                           ;i2c.c: 44:     temp = SSPBUF;
  3305   0020AE  CFC9 F004          	movff	4041,I2C_Master_Read@temp	;volatile
  3306   0020B2  6A05               	clrf	(I2C_Master_Read@temp+1)^0,c
  3307                           
  3308                           ;i2c.c: 45:     I2C_Master_Wait();
  3309   0020B4  ECE7  F010         	call	_I2C_Master_Wait	;wreg free
  3310   0020B8                     
  3311                           ;i2c.c: 46:     ACKDT = (a)?0:1;
  3312   0020B8  5002               	movf	I2C_Master_Read@a^0,w,c
  3313   0020BA  1003               	iorwf	(I2C_Master_Read@a+1)^0,w,c
  3314   0020BC  B4D8               	btfsc	status,2,c
  3315   0020BE  EF63  F010         	goto	u1891
  3316   0020C2  EF66  F010         	goto	u1890
  3317   0020C6                     u1891:
  3318   0020C6  8AC5               	bsf	4037,5,c	;volatile
  3319   0020C8  EF67  F010         	goto	u1905
  3320   0020CC                     u1890:
  3321   0020CC  9AC5               	bcf	4037,5,c	;volatile
  3322   0020CE                     u1905:
  3323   0020CE                     
  3324                           ;i2c.c: 47:     ACKEN = 1;
  3325   0020CE  88C5               	bsf	4037,4,c	;volatile
  3326   0020D0                     
  3327                           ;i2c.c: 48:     return temp;
  3328   0020D0  C004  F002         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
  3329   0020D4  C005  F003         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
  3330   0020D8  0012               	return		;funcret
  3331   0020DA                     __end_of_I2C_Master_Read:
  3332                           	callstack 0
  3333                           
  3334 ;; *************** function _I2C_Master_Wait *****************
  3335 ;; Defined at:
  3336 ;;		line 13 in file "i2c.c"
  3337 ;; Parameters:    Size  Location     Type
  3338 ;;		None
  3339 ;; Auto vars:     Size  Location     Type
  3340 ;;		None
  3341 ;; Return value:  Size  Location     Type
  3342 ;;                  1    wreg      void 
  3343 ;; Registers used:
  3344 ;;		wreg, status,2, status,0
  3345 ;; Tracked objects:
  3346 ;;		On entry : 0/0
  3347 ;;		On exit  : 0/0
  3348 ;;		Unchanged: 0/0
  3349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3350 ;;      Params:         0       0       0       0       0       0       0       0       0
  3351 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3352 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3353 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3354 ;;Total ram usage:        1 bytes
  3355 ;; Hardware stack levels used: 1
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_I2C_Master_Start
  3360 ;;		_I2C_Master_RepeatedStart
  3361 ;;		_I2C_Master_Stop
  3362 ;;		_I2C_Master_Write
  3363 ;;		_I2C_Master_Read
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367                           	psect	text14
  3368   0021CE                     __ptext14:
  3369                           	callstack 0
  3370   0021CE                     _I2C_Master_Wait:
  3371                           	callstack 28
  3372   0021CE                     l2277:
  3373   0021CE  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  3374   0021D2  0E1F               	movlw	31
  3375   0021D4  1601               	andwf	??_I2C_Master_Wait^0,f,c
  3376   0021D6  A4D8               	btfss	status,2,c
  3377   0021D8  EFF0  F010         	goto	u1521
  3378   0021DC  EFF2  F010         	goto	u1520
  3379   0021E0                     u1521:
  3380   0021E0  EFE7  F010         	goto	l2277
  3381   0021E4                     u1520:
  3382   0021E4  B4C7               	btfsc	199,2,c	;volatile
  3383   0021E6  EFF7  F010         	goto	u1531
  3384   0021EA  EFF9  F010         	goto	u1530
  3385   0021EE                     u1531:
  3386   0021EE  EFE7  F010         	goto	l2277
  3387   0021F2                     u1530:
  3388   0021F2  0012               	return		;funcret
  3389   0021F4                     __end_of_I2C_Master_Wait:
  3390                           	callstack 0
  3391                           
  3392 ;; *************** function _BCD2DEC *****************
  3393 ;; Defined at:
  3394 ;;		line 6 in file "ds1307.c"
  3395 ;; Parameters:    Size  Location     Type
  3396 ;;  val             1    wreg     unsigned char 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  val             1    1[COMRAM] unsigned char 
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      unsigned char 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0, prodl, prodh
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3408 ;;      Params:         0       0       0       0       0       0       0       0       0
  3409 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3410 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3411 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3412 ;;Total ram usage:        2 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; This function calls:
  3415 ;;		Nothing
  3416 ;; This function is called by:
  3417 ;;		_RTC_GetDateTime
  3418 ;; This function uses a non-reentrant model
  3419 ;;
  3420                           
  3421                           	psect	text15
  3422   00220E                     __ptext15:
  3423                           	callstack 0
  3424   00220E                     _BCD2DEC:
  3425                           	callstack 28
  3426                           
  3427                           ;incstack = 0
  3428                           ;BCD2DEC@val stored from wreg
  3429   00220E  6E02               	movwf	BCD2DEC@val^0,c
  3430   002210                     
  3431                           ;ds1307.c: 7:     return ((val >> 4) * 10) + (val & 0x0F);
  3432   002210  C002  F001         	movff	BCD2DEC@val,??_BCD2DEC
  3433   002214  0E0F               	movlw	15
  3434   002216  1601               	andwf	??_BCD2DEC^0,f,c
  3435   002218  3802               	swapf	BCD2DEC@val^0,w,c
  3436   00221A  0B0F               	andlw	15
  3437   00221C  0D0A               	mullw	10
  3438   00221E  50F3               	movf	243,w,c
  3439   002220  2401               	addwf	??_BCD2DEC^0,w,c
  3440   002222  0012               	return		;funcret
  3441   002224                     __end_of_BCD2DEC:
  3442                           	callstack 0
  3443                           
  3444 ;; *************** function _Display_GPS *****************
  3445 ;; Defined at:
  3446 ;;		line 41 in file "main.c"
  3447 ;; Parameters:    Size  Location     Type
  3448 ;;		None
  3449 ;; Auto vars:     Size  Location     Type
  3450 ;;  formatted_lo   17  138[BANK1 ] unsigned char [17]
  3451 ;;  formatted_la   17  121[BANK1 ] unsigned char [17]
  3452 ;;  i               1  159[BANK1 ] unsigned char 
  3453 ;;  buffer        100    0[BANK1 ] unsigned char [100]
  3454 ;;  lon            11  100[BANK1 ] unsigned char [11]
  3455 ;;  lat            10  111[BANK1 ] unsigned char [10]
  3456 ;;  ew              2  157[BANK1 ] unsigned char [2]
  3457 ;;  ns              2  155[BANK1 ] unsigned char [2]
  3458 ;;  valid           1  160[BANK1 ] unsigned char 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3468 ;;      Params:         0       0       0       0       0       0       0       0       0
  3469 ;;      Locals:         0       0     161       0       0       0       0       0       0
  3470 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3471 ;;      Totals:         1       0     161       0       0       0       0       0       0
  3472 ;;Total ram usage:      162 bytes
  3473 ;; Hardware stack levels used: 1
  3474 ;; Hardware stack levels required when called: 4
  3475 ;; This function calls:
  3476 ;;		_Clear_Line
  3477 ;;		_GPS_ParseGPRMC
  3478 ;;		_GPS_ReadSentence
  3479 ;;		_LCD_String_xy
  3480 ;;		_strcat
  3481 ;;		_strncat
  3482 ;;		_strncpy
  3483 ;; This function is called by:
  3484 ;;		_main
  3485 ;; This function uses a non-reentrant model
  3486 ;;
  3487                           
  3488                           	psect	text16
  3489   0008B8                     __ptext16:
  3490                           	callstack 0
  3491   0008B8                     _Display_GPS:
  3492                           	callstack 26
  3493   0008B8                     
  3494                           ;main.c: 42:     char buffer[100], lat[10] = "", ns[2] = "", lon[11] = "", ew[2] = "";
  3495   0008B8  EE21  F06F         	lfsr	2,Display_GPS@lat
  3496   0008BC  0E09               	movlw	9
  3497   0008BE                     u2331:
  3498   0008BE  6ADE               	clrf	postinc2,c
  3499   0008C0  06E8               	decf	wreg,f,c
  3500   0008C2  E2FD               	bc	u2331
  3501   0008C4  0E00               	movlw	0
  3502   0008C6  0101               	movlb	1	; () banked
  3503   0008C8  6F9C               	movwf	(Display_GPS@ns+1)& (0+255),b
  3504   0008CA  0E00               	movlw	0
  3505   0008CC  6F9B               	movwf	Display_GPS@ns& (0+255),b
  3506   0008CE                     
  3507                           ; BSR set to: 1
  3508   0008CE  EE21  F064         	lfsr	2,Display_GPS@lon
  3509   0008D2  0E0A               	movlw	10
  3510   0008D4                     u2341:
  3511   0008D4  6ADE               	clrf	postinc2,c
  3512   0008D6  06E8               	decf	wreg,f,c
  3513   0008D8  E2FD               	bc	u2341
  3514   0008DA  0E00               	movlw	0
  3515   0008DC  6F9E               	movwf	(Display_GPS@ew+1)& (0+255),b
  3516   0008DE  0E00               	movlw	0
  3517   0008E0  6F9D               	movwf	Display_GPS@ew& (0+255),b
  3518   0008E2                     
  3519                           ; BSR set to: 1
  3520                           ;main.c: 43:     uint8_t valid = 0;
  3521   0008E2  6BA0               	clrf	Display_GPS@valid& (0+255),b
  3522   0008E4                     
  3523                           ; BSR set to: 1
  3524                           ;main.c: 46:     for(uint8_t i=0; i<5 && !valid; i++) {
  3525   0008E4  6B9F               	clrf	Display_GPS@i& (0+255),b
  3526   0008E6  EFAC  F004         	goto	l2801
  3527   0008EA                     l2793:
  3528                           
  3529                           ; BSR set to: 1
  3530                           ;main.c: 47:         if(GPS_ReadSentence(buffer, sizeof(buffer), 2000)) {
  3531   0008EA  0E00               	movlw	low Display_GPS@buffer
  3532   0008EC  6E01               	movwf	GPS_ReadSentence@buffer^0,c
  3533   0008EE  0E01               	movlw	high Display_GPS@buffer
  3534   0008F0  6E02               	movwf	(GPS_ReadSentence@buffer+1)^0,c
  3535   0008F2  0E00               	movlw	0
  3536   0008F4  6E04               	movwf	(GPS_ReadSentence@max_len+1)^0,c
  3537   0008F6  0E64               	movlw	100
  3538   0008F8  6E03               	movwf	GPS_ReadSentence@max_len^0,c
  3539   0008FA  0E07               	movlw	7
  3540   0008FC  6E06               	movwf	(GPS_ReadSentence@timeout_ms+1)^0,c
  3541   0008FE  0ED0               	movlw	208
  3542   000900  6E05               	movwf	GPS_ReadSentence@timeout_ms^0,c
  3543   000902  EC79  F007         	call	_GPS_ReadSentence	;wreg free
  3544   000906  0900               	iorlw	0
  3545   000908  B4D8               	btfsc	status,2,c
  3546   00090A  EF89  F004         	goto	u2351
  3547   00090E  EF8B  F004         	goto	u2350
  3548   000912                     u2351:
  3549   000912  EFA3  F004         	goto	l2797
  3550   000916                     u2350:
  3551   000916                     
  3552                           ;main.c: 48:             valid = GPS_ParseGPRMC(buffer, lat, ns, lon, ew);
  3553   000916  0E00               	movlw	low Display_GPS@buffer
  3554   000918  6E0E               	movwf	GPS_ParseGPRMC@msg^0,c
  3555   00091A  0E01               	movlw	high Display_GPS@buffer
  3556   00091C  6E0F               	movwf	(GPS_ParseGPRMC@msg+1)^0,c
  3557   00091E  0E6F               	movlw	low Display_GPS@lat
  3558   000920  6E10               	movwf	GPS_ParseGPRMC@lat^0,c
  3559   000922  0E01               	movlw	high Display_GPS@lat
  3560   000924  6E11               	movwf	(GPS_ParseGPRMC@lat+1)^0,c
  3561   000926  0E9B               	movlw	low Display_GPS@ns
  3562   000928  6E12               	movwf	GPS_ParseGPRMC@ns^0,c
  3563   00092A  0E01               	movlw	high Display_GPS@ns
  3564   00092C  6E13               	movwf	(GPS_ParseGPRMC@ns+1)^0,c
  3565   00092E  0E64               	movlw	low Display_GPS@lon
  3566   000930  6E14               	movwf	GPS_ParseGPRMC@lon^0,c
  3567   000932  0E01               	movlw	high Display_GPS@lon
  3568   000934  6E15               	movwf	(GPS_ParseGPRMC@lon+1)^0,c
  3569   000936  0E9D               	movlw	low Display_GPS@ew
  3570   000938  6E16               	movwf	GPS_ParseGPRMC@ew^0,c
  3571   00093A  0E01               	movlw	high Display_GPS@ew
  3572   00093C  6E17               	movwf	(GPS_ParseGPRMC@ew+1)^0,c
  3573   00093E  EC94  F005         	call	_GPS_ParseGPRMC	;wreg free
  3574   000942  0101               	movlb	1	; () banked
  3575   000944  6FA0               	movwf	Display_GPS@valid& (0+255),b
  3576   000946                     l2797:
  3577                           
  3578                           ;main.c: 50:         _delay((unsigned long)((50)*(8000000/4000.0)));
  3579   000946  0E82               	movlw	130
  3580   000948  6E19               	movwf	??_Display_GPS^0,c
  3581   00094A  0EDE               	movlw	222
  3582   00094C                     u2497:
  3583   00094C  2EE8               	decfsz	wreg,f,c
  3584   00094E  D7FE               	bra	u2497
  3585   000950  2E19               	decfsz	??_Display_GPS^0,f,c
  3586   000952  D7FC               	bra	u2497
  3587   000954                     
  3588                           ;main.c: 51:     }
  3589   000954  0101               	movlb	1	; () banked
  3590   000956  2B9F               	incf	Display_GPS@i& (0+255),f,b
  3591   000958                     l2801:
  3592                           
  3593                           ; BSR set to: 1
  3594   000958  0E05               	movlw	5
  3595   00095A  619F               	cpfslt	Display_GPS@i& (0+255),b
  3596   00095C  EFB2  F004         	goto	u2361
  3597   000960  EFB4  F004         	goto	u2360
  3598   000964                     u2361:
  3599   000964  EFBC  F004         	goto	l2805
  3600   000968                     u2360:
  3601   000968                     
  3602                           ; BSR set to: 1
  3603   000968  51A0               	movf	Display_GPS@valid& (0+255),w,b
  3604   00096A  B4D8               	btfsc	status,2,c
  3605   00096C  EFBA  F004         	goto	u2371
  3606   000970  EFBC  F004         	goto	u2370
  3607   000974                     u2371:
  3608   000974  EF75  F004         	goto	l2793
  3609   000978                     u2370:
  3610   000978                     l2805:
  3611                           
  3612                           ; BSR set to: 1
  3613                           ;main.c: 53:     Clear_Line(0); Clear_Line(1);
  3614   000978  0E00               	movlw	0
  3615   00097A  ECFA  F010         	call	_Clear_Line
  3616   00097E  0E01               	movlw	1
  3617   000980  ECFA  F010         	call	_Clear_Line
  3618   000984                     
  3619                           ;main.c: 54:     if(valid) {
  3620   000984  0101               	movlb	1	; () banked
  3621   000986  51A0               	movf	Display_GPS@valid& (0+255),w,b
  3622   000988  B4D8               	btfsc	status,2,c
  3623   00098A  EFC9  F004         	goto	u2381
  3624   00098E  EFCB  F004         	goto	u2380
  3625   000992                     u2381:
  3626   000992  EF7D  F005         	goto	l2839
  3627   000996                     u2380:
  3628   000996                     
  3629                           ; BSR set to: 1
  3630                           ;main.c: 55:         char formatted_lat[17] = {0};
  3631   000996  EE21  F079         	lfsr	2,Display_GPS@formatted_lat
  3632   00099A  0E10               	movlw	16
  3633   00099C                     u2391:
  3634   00099C  6ADE               	clrf	postinc2,c
  3635   00099E  06E8               	decf	wreg,f,c
  3636   0009A0  E2FD               	bc	u2391
  3637                           
  3638                           ;main.c: 56:         char formatted_lon[17] = {0};
  3639   0009A2  EE21  F08A         	lfsr	2,Display_GPS@formatted_lon
  3640   0009A6  0E10               	movlw	16
  3641   0009A8                     u2401:
  3642   0009A8  6ADE               	clrf	postinc2,c
  3643   0009AA  06E8               	decf	wreg,f,c
  3644   0009AC  E2FD               	bc	u2401
  3645   0009AE                     
  3646                           ; BSR set to: 1
  3647                           ;main.c: 59:         strncpy(formatted_lat, lat, 2);
  3648   0009AE  0E79               	movlw	low Display_GPS@formatted_lat
  3649   0009B0  6E01               	movwf	strncpy@d^0,c
  3650   0009B2  0E01               	movlw	high Display_GPS@formatted_lat
  3651   0009B4  6E02               	movwf	(strncpy@d+1)^0,c
  3652   0009B6  0E6F               	movlw	low Display_GPS@lat
  3653   0009B8  6E03               	movwf	strncpy@s^0,c
  3654   0009BA  0E01               	movlw	high Display_GPS@lat
  3655   0009BC  6E04               	movwf	(strncpy@s+1)^0,c
  3656   0009BE  0E00               	movlw	0
  3657   0009C0  6E06               	movwf	(strncpy@n+1)^0,c
  3658   0009C2  0E02               	movlw	2
  3659   0009C4  6E05               	movwf	strncpy@n^0,c
  3660   0009C6  EC7F  F00D         	call	_strncpy	;wreg free
  3661   0009CA                     
  3662                           ;main.c: 60:         strcat(formatted_lat, "\xDF");
  3663   0009CA  0E79               	movlw	low Display_GPS@formatted_lat
  3664   0009CC  6E01               	movwf	strcat@dest^0,c
  3665   0009CE  0E01               	movlw	high Display_GPS@formatted_lat
  3666   0009D0  6E02               	movwf	(strcat@dest+1)^0,c
  3667   0009D2  0EB5               	movlw	low STR_5
  3668   0009D4  6E03               	movwf	strcat@src^0,c
  3669   0009D6  5003               	movf	strcat@src^0,w,c
  3670   0009D8  A4D8               	btfss	status,2,c
  3671   0009DA  0E08               	movlw	high __smallconst
  3672   0009DC  6E04               	movwf	(strcat@src+1)^0,c
  3673   0009DE  EC01  F00E         	call	_strcat	;wreg free
  3674   0009E2                     
  3675                           ;main.c: 61:         strncat(formatted_lat, lat + 2, 5);
  3676   0009E2  0E79               	movlw	low Display_GPS@formatted_lat
  3677   0009E4  6E01               	movwf	strncat@dest^0,c
  3678   0009E6  0E01               	movlw	high Display_GPS@formatted_lat
  3679   0009E8  6E02               	movwf	(strncat@dest+1)^0,c
  3680   0009EA  0E71               	movlw	low (Display_GPS@lat+2)
  3681   0009EC  6E03               	movwf	strncat@src^0,c
  3682   0009EE  0E01               	movlw	high (Display_GPS@lat+2)
  3683   0009F0  6E04               	movwf	(strncat@src+1)^0,c
  3684   0009F2  0E00               	movlw	0
  3685   0009F4  6E06               	movwf	(strncat@n+1)^0,c
  3686   0009F6  0E05               	movlw	5
  3687   0009F8  6E05               	movwf	strncat@n^0,c
  3688   0009FA  ECF7  F00C         	call	_strncat	;wreg free
  3689   0009FE                     
  3690                           ;main.c: 62:         strcat(formatted_lat, "' ");
  3691   0009FE  0E79               	movlw	low Display_GPS@formatted_lat
  3692   000A00  6E01               	movwf	strcat@dest^0,c
  3693   000A02  0E01               	movlw	high Display_GPS@formatted_lat
  3694   000A04  6E02               	movwf	(strcat@dest+1)^0,c
  3695   000A06  0EB0               	movlw	low STR_6
  3696   000A08  6E03               	movwf	strcat@src^0,c
  3697   000A0A  5003               	movf	strcat@src^0,w,c
  3698   000A0C  A4D8               	btfss	status,2,c
  3699   000A0E  0E08               	movlw	high __smallconst
  3700   000A10  6E04               	movwf	(strcat@src+1)^0,c
  3701   000A12  EC01  F00E         	call	_strcat	;wreg free
  3702   000A16                     
  3703                           ;main.c: 63:         strcat(formatted_lat, ns);
  3704   000A16  0E79               	movlw	low Display_GPS@formatted_lat
  3705   000A18  6E01               	movwf	strcat@dest^0,c
  3706   000A1A  0E01               	movlw	high Display_GPS@formatted_lat
  3707   000A1C  6E02               	movwf	(strcat@dest+1)^0,c
  3708   000A1E  0E9B               	movlw	low Display_GPS@ns
  3709   000A20  6E03               	movwf	strcat@src^0,c
  3710   000A22  0E01               	movlw	high Display_GPS@ns
  3711   000A24  6E04               	movwf	(strcat@src+1)^0,c
  3712   000A26  EC01  F00E         	call	_strcat	;wreg free
  3713   000A2A                     
  3714                           ;main.c: 66:         strncpy(formatted_lon, lon, 3);
  3715   000A2A  0E8A               	movlw	low Display_GPS@formatted_lon
  3716   000A2C  6E01               	movwf	strncpy@d^0,c
  3717   000A2E  0E01               	movlw	high Display_GPS@formatted_lon
  3718   000A30  6E02               	movwf	(strncpy@d+1)^0,c
  3719   000A32  0E64               	movlw	low Display_GPS@lon
  3720   000A34  6E03               	movwf	strncpy@s^0,c
  3721   000A36  0E01               	movlw	high Display_GPS@lon
  3722   000A38  6E04               	movwf	(strncpy@s+1)^0,c
  3723   000A3A  0E00               	movlw	0
  3724   000A3C  6E06               	movwf	(strncpy@n+1)^0,c
  3725   000A3E  0E03               	movlw	3
  3726   000A40  6E05               	movwf	strncpy@n^0,c
  3727   000A42  EC7F  F00D         	call	_strncpy	;wreg free
  3728   000A46                     
  3729                           ;main.c: 67:         strcat(formatted_lon, "\xDF");
  3730   000A46  0E8A               	movlw	low Display_GPS@formatted_lon
  3731   000A48  6E01               	movwf	strcat@dest^0,c
  3732   000A4A  0E01               	movlw	high Display_GPS@formatted_lon
  3733   000A4C  6E02               	movwf	(strcat@dest+1)^0,c
  3734   000A4E  0EB5               	movlw	low STR_5
  3735   000A50  6E03               	movwf	strcat@src^0,c
  3736   000A52  5003               	movf	strcat@src^0,w,c
  3737   000A54  A4D8               	btfss	status,2,c
  3738   000A56  0E08               	movlw	high __smallconst
  3739   000A58  6E04               	movwf	(strcat@src+1)^0,c
  3740   000A5A  EC01  F00E         	call	_strcat	;wreg free
  3741   000A5E                     
  3742                           ;main.c: 68:         strncat(formatted_lon, lon + 3, 5);
  3743   000A5E  0E8A               	movlw	low Display_GPS@formatted_lon
  3744   000A60  6E01               	movwf	strncat@dest^0,c
  3745   000A62  0E01               	movlw	high Display_GPS@formatted_lon
  3746   000A64  6E02               	movwf	(strncat@dest+1)^0,c
  3747   000A66  0E67               	movlw	low (Display_GPS@lon+3)
  3748   000A68  6E03               	movwf	strncat@src^0,c
  3749   000A6A  0E01               	movlw	high (Display_GPS@lon+3)
  3750   000A6C  6E04               	movwf	(strncat@src+1)^0,c
  3751   000A6E  0E00               	movlw	0
  3752   000A70  6E06               	movwf	(strncat@n+1)^0,c
  3753   000A72  0E05               	movlw	5
  3754   000A74  6E05               	movwf	strncat@n^0,c
  3755   000A76  ECF7  F00C         	call	_strncat	;wreg free
  3756   000A7A                     
  3757                           ;main.c: 69:         strcat(formatted_lon, "' ");
  3758   000A7A  0E8A               	movlw	low Display_GPS@formatted_lon
  3759   000A7C  6E01               	movwf	strcat@dest^0,c
  3760   000A7E  0E01               	movlw	high Display_GPS@formatted_lon
  3761   000A80  6E02               	movwf	(strcat@dest+1)^0,c
  3762   000A82  0EB0               	movlw	low STR_6
  3763   000A84  6E03               	movwf	strcat@src^0,c
  3764   000A86  5003               	movf	strcat@src^0,w,c
  3765   000A88  A4D8               	btfss	status,2,c
  3766   000A8A  0E08               	movlw	high __smallconst
  3767   000A8C  6E04               	movwf	(strcat@src+1)^0,c
  3768   000A8E  EC01  F00E         	call	_strcat	;wreg free
  3769   000A92                     
  3770                           ;main.c: 70:         strcat(formatted_lon, ew);
  3771   000A92  0E8A               	movlw	low Display_GPS@formatted_lon
  3772   000A94  6E01               	movwf	strcat@dest^0,c
  3773   000A96  0E01               	movlw	high Display_GPS@formatted_lon
  3774   000A98  6E02               	movwf	(strcat@dest+1)^0,c
  3775   000A9A  0E9D               	movlw	low Display_GPS@ew
  3776   000A9C  6E03               	movwf	strcat@src^0,c
  3777   000A9E  0E01               	movlw	high Display_GPS@ew
  3778   000AA0  6E04               	movwf	(strcat@src+1)^0,c
  3779   000AA2  EC01  F00E         	call	_strcat	;wreg free
  3780   000AA6                     
  3781                           ;main.c: 72:         LCD_String_xy(0,0,"Lat:");
  3782   000AA6  0E00               	movlw	0
  3783   000AA8  6E05               	movwf	LCD_String_xy@pos^0,c
  3784   000AAA  0EAB               	movlw	low STR_9
  3785   000AAC  6E06               	movwf	LCD_String_xy@msg^0,c
  3786   000AAE  5006               	movf	LCD_String_xy@msg^0,w,c
  3787   000AB0  A4D8               	btfss	status,2,c
  3788   000AB2  0E08               	movlw	high __smallconst
  3789   000AB4  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3790   000AB6  0E00               	movlw	0
  3791   000AB8  EC3C  F00F         	call	_LCD_String_xy
  3792   000ABC                     
  3793                           ;main.c: 73:         LCD_String_xy(0,4,formatted_lat);
  3794   000ABC  0E04               	movlw	4
  3795   000ABE  6E05               	movwf	LCD_String_xy@pos^0,c
  3796   000AC0  0E79               	movlw	low Display_GPS@formatted_lat
  3797   000AC2  6E06               	movwf	LCD_String_xy@msg^0,c
  3798   000AC4  0E01               	movlw	high Display_GPS@formatted_lat
  3799   000AC6  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3800   000AC8  0E00               	movlw	0
  3801   000ACA  EC3C  F00F         	call	_LCD_String_xy
  3802   000ACE                     
  3803                           ;main.c: 74:         LCD_String_xy(1,0,"Lon:");
  3804   000ACE  0E00               	movlw	0
  3805   000AD0  6E05               	movwf	LCD_String_xy@pos^0,c
  3806   000AD2  0EA6               	movlw	low STR_10
  3807   000AD4  6E06               	movwf	LCD_String_xy@msg^0,c
  3808   000AD6  5006               	movf	LCD_String_xy@msg^0,w,c
  3809   000AD8  A4D8               	btfss	status,2,c
  3810   000ADA  0E08               	movlw	high __smallconst
  3811   000ADC  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3812   000ADE  0E01               	movlw	1
  3813   000AE0  EC3C  F00F         	call	_LCD_String_xy
  3814   000AE4                     
  3815                           ;main.c: 75:         LCD_String_xy(1,4,formatted_lon);
  3816   000AE4  0E04               	movlw	4
  3817   000AE6  6E05               	movwf	LCD_String_xy@pos^0,c
  3818   000AE8  0E8A               	movlw	low Display_GPS@formatted_lon
  3819   000AEA  6E06               	movwf	LCD_String_xy@msg^0,c
  3820   000AEC  0E01               	movlw	high Display_GPS@formatted_lon
  3821   000AEE  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3822   000AF0  0E01               	movlw	1
  3823   000AF2  EC3C  F00F         	call	_LCD_String_xy
  3824                           
  3825                           ;main.c: 76:     } else {
  3826   000AF6  EF93  F005         	goto	l71
  3827   000AFA                     l2839:
  3828                           
  3829                           ; BSR set to: 1
  3830                           ;main.c: 77:         LCD_String_xy(0,0,"GPS: Sin senal");
  3831   000AFA  0E00               	movlw	0
  3832   000AFC  6E05               	movwf	LCD_String_xy@pos^0,c
  3833   000AFE  0E33               	movlw	low STR_11
  3834   000B00  6E06               	movwf	LCD_String_xy@msg^0,c
  3835   000B02  5006               	movf	LCD_String_xy@msg^0,w,c
  3836   000B04  A4D8               	btfss	status,2,c
  3837   000B06  0E08               	movlw	high __smallconst
  3838   000B08  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3839   000B0A  0E00               	movlw	0
  3840   000B0C  EC3C  F00F         	call	_LCD_String_xy
  3841                           
  3842                           ;main.c: 78:         LCD_String_xy(1,0,"Reintentando");
  3843   000B10  0E00               	movlw	0
  3844   000B12  6E05               	movwf	LCD_String_xy@pos^0,c
  3845   000B14  0E78               	movlw	low STR_12
  3846   000B16  6E06               	movwf	LCD_String_xy@msg^0,c
  3847   000B18  5006               	movf	LCD_String_xy@msg^0,w,c
  3848   000B1A  A4D8               	btfss	status,2,c
  3849   000B1C  0E08               	movlw	high __smallconst
  3850   000B1E  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3851   000B20  0E01               	movlw	1
  3852   000B22  EC3C  F00F         	call	_LCD_String_xy
  3853   000B26                     l71:
  3854   000B26  0012               	return		;funcret
  3855   000B28                     __end_of_Display_GPS:
  3856                           	callstack 0
  3857                           
  3858 ;; *************** function _strncat *****************
  3859 ;; Defined at:
  3860 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncat.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3863 ;;		 -> Display_GPS@formatted_lon(17), Display_GPS@formatted_lat(17), 
  3864 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3865 ;;		 -> Display_GPS@lon(11), Display_GPS@lat(10), 
  3866 ;;  n               2    4[COMRAM] unsigned int 
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;  cp              2    6[COMRAM] PTR unsigned char 
  3869 ;;		 -> Display_GPS@formatted_lon(17), Display_GPS@formatted_lat(17), 
  3870 ;; Return value:  Size  Location     Type
  3871 ;;                  2    0[COMRAM] PTR unsigned char 
  3872 ;; Registers used:
  3873 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3874 ;; Tracked objects:
  3875 ;;		On entry : 0/0
  3876 ;;		On exit  : 0/0
  3877 ;;		Unchanged: 0/0
  3878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3879 ;;      Params:         6       0       0       0       0       0       0       0       0
  3880 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3881 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3882 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3883 ;;Total ram usage:        8 bytes
  3884 ;; Hardware stack levels used: 1
  3885 ;; This function calls:
  3886 ;;		Nothing
  3887 ;; This function is called by:
  3888 ;;		_Display_GPS
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text17
  3893   0019EE                     __ptext17:
  3894                           	callstack 0
  3895   0019EE                     _strncat:
  3896                           	callstack 29
  3897   0019EE  C001  F007         	movff	strncat@dest,strncat@cp
  3898   0019F2  C002  F008         	movff	strncat@dest+1,strncat@cp+1
  3899   0019F6  EFFF  F00C         	goto	l2723
  3900   0019FA                     l2721:
  3901   0019FA  4A07               	infsnz	strncat@cp^0,f,c
  3902   0019FC  2A08               	incf	(strncat@cp+1)^0,f,c
  3903   0019FE                     l2723:
  3904   0019FE  C007  FFD9         	movff	strncat@cp,fsr2l
  3905   001A02  C008  FFDA         	movff	strncat@cp+1,fsr2h
  3906   001A06  50DF               	movf	indf2,w,c
  3907   001A08  A4D8               	btfss	status,2,c
  3908   001A0A  EF09  F00D         	goto	u2251
  3909   001A0E  EF0B  F00D         	goto	u2250
  3910   001A12                     u2251:
  3911   001A12  EFFD  F00C         	goto	l2721
  3912   001A16                     u2250:
  3913   001A16  EF14  F00D         	goto	l2727
  3914   001A1A                     l2725:
  3915   001A1A  4A07               	infsnz	strncat@cp^0,f,c
  3916   001A1C  2A08               	incf	(strncat@cp+1)^0,f,c
  3917   001A1E  4A03               	infsnz	strncat@src^0,f,c
  3918   001A20  2A04               	incf	(strncat@src+1)^0,f,c
  3919   001A22  0605               	decf	strncat@n^0,f,c
  3920   001A24  A0D8               	btfss	status,0,c
  3921   001A26  0606               	decf	(strncat@n+1)^0,f,c
  3922   001A28                     l2727:
  3923   001A28  5005               	movf	strncat@n^0,w,c
  3924   001A2A  1006               	iorwf	(strncat@n+1)^0,w,c
  3925   001A2C  B4D8               	btfsc	status,2,c
  3926   001A2E  EF1B  F00D         	goto	u2261
  3927   001A32  EF1D  F00D         	goto	u2260
  3928   001A36                     u2261:
  3929   001A36  EF2F  F00D         	goto	l2731
  3930   001A3A                     u2260:
  3931   001A3A  C003  FFD9         	movff	strncat@src,fsr2l
  3932   001A3E  C004  FFDA         	movff	strncat@src+1,fsr2h
  3933   001A42  C007  FFE1         	movff	strncat@cp,fsr1l
  3934   001A46  C008  FFE2         	movff	strncat@cp+1,fsr1h
  3935   001A4A  CFDF FFE7          	movff	indf2,indf1
  3936   001A4E  50E7               	movf	indf1,w,c
  3937   001A50  A4D8               	btfss	status,2,c
  3938   001A52  EF2D  F00D         	goto	u2271
  3939   001A56  EF2F  F00D         	goto	u2270
  3940   001A5A                     u2271:
  3941   001A5A  EF0D  F00D         	goto	l2725
  3942   001A5E                     u2270:
  3943   001A5E                     l2731:
  3944   001A5E  5005               	movf	strncat@n^0,w,c
  3945   001A60  1006               	iorwf	(strncat@n+1)^0,w,c
  3946   001A62  A4D8               	btfss	status,2,c
  3947   001A64  EF36  F00D         	goto	u2281
  3948   001A68  EF38  F00D         	goto	u2280
  3949   001A6C                     u2281:
  3950   001A6C  EF3D  F00D         	goto	l1109
  3951   001A70                     u2280:
  3952   001A70  C007  FFD9         	movff	strncat@cp,fsr2l
  3953   001A74  C008  FFDA         	movff	strncat@cp+1,fsr2h
  3954   001A78  6ADF               	clrf	indf2,c
  3955   001A7A                     l1109:
  3956   001A7A  0012               	return		;funcret
  3957   001A7C                     __end_of_strncat:
  3958                           	callstack 0
  3959                           
  3960 ;; *************** function _strcat *****************
  3961 ;; Defined at:
  3962 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcat.c"
  3963 ;; Parameters:    Size  Location     Type
  3964 ;;  dest            2    0[COMRAM] PTR unsigned char 
  3965 ;;		 -> Display_GPS@formatted_lon(17), Display_GPS@formatted_lat(17), 
  3966 ;;  src             2    2[COMRAM] PTR const unsigned char 
  3967 ;;		 -> STR_8(3), STR_7(2), STR_6(3), STR_5(2), 
  3968 ;;		 -> Display_GPS@ew(2), Display_GPS@ns(2), 
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  i               2    4[COMRAM] unsigned int 
  3971 ;; Return value:  Size  Location     Type
  3972 ;;                  2    0[COMRAM] PTR unsigned char 
  3973 ;; Registers used:
  3974 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3975 ;; Tracked objects:
  3976 ;;		On entry : 0/0
  3977 ;;		On exit  : 0/0
  3978 ;;		Unchanged: 0/0
  3979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3980 ;;      Params:         4       0       0       0       0       0       0       0       0
  3981 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3982 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3983 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3984 ;;Total ram usage:        6 bytes
  3985 ;; Hardware stack levels used: 1
  3986 ;; This function calls:
  3987 ;;		Nothing
  3988 ;; This function is called by:
  3989 ;;		_Display_GPS
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           
  3993                           	psect	text18
  3994   001C02                     __ptext18:
  3995                           	callstack 0
  3996   001C02                     _strcat:
  3997                           	callstack 29
  3998   001C02  0E00               	movlw	0
  3999   001C04  6E06               	movwf	(strcat@i+1)^0,c
  4000   001C06  0E00               	movlw	0
  4001   001C08  6E05               	movwf	strcat@i^0,c
  4002   001C0A  EF09  F00E         	goto	l2713
  4003   001C0E                     l2711:
  4004   001C0E  4A05               	infsnz	strcat@i^0,f,c
  4005   001C10  2A06               	incf	(strcat@i+1)^0,f,c
  4006   001C12                     l2713:
  4007   001C12  5005               	movf	strcat@i^0,w,c
  4008   001C14  2401               	addwf	strcat@dest^0,w,c
  4009   001C16  6ED9               	movwf	fsr2l,c
  4010   001C18  5006               	movf	(strcat@i+1)^0,w,c
  4011   001C1A  2002               	addwfc	(strcat@dest+1)^0,w,c
  4012   001C1C  6EDA               	movwf	fsr2h,c
  4013   001C1E  50DF               	movf	indf2,w,c
  4014   001C20  A4D8               	btfss	status,2,c
  4015   001C22  EF15  F00E         	goto	u2221
  4016   001C26  EF17  F00E         	goto	u2220
  4017   001C2A                     u2221:
  4018   001C2A  EF07  F00E         	goto	l2711
  4019   001C2E                     u2220:
  4020   001C2E  EF1D  F00E         	goto	l2717
  4021   001C32                     l2715:
  4022   001C32  4A05               	infsnz	strcat@i^0,f,c
  4023   001C34  2A06               	incf	(strcat@i+1)^0,f,c
  4024   001C36  4A03               	infsnz	strcat@src^0,f,c
  4025   001C38  2A04               	incf	(strcat@src+1)^0,f,c
  4026   001C3A                     l2717:
  4027   001C3A  C003  FFF6         	movff	strcat@src,tblptrl
  4028   001C3E  C004  FFF7         	movff	strcat@src+1,tblptrh
  4029   001C42  6AF8               	clrf	tblptru,c
  4030   001C44  5005               	movf	strcat@i^0,w,c
  4031   001C46  2401               	addwf	strcat@dest^0,w,c
  4032   001C48  6ED9               	movwf	fsr2l,c
  4033   001C4A  5006               	movf	(strcat@i+1)^0,w,c
  4034   001C4C  2002               	addwfc	(strcat@dest+1)^0,w,c
  4035   001C4E  6EDA               	movwf	fsr2h,c
  4036   001C50  0E07               	movlw	(high __ramtop+-1)
  4037   001C52  64F7               	cpfsgt	tblptrh,c
  4038   001C54  D003               	bra	u2237
  4039   001C56  0008               	tblrd		*
  4040   001C58  50F5               	movf	tablat,w,c
  4041   001C5A  D005               	bra	u2230
  4042   001C5C                     u2237:
  4043   001C5C  CFF6 FFE9          	movff	tblptrl,fsr0l
  4044   001C60  CFF7 FFEA          	movff	tblptrh,fsr0h
  4045   001C64  50EF               	movf	indf0,w,c
  4046   001C66                     u2230:
  4047   001C66  6EDF               	movwf	indf2,c
  4048   001C68  50DF               	movf	indf2,w,c
  4049   001C6A  A4D8               	btfss	status,2,c
  4050   001C6C  EF3A  F00E         	goto	u2241
  4051   001C70  EF3C  F00E         	goto	u2240
  4052   001C74                     u2241:
  4053   001C74  EF19  F00E         	goto	l2715
  4054   001C78                     u2240:
  4055   001C78  0012               	return		;funcret
  4056   001C7A                     __end_of_strcat:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _GPS_ReadSentence *****************
  4060 ;; Defined at:
  4061 ;;		line 24 in file "GPS.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  buffer          2    0[COMRAM] PTR unsigned char 
  4064 ;;		 -> Display_GPS@buffer(100), 
  4065 ;;  max_len         2    2[COMRAM] unsigned short 
  4066 ;;  timeout_ms      2    4[COMRAM] unsigned short 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  t               2    8[COMRAM] unsigned short 
  4069 ;;  dummy           1   10[COMRAM] volatile unsigned char 
  4070 ;;  i               2   12[COMRAM] unsigned short 
  4071 ;;  c               1   14[COMRAM] unsigned char 
  4072 ;;  started         1   11[COMRAM] unsigned char 
  4073 ;; Return value:  Size  Location     Type
  4074 ;;                  1    wreg      unsigned char 
  4075 ;; Registers used:
  4076 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4077 ;; Tracked objects:
  4078 ;;		On entry : 0/0
  4079 ;;		On exit  : 0/0
  4080 ;;		Unchanged: 0/0
  4081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4082 ;;      Params:         6       0       0       0       0       0       0       0       0
  4083 ;;      Locals:         7       0       0       0       0       0       0       0       0
  4084 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4085 ;;      Totals:        15       0       0       0       0       0       0       0       0
  4086 ;;Total ram usage:       15 bytes
  4087 ;; Hardware stack levels used: 1
  4088 ;; This function calls:
  4089 ;;		Nothing
  4090 ;; This function is called by:
  4091 ;;		_Display_GPS
  4092 ;; This function uses a non-reentrant model
  4093 ;;
  4094                           
  4095                           	psect	text19
  4096   000EF2                     __ptext19:
  4097                           	callstack 0
  4098   000EF2                     _GPS_ReadSentence:
  4099                           	callstack 29
  4100   000EF2                     
  4101                           ;GPS.c: 25:     uint16_t i = 0;
  4102   000EF2  0E00               	movlw	0
  4103   000EF4  6E0E               	movwf	(GPS_ReadSentence@i+1)^0,c
  4104   000EF6  0E00               	movlw	0
  4105   000EF8  6E0D               	movwf	GPS_ReadSentence@i^0,c
  4106   000EFA                     
  4107                           ;GPS.c: 26:     char c;;GPS.c: 27:     uint8_t started = 0;
  4108   000EFA  6A0C               	clrf	GPS_ReadSentence@started^0,c
  4109   000EFC                     
  4110                           ;GPS.c: 30:     RCSTAbits.CREN = 0;
  4111   000EFC  98AB               	bcf	171,4,c	;volatile
  4112   000EFE                     
  4113                           ;GPS.c: 31:     __nop();
  4114   000EFE  0000               	nop	
  4115   000F00                     
  4116                           ;GPS.c: 32:     RCSTAbits.CREN = 1;
  4117   000F00  88AB               	bsf	171,4,c	;volatile
  4118                           
  4119                           ;GPS.c: 35:     while(PIR1bits.RCIF) {
  4120   000F02  EF85  F007         	goto	l155
  4121   000F06                     l156:
  4122                           
  4123                           ;GPS.c: 36:         volatile char dummy = RCREG;
  4124   000F06  CFAE F00B          	movff	4014,GPS_ReadSentence@dummy	;volatile
  4125   000F0A                     l155:
  4126                           
  4127                           ;GPS.c: 35:     while(PIR1bits.RCIF) {
  4128   000F0A  BA9E               	btfsc	158,5,c	;volatile
  4129   000F0C  EF8A  F007         	goto	u1971
  4130   000F10  EF8C  F007         	goto	u1970
  4131   000F14                     u1971:
  4132   000F14  EF83  F007         	goto	l156
  4133   000F18                     u1970:
  4134   000F18                     
  4135                           ;GPS.c: 41:     for(uint16_t t = 0; t < timeout_ms; t++) {
  4136   000F18  0E00               	movlw	0
  4137   000F1A  6E0A               	movwf	(GPS_ReadSentence@t+1)^0,c
  4138   000F1C  0E00               	movlw	0
  4139   000F1E  6E09               	movwf	GPS_ReadSentence@t^0,c
  4140   000F20  EF02  F008         	goto	l2635
  4141   000F24                     l159:
  4142                           
  4143                           ;GPS.c: 42:         if(PIR1bits.RCIF) {
  4144   000F24  AA9E               	btfss	158,5,c	;volatile
  4145   000F26  EF97  F007         	goto	u1981
  4146   000F2A  EF99  F007         	goto	u1980
  4147   000F2E                     u1981:
  4148   000F2E  EFFC  F007         	goto	l2631
  4149   000F32                     u1980:
  4150   000F32                     
  4151                           ;GPS.c: 43:             c = RCREG;
  4152   000F32  CFAE F00F          	movff	4014,GPS_ReadSentence@c	;volatile
  4153                           
  4154                           ;GPS.c: 46:             if(RCSTAbits.OERR) {
  4155   000F36  A2AB               	btfss	171,1,c	;volatile
  4156   000F38  EFA0  F007         	goto	u1991
  4157   000F3C  EFA2  F007         	goto	u1990
  4158   000F40                     u1991:
  4159   000F40  EFA6  F007         	goto	l2603
  4160   000F44                     u1990:
  4161   000F44                     
  4162                           ;GPS.c: 47:                 RCSTAbits.CREN = 0;
  4163   000F44  98AB               	bcf	171,4,c	;volatile
  4164                           
  4165                           ;GPS.c: 48:                 RCSTAbits.CREN = 1;
  4166   000F46  88AB               	bsf	171,4,c	;volatile
  4167                           
  4168                           ;GPS.c: 49:                 continue;
  4169   000F48  EF00  F008         	goto	l2633
  4170   000F4C                     l2603:
  4171                           
  4172                           ;GPS.c: 53:             if(!started && c == '$') {
  4173   000F4C  500C               	movf	GPS_ReadSentence@started^0,w,c
  4174   000F4E  A4D8               	btfss	status,2,c
  4175   000F50  EFAC  F007         	goto	u2001
  4176   000F54  EFAE  F007         	goto	u2000
  4177   000F58                     u2001:
  4178   000F58  EFC5  F007         	goto	l2613
  4179   000F5C                     u2000:
  4180   000F5C  0E24               	movlw	36
  4181   000F5E  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  4182   000F60  A4D8               	btfss	status,2,c
  4183   000F62  EFB5  F007         	goto	u2011
  4184   000F66  EFB7  F007         	goto	u2010
  4185   000F6A                     u2011:
  4186   000F6A  EFC5  F007         	goto	l2613
  4187   000F6E                     u2010:
  4188   000F6E                     
  4189                           ;GPS.c: 54:                 started = 1;
  4190   000F6E  0E01               	movlw	1
  4191   000F70  6E0C               	movwf	GPS_ReadSentence@started^0,c
  4192   000F72                     l2609:
  4193                           
  4194                           ;GPS.c: 55:                 buffer[i++] = c;
  4195   000F72  500D               	movf	GPS_ReadSentence@i^0,w,c
  4196   000F74  2401               	addwf	GPS_ReadSentence@buffer^0,w,c
  4197   000F76  6ED9               	movwf	fsr2l,c
  4198   000F78  500E               	movf	(GPS_ReadSentence@i+1)^0,w,c
  4199   000F7A  2002               	addwfc	(GPS_ReadSentence@buffer+1)^0,w,c
  4200   000F7C  6EDA               	movwf	fsr2h,c
  4201   000F7E  C00F  FFDF         	movff	GPS_ReadSentence@c,indf2
  4202   000F82  4A0D               	infsnz	GPS_ReadSentence@i^0,f,c
  4203   000F84  2A0E               	incf	(GPS_ReadSentence@i+1)^0,f,c
  4204                           
  4205                           ;GPS.c: 56:             }
  4206   000F86  EFFC  F007         	goto	l2631
  4207   000F8A                     l2613:
  4208   000F8A  500C               	movf	GPS_ReadSentence@started^0,w,c
  4209   000F8C  B4D8               	btfsc	status,2,c
  4210   000F8E  EFCB  F007         	goto	u2021
  4211   000F92  EFCD  F007         	goto	u2020
  4212   000F96                     u2021:
  4213   000F96  EFFC  F007         	goto	l2631
  4214   000F9A                     u2020:
  4215   000F9A                     
  4216                           ;GPS.c: 59:                 if(c == '\n' || i >= max_len-1) {
  4217   000F9A  0E0A               	movlw	10
  4218   000F9C  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  4219   000F9E  B4D8               	btfsc	status,2,c
  4220   000FA0  EFD4  F007         	goto	u2031
  4221   000FA4  EFD6  F007         	goto	u2030
  4222   000FA8                     u2031:
  4223   000FA8  EFE7  F007         	goto	l2619
  4224   000FAC                     u2030:
  4225   000FAC  0EFF               	movlw	255
  4226   000FAE  2403               	addwf	GPS_ReadSentence@max_len^0,w,c
  4227   000FB0  6E07               	movwf	??_GPS_ReadSentence^0,c
  4228   000FB2  0EFF               	movlw	255
  4229   000FB4  2004               	addwfc	(GPS_ReadSentence@max_len+1)^0,w,c
  4230   000FB6  6E08               	movwf	(??_GPS_ReadSentence+1)^0,c
  4231   000FB8  5007               	movf	??_GPS_ReadSentence^0,w,c
  4232   000FBA  5C0D               	subwf	GPS_ReadSentence@i^0,w,c
  4233   000FBC  5008               	movf	(??_GPS_ReadSentence+1)^0,w,c
  4234   000FBE  580E               	subwfb	(GPS_ReadSentence@i+1)^0,w,c
  4235   000FC0  A0D8               	btfss	status,0,c
  4236   000FC2  EFE5  F007         	goto	u2041
  4237   000FC6  EFE7  F007         	goto	u2040
  4238   000FCA                     u2041:
  4239   000FCA  EFF1  F007         	goto	l2625
  4240   000FCE                     u2040:
  4241   000FCE                     l2619:
  4242                           
  4243                           ;GPS.c: 60:                     buffer[i] = '\0';
  4244   000FCE  500D               	movf	GPS_ReadSentence@i^0,w,c
  4245   000FD0  2401               	addwf	GPS_ReadSentence@buffer^0,w,c
  4246   000FD2  6ED9               	movwf	fsr2l,c
  4247   000FD4  500E               	movf	(GPS_ReadSentence@i+1)^0,w,c
  4248   000FD6  2002               	addwfc	(GPS_ReadSentence@buffer+1)^0,w,c
  4249   000FD8  6EDA               	movwf	fsr2h,c
  4250   000FDA  6ADF               	clrf	indf2,c
  4251   000FDC                     
  4252                           ;GPS.c: 61:                     return 1;
  4253   000FDC  0E01               	movlw	1
  4254   000FDE  EF0E  F008         	goto	l169
  4255   000FE2                     l2625:
  4256                           
  4257                           ;GPS.c: 63:                 if(c != '\r') buffer[i++] = c;
  4258   000FE2  0E0D               	movlw	13
  4259   000FE4  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  4260   000FE6  B4D8               	btfsc	status,2,c
  4261   000FE8  EFF8  F007         	goto	u2051
  4262   000FEC  EFFA  F007         	goto	u2050
  4263   000FF0                     u2051:
  4264   000FF0  EFFC  F007         	goto	l164
  4265   000FF4                     u2050:
  4266   000FF4  EFB9  F007         	goto	l2609
  4267   000FF8                     l164:
  4268   000FF8                     l2631:
  4269                           
  4270                           ;GPS.c: 66:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  4271   000FF8  0E42               	movlw	66
  4272   000FFA                     u2507:
  4273   000FFA  2EE8               	decfsz	wreg,f,c
  4274   000FFC  D7FE               	bra	u2507
  4275   000FFE  D000               	nop2	
  4276   001000                     l2633:
  4277   001000  4A09               	infsnz	GPS_ReadSentence@t^0,f,c
  4278   001002  2A0A               	incf	(GPS_ReadSentence@t+1)^0,f,c
  4279   001004                     l2635:
  4280   001004  5005               	movf	GPS_ReadSentence@timeout_ms^0,w,c
  4281   001006  5C09               	subwf	GPS_ReadSentence@t^0,w,c
  4282   001008  5006               	movf	(GPS_ReadSentence@timeout_ms+1)^0,w,c
  4283   00100A  580A               	subwfb	(GPS_ReadSentence@t+1)^0,w,c
  4284   00100C  A0D8               	btfss	status,0,c
  4285   00100E  EF0B  F008         	goto	u2061
  4286   001012  EF0D  F008         	goto	u2060
  4287   001016                     u2061:
  4288   001016  EF92  F007         	goto	l159
  4289   00101A                     u2060:
  4290   00101A                     
  4291                           ;GPS.c: 68:     return 0;
  4292   00101A  0E00               	movlw	0
  4293   00101C                     l169:
  4294   00101C  0012               	return		;funcret
  4295   00101E                     __end_of_GPS_ReadSentence:
  4296                           	callstack 0
  4297                           
  4298 ;; *************** function _GPS_ParseGPRMC *****************
  4299 ;; Defined at:
  4300 ;;		line 72 in file "GPS.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;  msg             2   13[COMRAM] PTR const unsigned char 
  4303 ;;		 -> Display_GPS@buffer(100), 
  4304 ;;  lat             2   15[COMRAM] PTR unsigned char 
  4305 ;;		 -> Display_GPS@lat(10), 
  4306 ;;  ns              2   17[COMRAM] PTR unsigned char 
  4307 ;;		 -> Display_GPS@ns(2), 
  4308 ;;  lon             2   19[COMRAM] PTR unsigned char 
  4309 ;;		 -> Display_GPS@lon(11), 
  4310 ;;  ew              2   21[COMRAM] PTR unsigned char 
  4311 ;;		 -> Display_GPS@ew(2), 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  buf           100    0[BANK0 ] unsigned char [100]
  4314 ;;  token           1  103[BANK0 ] PTR unsigned char 
  4315 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  4316 ;;  data_valid      1  102[BANK0 ] unsigned char 
  4317 ;;  field           1  101[BANK0 ] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1    wreg      unsigned char 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4327 ;;      Params:        10       0       0       0       0       0       0       0       0
  4328 ;;      Locals:         0     104       0       0       0       0       0       0       0
  4329 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4330 ;;      Totals:        11     104       0       0       0       0       0       0       0
  4331 ;;Total ram usage:      115 bytes
  4332 ;; Hardware stack levels used: 1
  4333 ;; Hardware stack levels required when called: 3
  4334 ;; This function calls:
  4335 ;;		_strncpy
  4336 ;;		_strstr
  4337 ;;		_strtok
  4338 ;; This function is called by:
  4339 ;;		_Display_GPS
  4340 ;; This function uses a non-reentrant model
  4341 ;;
  4342                           
  4343                           	psect	text20
  4344   000B28                     __ptext20:
  4345                           	callstack 0
  4346   000B28                     _GPS_ParseGPRMC:
  4347                           	callstack 26
  4348   000B28                     
  4349                           ;GPS.c: 73:     char buf[100];;GPS.c: 74:     char *token;;GPS.c: 75:     uint8_t field 
      +                          = 0;
  4350   000B28  0100               	movlb	0	; () banked
  4351   000B2A  6BC5               	clrf	GPS_ParseGPRMC@field& (0+255),b
  4352                           
  4353                           ;GPS.c: 76:     uint8_t data_valid = 0;
  4354   000B2C  6BC6               	clrf	GPS_ParseGPRMC@data_valid& (0+255),b
  4355   000B2E                     
  4356                           ; BSR set to: 0
  4357                           ;GPS.c: 79:     if(strstr(msg, "$GPRMC") == ((void*)0)) return 0;
  4358   000B2E  C00E  F007         	movff	GPS_ParseGPRMC@msg,strstr@h
  4359   000B32  C00F  F008         	movff	GPS_ParseGPRMC@msg+1,strstr@h+1
  4360   000B36  0E9F               	movlw	low STR_17
  4361   000B38  6E09               	movwf	strstr@n^0,c
  4362   000B3A  ECF1  F009         	call	_strstr	;wreg free
  4363   000B3E  5007               	movf	?_strstr^0,w,c
  4364   000B40  1008               	iorwf	(?_strstr+1)^0,w,c
  4365   000B42  A4D8               	btfss	status,2,c
  4366   000B44  EFA6  F005         	goto	u2071
  4367   000B48  EFA8  F005         	goto	u2070
  4368   000B4C                     u2071:
  4369   000B4C  EFAB  F005         	goto	l2649
  4370   000B50                     u2070:
  4371   000B50  0E00               	movlw	0
  4372   000B52  EFAD  F006         	goto	l175
  4373   000B56                     l2649:
  4374                           
  4375                           ;GPS.c: 82:     strncpy(buf, msg, sizeof(buf)-1);
  4376   000B56  0E60               	movlw	low GPS_ParseGPRMC@buf
  4377   000B58  6E01               	movwf	strncpy@d^0,c
  4378   000B5A  6A02               	clrf	(strncpy@d+1)^0,c
  4379   000B5C  C00E  F003         	movff	GPS_ParseGPRMC@msg,strncpy@s
  4380   000B60  C00F  F004         	movff	GPS_ParseGPRMC@msg+1,strncpy@s+1
  4381   000B64  0E00               	movlw	0
  4382   000B66  6E06               	movwf	(strncpy@n+1)^0,c
  4383   000B68  0E63               	movlw	99
  4384   000B6A  6E05               	movwf	strncpy@n^0,c
  4385   000B6C  EC7F  F00D         	call	_strncpy	;wreg free
  4386   000B70                     
  4387                           ;GPS.c: 83:     buf[sizeof(buf)-1] = '\0';
  4388   000B70  0100               	movlb	0	; () banked
  4389   000B72  6BC3               	clrf	(GPS_ParseGPRMC@buf+99)& (0+255),b
  4390   000B74                     
  4391                           ; BSR set to: 0
  4392                           ;GPS.c: 86:     token = strtok(buf, ",");
  4393   000B74  0E60               	movlw	low GPS_ParseGPRMC@buf
  4394   000B76  6E0C               	movwf	strtok@s^0,c
  4395   000B78  0EB3               	movlw	low STR_18
  4396   000B7A  6E0D               	movwf	strtok@sep^0,c
  4397   000B7C  EC63  F00C         	call	_strtok	;wreg free
  4398   000B80  0100               	movlb	0	; () banked
  4399   000B82  6FC7               	movwf	GPS_ParseGPRMC@token& (0+255),b
  4400                           
  4401                           ;GPS.c: 87:     while(token && field <= 6) {
  4402   000B84  EF89  F006         	goto	l2697
  4403   000B88                     l2655:
  4404                           
  4405                           ; BSR set to: 0
  4406                           ;GPS.c: 90:                 data_valid = (token[0] == 'A');
  4407   000B88  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4408   000B8A  6ED9               	movwf	fsr2l,c
  4409   000B8C  6ADA               	clrf	fsr2h,c
  4410   000B8E  0E41               	movlw	65
  4411   000B90  18DE               	xorwf	postinc2,w,c
  4412   000B92  B4D8               	btfsc	status,2,c
  4413   000B94  EFCE  F005         	goto	u2081
  4414   000B98  EFD1  F005         	goto	u2080
  4415   000B9C                     u2081:
  4416   000B9C  0E01               	movlw	1
  4417   000B9E  EFD2  F005         	goto	u2090
  4418   000BA2                     u2080:
  4419   000BA2  0E00               	movlw	0
  4420   000BA4                     u2090:
  4421   000BA4  6FC6               	movwf	GPS_ParseGPRMC@data_valid& (0+255),b
  4422                           
  4423                           ;GPS.c: 91:                 break;
  4424   000BA6  EF80  F006         	goto	l2693
  4425   000BAA                     l2657:
  4426                           
  4427                           ; BSR set to: 0
  4428                           ;GPS.c: 93:                 if(lat && data_valid) {
  4429   000BAA  5010               	movf	GPS_ParseGPRMC@lat^0,w,c
  4430   000BAC  1011               	iorwf	(GPS_ParseGPRMC@lat+1)^0,w,c
  4431   000BAE  B4D8               	btfsc	status,2,c
  4432   000BB0  EFDC  F005         	goto	u2101
  4433   000BB4  EFDE  F005         	goto	u2100
  4434   000BB8                     u2101:
  4435   000BB8  EF80  F006         	goto	l2693
  4436   000BBC                     u2100:
  4437   000BBC                     
  4438                           ; BSR set to: 0
  4439   000BBC  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4440   000BBE  B4D8               	btfsc	status,2,c
  4441   000BC0  EFE4  F005         	goto	u2111
  4442   000BC4  EFE6  F005         	goto	u2110
  4443   000BC8                     u2111:
  4444   000BC8  EF80  F006         	goto	l2693
  4445   000BCC                     u2110:
  4446   000BCC                     
  4447                           ; BSR set to: 0
  4448                           ;GPS.c: 94:                     strncpy(lat, token, 7);
  4449   000BCC  C010  F001         	movff	GPS_ParseGPRMC@lat,strncpy@d
  4450   000BD0  C011  F002         	movff	GPS_ParseGPRMC@lat+1,strncpy@d+1
  4451   000BD4  C0C7  F003         	movff	GPS_ParseGPRMC@token,strncpy@s
  4452   000BD8  6A04               	clrf	(strncpy@s+1)^0,c
  4453   000BDA  0E00               	movlw	0
  4454   000BDC  6E06               	movwf	(strncpy@n+1)^0,c
  4455   000BDE  0E07               	movlw	7
  4456   000BE0  6E05               	movwf	strncpy@n^0,c
  4457   000BE2  EC7F  F00D         	call	_strncpy	;wreg free
  4458   000BE6                     
  4459                           ;GPS.c: 95:                     lat[7] = '\0';
  4460   000BE6  EE20 F007          	lfsr	2,7
  4461   000BEA  5010               	movf	GPS_ParseGPRMC@lat^0,w,c
  4462   000BEC  26D9               	addwf	fsr2l,f,c
  4463   000BEE  5011               	movf	(GPS_ParseGPRMC@lat+1)^0,w,c
  4464   000BF0  22DA               	addwfc	fsr2h,f,c
  4465   000BF2  6ADF               	clrf	indf2,c
  4466   000BF4  EF80  F006         	goto	l2693
  4467   000BF8                     l2665:
  4468                           
  4469                           ; BSR set to: 0
  4470                           ;GPS.c: 99:                 if(ns && data_valid) {
  4471   000BF8  5012               	movf	GPS_ParseGPRMC@ns^0,w,c
  4472   000BFA  1013               	iorwf	(GPS_ParseGPRMC@ns+1)^0,w,c
  4473   000BFC  B4D8               	btfsc	status,2,c
  4474   000BFE  EF03  F006         	goto	u2121
  4475   000C02  EF05  F006         	goto	u2120
  4476   000C06                     u2121:
  4477   000C06  EF80  F006         	goto	l2693
  4478   000C0A                     u2120:
  4479   000C0A                     
  4480                           ; BSR set to: 0
  4481   000C0A  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4482   000C0C  B4D8               	btfsc	status,2,c
  4483   000C0E  EF0B  F006         	goto	u2131
  4484   000C12  EF0D  F006         	goto	u2130
  4485   000C16                     u2131:
  4486   000C16  EF80  F006         	goto	l2693
  4487   000C1A                     u2130:
  4488   000C1A                     
  4489                           ; BSR set to: 0
  4490                           ;GPS.c: 100:                     ns[0] = token[0];
  4491   000C1A  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4492   000C1C  6ED9               	movwf	fsr2l,c
  4493   000C1E  6ADA               	clrf	fsr2h,c
  4494   000C20  C012  FFE1         	movff	GPS_ParseGPRMC@ns,fsr1l
  4495   000C24  C013  FFE2         	movff	GPS_ParseGPRMC@ns+1,fsr1h
  4496   000C28  CFDF FFE7          	movff	indf2,indf1
  4497   000C2C                     
  4498                           ; BSR set to: 0
  4499                           ;GPS.c: 101:                     ns[1] = '\0';
  4500   000C2C  EE20 F001          	lfsr	2,1
  4501   000C30  5012               	movf	GPS_ParseGPRMC@ns^0,w,c
  4502   000C32  26D9               	addwf	fsr2l,f,c
  4503   000C34  5013               	movf	(GPS_ParseGPRMC@ns+1)^0,w,c
  4504   000C36  22DA               	addwfc	fsr2h,f,c
  4505   000C38  6ADF               	clrf	indf2,c
  4506   000C3A  EF80  F006         	goto	l2693
  4507   000C3E                     l2673:
  4508                           
  4509                           ; BSR set to: 0
  4510                           ;GPS.c: 105:                 if(lon && data_valid) {
  4511   000C3E  5014               	movf	GPS_ParseGPRMC@lon^0,w,c
  4512   000C40  1015               	iorwf	(GPS_ParseGPRMC@lon+1)^0,w,c
  4513   000C42  B4D8               	btfsc	status,2,c
  4514   000C44  EF26  F006         	goto	u2141
  4515   000C48  EF28  F006         	goto	u2140
  4516   000C4C                     u2141:
  4517   000C4C  EF80  F006         	goto	l2693
  4518   000C50                     u2140:
  4519   000C50                     
  4520                           ; BSR set to: 0
  4521   000C50  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4522   000C52  B4D8               	btfsc	status,2,c
  4523   000C54  EF2E  F006         	goto	u2151
  4524   000C58  EF30  F006         	goto	u2150
  4525   000C5C                     u2151:
  4526   000C5C  EF80  F006         	goto	l2693
  4527   000C60                     u2150:
  4528   000C60                     
  4529                           ; BSR set to: 0
  4530                           ;GPS.c: 106:                     strncpy(lon, token, 8);
  4531   000C60  C014  F001         	movff	GPS_ParseGPRMC@lon,strncpy@d
  4532   000C64  C015  F002         	movff	GPS_ParseGPRMC@lon+1,strncpy@d+1
  4533   000C68  C0C7  F003         	movff	GPS_ParseGPRMC@token,strncpy@s
  4534   000C6C  6A04               	clrf	(strncpy@s+1)^0,c
  4535   000C6E  0E00               	movlw	0
  4536   000C70  6E06               	movwf	(strncpy@n+1)^0,c
  4537   000C72  0E08               	movlw	8
  4538   000C74  6E05               	movwf	strncpy@n^0,c
  4539   000C76  EC7F  F00D         	call	_strncpy	;wreg free
  4540   000C7A                     
  4541                           ;GPS.c: 107:                     lon[8] = '\0';
  4542   000C7A  EE20 F008          	lfsr	2,8
  4543   000C7E  5014               	movf	GPS_ParseGPRMC@lon^0,w,c
  4544   000C80  26D9               	addwf	fsr2l,f,c
  4545   000C82  5015               	movf	(GPS_ParseGPRMC@lon+1)^0,w,c
  4546   000C84  22DA               	addwfc	fsr2h,f,c
  4547   000C86  6ADF               	clrf	indf2,c
  4548   000C88  EF80  F006         	goto	l2693
  4549   000C8C                     l2681:
  4550                           
  4551                           ; BSR set to: 0
  4552                           ;GPS.c: 111:                 if(ew && data_valid) {
  4553   000C8C  5016               	movf	GPS_ParseGPRMC@ew^0,w,c
  4554   000C8E  1017               	iorwf	(GPS_ParseGPRMC@ew+1)^0,w,c
  4555   000C90  B4D8               	btfsc	status,2,c
  4556   000C92  EF4D  F006         	goto	u2161
  4557   000C96  EF4F  F006         	goto	u2160
  4558   000C9A                     u2161:
  4559   000C9A  EF80  F006         	goto	l2693
  4560   000C9E                     u2160:
  4561   000C9E                     
  4562                           ; BSR set to: 0
  4563   000C9E  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4564   000CA0  B4D8               	btfsc	status,2,c
  4565   000CA2  EF55  F006         	goto	u2171
  4566   000CA6  EF57  F006         	goto	u2170
  4567   000CAA                     u2171:
  4568   000CAA  EF80  F006         	goto	l2693
  4569   000CAE                     u2170:
  4570   000CAE                     
  4571                           ; BSR set to: 0
  4572                           ;GPS.c: 112:                     ew[0] = token[0];
  4573   000CAE  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4574   000CB0  6ED9               	movwf	fsr2l,c
  4575   000CB2  6ADA               	clrf	fsr2h,c
  4576   000CB4  C016  FFE1         	movff	GPS_ParseGPRMC@ew,fsr1l
  4577   000CB8  C017  FFE2         	movff	GPS_ParseGPRMC@ew+1,fsr1h
  4578   000CBC  CFDF FFE7          	movff	indf2,indf1
  4579   000CC0                     
  4580                           ; BSR set to: 0
  4581                           ;GPS.c: 113:                     ew[1] = '\0';
  4582   000CC0  EE20 F001          	lfsr	2,1
  4583   000CC4  5016               	movf	GPS_ParseGPRMC@ew^0,w,c
  4584   000CC6  26D9               	addwf	fsr2l,f,c
  4585   000CC8  5017               	movf	(GPS_ParseGPRMC@ew+1)^0,w,c
  4586   000CCA  22DA               	addwfc	fsr2h,f,c
  4587   000CCC  6ADF               	clrf	indf2,c
  4588   000CCE  EF80  F006         	goto	l2693
  4589   000CD2                     l2691:
  4590                           
  4591                           ; BSR set to: 0
  4592   000CD2  51C5               	movf	GPS_ParseGPRMC@field& (0+255),w,b
  4593                           
  4594                           ; Switch size 1, requested type "simple"
  4595                           ; Number of cases is 5, Range of values is 2 to 6
  4596                           ; switch strategies available:
  4597                           ; Name         Instructions Cycles
  4598                           ; simple_byte           16     9 (average)
  4599                           ;	Chosen strategy is simple_byte
  4600   000CD4  0A02               	xorlw	2	; case 2
  4601   000CD6  B4D8               	btfsc	status,2,c
  4602   000CD8  EFC4  F005         	goto	l2655
  4603   000CDC  0A01               	xorlw	1	; case 3
  4604   000CDE  B4D8               	btfsc	status,2,c
  4605   000CE0  EFD5  F005         	goto	l2657
  4606   000CE4  0A07               	xorlw	7	; case 4
  4607   000CE6  B4D8               	btfsc	status,2,c
  4608   000CE8  EFFC  F005         	goto	l2665
  4609   000CEC  0A01               	xorlw	1	; case 5
  4610   000CEE  B4D8               	btfsc	status,2,c
  4611   000CF0  EF1F  F006         	goto	l2673
  4612   000CF4  0A03               	xorlw	3	; case 6
  4613   000CF6  B4D8               	btfsc	status,2,c
  4614   000CF8  EF46  F006         	goto	l2681
  4615   000CFC  EF80  F006         	goto	l2693
  4616   000D00                     l2693:
  4617                           
  4618                           ;GPS.c: 117:         token = strtok(((void*)0), ",");
  4619   000D00  0E00               	movlw	0
  4620   000D02  6E0C               	movwf	strtok@s^0,c
  4621   000D04  0EB3               	movlw	low STR_18
  4622   000D06  6E0D               	movwf	strtok@sep^0,c
  4623   000D08  EC63  F00C         	call	_strtok	;wreg free
  4624   000D0C  0100               	movlb	0	; () banked
  4625   000D0E  6FC7               	movwf	GPS_ParseGPRMC@token& (0+255),b
  4626   000D10                     
  4627                           ; BSR set to: 0
  4628                           ;GPS.c: 118:         field++;
  4629   000D10  2BC5               	incf	GPS_ParseGPRMC@field& (0+255),f,b
  4630   000D12                     l2697:
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;GPS.c: 87:     while(token && field <= 6) {
  4634   000D12  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4635   000D14  B4D8               	btfsc	status,2,c
  4636   000D16  EF8F  F006         	goto	u2181
  4637   000D1A  EF91  F006         	goto	u2180
  4638   000D1E                     u2181:
  4639   000D1E  EF99  F006         	goto	l191
  4640   000D22                     u2180:
  4641   000D22                     
  4642                           ; BSR set to: 0
  4643   000D22  0E06               	movlw	6
  4644   000D24  65C5               	cpfsgt	GPS_ParseGPRMC@field& (0+255),b
  4645   000D26  EF97  F006         	goto	u2191
  4646   000D2A  EF99  F006         	goto	u2190
  4647   000D2E                     u2191:
  4648   000D2E  EF69  F006         	goto	l2691
  4649   000D32                     u2190:
  4650   000D32                     l191:
  4651                           
  4652                           ; BSR set to: 0
  4653                           ;GPS.c: 120:     return (data_valid && field >= 6);
  4654   000D32  6BC4               	clrf	_GPS_ParseGPRMC$456& (0+255),b
  4655   000D34                     
  4656                           ; BSR set to: 0
  4657   000D34  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4658   000D36  B4D8               	btfsc	status,2,c
  4659   000D38  EFA0  F006         	goto	u2201
  4660   000D3C  EFA2  F006         	goto	u2200
  4661   000D40                     u2201:
  4662   000D40  EFAC  F006         	goto	l193
  4663   000D44                     u2200:
  4664   000D44                     
  4665                           ; BSR set to: 0
  4666   000D44  0E05               	movlw	5
  4667   000D46  65C5               	cpfsgt	GPS_ParseGPRMC@field& (0+255),b
  4668   000D48  EFA8  F006         	goto	u2211
  4669   000D4C  EFAA  F006         	goto	u2210
  4670   000D50                     u2211:
  4671   000D50  EFAC  F006         	goto	l193
  4672   000D54                     u2210:
  4673   000D54                     
  4674                           ; BSR set to: 0
  4675   000D54  0E01               	movlw	1
  4676   000D56  6FC4               	movwf	_GPS_ParseGPRMC$456& (0+255),b
  4677   000D58                     l193:
  4678                           
  4679                           ; BSR set to: 0
  4680   000D58  51C4               	movf	_GPS_ParseGPRMC$456& (0+255),w,b
  4681   000D5A                     l175:
  4682   000D5A  0012               	return		;funcret
  4683   000D5C                     __end_of_GPS_ParseGPRMC:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _strtok *****************
  4687 ;; Defined at:
  4688 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strtok.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;  s               1   11[COMRAM] PTR unsigned char 
  4691 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  4692 ;;  sep             1   12[COMRAM] PTR const unsigned char 
  4693 ;;		 -> STR_19(2), STR_18(2), 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;		None
  4696 ;; Return value:  Size  Location     Type
  4697 ;;                  1   11[COMRAM] PTR unsigned char 
  4698 ;; Registers used:
  4699 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 0/0
  4702 ;;		On exit  : 0/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4705 ;;      Params:         2       0       0       0       0       0       0       0       0
  4706 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4708 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4709 ;;Total ram usage:        2 bytes
  4710 ;; Hardware stack levels used: 1
  4711 ;; Hardware stack levels required when called: 2
  4712 ;; This function calls:
  4713 ;;		_strcspn
  4714 ;;		_strspn
  4715 ;; This function is called by:
  4716 ;;		_GPS_ParseGPRMC
  4717 ;; This function uses a non-reentrant model
  4718 ;;
  4719                           
  4720                           	psect	text21
  4721   0018C6                     __ptext21:
  4722                           	callstack 0
  4723   0018C6                     _strtok:
  4724                           	callstack 26
  4725   0018C6  500C               	movf	strtok@s^0,w,c
  4726   0018C8  A4D8               	btfss	status,2,c
  4727   0018CA  EF69  F00C         	goto	u1851
  4728   0018CE  EF6B  F00C         	goto	u1850
  4729   0018D2                     u1851:
  4730   0018D2  EF78  F00C         	goto	l2471
  4731   0018D6                     u1850:
  4732   0018D6  C059  F00C         	movff	strtok@p,strtok@s
  4733   0018DA  500C               	movf	strtok@s^0,w,c
  4734   0018DC  A4D8               	btfss	status,2,c
  4735   0018DE  EF73  F00C         	goto	u1861
  4736   0018E2  EF75  F00C         	goto	u1860
  4737   0018E6                     u1861:
  4738   0018E6  EF78  F00C         	goto	l2471
  4739   0018EA                     u1860:
  4740   0018EA  0E00               	movlw	0
  4741   0018EC  EFAD  F00C         	goto	l1166
  4742   0018F0                     l2471:
  4743   0018F0  C00C  F007         	movff	strtok@s,strspn@s
  4744   0018F4  C00D  F008         	movff	strtok@sep,strspn@c
  4745   0018F8  EC77  F00E         	call	_strspn	;wreg free
  4746   0018FC  5007               	movf	?_strspn^0,w,c
  4747   0018FE  260C               	addwf	strtok@s^0,f,c
  4748   001900  500C               	movf	strtok@s^0,w,c
  4749   001902  6ED9               	movwf	fsr2l,c
  4750   001904  6ADA               	clrf	fsr2h,c
  4751   001906  50DF               	movf	indf2,w,c
  4752   001908  A4D8               	btfss	status,2,c
  4753   00190A  EF89  F00C         	goto	u1871
  4754   00190E  EF8B  F00C         	goto	u1870
  4755   001912                     u1871:
  4756   001912  EF90  F00C         	goto	l2479
  4757   001916                     u1870:
  4758   001916  0E00               	movlw	0
  4759   001918  6E59               	movwf	strtok@p^0,c
  4760   00191A  5059               	movf	strtok@p^0,w,c
  4761   00191C  EFAD  F00C         	goto	l1166
  4762   001920                     l2479:
  4763   001920  C00C  F007         	movff	strtok@s,strcspn@s
  4764   001924  C00D  F008         	movff	strtok@sep,strcspn@c
  4765   001928  ECA9  F00E         	call	_strcspn	;wreg free
  4766   00192C  500C               	movf	strtok@s^0,w,c
  4767   00192E  2407               	addwf	?_strcspn^0,w,c
  4768   001930  6E59               	movwf	strtok@p^0,c
  4769   001932  5059               	movf	strtok@p^0,w,c
  4770   001934  6ED9               	movwf	fsr2l,c
  4771   001936  6ADA               	clrf	fsr2h,c
  4772   001938  50DF               	movf	indf2,w,c
  4773   00193A  B4D8               	btfsc	status,2,c
  4774   00193C  EFA2  F00C         	goto	u1881
  4775   001940  EFA4  F00C         	goto	u1880
  4776   001944                     u1881:
  4777   001944  EFAB  F00C         	goto	l1168
  4778   001948                     u1880:
  4779   001948  5059               	movf	strtok@p^0,w,c
  4780   00194A  6ED9               	movwf	fsr2l,c
  4781   00194C  6ADA               	clrf	fsr2h,c
  4782   00194E  6ADF               	clrf	indf2,c
  4783   001950  2A59               	incf	strtok@p^0,f,c
  4784   001952  EFAC  F00C         	goto	l2487
  4785   001956                     l1168:
  4786   001956  6A59               	clrf	strtok@p^0,c
  4787   001958                     l2487:
  4788   001958  500C               	movf	strtok@s^0,w,c
  4789   00195A                     l1166:
  4790   00195A  0012               	return		;funcret
  4791   00195C                     __end_of_strtok:
  4792                           	callstack 0
  4793                           
  4794 ;; *************** function _strspn *****************
  4795 ;; Defined at:
  4796 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strspn.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  s               1    6[COMRAM] PTR const unsigned char 
  4799 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  4800 ;;  c               1    7[COMRAM] PTR const unsigned char 
  4801 ;;		 -> STR_19(2), STR_18(2), 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  i               2    9[COMRAM] unsigned int 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  2    6[COMRAM] unsigned int 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4813 ;;      Params:         2       0       0       0       0       0       0       0       0
  4814 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4815 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4816 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4817 ;;Total ram usage:        5 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; Hardware stack levels required when called: 1
  4820 ;; This function calls:
  4821 ;;		_strchr
  4822 ;; This function is called by:
  4823 ;;		_strtok
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text22
  4828   001CEE                     __ptext22:
  4829                           	callstack 0
  4830   001CEE                     _strspn:
  4831                           	callstack 26
  4832   001CEE  0E00               	movlw	0
  4833   001CF0  6E0B               	movwf	(strspn@i+1)^0,c
  4834   001CF2  0E00               	movlw	0
  4835   001CF4  6E0A               	movwf	strspn@i^0,c
  4836   001CF6  EF80  F00E         	goto	l2377
  4837   001CFA                     l2375:
  4838   001CFA  2A07               	incf	strspn@s^0,f,c
  4839   001CFC  4A0A               	infsnz	strspn@i^0,f,c
  4840   001CFE  2A0B               	incf	(strspn@i+1)^0,f,c
  4841   001D00                     l2377:
  4842   001D00  5007               	movf	strspn@s^0,w,c
  4843   001D02  6ED9               	movwf	fsr2l,c
  4844   001D04  6ADA               	clrf	fsr2h,c
  4845   001D06  50DF               	movf	indf2,w,c
  4846   001D08  B4D8               	btfsc	status,2,c
  4847   001D0A  EF89  F00E         	goto	u1671
  4848   001D0E  EF8B  F00E         	goto	u1670
  4849   001D12                     u1671:
  4850   001D12  EFA4  F00E         	goto	l1188
  4851   001D16                     u1670:
  4852   001D16  C008  F001         	movff	strspn@c,strchr@s
  4853   001D1A  5001               	movf	strchr@s^0,w,c
  4854   001D1C  A4D8               	btfss	status,2,c
  4855   001D1E  0E08               	movlw	high __smallconst
  4856   001D20  6E02               	movwf	(strchr@s+1)^0,c
  4857   001D22  5007               	movf	strspn@s^0,w,c
  4858   001D24  6ED9               	movwf	fsr2l,c
  4859   001D26  6ADA               	clrf	fsr2h,c
  4860   001D28  50DF               	movf	indf2,w,c
  4861   001D2A  6E09               	movwf	??_strspn^0,c
  4862   001D2C  5009               	movf	??_strspn^0,w,c
  4863   001D2E  6E03               	movwf	strchr@c^0,c
  4864   001D30  6A04               	clrf	(strchr@c+1)^0,c
  4865   001D32  EC3E  F00D         	call	_strchr	;wreg free
  4866   001D36  5001               	movf	?_strchr^0,w,c
  4867   001D38  1002               	iorwf	(?_strchr+1)^0,w,c
  4868   001D3A  A4D8               	btfss	status,2,c
  4869   001D3C  EFA2  F00E         	goto	u1681
  4870   001D40  EFA4  F00E         	goto	u1680
  4871   001D44                     u1681:
  4872   001D44  EF7D  F00E         	goto	l2375
  4873   001D48                     u1680:
  4874   001D48                     l1188:
  4875   001D48  C00A  F007         	movff	strspn@i,?_strspn
  4876   001D4C  C00B  F008         	movff	strspn@i+1,?_strspn+1
  4877   001D50  0012               	return		;funcret
  4878   001D52                     __end_of_strspn:
  4879                           	callstack 0
  4880                           
  4881 ;; *************** function _strcspn *****************
  4882 ;; Defined at:
  4883 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strcspn.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  s               1    6[COMRAM] PTR const unsigned char 
  4886 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  4887 ;;  c               1    7[COMRAM] PTR const unsigned char 
  4888 ;;		 -> STR_19(2), STR_18(2), 
  4889 ;; Auto vars:     Size  Location     Type
  4890 ;;  i               2    9[COMRAM] unsigned int 
  4891 ;; Return value:  Size  Location     Type
  4892 ;;                  2    6[COMRAM] unsigned int 
  4893 ;; Registers used:
  4894 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4895 ;; Tracked objects:
  4896 ;;		On entry : 0/0
  4897 ;;		On exit  : 0/0
  4898 ;;		Unchanged: 0/0
  4899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4900 ;;      Params:         2       0       0       0       0       0       0       0       0
  4901 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4902 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4903 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4904 ;;Total ram usage:        5 bytes
  4905 ;; Hardware stack levels used: 1
  4906 ;; Hardware stack levels required when called: 1
  4907 ;; This function calls:
  4908 ;;		_strchr
  4909 ;; This function is called by:
  4910 ;;		_strtok
  4911 ;; This function uses a non-reentrant model
  4912 ;;
  4913                           
  4914                           	psect	text23
  4915   001D52                     __ptext23:
  4916                           	callstack 0
  4917   001D52                     _strcspn:
  4918                           	callstack 26
  4919   001D52  0E00               	movlw	0
  4920   001D54  6E0B               	movwf	(strcspn@i+1)^0,c
  4921   001D56  0E00               	movlw	0
  4922   001D58  6E0A               	movwf	strcspn@i^0,c
  4923   001D5A  EFB2  F00E         	goto	l2385
  4924   001D5E                     l2383:
  4925   001D5E  2A07               	incf	strcspn@s^0,f,c
  4926   001D60  4A0A               	infsnz	strcspn@i^0,f,c
  4927   001D62  2A0B               	incf	(strcspn@i+1)^0,f,c
  4928   001D64                     l2385:
  4929   001D64  5007               	movf	strcspn@s^0,w,c
  4930   001D66  6ED9               	movwf	fsr2l,c
  4931   001D68  6ADA               	clrf	fsr2h,c
  4932   001D6A  50DF               	movf	indf2,w,c
  4933   001D6C  B4D8               	btfsc	status,2,c
  4934   001D6E  EFBB  F00E         	goto	u1691
  4935   001D72  EFBD  F00E         	goto	u1690
  4936   001D76                     u1691:
  4937   001D76  EFD6  F00E         	goto	l1178
  4938   001D7A                     u1690:
  4939   001D7A  C008  F001         	movff	strcspn@c,strchr@s
  4940   001D7E  5001               	movf	strchr@s^0,w,c
  4941   001D80  A4D8               	btfss	status,2,c
  4942   001D82  0E08               	movlw	high __smallconst
  4943   001D84  6E02               	movwf	(strchr@s+1)^0,c
  4944   001D86  5007               	movf	strcspn@s^0,w,c
  4945   001D88  6ED9               	movwf	fsr2l,c
  4946   001D8A  6ADA               	clrf	fsr2h,c
  4947   001D8C  50DF               	movf	indf2,w,c
  4948   001D8E  6E09               	movwf	??_strcspn^0,c
  4949   001D90  5009               	movf	??_strcspn^0,w,c
  4950   001D92  6E03               	movwf	strchr@c^0,c
  4951   001D94  6A04               	clrf	(strchr@c+1)^0,c
  4952   001D96  EC3E  F00D         	call	_strchr	;wreg free
  4953   001D9A  5001               	movf	?_strchr^0,w,c
  4954   001D9C  1002               	iorwf	(?_strchr+1)^0,w,c
  4955   001D9E  B4D8               	btfsc	status,2,c
  4956   001DA0  EFD4  F00E         	goto	u1701
  4957   001DA4  EFD6  F00E         	goto	u1700
  4958   001DA8                     u1701:
  4959   001DA8  EFAF  F00E         	goto	l2383
  4960   001DAC                     u1700:
  4961   001DAC                     l1178:
  4962   001DAC  C00A  F007         	movff	strcspn@i,?_strcspn
  4963   001DB0  C00B  F008         	movff	strcspn@i+1,?_strcspn+1
  4964   001DB4  0012               	return		;funcret
  4965   001DB6                     __end_of_strcspn:
  4966                           	callstack 0
  4967                           
  4968 ;; *************** function _strstr *****************
  4969 ;; Defined at:
  4970 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strstr.c"
  4971 ;; Parameters:    Size  Location     Type
  4972 ;;  h               2    6[COMRAM] PTR const unsigned char 
  4973 ;;		 -> STR_19(2), STR_18(2), NULL(0), Display_GPS@buffer(100), 
  4974 ;;  n               1    8[COMRAM] PTR const unsigned char 
  4975 ;;		 -> STR_17(7), 
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;  nl              2    9[COMRAM] unsigned int 
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  2    6[COMRAM] PTR unsigned char 
  4980 ;; Registers used:
  4981 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4987 ;;      Params:         3       0       0       0       0       0       0       0       0
  4988 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4990 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4991 ;;Total ram usage:        5 bytes
  4992 ;; Hardware stack levels used: 1
  4993 ;; Hardware stack levels required when called: 1
  4994 ;; This function calls:
  4995 ;;		_strchr
  4996 ;;		_strlen
  4997 ;;		_strncmp
  4998 ;; This function is called by:
  4999 ;;		_GPS_ParseGPRMC
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text24
  5004   0013E2                     __ptext24:
  5005                           	callstack 0
  5006   0013E2                     _strstr:
  5007                           	callstack 27
  5008   0013E2  5009               	movf	strstr@n^0,w,c
  5009   0013E4  B4D8               	btfsc	status,2,c
  5010   0013E6  EFF7  F009         	goto	u1801
  5011   0013EA  EFF9  F009         	goto	u1800
  5012   0013EE                     u1801:
  5013   0013EE  EF53  F00A         	goto	l2459
  5014   0013F2                     u1800:
  5015   0013F2  C009  F001         	movff	strstr@n,strlen@s
  5016   0013F6  EC6D  F010         	call	_strlen	;wreg free
  5017   0013FA  C001  F00A         	movff	?_strlen,strstr@nl
  5018   0013FE  C002  F00B         	movff	?_strlen+1,strstr@nl+1
  5019   001402  EF32  F00A         	goto	l2455
  5020   001406                     l2447:
  5021   001406  C007  F001         	movff	strstr@h,strncmp@l
  5022   00140A  C008  F002         	movff	strstr@h+1,strncmp@l+1
  5023   00140E  C009  F003         	movff	strstr@n,strncmp@r
  5024   001412  C00A  F004         	movff	strstr@nl,strncmp@n
  5025   001416  C00B  F005         	movff	strstr@nl+1,strncmp@n+1
  5026   00141A  EC0F  F008         	call	_strncmp	;wreg free
  5027   00141E  5001               	movf	?_strncmp^0,w,c
  5028   001420  1002               	iorwf	(?_strncmp+1)^0,w,c
  5029   001422  A4D8               	btfss	status,2,c
  5030   001424  EF16  F00A         	goto	u1811
  5031   001428  EF18  F00A         	goto	u1810
  5032   00142C                     u1811:
  5033   00142C  EF1E  F00A         	goto	l2453
  5034   001430                     u1810:
  5035   001430  C007  F007         	movff	strstr@h,?_strstr
  5036   001434  C008  F008         	movff	strstr@h+1,?_strstr+1
  5037   001438  EF57  F00A         	goto	l1132
  5038   00143C                     l2453:
  5039   00143C  0E01               	movlw	1
  5040   00143E  2407               	addwf	strstr@h^0,w,c
  5041   001440  6E01               	movwf	strchr@s^0,c
  5042   001442  0E00               	movlw	0
  5043   001444  2008               	addwfc	(strstr@h+1)^0,w,c
  5044   001446  6E02               	movwf	(strchr@s+1)^0,c
  5045   001448  C009  FFF6         	movff	strstr@n,tblptrl
  5046   00144C                     	if	1	;There is more than 1 active tblptr byte
  5047   00144C  0E08               	movlw	high __smallconst
  5048   00144E  6EF7               	movwf	tblptrh,c
  5049   001450                     	endif
  5050   001450                     	if	0	;tblptru may be non-zero
  5051   001450                     	endif
  5052   001450                     	if	0	;tblptru may be non-zero
  5053   001450                     	endif
  5054   001450  0008               	tblrd		*
  5055   001452  50F5               	movf	tablat,w,c
  5056   001454  6E03               	movwf	strchr@c^0,c
  5057   001456  6A04               	clrf	(strchr@c+1)^0,c
  5058   001458  EC3E  F00D         	call	_strchr	;wreg free
  5059   00145C  C001  F007         	movff	?_strchr,strstr@h
  5060   001460  C002  F008         	movff	?_strchr+1,strstr@h+1
  5061   001464                     l2455:
  5062   001464  5007               	movf	strstr@h^0,w,c
  5063   001466  1008               	iorwf	(strstr@h+1)^0,w,c
  5064   001468  B4D8               	btfsc	status,2,c
  5065   00146A  EF39  F00A         	goto	u1821
  5066   00146E  EF3B  F00A         	goto	u1820
  5067   001472                     u1821:
  5068   001472  EF53  F00A         	goto	l2459
  5069   001476                     u1820:
  5070   001476  C007  FFF6         	movff	strstr@h,tblptrl
  5071   00147A  C008  FFF7         	movff	strstr@h+1,tblptrh
  5072   00147E  6AF8               	clrf	tblptru,c
  5073   001480  0E07               	movlw	(high __ramtop+-1)
  5074   001482  64F7               	cpfsgt	tblptrh,c
  5075   001484  D003               	bra	u1837
  5076   001486  0008               	tblrd		*
  5077   001488  50F5               	movf	tablat,w,c
  5078   00148A  D005               	bra	u1830
  5079   00148C                     u1837:
  5080   00148C  CFF6 FFE9          	movff	tblptrl,fsr0l
  5081   001490  CFF7 FFEA          	movff	tblptrh,fsr0h
  5082   001494  50EF               	movf	indf0,w,c
  5083   001496                     u1830:
  5084   001496  0900               	iorlw	0
  5085   001498  A4D8               	btfss	status,2,c
  5086   00149A  EF51  F00A         	goto	u1841
  5087   00149E  EF53  F00A         	goto	u1840
  5088   0014A2                     u1841:
  5089   0014A2  EF03  F00A         	goto	l2447
  5090   0014A6                     u1840:
  5091   0014A6                     l2459:
  5092   0014A6  0E00               	movlw	0
  5093   0014A8  6E07               	movwf	?_strstr^0,c
  5094   0014AA  0E00               	movlw	0
  5095   0014AC  6E08               	movwf	(?_strstr+1)^0,c
  5096   0014AE                     l1132:
  5097   0014AE  0012               	return		;funcret
  5098   0014B0                     __end_of_strstr:
  5099                           	callstack 0
  5100                           
  5101 ;; *************** function _strncmp *****************
  5102 ;; Defined at:
  5103 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncmp.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  l               2    0[COMRAM] PTR const unsigned char 
  5106 ;;		 -> STR_19(2), STR_18(2), NULL(0), Display_GPS@buffer(100), 
  5107 ;;  r               1    2[COMRAM] PTR const unsigned char 
  5108 ;;		 -> STR_17(7), 
  5109 ;;  n               2    3[COMRAM] unsigned int 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  2    0[COMRAM] int 
  5114 ;; Registers used:
  5115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5121 ;;      Params:         5       0       0       0       0       0       0       0       0
  5122 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5123 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5124 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5125 ;;Total ram usage:        6 bytes
  5126 ;; Hardware stack levels used: 1
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_strstr
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text25
  5135   00101E                     __ptext25:
  5136                           	callstack 0
  5137   00101E                     _strncmp:
  5138                           	callstack 27
  5139   00101E  0604               	decf	strncmp@n^0,f,c
  5140   001020  A0D8               	btfss	status,0,c
  5141   001022  0605               	decf	(strncmp@n+1)^0,f,c
  5142   001024  2804               	incf	strncmp@n^0,w,c
  5143   001026  E106               	bnz	u1601
  5144   001028  2805               	incf	(strncmp@n+1)^0,w,c
  5145   00102A  A4D8               	btfss	status,2,c
  5146   00102C  EF1A  F008         	goto	u1601
  5147   001030  EF1C  F008         	goto	u1600
  5148   001034                     u1601:
  5149   001034  EF28  F008         	goto	l2361
  5150   001038                     u1600:
  5151   001038  0E00               	movlw	0
  5152   00103A  6E02               	movwf	(?_strncmp+1)^0,c
  5153   00103C  0E00               	movlw	0
  5154   00103E  6E01               	movwf	?_strncmp^0,c
  5155   001040  EF92  F008         	goto	l1151
  5156   001044                     l2359:
  5157   001044  4A01               	infsnz	strncmp@l^0,f,c
  5158   001046  2A02               	incf	(strncmp@l+1)^0,f,c
  5159   001048  2A03               	incf	strncmp@r^0,f,c
  5160   00104A  0604               	decf	strncmp@n^0,f,c
  5161   00104C  A0D8               	btfss	status,0,c
  5162   00104E  0605               	decf	(strncmp@n+1)^0,f,c
  5163   001050                     l2361:
  5164   001050  C001  FFF6         	movff	strncmp@l,tblptrl
  5165   001054  C002  FFF7         	movff	strncmp@l+1,tblptrh
  5166   001058  6AF8               	clrf	tblptru,c
  5167   00105A  0E07               	movlw	(high __ramtop+-1)
  5168   00105C  64F7               	cpfsgt	tblptrh,c
  5169   00105E  D003               	bra	u1617
  5170   001060  0008               	tblrd		*
  5171   001062  50F5               	movf	tablat,w,c
  5172   001064  D005               	bra	u1610
  5173   001066                     u1617:
  5174   001066  CFF6 FFE9          	movff	tblptrl,fsr0l
  5175   00106A  CFF7 FFEA          	movff	tblptrh,fsr0h
  5176   00106E  50EF               	movf	indf0,w,c
  5177   001070                     u1610:
  5178   001070  0900               	iorlw	0
  5179   001072  B4D8               	btfsc	status,2,c
  5180   001074  EF3E  F008         	goto	u1621
  5181   001078  EF40  F008         	goto	u1620
  5182   00107C                     u1621:
  5183   00107C  EF76  F008         	goto	l2369
  5184   001080                     u1620:
  5185   001080  C003  FFF6         	movff	strncmp@r,tblptrl
  5186   001084                     	if	1	;There is more than 1 active tblptr byte
  5187   001084  0E08               	movlw	high __smallconst
  5188   001086  6EF7               	movwf	tblptrh,c
  5189   001088                     	endif
  5190   001088                     	if	0	;tblptru may be non-zero
  5191   001088                     	endif
  5192   001088                     	if	0	;tblptru may be non-zero
  5193   001088                     	endif
  5194   001088  0008               	tblrd		*
  5195   00108A  50F5               	movf	tablat,w,c
  5196   00108C  0900               	iorlw	0
  5197   00108E  B4D8               	btfsc	status,2,c
  5198   001090  EF4C  F008         	goto	u1631
  5199   001094  EF4E  F008         	goto	u1630
  5200   001098                     u1631:
  5201   001098  EF76  F008         	goto	l2369
  5202   00109C                     u1630:
  5203   00109C  5004               	movf	strncmp@n^0,w,c
  5204   00109E  1005               	iorwf	(strncmp@n+1)^0,w,c
  5205   0010A0  B4D8               	btfsc	status,2,c
  5206   0010A2  EF55  F008         	goto	u1641
  5207   0010A6  EF57  F008         	goto	u1640
  5208   0010AA                     u1641:
  5209   0010AA  EF76  F008         	goto	l2369
  5210   0010AE                     u1640:
  5211   0010AE  C003  FFF6         	movff	strncmp@r,tblptrl
  5212   0010B2                     	if	1	;There is more than 1 active tblptr byte
  5213   0010B2  0E08               	movlw	high __smallconst
  5214   0010B4  6EF7               	movwf	tblptrh,c
  5215   0010B6                     	endif
  5216   0010B6                     	if	0	;tblptru may be non-zero
  5217   0010B6                     	endif
  5218   0010B6                     	if	0	;tblptru may be non-zero
  5219   0010B6                     	endif
  5220   0010B6  0008               	tblrd		*
  5221   0010B8  CFF5 F006          	movff	tablat,??_strncmp
  5222   0010BC  C001  FFF6         	movff	strncmp@l,tblptrl
  5223   0010C0  C002  FFF7         	movff	strncmp@l+1,tblptrh
  5224   0010C4  6AF8               	clrf	tblptru,c
  5225   0010C6  0E07               	movlw	(high __ramtop+-1)
  5226   0010C8  64F7               	cpfsgt	tblptrh,c
  5227   0010CA  D003               	bra	u1657
  5228   0010CC  0008               	tblrd		*
  5229   0010CE  50F5               	movf	tablat,w,c
  5230   0010D0  D005               	bra	u1655
  5231   0010D2                     u1657:
  5232   0010D2  CFF6 FFE9          	movff	tblptrl,fsr0l
  5233   0010D6  CFF7 FFEA          	movff	tblptrh,fsr0h
  5234   0010DA  50EF               	movf	indf0,w,c
  5235   0010DC                     u1655:
  5236   0010DC  1806               	xorwf	??_strncmp^0,w,c
  5237   0010DE  B4D8               	btfsc	status,2,c
  5238   0010E0  EF74  F008         	goto	u1651
  5239   0010E4  EF76  F008         	goto	u1650
  5240   0010E8                     u1651:
  5241   0010E8  EF22  F008         	goto	l2359
  5242   0010EC                     u1650:
  5243   0010EC                     l2369:
  5244   0010EC  C001  FFF6         	movff	strncmp@l,tblptrl
  5245   0010F0  C002  FFF7         	movff	strncmp@l+1,tblptrh
  5246   0010F4  6AF8               	clrf	tblptru,c
  5247   0010F6  0E07               	movlw	(high __ramtop+-1)
  5248   0010F8  64F7               	cpfsgt	tblptrh,c
  5249   0010FA  D003               	bra	u1667
  5250   0010FC  0008               	tblrd		*
  5251   0010FE  50F5               	movf	tablat,w,c
  5252   001100  D005               	bra	u1660
  5253   001102                     u1667:
  5254   001102  CFF6 FFE9          	movff	tblptrl,fsr0l
  5255   001106  CFF7 FFEA          	movff	tblptrh,fsr0h
  5256   00110A  50EF               	movf	indf0,w,c
  5257   00110C                     u1660:
  5258   00110C  6E06               	movwf	??_strncmp^0,c
  5259   00110E  C003  FFF6         	movff	strncmp@r,tblptrl
  5260   001112                     	if	1	;There is more than 1 active tblptr byte
  5261   001112  0E08               	movlw	high __smallconst
  5262   001114  6EF7               	movwf	tblptrh,c
  5263   001116                     	endif
  5264   001116                     	if	0	;tblptru may be non-zero
  5265   001116                     	endif
  5266   001116                     	if	0	;tblptru may be non-zero
  5267   001116                     	endif
  5268   001116  0008               	tblrd		*
  5269   001118  50F5               	movf	tablat,w,c
  5270   00111A  5C06               	subwf	??_strncmp^0,w,c
  5271   00111C  6E01               	movwf	?_strncmp^0,c
  5272   00111E  6A02               	clrf	(?_strncmp+1)^0,c
  5273   001120  A0D8               	btfss	status,0,c
  5274   001122  0602               	decf	(?_strncmp+1)^0,f,c
  5275   001124                     l1151:
  5276   001124  0012               	return		;funcret
  5277   001126                     __end_of_strncmp:
  5278                           	callstack 0
  5279                           
  5280 ;; *************** function _strlen *****************
  5281 ;; Defined at:
  5282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strlen.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  s               1    0[COMRAM] PTR const unsigned char 
  5285 ;;		 -> STR_17(7), 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;  a               1    2[COMRAM] PTR const unsigned char 
  5288 ;;		 -> STR_17(7), 
  5289 ;; Return value:  Size  Location     Type
  5290 ;;                  2    0[COMRAM] unsigned int 
  5291 ;; Registers used:
  5292 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5293 ;; Tracked objects:
  5294 ;;		On entry : 0/0
  5295 ;;		On exit  : 0/0
  5296 ;;		Unchanged: 0/0
  5297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5298 ;;      Params:         2       0       0       0       0       0       0       0       0
  5299 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5301 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5302 ;;Total ram usage:        3 bytes
  5303 ;; Hardware stack levels used: 1
  5304 ;; This function calls:
  5305 ;;		Nothing
  5306 ;; This function is called by:
  5307 ;;		_strstr
  5308 ;; This function uses a non-reentrant model
  5309 ;;
  5310                           
  5311                           	psect	text26
  5312   0020DA                     __ptext26:
  5313                           	callstack 0
  5314   0020DA                     _strlen:
  5315                           	callstack 27
  5316   0020DA  C001  F003         	movff	strlen@s,strlen@a
  5317   0020DE  EF72  F010         	goto	l2347
  5318   0020E2                     l2345:
  5319   0020E2  2A01               	incf	strlen@s^0,f,c
  5320   0020E4                     l2347:
  5321   0020E4  C001  FFF6         	movff	strlen@s,tblptrl
  5322   0020E8                     	if	1	;There is more than 1 active tblptr byte
  5323   0020E8  0E08               	movlw	high __smallconst
  5324   0020EA  6EF7               	movwf	tblptrh,c
  5325   0020EC                     	endif
  5326   0020EC                     	if	0	;tblptru may be non-zero
  5327   0020EC                     	endif
  5328   0020EC                     	if	0	;tblptru may be non-zero
  5329   0020EC                     	endif
  5330   0020EC  0008               	tblrd		*
  5331   0020EE  50F5               	movf	tablat,w,c
  5332   0020F0  0900               	iorlw	0
  5333   0020F2  A4D8               	btfss	status,2,c
  5334   0020F4  EF7E  F010         	goto	u1591
  5335   0020F8  EF80  F010         	goto	u1590
  5336   0020FC                     u1591:
  5337   0020FC  EF71  F010         	goto	l2345
  5338   002100                     u1590:
  5339   002100  5003               	movf	strlen@a^0,w,c
  5340   002102  5C01               	subwf	strlen@s^0,w,c
  5341   002104  6E01               	movwf	?_strlen^0,c
  5342   002106  6A02               	clrf	(?_strlen+1)^0,c
  5343   002108  BE01               	btfsc	?_strlen^0,7,c
  5344   00210A  0602               	decf	(?_strlen+1)^0,f,c
  5345   00210C  0012               	return		;funcret
  5346   00210E                     __end_of_strlen:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function _strchr *****************
  5350 ;; Defined at:
  5351 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strchr.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5354 ;;		 -> STR_19(2), STR_18(2), NULL(0), Display_GPS@buffer(100), 
  5355 ;;  c               2    2[COMRAM] int 
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  2    0[COMRAM] PTR unsigned char 
  5360 ;; Registers used:
  5361 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5367 ;;      Params:         4       0       0       0       0       0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5369 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5370 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5371 ;;Total ram usage:        6 bytes
  5372 ;; Hardware stack levels used: 1
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_strstr
  5377 ;;		_strcspn
  5378 ;;		_strspn
  5379 ;; This function uses a non-reentrant model
  5380 ;;
  5381                           
  5382                           	psect	text27
  5383   001A7C                     __ptext27:
  5384                           	callstack 0
  5385   001A7C                     _strchr:
  5386                           	callstack 26
  5387   001A7C                     l1138:
  5388   001A7C  C001  FFF6         	movff	strchr@s,tblptrl
  5389   001A80  C002  FFF7         	movff	strchr@s+1,tblptrh
  5390   001A84  6AF8               	clrf	tblptru,c
  5391   001A86  0E07               	movlw	(high __ramtop+-1)
  5392   001A88  64F7               	cpfsgt	tblptrh,c
  5393   001A8A  D003               	bra	u1457
  5394   001A8C  0008               	tblrd		*
  5395   001A8E  50F5               	movf	tablat,w,c
  5396   001A90  D005               	bra	u1450
  5397   001A92                     u1457:
  5398   001A92  CFF6 FFE9          	movff	tblptrl,fsr0l
  5399   001A96  CFF7 FFEA          	movff	tblptrh,fsr0h
  5400   001A9A  50EF               	movf	indf0,w,c
  5401   001A9C                     u1450:
  5402   001A9C  1803               	xorwf	strchr@c^0,w,c
  5403   001A9E  A4D8               	btfss	status,2,c
  5404   001AA0  EF54  F00D         	goto	u1461
  5405   001AA4  EF56  F00D         	goto	u1460
  5406   001AA8                     u1461:
  5407   001AA8  EF5C  F00D         	goto	l2241
  5408   001AAC                     u1460:
  5409   001AAC  C001  F001         	movff	strchr@s,?_strchr
  5410   001AB0  C002  F002         	movff	strchr@s+1,?_strchr+1
  5411   001AB4  EF7E  F00D         	goto	l1140
  5412   001AB8                     l2241:
  5413   001AB8  5001               	movf	strchr@s^0,w,c
  5414   001ABA  6E05               	movwf	??_strchr^0,c
  5415   001ABC  5002               	movf	(strchr@s+1)^0,w,c
  5416   001ABE  6E06               	movwf	(??_strchr+1)^0,c
  5417   001AC0  4A01               	infsnz	strchr@s^0,f,c
  5418   001AC2  2A02               	incf	(strchr@s+1)^0,f,c
  5419   001AC4  C005  FFF6         	movff	??_strchr,tblptrl
  5420   001AC8  C006  FFF7         	movff	??_strchr+1,tblptrh
  5421   001ACC  6AF8               	clrf	tblptru,c
  5422   001ACE  0E07               	movlw	(high __ramtop+-1)
  5423   001AD0  64F7               	cpfsgt	tblptrh,c
  5424   001AD2  D003               	bra	u1477
  5425   001AD4  0008               	tblrd		*
  5426   001AD6  50F5               	movf	tablat,w,c
  5427   001AD8  D005               	bra	u1470
  5428   001ADA                     u1477:
  5429   001ADA  CFF6 FFE9          	movff	tblptrl,fsr0l
  5430   001ADE  CFF7 FFEA          	movff	tblptrh,fsr0h
  5431   001AE2  50EF               	movf	indf0,w,c
  5432   001AE4                     u1470:
  5433   001AE4  0900               	iorlw	0
  5434   001AE6  A4D8               	btfss	status,2,c
  5435   001AE8  EF78  F00D         	goto	u1481
  5436   001AEC  EF7A  F00D         	goto	u1480
  5437   001AF0                     u1481:
  5438   001AF0  EF3E  F00D         	goto	l1138
  5439   001AF4                     u1480:
  5440   001AF4  0E00               	movlw	0
  5441   001AF6  6E01               	movwf	?_strchr^0,c
  5442   001AF8  0E00               	movlw	0
  5443   001AFA  6E02               	movwf	(?_strchr+1)^0,c
  5444   001AFC                     l1140:
  5445   001AFC  0012               	return		;funcret
  5446   001AFE                     __end_of_strchr:
  5447                           	callstack 0
  5448                           
  5449 ;; *************** function _strncpy *****************
  5450 ;; Defined at:
  5451 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\strncpy.c"
  5452 ;; Parameters:    Size  Location     Type
  5453 ;;  d               2    0[COMRAM] PTR unsigned char 
  5454 ;;		 -> GPS_ParseGPRMC@buf(100), Display_GPS@formatted_lon(17), Display_GPS@formatted_lat(17), Display_GPS@lon(11), 
  5455 ;;		 -> Display_GPS@lat(10), 
  5456 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5457 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), Display_GPS@buffer(100), Display_GPS@lon(11), 
  5458 ;;		 -> Display_GPS@lat(10), 
  5459 ;;  n               2    4[COMRAM] unsigned int 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;  cp              2    6[COMRAM] PTR unsigned char 
  5462 ;;		 -> GPS_ParseGPRMC@buf(100), Display_GPS@formatted_lon(17), Display_GPS@formatted_lat(17), Display_GPS@lon(11), 
  5463 ;;		 -> Display_GPS@lat(10), 
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  2    0[COMRAM] PTR unsigned char 
  5466 ;; Registers used:
  5467 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5473 ;;      Params:         6       0       0       0       0       0       0       0       0
  5474 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5475 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5476 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5477 ;;Total ram usage:        8 bytes
  5478 ;; Hardware stack levels used: 1
  5479 ;; This function calls:
  5480 ;;		Nothing
  5481 ;; This function is called by:
  5482 ;;		_Display_GPS
  5483 ;;		_GPS_ParseGPRMC
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text28
  5488   001AFE                     __ptext28:
  5489                           	callstack 0
  5490   001AFE                     _strncpy:
  5491                           	callstack 29
  5492   001AFE  C001  F007         	movff	strncpy@d,strncpy@cp
  5493   001B02  C002  F008         	movff	strncpy@d+1,strncpy@cp+1
  5494   001B06  EFA0  F00D         	goto	l2413
  5495   001B0A                     l2407:
  5496   001B0A  0605               	decf	strncpy@n^0,f,c
  5497   001B0C  A0D8               	btfss	status,0,c
  5498   001B0E  0606               	decf	(strncpy@n+1)^0,f,c
  5499   001B10  C003  FFD9         	movff	strncpy@s,fsr2l
  5500   001B14  C004  FFDA         	movff	strncpy@s+1,fsr2h
  5501   001B18  4A03               	infsnz	strncpy@s^0,f,c
  5502   001B1A  2A04               	incf	(strncpy@s+1)^0,f,c
  5503   001B1C  C007  FFE1         	movff	strncpy@cp,fsr1l
  5504   001B20  C008  FFE2         	movff	strncpy@cp+1,fsr1h
  5505   001B24  4A07               	infsnz	strncpy@cp^0,f,c
  5506   001B26  2A08               	incf	(strncpy@cp+1)^0,f,c
  5507   001B28  CFDF FFE7          	movff	indf2,indf1
  5508   001B2C  50E7               	movf	indf1,w,c
  5509   001B2E  A4D8               	btfss	status,2,c
  5510   001B30  EF9C  F00D         	goto	u1731
  5511   001B34  EF9E  F00D         	goto	u1730
  5512   001B38                     u1731:
  5513   001B38  EFA0  F00D         	goto	l2413
  5514   001B3C                     u1730:
  5515   001B3C  EFB2  F00D         	goto	l2419
  5516   001B40                     l2413:
  5517   001B40  5005               	movf	strncpy@n^0,w,c
  5518   001B42  1006               	iorwf	(strncpy@n+1)^0,w,c
  5519   001B44  A4D8               	btfss	status,2,c
  5520   001B46  EFA7  F00D         	goto	u1741
  5521   001B4A  EFA9  F00D         	goto	u1740
  5522   001B4E                     u1741:
  5523   001B4E  EF85  F00D         	goto	l2407
  5524   001B52                     u1740:
  5525   001B52  EFB2  F00D         	goto	l2419
  5526   001B56                     l2415:
  5527   001B56  C007  FFD9         	movff	strncpy@cp,fsr2l
  5528   001B5A  C008  FFDA         	movff	strncpy@cp+1,fsr2h
  5529   001B5E  6ADF               	clrf	indf2,c
  5530   001B60  4A07               	infsnz	strncpy@cp^0,f,c
  5531   001B62  2A08               	incf	(strncpy@cp+1)^0,f,c
  5532   001B64                     l2419:
  5533   001B64  0605               	decf	strncpy@n^0,f,c
  5534   001B66  A0D8               	btfss	status,0,c
  5535   001B68  0606               	decf	(strncpy@n+1)^0,f,c
  5536   001B6A  2805               	incf	strncpy@n^0,w,c
  5537   001B6C  E106               	bnz	u1751
  5538   001B6E  2806               	incf	(strncpy@n+1)^0,w,c
  5539   001B70  A4D8               	btfss	status,2,c
  5540   001B72  EFBD  F00D         	goto	u1751
  5541   001B76  EFBF  F00D         	goto	u1750
  5542   001B7A                     u1751:
  5543   001B7A  EFAB  F00D         	goto	l2415
  5544   001B7E                     u1750:
  5545   001B7E  0012               	return		;funcret
  5546   001B80                     __end_of_strncpy:
  5547                           	callstack 0
  5548                           
  5549 ;; *************** function _Display_DHT11 *****************
  5550 ;; Defined at:
  5551 ;;		line 29 in file "main.c"
  5552 ;; Parameters:    Size  Location     Type
  5553 ;;		None
  5554 ;; Auto vars:     Size  Location     Type
  5555 ;;  temp            1   64[COMRAM] unsigned char 
  5556 ;;  hum             1   63[COMRAM] unsigned char 
  5557 ;; Return value:  Size  Location     Type
  5558 ;;                  1    wreg      void 
  5559 ;; Registers used:
  5560 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5561 ;; Tracked objects:
  5562 ;;		On entry : 0/0
  5563 ;;		On exit  : 0/0
  5564 ;;		Unchanged: 0/0
  5565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5566 ;;      Params:         0       0       0       0       0       0       0       0       0
  5567 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5569 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5570 ;;Total ram usage:        2 bytes
  5571 ;; Hardware stack levels used: 1
  5572 ;; Hardware stack levels required when called: 8
  5573 ;; This function calls:
  5574 ;;		_Clear_Line
  5575 ;;		_DHT11_Read
  5576 ;;		_LCD_String_xy
  5577 ;;		_sprintf
  5578 ;; This function is called by:
  5579 ;;		_main
  5580 ;; This function uses a non-reentrant model
  5581 ;;
  5582                           
  5583                           	psect	text29
  5584   001B80                     __ptext29:
  5585                           	callstack 0
  5586   001B80                     _Display_DHT11:
  5587                           	callstack 22
  5588   001B80                     
  5589                           ;main.c: 30:     uint8_t hum, temp;;main.c: 31:     Clear_Line(0); Clear_Line(1);
  5590   001B80  0E00               	movlw	0
  5591   001B82  ECFA  F010         	call	_Clear_Line
  5592   001B86  0E01               	movlw	1
  5593   001B88  ECFA  F010         	call	_Clear_Line
  5594   001B8C                     
  5595                           ;main.c: 32:     if(DHT11_Read(&hum, &temp)) {
  5596   001B8C  0E40               	movlw	low Display_DHT11@hum
  5597   001B8E  6E03               	movwf	DHT11_Read@humidity^0,c
  5598   001B90  0E41               	movlw	low Display_DHT11@temp
  5599   001B92  6E04               	movwf	DHT11_Read@temperature^0,c
  5600   001B94  EC58  F00A         	call	_DHT11_Read	;wreg free
  5601   001B98  0900               	iorlw	0
  5602   001B9A  B4D8               	btfsc	status,2,c
  5603   001B9C  EFD2  F00D         	goto	u2321
  5604   001BA0  EFD4  F00D         	goto	u2320
  5605   001BA4                     u2321:
  5606   001BA4  EFEA  F00D         	goto	l2781
  5607   001BA8                     u2320:
  5608   001BA8                     
  5609                           ;main.c: 33:         sprintf(lcd_buffer, "H:%u%% T:%uC", hum, temp);
  5610   001BA8  0EE4               	movlw	low _lcd_buffer
  5611   001BAA  6E2C               	movwf	sprintf@s^0,c
  5612   001BAC  0E6B               	movlw	low STR_2
  5613   001BAE  6E2D               	movwf	sprintf@fmt^0,c
  5614   001BB0  C040  F02E         	movff	Display_DHT11@hum,?_sprintf+2
  5615   001BB4  6A2F               	clrf	(?_sprintf+3)^0,c
  5616   001BB6  C041  F030         	movff	Display_DHT11@temp,?_sprintf+4
  5617   001BBA  6A31               	clrf	(?_sprintf+5)^0,c
  5618   001BBC  EC87  F010         	call	_sprintf	;wreg free
  5619   001BC0                     
  5620                           ;main.c: 34:         LCD_String_xy(0,0,lcd_buffer);
  5621   001BC0  0E00               	movlw	0
  5622   001BC2  6E05               	movwf	LCD_String_xy@pos^0,c
  5623   001BC4  0EE4               	movlw	low _lcd_buffer
  5624   001BC6  6E06               	movwf	LCD_String_xy@msg^0,c
  5625   001BC8  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
  5626   001BCA  0E00               	movlw	0
  5627   001BCC  EC3C  F00F         	call	_LCD_String_xy
  5628                           
  5629                           ;main.c: 35:     } else {
  5630   001BD0  EF00  F00E         	goto	l48
  5631   001BD4                     l2781:
  5632                           
  5633                           ;main.c: 36:         LCD_String_xy(0,0,"DHT11: Error");
  5634   001BD4  0E00               	movlw	0
  5635   001BD6  6E05               	movwf	LCD_String_xy@pos^0,c
  5636   001BD8  0E85               	movlw	low STR_3
  5637   001BDA  6E06               	movwf	LCD_String_xy@msg^0,c
  5638   001BDC  5006               	movf	LCD_String_xy@msg^0,w,c
  5639   001BDE  A4D8               	btfss	status,2,c
  5640   001BE0  0E08               	movlw	high __smallconst
  5641   001BE2  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  5642   001BE4  0E00               	movlw	0
  5643   001BE6  EC3C  F00F         	call	_LCD_String_xy
  5644                           
  5645                           ;main.c: 37:         LCD_String_xy(1,0,"Reintentando...");
  5646   001BEA  0E00               	movlw	0
  5647   001BEC  6E05               	movwf	LCD_String_xy@pos^0,c
  5648   001BEE  0E23               	movlw	low STR_4
  5649   001BF0  6E06               	movwf	LCD_String_xy@msg^0,c
  5650   001BF2  5006               	movf	LCD_String_xy@msg^0,w,c
  5651   001BF4  A4D8               	btfss	status,2,c
  5652   001BF6  0E08               	movlw	high __smallconst
  5653   001BF8  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  5654   001BFA  0E01               	movlw	1
  5655   001BFC  EC3C  F00F         	call	_LCD_String_xy
  5656   001C00                     l48:
  5657   001C00  0012               	return		;funcret
  5658   001C02                     __end_of_Display_DHT11:
  5659                           	callstack 0
  5660                           
  5661 ;; *************** function _sprintf *****************
  5662 ;; Defined at:
  5663 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  s               1   43[COMRAM] PTR unsigned char 
  5666 ;;		 -> lcd_buffer(17), 
  5667 ;;  fmt             1   44[COMRAM] PTR const unsigned char 
  5668 ;;		 -> STR_14(15), STR_13(17), STR_2(13), 
  5669 ;; Auto vars:     Size  Location     Type
  5670 ;;  f              11   52[COMRAM] struct _IO_FILE
  5671 ;;  ret             2    0        int 
  5672 ;;  ap              1   51[COMRAM] PTR void [1]
  5673 ;;		 -> ?_sprintf(2), 
  5674 ;; Return value:  Size  Location     Type
  5675 ;;                  2   43[COMRAM] int 
  5676 ;; Registers used:
  5677 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5678 ;; Tracked objects:
  5679 ;;		On entry : 0/0
  5680 ;;		On exit  : 0/0
  5681 ;;		Unchanged: 0/0
  5682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5683 ;;      Params:         8       0       0       0       0       0       0       0       0
  5684 ;;      Locals:        12       0       0       0       0       0       0       0       0
  5685 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5686 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5687 ;;Total ram usage:       20 bytes
  5688 ;; Hardware stack levels used: 1
  5689 ;; Hardware stack levels required when called: 7
  5690 ;; This function calls:
  5691 ;;		_vfprintf
  5692 ;; This function is called by:
  5693 ;;		_Display_DHT11
  5694 ;;		_Display_RTC
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text30
  5699   00210E                     __ptext30:
  5700                           	callstack 0
  5701   00210E                     _sprintf:
  5702                           	callstack 22
  5703   00210E  0E2E               	movlw	low (?_sprintf+2)
  5704   002110  6E34               	movwf	sprintf@ap^0,c
  5705   002112  C02C  F035         	movff	sprintf@s,sprintf@f
  5706   002116  0E00               	movlw	0
  5707   002118  6E38               	movwf	(sprintf@f+3)^0,c
  5708   00211A  0E00               	movlw	0
  5709   00211C  6E37               	movwf	(sprintf@f+2)^0,c
  5710   00211E  0E00               	movlw	0
  5711   002120  6E3F               	movwf	(sprintf@f+10)^0,c
  5712   002122  0E00               	movlw	0
  5713   002124  6E3E               	movwf	(sprintf@f+9)^0,c
  5714   002126  0E35               	movlw	low sprintf@f
  5715   002128  6E28               	movwf	vfprintf@fp^0,c
  5716   00212A  C02D  F029         	movff	sprintf@fmt,vfprintf@fmt
  5717   00212E  0E34               	movlw	low sprintf@ap
  5718   002130  6E2A               	movwf	vfprintf@ap^0,c
  5719   002132  EC33  F010         	call	_vfprintf	;wreg free
  5720   002136  502C               	movf	sprintf@s^0,w,c
  5721   002138  2437               	addwf	(sprintf@f+2)^0,w,c
  5722   00213A  6ED9               	movwf	fsr2l,c
  5723   00213C  6ADA               	clrf	fsr2h,c
  5724   00213E  6ADF               	clrf	indf2,c
  5725   002140  0012               	return		;funcret
  5726   002142                     __end_of_sprintf:
  5727                           	callstack 0
  5728                           
  5729 ;; *************** function _vfprintf *****************
  5730 ;; Defined at:
  5731 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  fp              1   39[COMRAM] PTR struct _IO_FILE
  5734 ;;		 -> sprintf@f(11), 
  5735 ;;  fmt             1   40[COMRAM] PTR const unsigned char 
  5736 ;;		 -> STR_14(15), STR_13(17), STR_2(13), 
  5737 ;;  ap              1   41[COMRAM] PTR PTR void 
  5738 ;;		 -> sprintf@ap(1), 
  5739 ;; Auto vars:     Size  Location     Type
  5740 ;;  cfmt            1   42[COMRAM] PTR unsigned char 
  5741 ;;		 -> STR_14(15), STR_13(17), STR_2(13), 
  5742 ;; Return value:  Size  Location     Type
  5743 ;;                  2   39[COMRAM] int 
  5744 ;; Registers used:
  5745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5746 ;; Tracked objects:
  5747 ;;		On entry : 0/0
  5748 ;;		On exit  : 0/0
  5749 ;;		Unchanged: 0/0
  5750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5751 ;;      Params:         3       0       0       0       0       0       0       0       0
  5752 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5753 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5754 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5755 ;;Total ram usage:        4 bytes
  5756 ;; Hardware stack levels used: 1
  5757 ;; Hardware stack levels required when called: 6
  5758 ;; This function calls:
  5759 ;;		_vfpfcnvrt
  5760 ;; This function is called by:
  5761 ;;		_sprintf
  5762 ;; This function uses a non-reentrant model
  5763 ;;
  5764                           
  5765                           	psect	text31
  5766   002066                     __ptext31:
  5767                           	callstack 0
  5768   002066                     _vfprintf:
  5769                           	callstack 22
  5770   002066                     
  5771                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5772   002066  C029  F02B         	movff	vfprintf@fmt,vfprintf@cfmt
  5773                           
  5774                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5775   00206A  EF3F  F010         	goto	l2533
  5776   00206E                     l2531:
  5777                           
  5778                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5779   00206E  C028  F01F         	movff	vfprintf@fp,vfpfcnvrt@fp
  5780   002072  0E2B               	movlw	low vfprintf@cfmt
  5781   002074  6E20               	movwf	vfpfcnvrt@fmt^0,c
  5782   002076  C02A  F021         	movff	vfprintf@ap,vfpfcnvrt@ap
  5783   00207A  ECAE  F006         	call	_vfpfcnvrt	;wreg free
  5784   00207E                     l2533:
  5785                           
  5786                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5787   00207E  C02B  FFF6         	movff	vfprintf@cfmt,tblptrl
  5788   002082                     	if	1	;There is more than 1 active tblptr byte
  5789   002082  0E08               	movlw	high __smallconst
  5790   002084  6EF7               	movwf	tblptrh,c
  5791   002086                     	endif
  5792   002086                     	if	0	;tblptru may be non-zero
  5793   002086                     	endif
  5794   002086                     	if	0	;tblptru may be non-zero
  5795   002086                     	endif
  5796   002086  0008               	tblrd		*
  5797   002088  50F5               	movf	tablat,w,c
  5798   00208A  0900               	iorlw	0
  5799   00208C  A4D8               	btfss	status,2,c
  5800   00208E  EF4B  F010         	goto	u1911
  5801   002092  EF4D  F010         	goto	u1910
  5802   002096                     u1911:
  5803   002096  EF37  F010         	goto	l2531
  5804   00209A                     u1910:
  5805   00209A                     
  5806                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5807   00209A  0E00               	movlw	0
  5808   00209C  6E29               	movwf	(?_vfprintf+1)^0,c
  5809   00209E  0E00               	movlw	0
  5810   0020A0  6E28               	movwf	?_vfprintf^0,c
  5811   0020A2  0012               	return		;funcret
  5812   0020A4                     __end_of_vfprintf:
  5813                           	callstack 0
  5814                           
  5815 ;; *************** function _vfpfcnvrt *****************
  5816 ;; Defined at:
  5817 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;  fp              1   30[COMRAM] PTR struct _IO_FILE
  5820 ;;		 -> sprintf@f(11), 
  5821 ;;  fmt             1   31[COMRAM] PTR PTR unsigned char 
  5822 ;;		 -> vfprintf@cfmt(1), 
  5823 ;;  ap              1   32[COMRAM] PTR PTR void 
  5824 ;;		 -> sprintf@ap(1), 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  convarg         4   33[COMRAM] struct .
  5827 ;;  cp              1   38[COMRAM] PTR unsigned char 
  5828 ;;		 -> STR_14(15), STR_13(17), STR_2(13), 
  5829 ;;  done            1   37[COMRAM] _Bool 
  5830 ;;  c               1    0        unsigned char 
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  1    wreg      void 
  5833 ;; Registers used:
  5834 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5840 ;;      Params:         3       0       0       0       0       0       0       0       0
  5841 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5842 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5843 ;;      Totals:         9       0       0       0       0       0       0       0       0
  5844 ;;Total ram usage:        9 bytes
  5845 ;; Hardware stack levels used: 1
  5846 ;; Hardware stack levels required when called: 5
  5847 ;; This function calls:
  5848 ;;		_fputc
  5849 ;;		_read_prec_or_width
  5850 ;;		_utoa
  5851 ;; This function is called by:
  5852 ;;		_vfprintf
  5853 ;; This function uses a non-reentrant model
  5854 ;;
  5855                           
  5856                           	psect	text32
  5857   000D5C                     __ptext32:
  5858                           	callstack 0
  5859   000D5C                     _vfpfcnvrt:
  5860                           	callstack 22
  5861   000D5C                     
  5862                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5863   000D5C  5020               	movf	vfpfcnvrt@fmt^0,w,c
  5864   000D5E  6ED9               	movwf	fsr2l,c
  5865   000D60  6ADA               	clrf	fsr2h,c
  5866   000D62  CFDF FFF6          	movff	indf2,tblptrl
  5867   000D66                     	if	1	;There is more than 1 active tblptr byte
  5868   000D66  0E08               	movlw	high __smallconst
  5869   000D68  6EF7               	movwf	tblptrh,c
  5870   000D6A                     	endif
  5871   000D6A                     	if	0	;tblptru may be non-zero
  5872   000D6A                     	endif
  5873   000D6A                     	if	0	;tblptru may be non-zero
  5874   000D6A                     	endif
  5875   000D6A  0008               	tblrd		*
  5876   000D6C  50F5               	movf	tablat,w,c
  5877   000D6E  0A25               	xorlw	37
  5878   000D70  A4D8               	btfss	status,2,c
  5879   000D72  EFBD  F006         	goto	u1541
  5880   000D76  EFBF  F006         	goto	u1540
  5881   000D7A                     u1541:
  5882   000D7A  EF67  F007         	goto	l2337
  5883   000D7E                     u1540:
  5884   000D7E                     
  5885                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5886   000D7E  5020               	movf	vfpfcnvrt@fmt^0,w,c
  5887   000D80  6ED9               	movwf	fsr2l,c
  5888   000D82  6ADA               	clrf	fsr2h,c
  5889   000D84  2ADF               	incf	indf2,f,c
  5890   000D86                     
  5891                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5892   000D86  0E00               	movlw	0
  5893   000D88  6E56               	movwf	(_width+1)^0,c
  5894   000D8A  0E00               	movlw	0
  5895   000D8C  6E55               	movwf	_width^0,c
  5896   000D8E  C055  F05A         	movff	_width,_flags
  5897   000D92                     
  5898                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5899   000D92  6857               	setf	_prec^0,c
  5900   000D94  6858               	setf	(_prec+1)^0,c
  5901   000D96                     
  5902                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  5903   000D96  6A26               	clrf	vfpfcnvrt@done^0,c
  5904                           
  5905                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5906   000D98  EFE8  F006         	goto	l2301
  5907   000D9C                     l2291:
  5908                           
  5909                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  5910   000D9C  825A               	bsf	_flags^0,1,c
  5911   000D9E                     
  5912                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  5913   000D9E  5020               	movf	vfpfcnvrt@fmt^0,w,c
  5914   000DA0  6ED9               	movwf	fsr2l,c
  5915   000DA2  6ADA               	clrf	fsr2h,c
  5916   000DA4  2ADF               	incf	indf2,f,c
  5917                           
  5918                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  5919   000DA6  EFE8  F006         	goto	l2301
  5920   000DAA                     l2295:
  5921                           
  5922                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  5923   000DAA  0E01               	movlw	1
  5924   000DAC  6E26               	movwf	vfpfcnvrt@done^0,c
  5925                           
  5926                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  5927   000DAE  EFE8  F006         	goto	l2301
  5928   000DB2                     l2299:
  5929   000DB2  5020               	movf	vfpfcnvrt@fmt^0,w,c
  5930   000DB4  6ED9               	movwf	fsr2l,c
  5931   000DB6  6ADA               	clrf	fsr2h,c
  5932   000DB8  CFDF FFF6          	movff	indf2,tblptrl
  5933   000DBC                     	if	1	;There is more than 1 active tblptr byte
  5934   000DBC  0E08               	movlw	high __smallconst
  5935   000DBE  6EF7               	movwf	tblptrh,c
  5936   000DC0                     	endif
  5937   000DC0                     	if	0	;tblptru may be non-zero
  5938   000DC0                     	endif
  5939   000DC0                     	if	0	;tblptru may be non-zero
  5940   000DC0                     	endif
  5941   000DC0  0008               	tblrd		*
  5942   000DC2  50F5               	movf	tablat,w,c
  5943                           
  5944                           ; Switch size 1, requested type "simple"
  5945                           ; Number of cases is 1, Range of values is 48 to 48
  5946                           ; switch strategies available:
  5947                           ; Name         Instructions Cycles
  5948                           ; simple_byte            4     3 (average)
  5949                           ;	Chosen strategy is simple_byte
  5950   000DC4  0A30               	xorlw	48	; case 48
  5951   000DC6  B4D8               	btfsc	status,2,c
  5952   000DC8  EFCE  F006         	goto	l2291
  5953   000DCC  EFD5  F006         	goto	l2295
  5954   000DD0                     l2301:
  5955                           
  5956                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5957   000DD0  5026               	movf	vfpfcnvrt@done^0,w,c
  5958   000DD2  B4D8               	btfsc	status,2,c
  5959   000DD4  EFEE  F006         	goto	u1551
  5960   000DD8  EFF0  F006         	goto	u1550
  5961   000DDC                     u1551:
  5962   000DDC  EFD9  F006         	goto	l2299
  5963   000DE0                     u1550:
  5964   000DE0                     
  5965                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  5966   000DE0  C020  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5967   000DE4  C021  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5968   000DE8  EC11  F00C         	call	_read_prec_or_width	;wreg free
  5969   000DEC  C001  F055         	movff	?_read_prec_or_width,_width
  5970   000DF0  C002  F056         	movff	?_read_prec_or_width+1,_width+1
  5971   000DF4                     
  5972                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  5973   000DF4  BE56               	btfsc	(_width+1)^0,7,c
  5974   000DF6  EF01  F007         	goto	u1560
  5975   000DFA  EFFF  F006         	goto	u1561
  5976   000DFE                     u1561:
  5977   000DFE  EF06  F007         	goto	l2309
  5978   000E02                     u1560:
  5979   000E02                     
  5980                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  5981   000E02  805A               	bsf	_flags^0,0,c
  5982                           
  5983                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  5984   000E04  6C55               	negf	_width^0,c
  5985   000E06  1E56               	comf	(_width+1)^0,f,c
  5986   000E08  B0D8               	btfsc	status,0,c
  5987   000E0A  2A56               	incf	(_width+1)^0,f,c
  5988   000E0C                     l2309:
  5989                           
  5990                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1439:   if (0
  5991   000E0C  5020               	movf	vfpfcnvrt@fmt^0,w,c
  5992   000E0E  6ED9               	movwf	fsr2l,c
  5993   000E10  6ADA               	clrf	fsr2h,c
  5994   000E12  50DF               	movf	indf2,w,c
  5995   000E14  6E27               	movwf	vfpfcnvrt@cp^0,c
  5996   000E16  C027  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5997   000E1A                     	if	1	;There is more than 1 active tblptr byte
  5998   000E1A  0E08               	movlw	high __smallconst
  5999   000E1C  6EF7               	movwf	tblptrh,c
  6000   000E1E                     	endif
  6001   000E1E                     	if	0	;tblptru may be non-zero
  6002   000E1E                     	endif
  6003   000E1E                     	if	0	;tblptru may be non-zero
  6004   000E1E                     	endif
  6005   000E1E  0008               	tblrd		*
  6006   000E20  50F5               	movf	tablat,w,c
  6007   000E22  0A75               	xorlw	117
  6008   000E24  A4D8               	btfss	status,2,c
  6009   000E26  EF17  F007         	goto	u1571
  6010   000E2A  EF19  F007         	goto	u1570
  6011   000E2E                     u1571:
  6012   000E2E  EF42  F007         	goto	l2325
  6013   000E32                     u1570:
  6014   000E32                     
  6015                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1452:     ) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1495:    convarg.uint
      +                           = (vfpf_uint_t)(unsigned int)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned
      +                           int)0));
  6016   000E32  5021               	movf	vfpfcnvrt@ap^0,w,c
  6017   000E34  6ED9               	movwf	fsr2l,c
  6018   000E36  6ADA               	clrf	fsr2h,c
  6019   000E38  0E02               	movlw	2
  6020   000E3A  26DF               	addwf	indf2,f,c
  6021   000E3C  5CDF               	subwf	indf2,w,c
  6022   000E3E  6ED9               	movwf	fsr2l,c
  6023   000E40  6ADA               	clrf	fsr2h,c
  6024   000E42  CFDE F022          	movff	postinc2,vfpfcnvrt@convarg
  6025   000E46  CFDE F023          	movff	postinc2,vfpfcnvrt@convarg+1
  6026   000E4A                     
  6027                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1497:    *fmt = c
      +                          p+1;
  6028   000E4A  5020               	movf	vfpfcnvrt@fmt^0,w,c
  6029   000E4C  6ED9               	movwf	fsr2l,c
  6030   000E4E  6ADA               	clrf	fsr2h,c
  6031   000E50  2827               	incf	vfpfcnvrt@cp^0,w,c
  6032   000E52  6EDF               	movwf	indf2,c
  6033                           
  6034                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1498:    switch (
      +                          *cp) {
  6035   000E54  EF36  F007         	goto	l2323
  6036   000E58                     l2317:
  6037                           
  6038                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1542:      return
      +                           (void) utoa(fp, convarg.uint);;	Return value of _vfpfcnvrt is never used
  6039   000E58  C01F  F017         	movff	vfpfcnvrt@fp,utoa@fp
  6040   000E5C  C022  F018         	movff	vfpfcnvrt@convarg,utoa@d
  6041   000E60  C023  F019         	movff	vfpfcnvrt@convarg+1,utoa@d+1
  6042   000E64  EC11  F009         	call	_utoa	;wreg free
  6043   000E68  EF78  F007         	goto	l1057
  6044   000E6C                     l2323:
  6045   000E6C  C027  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  6046   000E70                     	if	1	;There is more than 1 active tblptr byte
  6047   000E70  0E08               	movlw	high __smallconst
  6048   000E72  6EF7               	movwf	tblptrh,c
  6049   000E74                     	endif
  6050   000E74                     	if	0	;tblptru may be non-zero
  6051   000E74                     	endif
  6052   000E74                     	if	0	;tblptru may be non-zero
  6053   000E74                     	endif
  6054   000E74  0008               	tblrd		*
  6055   000E76  50F5               	movf	tablat,w,c
  6056                           
  6057                           ; Switch size 1, requested type "simple"
  6058                           ; Number of cases is 1, Range of values is 117 to 117
  6059                           ; switch strategies available:
  6060                           ; Name         Instructions Cycles
  6061                           ; simple_byte            4     3 (average)
  6062                           ;	Chosen strategy is simple_byte
  6063   000E78  0A75               	xorlw	117	; case 117
  6064   000E7A  B4D8               	btfsc	status,2,c
  6065   000E7C  EF2C  F007         	goto	l2317
  6066   000E80  EF42  F007         	goto	l2325
  6067   000E84                     l2325:
  6068                           
  6069                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  6070   000E84  5020               	movf	vfpfcnvrt@fmt^0,w,c
  6071   000E86  6ED9               	movwf	fsr2l,c
  6072   000E88  6ADA               	clrf	fsr2h,c
  6073   000E8A  CFDF FFF6          	movff	indf2,tblptrl
  6074   000E8E                     	if	1	;There is more than 1 active tblptr byte
  6075   000E8E  0E08               	movlw	high __smallconst
  6076   000E90  6EF7               	movwf	tblptrh,c
  6077   000E92                     	endif
  6078   000E92                     	if	0	;tblptru may be non-zero
  6079   000E92                     	endif
  6080   000E92                     	if	0	;tblptru may be non-zero
  6081   000E92                     	endif
  6082   000E92  0008               	tblrd		*
  6083   000E94  50F5               	movf	tablat,w,c
  6084   000E96  0A25               	xorlw	37
  6085   000E98  A4D8               	btfss	status,2,c
  6086   000E9A  EF51  F007         	goto	u1581
  6087   000E9E  EF53  F007         	goto	u1580
  6088   000EA2                     u1581:
  6089   000EA2  EF61  F007         	goto	l2333
  6090   000EA6                     u1580:
  6091   000EA6                     
  6092                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  6093   000EA6  5020               	movf	vfpfcnvrt@fmt^0,w,c
  6094   000EA8  6ED9               	movwf	fsr2l,c
  6095   000EAA  6ADA               	clrf	fsr2h,c
  6096   000EAC  2ADF               	incf	indf2,f,c
  6097   000EAE                     
  6098                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  6099   000EAE  0E00               	movlw	0
  6100   000EB0  6E02               	movwf	(fputc@c+1)^0,c
  6101   000EB2  0E25               	movlw	37
  6102   000EB4  6E01               	movwf	fputc@c^0,c
  6103   000EB6  C01F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6104   000EBA  EC6A  F00B         	call	_fputc	;wreg free
  6105   000EBE  EF78  F007         	goto	l1057
  6106   000EC2                     l2333:
  6107                           
  6108                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6109   000EC2  5020               	movf	vfpfcnvrt@fmt^0,w,c
  6110   000EC4  6ED9               	movwf	fsr2l,c
  6111   000EC6  6ADA               	clrf	fsr2h,c
  6112   000EC8  2ADF               	incf	indf2,f,c
  6113   000ECA  EF78  F007         	goto	l1057
  6114   000ECE                     l2337:
  6115                           
  6116                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6117   000ECE  5020               	movf	vfpfcnvrt@fmt^0,w,c
  6118   000ED0  6ED9               	movwf	fsr2l,c
  6119   000ED2  6ADA               	clrf	fsr2h,c
  6120   000ED4  CFDF FFF6          	movff	indf2,tblptrl
  6121   000ED8                     	if	1	;There is more than 1 active tblptr byte
  6122   000ED8  0E08               	movlw	high __smallconst
  6123   000EDA  6EF7               	movwf	tblptrh,c
  6124   000EDC                     	endif
  6125   000EDC                     	if	0	;tblptru may be non-zero
  6126   000EDC                     	endif
  6127   000EDC                     	if	0	;tblptru may be non-zero
  6128   000EDC                     	endif
  6129   000EDC  0008               	tblrd		*
  6130   000EDE  50F5               	movf	tablat,w,c
  6131   000EE0  6E01               	movwf	fputc@c^0,c
  6132   000EE2  6A02               	clrf	(fputc@c+1)^0,c
  6133   000EE4  C01F  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6134   000EE8  EC6A  F00B         	call	_fputc	;wreg free
  6135   000EEC  EF61  F007         	goto	l2333
  6136   000EF0                     l1057:
  6137   000EF0  0012               	return		;funcret
  6138   000EF2                     __end_of_vfpfcnvrt:
  6139                           	callstack 0
  6140                           
  6141 ;; *************** function _utoa *****************
  6142 ;; Defined at:
  6143 ;;		line 1001 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6146 ;;		 -> sprintf@f(11), 
  6147 ;;  d               2   23[COMRAM] unsigned int 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  i               2   28[COMRAM] int 
  6150 ;;  w               2   26[COMRAM] int 
  6151 ;;  p               1   25[COMRAM] _Bool 
  6152 ;; Return value:  Size  Location     Type
  6153 ;;                  1    wreg      void 
  6154 ;; Registers used:
  6155 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6156 ;; Tracked objects:
  6157 ;;		On entry : 0/0
  6158 ;;		On exit  : 0/0
  6159 ;;		Unchanged: 0/0
  6160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6161 ;;      Params:         3       0       0       0       0       0       0       0       0
  6162 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6164 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6165 ;;Total ram usage:        8 bytes
  6166 ;; Hardware stack levels used: 1
  6167 ;; Hardware stack levels required when called: 4
  6168 ;; This function calls:
  6169 ;;		___lwdiv
  6170 ;;		___lwmod
  6171 ;;		_pad
  6172 ;; This function is called by:
  6173 ;;		_vfpfcnvrt
  6174 ;; This function uses a non-reentrant model
  6175 ;;
  6176                           
  6177                           	psect	text33
  6178   001222                     __ptext33:
  6179                           	callstack 0
  6180   001222                     _utoa:
  6181                           	callstack 22
  6182   001222                     
  6183                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1001: static void
      +                           utoa(FILE *fp, vfpf_uint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1002: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 1003:     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprn
      +                          t.c: 1007:  _Bool p = 1;
  6184   001222  0E01               	movlw	1
  6185   001224  6E1A               	movwf	utoa@p^0,c
  6186   001226                     
  6187                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1019:     w = wid
      +                          th;
  6188   001226  C055  F01B         	movff	_width,utoa@w
  6189   00122A  C056  F01C         	movff	_width+1,utoa@w+1
  6190                           
  6191                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1022:     i = siz
      +                          eof(dbuf) - 1;
  6192   00122E  0E00               	movlw	0
  6193   001230  6E1E               	movwf	(utoa@i+1)^0,c
  6194   001232  0E1F               	movlw	31
  6195   001234  6E1D               	movwf	utoa@i^0,c
  6196   001236                     
  6197                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1023:     dbuf[i]
      +                           = '\0';
  6198   001236  0101               	movlb	1	; () banked
  6199   001238  6BD5               	clrf	(_dbuf+31)& (0+255),b
  6200                           
  6201                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  6202   00123A  EF47  F009         	goto	l2207
  6203   00123E                     l2197:
  6204                           
  6205                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1033:     )) {;C:
      +                          \Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1034:         --i;
  6206   00123E  061D               	decf	utoa@i^0,f,c
  6207   001240  A0D8               	btfss	status,0,c
  6208   001242  061E               	decf	(utoa@i+1)^0,f,c
  6209   001244                     
  6210                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1035:         dbu
      +                          f[i] = '0' + (d % 10);
  6211   001244  0EB6               	movlw	low _dbuf
  6212   001246  241D               	addwf	utoa@i^0,w,c
  6213   001248  6ED9               	movwf	fsr2l,c
  6214   00124A  0E01               	movlw	high _dbuf
  6215   00124C  201E               	addwfc	(utoa@i+1)^0,w,c
  6216   00124E  6EDA               	movwf	fsr2h,c
  6217   001250  C018  F001         	movff	utoa@d,___lwmod@dividend
  6218   001254  C019  F002         	movff	utoa@d+1,___lwmod@dividend+1
  6219   001258  0E00               	movlw	0
  6220   00125A  6E04               	movwf	(___lwmod@divisor+1)^0,c
  6221   00125C  0E0A               	movlw	10
  6222   00125E  6E03               	movwf	___lwmod@divisor^0,c
  6223   001260  ECDB  F00E         	call	___lwmod	;wreg free
  6224   001264  5001               	movf	?___lwmod^0,w,c
  6225   001266  0F30               	addlw	48
  6226   001268  6EDF               	movwf	indf2,c
  6227   00126A                     
  6228                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1039:   p = 0;
  6229   00126A  6A1A               	clrf	utoa@p^0,c
  6230   00126C                     
  6231                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1041:         --w
      +                          ;
  6232   00126C  061B               	decf	utoa@w^0,f,c
  6233   00126E  A0D8               	btfss	status,0,c
  6234   001270  061C               	decf	(utoa@w+1)^0,f,c
  6235   001272                     
  6236                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1042:         d =
      +                           d / 10;
  6237   001272  C018  F001         	movff	utoa@d,___lwdiv@dividend
  6238   001276  C019  F002         	movff	utoa@d+1,___lwdiv@dividend+1
  6239   00127A  0E00               	movlw	0
  6240   00127C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  6241   00127E  0E0A               	movlw	10
  6242   001280  6E03               	movwf	___lwdiv@divisor^0,c
  6243   001282  EC3D  F00E         	call	___lwdiv	;wreg free
  6244   001286  C001  F018         	movff	?___lwdiv,utoa@d
  6245   00128A  C002  F019         	movff	?___lwdiv+1,utoa@d+1
  6246   00128E                     l2207:
  6247                           
  6248                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1024:     while (
      +                          i && (d != 0
  6249   00128E  501D               	movf	utoa@i^0,w,c
  6250   001290  101E               	iorwf	(utoa@i+1)^0,w,c
  6251   001292  B4D8               	btfsc	status,2,c
  6252   001294  EF4E  F009         	goto	u1381
  6253   001298  EF50  F009         	goto	u1380
  6254   00129C                     u1381:
  6255   00129C  EF75  F009         	goto	l2217
  6256   0012A0                     u1380:
  6257   0012A0  5018               	movf	utoa@d^0,w,c
  6258   0012A2  1019               	iorwf	(utoa@d+1)^0,w,c
  6259   0012A4  A4D8               	btfss	status,2,c
  6260   0012A6  EF57  F009         	goto	u1391
  6261   0012AA  EF59  F009         	goto	u1390
  6262   0012AE                     u1391:
  6263   0012AE  EF1F  F009         	goto	l2197
  6264   0012B2                     u1390:
  6265   0012B2  501A               	movf	utoa@p^0,w,c
  6266   0012B4  A4D8               	btfss	status,2,c
  6267   0012B6  EF5F  F009         	goto	u1401
  6268   0012BA  EF61  F009         	goto	u1400
  6269   0012BE                     u1401:
  6270   0012BE  EF1F  F009         	goto	l2197
  6271   0012C2                     u1400:
  6272   0012C2  BE1C               	btfsc	(utoa@w+1)^0,7,c
  6273   0012C4  EF6C  F009         	goto	u1411
  6274   0012C8  501C               	movf	(utoa@w+1)^0,w,c
  6275   0012CA  E108               	bnz	u1410
  6276   0012CC  041B               	decf	utoa@w^0,w,c
  6277   0012CE  A0D8               	btfss	status,0,c
  6278   0012D0  EF6C  F009         	goto	u1411
  6279   0012D4  EF6E  F009         	goto	u1410
  6280   0012D8                     u1411:
  6281   0012D8  EF75  F009         	goto	l2217
  6282   0012DC                     u1410:
  6283   0012DC  B25A               	btfsc	_flags^0,1,c
  6284   0012DE  EF73  F009         	goto	u1421
  6285   0012E2  EF75  F009         	goto	u1420
  6286   0012E6                     u1421:
  6287   0012E6  EF1F  F009         	goto	l2197
  6288   0012EA                     u1420:
  6289   0012EA                     l2217:
  6290                           
  6291                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1046:     return 
      +                          (void) pad(fp, &dbuf[i], w);
  6292   0012EA  C017  F00F         	movff	utoa@fp,pad@fp
  6293   0012EE  0EB6               	movlw	low _dbuf
  6294   0012F0  241D               	addwf	utoa@i^0,w,c
  6295   0012F2  6E10               	movwf	pad@buf^0,c
  6296   0012F4  0E01               	movlw	high _dbuf
  6297   0012F6  201E               	addwfc	(utoa@i+1)^0,w,c
  6298   0012F8  6E11               	movwf	(pad@buf+1)^0,c
  6299   0012FA  C01B  F012         	movff	utoa@w,pad@p
  6300   0012FE  C01C  F013         	movff	utoa@w+1,pad@p+1
  6301   001302  ECAE  F00C         	call	_pad	;wreg free
  6302   001306  0012               	return		;funcret
  6303   001308                     __end_of_utoa:
  6304                           	callstack 0
  6305                           
  6306 ;; *************** function _pad *****************
  6307 ;; Defined at:
  6308 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6311 ;;		 -> sprintf@f(11), 
  6312 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6313 ;;		 -> dbuf(32), 
  6314 ;;  p               2   17[COMRAM] int 
  6315 ;; Auto vars:     Size  Location     Type
  6316 ;;  i               2   20[COMRAM] int 
  6317 ;; Return value:  Size  Location     Type
  6318 ;;                  1    wreg      void 
  6319 ;; Registers used:
  6320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6321 ;; Tracked objects:
  6322 ;;		On entry : 0/0
  6323 ;;		On exit  : 0/0
  6324 ;;		Unchanged: 0/0
  6325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6326 ;;      Params:         5       0       0       0       0       0       0       0       0
  6327 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6328 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6329 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6330 ;;Total ram usage:        8 bytes
  6331 ;; Hardware stack levels used: 1
  6332 ;; Hardware stack levels required when called: 3
  6333 ;; This function calls:
  6334 ;;		_fputc
  6335 ;;		_fputs
  6336 ;; This function is called by:
  6337 ;;		_utoa
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text34
  6342   00195C                     __ptext34:
  6343                           	callstack 0
  6344   00195C                     _pad:
  6345                           	callstack 22
  6346   00195C                     
  6347                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  6348   00195C  A05A               	btfss	_flags^0,0,c
  6349   00195E  EFB3  F00C         	goto	u1341
  6350   001962  EFB5  F00C         	goto	u1340
  6351   001966                     u1341:
  6352   001966  EFBD  F00C         	goto	l2159
  6353   00196A                     u1340:
  6354   00196A                     
  6355                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  6356   00196A  C010  F009         	movff	pad@buf,fputs@s
  6357   00196E  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6358   001972  C00F  F00B         	movff	pad@fp,fputs@fp
  6359   001976  EC13  F010         	call	_fputs	;wreg free
  6360   00197A                     l2159:
  6361                           
  6362                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  6363   00197A  BE13               	btfsc	(pad@p+1)^0,7,c
  6364   00197C  EFC4  F00C         	goto	u1350
  6365   001980  EFC2  F00C         	goto	u1351
  6366   001984                     u1351:
  6367   001984  EFC8  F00C         	goto	l1017
  6368   001988                     u1350:
  6369   001988                     
  6370                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6371   001988  0E00               	movlw	0
  6372   00198A  6E13               	movwf	(pad@p+1)^0,c
  6373   00198C  0E00               	movlw	0
  6374   00198E  6E12               	movwf	pad@p^0,c
  6375   001990                     l1017:
  6376                           
  6377                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6378   001990  0E00               	movlw	0
  6379   001992  6E16               	movwf	(pad@i+1)^0,c
  6380   001994  0E00               	movlw	0
  6381   001996  6E15               	movwf	pad@i^0,c
  6382                           
  6383                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6384   001998  EFD8  F00C         	goto	l2167
  6385   00199C                     l2163:
  6386                           
  6387                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6388   00199C  0E00               	movlw	0
  6389   00199E  6E02               	movwf	(fputc@c+1)^0,c
  6390   0019A0  0E20               	movlw	32
  6391   0019A2  6E01               	movwf	fputc@c^0,c
  6392   0019A4  C00F  F003         	movff	pad@fp,fputc@fp
  6393   0019A8  EC6A  F00B         	call	_fputc	;wreg free
  6394   0019AC                     
  6395                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6396   0019AC  4A15               	infsnz	pad@i^0,f,c
  6397   0019AE  2A16               	incf	(pad@i+1)^0,f,c
  6398   0019B0                     l2167:
  6399                           
  6400                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6401   0019B0  5012               	movf	pad@p^0,w,c
  6402   0019B2  5C15               	subwf	pad@i^0,w,c
  6403   0019B4  5016               	movf	(pad@i+1)^0,w,c
  6404   0019B6  0A80               	xorlw	128
  6405   0019B8  6E14               	movwf	??_pad^0,c
  6406   0019BA  5013               	movf	(pad@p+1)^0,w,c
  6407   0019BC  0A80               	xorlw	128
  6408   0019BE  5814               	subwfb	??_pad^0,w,c
  6409   0019C0  A0D8               	btfss	status,0,c
  6410   0019C2  EFE5  F00C         	goto	u1361
  6411   0019C6  EFE7  F00C         	goto	u1360
  6412   0019CA                     u1361:
  6413   0019CA  EFCE  F00C         	goto	l2163
  6414   0019CE                     u1360:
  6415   0019CE                     
  6416                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  6417   0019CE  B05A               	btfsc	_flags^0,0,c
  6418   0019D0  EFEC  F00C         	goto	u1371
  6419   0019D4  EFEE  F00C         	goto	u1370
  6420   0019D8                     u1371:
  6421   0019D8  EFF6  F00C         	goto	l1022
  6422   0019DC                     u1370:
  6423   0019DC                     
  6424                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6425   0019DC  C010  F009         	movff	pad@buf,fputs@s
  6426   0019E0  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6427   0019E4  C00F  F00B         	movff	pad@fp,fputs@fp
  6428   0019E8  EC13  F010         	call	_fputs	;wreg free
  6429   0019EC                     l1022:
  6430   0019EC  0012               	return		;funcret
  6431   0019EE                     __end_of_pad:
  6432                           	callstack 0
  6433                           
  6434 ;; *************** function _fputs *****************
  6435 ;; Defined at:
  6436 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6439 ;;		 -> dbuf(32), 
  6440 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6441 ;;		 -> sprintf@f(11), 
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;  i               2   12[COMRAM] int 
  6444 ;;  c               1   11[COMRAM] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  2    8[COMRAM] int 
  6447 ;; Registers used:
  6448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6454 ;;      Params:         3       0       0       0       0       0       0       0       0
  6455 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6457 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6458 ;;Total ram usage:        6 bytes
  6459 ;; Hardware stack levels used: 1
  6460 ;; Hardware stack levels required when called: 2
  6461 ;; This function calls:
  6462 ;;		_fputc
  6463 ;; This function is called by:
  6464 ;;		_pad
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text35
  6469   002026                     __ptext35:
  6470                           	callstack 0
  6471   002026                     _fputs:
  6472                           	callstack 22
  6473   002026  0E00               	movlw	0
  6474   002028  6E0E               	movwf	(fputs@i+1)^0,c
  6475   00202A  0E00               	movlw	0
  6476   00202C  6E0D               	movwf	fputs@i^0,c
  6477   00202E  EF22  F010         	goto	l2115
  6478   002032                     l2111:
  6479   002032  C00C  F001         	movff	fputs@c,fputc@c
  6480   002036  6A02               	clrf	(fputc@c+1)^0,c
  6481   002038  C00B  F003         	movff	fputs@fp,fputc@fp
  6482   00203C  EC6A  F00B         	call	_fputc	;wreg free
  6483   002040  4A0D               	infsnz	fputs@i^0,f,c
  6484   002042  2A0E               	incf	(fputs@i+1)^0,f,c
  6485   002044                     l2115:
  6486   002044  500D               	movf	fputs@i^0,w,c
  6487   002046  2409               	addwf	fputs@s^0,w,c
  6488   002048  6ED9               	movwf	fsr2l,c
  6489   00204A  500E               	movf	(fputs@i+1)^0,w,c
  6490   00204C  200A               	addwfc	(fputs@s+1)^0,w,c
  6491   00204E  6EDA               	movwf	fsr2h,c
  6492   002050  50DF               	movf	indf2,w,c
  6493   002052  6E0C               	movwf	fputs@c^0,c
  6494   002054  500C               	movf	fputs@c^0,w,c
  6495   002056  A4D8               	btfss	status,2,c
  6496   002058  EF30  F010         	goto	u1271
  6497   00205C  EF32  F010         	goto	u1270
  6498   002060                     u1271:
  6499   002060  EF19  F010         	goto	l2111
  6500   002064                     u1270:
  6501   002064  0012               	return		;funcret
  6502   002066                     __end_of_fputs:
  6503                           	callstack 0
  6504                           
  6505 ;; *************** function _fputc *****************
  6506 ;; Defined at:
  6507 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;  c               2    0[COMRAM] int 
  6510 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6511 ;;		 -> sprintf@f(11), 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  2    0[COMRAM] int 
  6516 ;; Registers used:
  6517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6523 ;;      Params:         3       0       0       0       0       0       0       0       0
  6524 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6525 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6526 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6527 ;;Total ram usage:        8 bytes
  6528 ;; Hardware stack levels used: 1
  6529 ;; Hardware stack levels required when called: 1
  6530 ;; This function calls:
  6531 ;;		_putch
  6532 ;; This function is called by:
  6533 ;;		_pad
  6534 ;;		_vfpfcnvrt
  6535 ;;		_fputs
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text36
  6540   0016D4                     __ptext36:
  6541                           	callstack 0
  6542   0016D4                     _fputc:
  6543                           	callstack 22
  6544   0016D4  5003               	movf	fputc@fp^0,w,c
  6545   0016D6  B4D8               	btfsc	status,2,c
  6546   0016D8  EF70  F00B         	goto	u1231
  6547   0016DC  EF72  F00B         	goto	u1230
  6548   0016E0                     u1231:
  6549   0016E0  EF7A  F00B         	goto	l2099
  6550   0016E4                     u1230:
  6551   0016E4  5003               	movf	fputc@fp^0,w,c
  6552   0016E6  A4D8               	btfss	status,2,c
  6553   0016E8  EF78  F00B         	goto	u1241
  6554   0016EC  EF7A  F00B         	goto	u1240
  6555   0016F0                     u1241:
  6556   0016F0  EF7F  F00B         	goto	l2101
  6557   0016F4                     u1240:
  6558   0016F4                     l2099:
  6559   0016F4  5001               	movf	fputc@c^0,w,c
  6560   0016F6  EC29  F011         	call	_putch
  6561   0016FA  EFBE  F00B         	goto	l1077
  6562   0016FE                     l2101:
  6563   0016FE  5003               	movf	fputc@fp^0,w,c
  6564   001700  6ED9               	movwf	fsr2l,c
  6565   001702  6ADA               	clrf	fsr2h,c
  6566   001704  0E09               	movlw	9
  6567   001706  26D9               	addwf	fsr2l,f,c
  6568   001708  50DE               	movf	postinc2,w,c
  6569   00170A  10DE               	iorwf	postinc2,w,c
  6570   00170C  B4D8               	btfsc	status,2,c
  6571   00170E  EF8B  F00B         	goto	u1251
  6572   001712  EF8D  F00B         	goto	u1250
  6573   001716                     u1251:
  6574   001716  EFA6  F00B         	goto	l2105
  6575   00171A                     u1250:
  6576   00171A  5003               	movf	fputc@fp^0,w,c
  6577   00171C  6ED9               	movwf	fsr2l,c
  6578   00171E  6ADA               	clrf	fsr2h,c
  6579   001720  0E09               	movlw	9
  6580   001722  26D9               	addwf	fsr2l,f,c
  6581   001724  5003               	movf	fputc@fp^0,w,c
  6582   001726  6EE1               	movwf	fsr1l,c
  6583   001728  6AE2               	clrf	fsr1h,c
  6584   00172A  0E02               	movlw	2
  6585   00172C  26E1               	addwf	fsr1l,f,c
  6586   00172E  50DE               	movf	postinc2,w,c
  6587   001730  5CE6               	subwf	postinc1,w,c
  6588   001732  50E6               	movf	postinc1,w,c
  6589   001734  0A80               	xorlw	128
  6590   001736  6E08               	movwf	(??_fputc+4)^0,c
  6591   001738  50DE               	movf	postinc2,w,c
  6592   00173A  0A80               	xorlw	128
  6593   00173C  5808               	subwfb	(??_fputc+4)^0,w,c
  6594   00173E  B0D8               	btfsc	status,0,c
  6595   001740  EFA4  F00B         	goto	u1261
  6596   001744  EFA6  F00B         	goto	u1260
  6597   001748                     u1261:
  6598   001748  EFBE  F00B         	goto	l1077
  6599   00174C                     u1260:
  6600   00174C                     l2105:
  6601   00174C  5003               	movf	fputc@fp^0,w,c
  6602   00174E  6ED9               	movwf	fsr2l,c
  6603   001750  6ADA               	clrf	fsr2h,c
  6604   001752  0E02               	movlw	2
  6605   001754  26D9               	addwf	fsr2l,f,c
  6606   001756  50DF               	movf	indf2,w,c
  6607   001758  6E04               	movwf	??_fputc^0,c
  6608   00175A  5003               	movf	fputc@fp^0,w,c
  6609   00175C  6ED9               	movwf	fsr2l,c
  6610   00175E  6ADA               	clrf	fsr2h,c
  6611   001760  50DF               	movf	indf2,w,c
  6612   001762  2404               	addwf	??_fputc^0,w,c
  6613   001764  6ED9               	movwf	fsr2l,c
  6614   001766  6ADA               	clrf	fsr2h,c
  6615   001768  C001  FFDF         	movff	fputc@c,indf2
  6616   00176C  5003               	movf	fputc@fp^0,w,c
  6617   00176E  6ED9               	movwf	fsr2l,c
  6618   001770  6ADA               	clrf	fsr2h,c
  6619   001772  0E02               	movlw	2
  6620   001774  26D9               	addwf	fsr2l,f,c
  6621   001776  2ADE               	incf	postinc2,f,c
  6622   001778  0E00               	movlw	0
  6623   00177A  22DD               	addwfc	postdec2,f,c
  6624   00177C                     l1077:
  6625   00177C  0012               	return		;funcret
  6626   00177E                     __end_of_fputc:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function _putch *****************
  6630 ;; Defined at:
  6631 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  c               1    wreg     unsigned char 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  c               1    0[COMRAM] unsigned char 
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6645 ;;      Params:         0       0       0       0       0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6648 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6649 ;;Total ram usage:        0 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; This function calls:
  6652 ;;		Nothing
  6653 ;; This function is called by:
  6654 ;;		_fputc
  6655 ;; This function uses a non-reentrant model
  6656 ;;
  6657                           
  6658                           	psect	text37
  6659   002252                     __ptext37:
  6660                           	callstack 0
  6661   002252                     _putch:
  6662                           	callstack 22
  6663   002252  0012               	return		;funcret
  6664   002254                     __end_of_putch:
  6665                           	callstack 0
  6666                           
  6667 ;; *************** function ___lwmod *****************
  6668 ;; Defined at:
  6669 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwmod.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  dividend        2    0[COMRAM] unsigned int 
  6672 ;;  divisor         2    2[COMRAM] unsigned int 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;  counter         1    4[COMRAM] unsigned char 
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  2    0[COMRAM] unsigned int 
  6677 ;; Registers used:
  6678 ;;		wreg, status,2, status,0
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6684 ;;      Params:         4       0       0       0       0       0       0       0       0
  6685 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6686 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6687 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6688 ;;Total ram usage:        5 bytes
  6689 ;; Hardware stack levels used: 1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_main
  6694 ;;		_utoa
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text38
  6699   001DB6                     __ptext38:
  6700                           	callstack 0
  6701   001DB6                     ___lwmod:
  6702                           	callstack 30
  6703   001DB6  5003               	movf	___lwmod@divisor^0,w,c
  6704   001DB8  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  6705   001DBA  B4D8               	btfsc	status,2,c
  6706   001DBC  EFE2  F00E         	goto	u1311
  6707   001DC0  EFE4  F00E         	goto	u1310
  6708   001DC4                     u1311:
  6709   001DC4  EF08  F00F         	goto	l822
  6710   001DC8                     u1310:
  6711   001DC8  0E01               	movlw	1
  6712   001DCA  6E05               	movwf	___lwmod@counter^0,c
  6713   001DCC  EFEC  F00E         	goto	l2145
  6714   001DD0                     l2143:
  6715   001DD0  90D8               	bcf	status,0,c
  6716   001DD2  3603               	rlcf	___lwmod@divisor^0,f,c
  6717   001DD4  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  6718   001DD6  2A05               	incf	___lwmod@counter^0,f,c
  6719   001DD8                     l2145:
  6720   001DD8  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  6721   001DDA  EFF1  F00E         	goto	u1321
  6722   001DDE  EFF3  F00E         	goto	u1320
  6723   001DE2                     u1321:
  6724   001DE2  EFE8  F00E         	goto	l2143
  6725   001DE6                     u1320:
  6726   001DE6                     l2147:
  6727   001DE6  5003               	movf	___lwmod@divisor^0,w,c
  6728   001DE8  5C01               	subwf	___lwmod@dividend^0,w,c
  6729   001DEA  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6730   001DEC  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  6731   001DEE  A0D8               	btfss	status,0,c
  6732   001DF0  EFFC  F00E         	goto	u1331
  6733   001DF4  EFFE  F00E         	goto	u1330
  6734   001DF8                     u1331:
  6735   001DF8  EF02  F00F         	goto	l2151
  6736   001DFC                     u1330:
  6737   001DFC  5003               	movf	___lwmod@divisor^0,w,c
  6738   001DFE  5E01               	subwf	___lwmod@dividend^0,f,c
  6739   001E00  5004               	movf	(___lwmod@divisor+1)^0,w,c
  6740   001E02  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  6741   001E04                     l2151:
  6742   001E04  90D8               	bcf	status,0,c
  6743   001E06  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  6744   001E08  3203               	rrcf	___lwmod@divisor^0,f,c
  6745   001E0A  2E05               	decfsz	___lwmod@counter^0,f,c
  6746   001E0C  EFF3  F00E         	goto	l2147
  6747   001E10                     l822:
  6748   001E10  C001  F001         	movff	___lwmod@dividend,?___lwmod
  6749   001E14  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  6750   001E18  0012               	return		;funcret
  6751   001E1A                     __end_of___lwmod:
  6752                           	callstack 0
  6753                           
  6754 ;; *************** function ___lwdiv *****************
  6755 ;; Defined at:
  6756 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\lwdiv.c"
  6757 ;; Parameters:    Size  Location     Type
  6758 ;;  dividend        2    0[COMRAM] unsigned int 
  6759 ;;  divisor         2    2[COMRAM] unsigned int 
  6760 ;; Auto vars:     Size  Location     Type
  6761 ;;  quotient        2    4[COMRAM] unsigned int 
  6762 ;;  counter         1    6[COMRAM] unsigned char 
  6763 ;; Return value:  Size  Location     Type
  6764 ;;                  2    0[COMRAM] unsigned int 
  6765 ;; Registers used:
  6766 ;;		wreg, status,2, status,0
  6767 ;; Tracked objects:
  6768 ;;		On entry : 0/0
  6769 ;;		On exit  : 0/0
  6770 ;;		Unchanged: 0/0
  6771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6772 ;;      Params:         4       0       0       0       0       0       0       0       0
  6773 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6774 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6775 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6776 ;;Total ram usage:        7 bytes
  6777 ;; Hardware stack levels used: 1
  6778 ;; This function calls:
  6779 ;;		Nothing
  6780 ;; This function is called by:
  6781 ;;		_utoa
  6782 ;; This function uses a non-reentrant model
  6783 ;;
  6784                           
  6785                           	psect	text39
  6786   001C7A                     __ptext39:
  6787                           	callstack 0
  6788   001C7A                     ___lwdiv:
  6789                           	callstack 25
  6790   001C7A  0E00               	movlw	0
  6791   001C7C  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  6792   001C7E  0E00               	movlw	0
  6793   001C80  6E05               	movwf	___lwdiv@quotient^0,c
  6794   001C82  5003               	movf	___lwdiv@divisor^0,w,c
  6795   001C84  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  6796   001C86  B4D8               	btfsc	status,2,c
  6797   001C88  EF48  F00E         	goto	u1281
  6798   001C8C  EF4A  F00E         	goto	u1280
  6799   001C90                     u1281:
  6800   001C90  EF72  F00E         	goto	l812
  6801   001C94                     u1280:
  6802   001C94  0E01               	movlw	1
  6803   001C96  6E07               	movwf	___lwdiv@counter^0,c
  6804   001C98  EF52  F00E         	goto	l2125
  6805   001C9C                     l2123:
  6806   001C9C  90D8               	bcf	status,0,c
  6807   001C9E  3603               	rlcf	___lwdiv@divisor^0,f,c
  6808   001CA0  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  6809   001CA2  2A07               	incf	___lwdiv@counter^0,f,c
  6810   001CA4                     l2125:
  6811   001CA4  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  6812   001CA6  EF57  F00E         	goto	u1291
  6813   001CAA  EF59  F00E         	goto	u1290
  6814   001CAE                     u1291:
  6815   001CAE  EF4E  F00E         	goto	l2123
  6816   001CB2                     u1290:
  6817   001CB2                     l2127:
  6818   001CB2  90D8               	bcf	status,0,c
  6819   001CB4  3605               	rlcf	___lwdiv@quotient^0,f,c
  6820   001CB6  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  6821   001CB8  5003               	movf	___lwdiv@divisor^0,w,c
  6822   001CBA  5C01               	subwf	___lwdiv@dividend^0,w,c
  6823   001CBC  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6824   001CBE  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  6825   001CC0  A0D8               	btfss	status,0,c
  6826   001CC2  EF65  F00E         	goto	u1301
  6827   001CC6  EF67  F00E         	goto	u1300
  6828   001CCA                     u1301:
  6829   001CCA  EF6C  F00E         	goto	l2135
  6830   001CCE                     u1300:
  6831   001CCE  5003               	movf	___lwdiv@divisor^0,w,c
  6832   001CD0  5E01               	subwf	___lwdiv@dividend^0,f,c
  6833   001CD2  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  6834   001CD4  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  6835   001CD6  8005               	bsf	___lwdiv@quotient^0,0,c
  6836   001CD8                     l2135:
  6837   001CD8  90D8               	bcf	status,0,c
  6838   001CDA  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  6839   001CDC  3203               	rrcf	___lwdiv@divisor^0,f,c
  6840   001CDE  2E07               	decfsz	___lwdiv@counter^0,f,c
  6841   001CE0  EF59  F00E         	goto	l2127
  6842   001CE4                     l812:
  6843   001CE4  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  6844   001CE8  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6845   001CEC  0012               	return		;funcret
  6846   001CEE                     __end_of___lwdiv:
  6847                           	callstack 0
  6848                           
  6849 ;; *************** function _read_prec_or_width *****************
  6850 ;; Defined at:
  6851 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  6852 ;; Parameters:    Size  Location     Type
  6853 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  6854 ;;		 -> vfprintf@cfmt(1), 
  6855 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  6856 ;;		 -> sprintf@ap(1), 
  6857 ;; Auto vars:     Size  Location     Type
  6858 ;;  c               1    4[COMRAM] unsigned char 
  6859 ;;  n               2    5[COMRAM] int 
  6860 ;; Return value:  Size  Location     Type
  6861 ;;                  2    0[COMRAM] int 
  6862 ;; Registers used:
  6863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6864 ;; Tracked objects:
  6865 ;;		On entry : 0/0
  6866 ;;		On exit  : 0/0
  6867 ;;		Unchanged: 0/0
  6868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6869 ;;      Params:         2       0       0       0       0       0       0       0       0
  6870 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6871 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6872 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6873 ;;Total ram usage:        7 bytes
  6874 ;; Hardware stack levels used: 1
  6875 ;; This function calls:
  6876 ;;		Nothing
  6877 ;; This function is called by:
  6878 ;;		_vfpfcnvrt
  6879 ;; This function uses a non-reentrant model
  6880 ;;
  6881                           
  6882                           	psect	text40
  6883   001822                     __ptext40:
  6884                           	callstack 0
  6885   001822                     _read_prec_or_width:
  6886                           	callstack 26
  6887   001822                     
  6888                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  6889   001822  0E00               	movlw	0
  6890   001824  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  6891   001826  0E00               	movlw	0
  6892   001828  6E06               	movwf	read_prec_or_width@n^0,c
  6893   00182A                     
  6894                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  6895   00182A  5001               	movf	read_prec_or_width@fmt^0,w,c
  6896   00182C  6ED9               	movwf	fsr2l,c
  6897   00182E  6ADA               	clrf	fsr2h,c
  6898   001830  CFDF FFF6          	movff	indf2,tblptrl
  6899   001834                     	if	1	;There is more than 1 active tblptr byte
  6900   001834  0E08               	movlw	high __smallconst
  6901   001836  6EF7               	movwf	tblptrh,c
  6902   001838                     	endif
  6903   001838                     	if	0	;tblptru may be non-zero
  6904   001838                     	endif
  6905   001838                     	if	0	;tblptru may be non-zero
  6906   001838                     	endif
  6907   001838  0008               	tblrd		*
  6908   00183A  50F5               	movf	tablat,w,c
  6909   00183C  0A2A               	xorlw	42
  6910   00183E  A4D8               	btfss	status,2,c
  6911   001840  EF24  F00C         	goto	u1431
  6912   001844  EF26  F00C         	goto	u1430
  6913   001848                     u1431:
  6914   001848  EF4B  F00C         	goto	l2233
  6915   00184C                     u1430:
  6916   00184C                     
  6917                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  6918   00184C  5001               	movf	read_prec_or_width@fmt^0,w,c
  6919   00184E  6ED9               	movwf	fsr2l,c
  6920   001850  6ADA               	clrf	fsr2h,c
  6921   001852  2ADF               	incf	indf2,f,c
  6922   001854                     
  6923                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  6924   001854  5002               	movf	read_prec_or_width@ap^0,w,c
  6925   001856  6ED9               	movwf	fsr2l,c
  6926   001858  6ADA               	clrf	fsr2h,c
  6927   00185A  0E02               	movlw	2
  6928   00185C  26DF               	addwf	indf2,f,c
  6929   00185E  5CDF               	subwf	indf2,w,c
  6930   001860  6ED9               	movwf	fsr2l,c
  6931   001862  6ADA               	clrf	fsr2h,c
  6932   001864  CFDE F006          	movff	postinc2,read_prec_or_width@n
  6933   001868  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  6934                           
  6935                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  6936   00186C  EF5E  F00C         	goto	l1036
  6937   001870                     l2229:
  6938                           
  6939                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  6940   001870  0E0A               	movlw	10
  6941   001872  0206               	mulwf	read_prec_or_width@n^0,c
  6942   001874  CFF3 F003          	movff	prodl,??_read_prec_or_width
  6943   001878  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  6944   00187C  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  6945   00187E  50F3               	movf	prodl,w,c
  6946   001880  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  6947   001882  5005               	movf	read_prec_or_width@c^0,w,c
  6948   001884  2403               	addwf	??_read_prec_or_width^0,w,c
  6949   001886  6E06               	movwf	read_prec_or_width@n^0,c
  6950   001888  0E00               	movlw	0
  6951   00188A  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  6952   00188C  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  6953   00188E                     
  6954                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  6955   00188E  5001               	movf	read_prec_or_width@fmt^0,w,c
  6956   001890  6ED9               	movwf	fsr2l,c
  6957   001892  6ADA               	clrf	fsr2h,c
  6958   001894  2ADF               	incf	indf2,f,c
  6959   001896                     l2233:
  6960                           
  6961                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  6962   001896  5001               	movf	read_prec_or_width@fmt^0,w,c
  6963   001898  6ED9               	movwf	fsr2l,c
  6964   00189A  6ADA               	clrf	fsr2h,c
  6965   00189C  CFDF FFF6          	movff	indf2,tblptrl
  6966   0018A0                     	if	1	;There is more than 1 active tblptr byte
  6967   0018A0  0E08               	movlw	high __smallconst
  6968   0018A2  6EF7               	movwf	tblptrh,c
  6969   0018A4                     	endif
  6970   0018A4                     	if	0	;tblptru may be non-zero
  6971   0018A4                     	endif
  6972   0018A4                     	if	0	;tblptru may be non-zero
  6973   0018A4                     	endif
  6974   0018A4  0008               	tblrd		*
  6975   0018A6  50F5               	movf	tablat,w,c
  6976   0018A8  0FD0               	addlw	208
  6977   0018AA  6E05               	movwf	read_prec_or_width@c^0,c
  6978   0018AC  0E09               	movlw	9
  6979   0018AE  6405               	cpfsgt	read_prec_or_width@c^0,c
  6980   0018B0  EF5C  F00C         	goto	u1441
  6981   0018B4  EF5E  F00C         	goto	u1440
  6982   0018B8                     u1441:
  6983   0018B8  EF38  F00C         	goto	l2229
  6984   0018BC                     u1440:
  6985   0018BC                     l1036:
  6986                           
  6987                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  6988   0018BC  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  6989   0018C0  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  6990   0018C4  0012               	return		;funcret
  6991   0018C6                     __end_of_read_prec_or_width:
  6992                           	callstack 0
  6993                           
  6994 ;; *************** function _DHT11_Read *****************
  6995 ;; Defined at:
  6996 ;;		line 16 in file "DHT11.c"
  6997 ;; Parameters:    Size  Location     Type
  6998 ;;  humidity        1    2[COMRAM] PTR unsigned char 
  6999 ;;		 -> Display_DHT11@hum(1), 
  7000 ;;  temperature     1    3[COMRAM] PTR unsigned char 
  7001 ;;		 -> Display_DHT11@temp(1), 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  i               1   13[COMRAM] unsigned char 
  7004 ;;  data            5    8[COMRAM] unsigned char [5]
  7005 ;; Return value:  Size  Location     Type
  7006 ;;                  1    wreg      unsigned char 
  7007 ;; Registers used:
  7008 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7014 ;;      Params:         2       0       0       0       0       0       0       0       0
  7015 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7016 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7017 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7018 ;;Total ram usage:       12 bytes
  7019 ;; Hardware stack levels used: 1
  7020 ;; Hardware stack levels required when called: 1
  7021 ;; This function calls:
  7022 ;;		_DHT11_ReadByte
  7023 ;; This function is called by:
  7024 ;;		_Display_DHT11
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           	psect	text41
  7029   0014B0                     __ptext41:
  7030                           	callstack 0
  7031   0014B0                     _DHT11_Read:
  7032                           	callstack 28
  7033   0014B0                     
  7034                           ;DHT11.c: 17:     TRISAbits.TRISA0 = 0;
  7035   0014B0  9092               	bcf	146,0,c	;volatile
  7036                           
  7037                           ;DHT11.c: 18:     PORTAbits.RA0 = 0;
  7038   0014B2  9080               	bcf	128,0,c	;volatile
  7039   0014B4                     
  7040                           ;DHT11.c: 19:     _delay((unsigned long)((18)*(8000000/4000.0)));
  7041   0014B4  0E2F               	movlw	47
  7042   0014B6  6E05               	movwf	??_DHT11_Read^0,c
  7043   0014B8  0EC0               	movlw	192
  7044   0014BA                     u2517:
  7045   0014BA  2EE8               	decfsz	wreg,f,c
  7046   0014BC  D7FE               	bra	u2517
  7047   0014BE  2E05               	decfsz	??_DHT11_Read^0,f,c
  7048   0014C0  D7FC               	bra	u2517
  7049   0014C2                     
  7050                           ;DHT11.c: 20:     PORTAbits.RA0 = 1;
  7051   0014C2  8080               	bsf	128,0,c	;volatile
  7052                           
  7053                           ;DHT11.c: 21:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  7054   0014C4  0E14               	movlw	20
  7055   0014C6                     u2527:
  7056   0014C6  2EE8               	decfsz	wreg,f,c
  7057   0014C8  D7FE               	bra	u2527
  7058   0014CA                     
  7059                           ;DHT11.c: 22:     TRISAbits.TRISA0 = 1;
  7060   0014CA  8092               	bsf	146,0,c	;volatile
  7061   0014CC                     
  7062                           ;DHT11.c: 24:     if (PORTAbits.RA0 == 0) {
  7063   0014CC  B080               	btfsc	128,0,c	;volatile
  7064   0014CE  EF6B  F00A         	goto	u1921
  7065   0014D2  EF6D  F00A         	goto	u1920
  7066   0014D6                     u1921:
  7067   0014D6  EFB7  F00A         	goto	l2571
  7068   0014DA                     u1920:
  7069   0014DA                     l111:
  7070   0014DA  A080               	btfss	128,0,c	;volatile
  7071   0014DC  EF72  F00A         	goto	u1931
  7072   0014E0  EF74  F00A         	goto	u1930
  7073   0014E4                     u1931:
  7074   0014E4  EF6D  F00A         	goto	l111
  7075   0014E8                     u1930:
  7076   0014E8                     l114:
  7077   0014E8  B080               	btfsc	128,0,c	;volatile
  7078   0014EA  EF79  F00A         	goto	u1941
  7079   0014EE  EF7B  F00A         	goto	u1940
  7080   0014F2                     u1941:
  7081   0014F2  EF74  F00A         	goto	l114
  7082   0014F6                     u1940:
  7083   0014F6                     
  7084                           ;DHT11.c: 29:         uint8_t data[5];;DHT11.c: 30:         for (uint8_t i = 0; i < 5; i
      +                          ++) {
  7085   0014F6  6A0E               	clrf	DHT11_Read@i^0,c
  7086   0014F8                     l2557:
  7087                           
  7088                           ;DHT11.c: 31:             data[i] = DHT11_ReadByte();
  7089   0014F8  500E               	movf	DHT11_Read@i^0,w,c
  7090   0014FA  0F09               	addlw	low DHT11_Read@data
  7091   0014FC  6ED9               	movwf	fsr2l,c
  7092   0014FE  6ADA               	clrf	fsr2h,c
  7093   001500  ECEA  F00F         	call	_DHT11_ReadByte	;wreg free
  7094   001504  6EDF               	movwf	indf2,c
  7095   001506                     
  7096                           ;DHT11.c: 32:         }
  7097   001506  2A0E               	incf	DHT11_Read@i^0,f,c
  7098   001508  0E04               	movlw	4
  7099   00150A  640E               	cpfsgt	DHT11_Read@i^0,c
  7100   00150C  EF8A  F00A         	goto	u1951
  7101   001510  EF8C  F00A         	goto	u1950
  7102   001514                     u1951:
  7103   001514  EF7C  F00A         	goto	l2557
  7104   001518                     u1950:
  7105   001518                     
  7106                           ;DHT11.c: 35:         if ((data[0] + data[1] + data[2] + data[3]) == data[4]) {
  7107   001518  500D               	movf	(DHT11_Read@data+4)^0,w,c
  7108   00151A  6E05               	movwf	??_DHT11_Read^0,c
  7109   00151C  6A06               	clrf	(??_DHT11_Read+1)^0,c
  7110   00151E  500A               	movf	(DHT11_Read@data+1)^0,w,c
  7111   001520  C009  F007         	movff	DHT11_Read@data,??_DHT11_Read+2
  7112   001524  6A08               	clrf	(??_DHT11_Read+3)^0,c
  7113   001526  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  7114   001528  0E00               	movlw	0
  7115   00152A  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  7116   00152C  500B               	movf	(DHT11_Read@data+2)^0,w,c
  7117   00152E  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  7118   001530  0E00               	movlw	0
  7119   001532  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  7120   001534  500C               	movf	(DHT11_Read@data+3)^0,w,c
  7121   001536  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  7122   001538  0E00               	movlw	0
  7123   00153A  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  7124   00153C  5005               	movf	??_DHT11_Read^0,w,c
  7125   00153E  1807               	xorwf	(??_DHT11_Read+2)^0,w,c
  7126   001540  E107               	bnz	u1961
  7127   001542  5006               	movf	(??_DHT11_Read+1)^0,w,c
  7128   001544  1808               	xorwf	(??_DHT11_Read+3)^0,w,c
  7129   001546  A4D8               	btfss	status,2,c
  7130   001548  EFA8  F00A         	goto	u1961
  7131   00154C  EFAA  F00A         	goto	u1960
  7132   001550                     u1961:
  7133   001550  EFB7  F00A         	goto	l2571
  7134   001554                     u1960:
  7135   001554                     
  7136                           ;DHT11.c: 36:             *humidity = data[0];
  7137   001554  5003               	movf	DHT11_Read@humidity^0,w,c
  7138   001556  6ED9               	movwf	fsr2l,c
  7139   001558  6ADA               	clrf	fsr2h,c
  7140   00155A  C009  FFDF         	movff	DHT11_Read@data,indf2
  7141                           
  7142                           ;DHT11.c: 37:             *temperature = data[2];
  7143   00155E  5004               	movf	DHT11_Read@temperature^0,w,c
  7144   001560  6ED9               	movwf	fsr2l,c
  7145   001562  6ADA               	clrf	fsr2h,c
  7146   001564  C00B  FFDF         	movff	DHT11_Read@data+2,indf2
  7147   001568                     
  7148                           ;DHT11.c: 38:             return 1;
  7149   001568  0E01               	movlw	1
  7150   00156A  EFB8  F00A         	goto	l120
  7151   00156E                     l2571:
  7152                           
  7153                           ;DHT11.c: 41:     return 0;
  7154   00156E  0E00               	movlw	0
  7155   001570                     l120:
  7156   001570  0012               	return		;funcret
  7157   001572                     __end_of_DHT11_Read:
  7158                           	callstack 0
  7159                           
  7160 ;; *************** function _DHT11_ReadByte *****************
  7161 ;; Defined at:
  7162 ;;		line 4 in file "DHT11.c"
  7163 ;; Parameters:    Size  Location     Type
  7164 ;;		None
  7165 ;; Auto vars:     Size  Location     Type
  7166 ;;  i               1    1[COMRAM] unsigned char 
  7167 ;;  data            1    0[COMRAM] unsigned char 
  7168 ;; Return value:  Size  Location     Type
  7169 ;;                  1    wreg      unsigned char 
  7170 ;; Registers used:
  7171 ;;		wreg, status,2, status,0
  7172 ;; Tracked objects:
  7173 ;;		On entry : 0/0
  7174 ;;		On exit  : 0/0
  7175 ;;		Unchanged: 0/0
  7176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7177 ;;      Params:         0       0       0       0       0       0       0       0       0
  7178 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7180 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7181 ;;Total ram usage:        2 bytes
  7182 ;; Hardware stack levels used: 1
  7183 ;; This function calls:
  7184 ;;		Nothing
  7185 ;; This function is called by:
  7186 ;;		_DHT11_Read
  7187 ;; This function uses a non-reentrant model
  7188 ;;
  7189                           
  7190                           	psect	text42
  7191   001FD4                     __ptext42:
  7192                           	callstack 0
  7193   001FD4                     _DHT11_ReadByte:
  7194                           	callstack 28
  7195   001FD4                     
  7196                           ;DHT11.c: 5:     uint8_t data = 0;
  7197   001FD4  6A01               	clrf	DHT11_ReadByte@data^0,c
  7198                           
  7199                           ;DHT11.c: 6:     for (uint8_t i = 0; i < 8; i++) {
  7200   001FD6  6A02               	clrf	DHT11_ReadByte@i^0,c
  7201   001FD8                     l100:
  7202   001FD8  A080               	btfss	128,0,c	;volatile
  7203   001FDA  EFF1  F00F         	goto	u1761
  7204   001FDE  EFF3  F00F         	goto	u1760
  7205   001FE2                     u1761:
  7206   001FE2  EFEC  F00F         	goto	l100
  7207   001FE6                     u1760:
  7208   001FE6                     
  7209                           ;DHT11.c: 8:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  7210   001FE6  0E21               	movlw	33
  7211   001FE8                     u2537:
  7212   001FE8  2EE8               	decfsz	wreg,f,c
  7213   001FEA  D7FE               	bra	u2537
  7214   001FEC  0000               	nop	
  7215   001FEE                     
  7216                           ;DHT11.c: 9:         data <<= 1;
  7217   001FEE  90D8               	bcf	status,0,c
  7218   001FF0  3601               	rlcf	DHT11_ReadByte@data^0,f,c
  7219   001FF2                     
  7220                           ;DHT11.c: 10:         if (PORTAbits.RA0) data |= 1;
  7221   001FF2  A080               	btfss	128,0,c	;volatile
  7222   001FF4  EFFE  F00F         	goto	u1771
  7223   001FF8  EF00  F010         	goto	u1770
  7224   001FFC                     u1771:
  7225   001FFC  EF01  F010         	goto	l104
  7226   002000                     u1770:
  7227   002000  8001               	bsf	DHT11_ReadByte@data^0,0,c
  7228   002002                     l104:
  7229   002002  B080               	btfsc	128,0,c	;volatile
  7230   002004  EF06  F010         	goto	u1781
  7231   002008  EF08  F010         	goto	u1780
  7232   00200C                     u1781:
  7233   00200C  EF01  F010         	goto	l104
  7234   002010                     u1780:
  7235   002010                     
  7236                           ;DHT11.c: 12:     }
  7237   002010  2A02               	incf	DHT11_ReadByte@i^0,f,c
  7238   002012  0E07               	movlw	7
  7239   002014  6402               	cpfsgt	DHT11_ReadByte@i^0,c
  7240   002016  EF0F  F010         	goto	u1791
  7241   00201A  EF11  F010         	goto	u1790
  7242   00201E                     u1791:
  7243   00201E  EFEC  F00F         	goto	l100
  7244   002022                     u1790:
  7245   002022                     
  7246                           ;DHT11.c: 13:     return data;
  7247   002022  5001               	movf	DHT11_ReadByte@data^0,w,c
  7248   002024  0012               	return		;funcret
  7249   002026                     __end_of_DHT11_ReadByte:
  7250                           	callstack 0
  7251                           
  7252 ;; *************** function _Clear_Line *****************
  7253 ;; Defined at:
  7254 ;;		line 25 in file "main.c"
  7255 ;; Parameters:    Size  Location     Type
  7256 ;;  line            1    wreg     unsigned char 
  7257 ;; Auto vars:     Size  Location     Type
  7258 ;;  line            1   11[COMRAM] unsigned char 
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      void 
  7261 ;; Registers used:
  7262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7268 ;;      Params:         0       0       0       0       0       0       0       0       0
  7269 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7270 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7271 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7272 ;;Total ram usage:        1 bytes
  7273 ;; Hardware stack levels used: 1
  7274 ;; Hardware stack levels required when called: 3
  7275 ;; This function calls:
  7276 ;;		_LCD_String_xy
  7277 ;; This function is called by:
  7278 ;;		_Display_DHT11
  7279 ;;		_Display_GPS
  7280 ;;		_Display_RTC
  7281 ;; This function uses a non-reentrant model
  7282 ;;
  7283                           
  7284                           	psect	text43
  7285   0021F4                     __ptext43:
  7286                           	callstack 0
  7287   0021F4                     _Clear_Line:
  7288                           	callstack 26
  7289                           
  7290                           ;incstack = 0
  7291                           ;Clear_Line@line stored from wreg
  7292   0021F4  6E0C               	movwf	Clear_Line@line^0,c
  7293   0021F6                     
  7294                           ;main.c: 26:     LCD_String_xy(line, 0, "                ");
  7295   0021F6  0E00               	movlw	0
  7296   0021F8  6E05               	movwf	LCD_String_xy@pos^0,c
  7297   0021FA  0E01               	movlw	low STR_1
  7298   0021FC  6E06               	movwf	LCD_String_xy@msg^0,c
  7299   0021FE  5006               	movf	LCD_String_xy@msg^0,w,c
  7300   002200  A4D8               	btfss	status,2,c
  7301   002202  0E08               	movlw	high __smallconst
  7302   002204  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  7303   002206  500C               	movf	Clear_Line@line^0,w,c
  7304   002208  EC3C  F00F         	call	_LCD_String_xy
  7305   00220C  0012               	return		;funcret
  7306   00220E                     __end_of_Clear_Line:
  7307                           	callstack 0
  7308                           
  7309 ;; *************** function _LCD_String_xy *****************
  7310 ;; Defined at:
  7311 ;;		line 50 in file "LCD.c"
  7312 ;; Parameters:    Size  Location     Type
  7313 ;;  row             1    wreg     unsigned char 
  7314 ;;  pos             1    4[COMRAM] unsigned char 
  7315 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  7316 ;;		 -> STR_20(13), STR_16(13), STR_15(13), STR_12(13), 
  7317 ;;		 -> STR_11(15), STR_10(5), STR_9(5), Display_GPS@formatted_lon(17), 
  7318 ;;		 -> Display_GPS@formatted_lat(17), STR_4(16), STR_3(13), lcd_buffer(17), 
  7319 ;;		 -> STR_1(17), 
  7320 ;; Auto vars:     Size  Location     Type
  7321 ;;  row             1    7[COMRAM] unsigned char 
  7322 ;;  location        1   10[COMRAM] unsigned char 
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      void 
  7325 ;; Registers used:
  7326 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7332 ;;      Params:         3       0       0       0       0       0       0       0       0
  7333 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7335 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7336 ;;Total ram usage:        7 bytes
  7337 ;; Hardware stack levels used: 1
  7338 ;; Hardware stack levels required when called: 2
  7339 ;; This function calls:
  7340 ;;		_LCD_Command
  7341 ;;		_LCD_String
  7342 ;; This function is called by:
  7343 ;;		_Clear_Line
  7344 ;;		_Display_DHT11
  7345 ;;		_Display_GPS
  7346 ;;		_Display_RTC
  7347 ;;		_main
  7348 ;;		_RTC_Init
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text44
  7353   001E78                     __ptext44:
  7354                           	callstack 0
  7355   001E78                     _LCD_String_xy:
  7356                           	callstack 27
  7357                           
  7358                           ;incstack = 0
  7359                           ;LCD_String_xy@row stored from wreg
  7360   001E78  6E08               	movwf	LCD_String_xy@row^0,c
  7361   001E7A                     
  7362                           ;LCD.c: 51:     uint8_t location;;LCD.c: 52:     pos = (pos > 15) ? 15 : pos;
  7363   001E7A  0E10               	movlw	16
  7364   001E7C  6005               	cpfslt	LCD_String_xy@pos^0,c
  7365   001E7E  EF43  F00F         	goto	u1711
  7366   001E82  EF45  F00F         	goto	u1710
  7367   001E86                     u1711:
  7368   001E86  EF4A  F00F         	goto	l2393
  7369   001E8A                     u1710:
  7370   001E8A  C005  F009         	movff	LCD_String_xy@pos,_LCD_String_xy$482
  7371   001E8E  6A0A               	clrf	(_LCD_String_xy$482+1)^0,c
  7372   001E90  EF4E  F00F         	goto	l2395
  7373   001E94                     l2393:
  7374   001E94  0E00               	movlw	0
  7375   001E96  6E0A               	movwf	(_LCD_String_xy$482+1)^0,c
  7376   001E98  0E0F               	movlw	15
  7377   001E9A  6E09               	movwf	_LCD_String_xy$482^0,c
  7378   001E9C                     l2395:
  7379   001E9C  C009  F005         	movff	_LCD_String_xy$482,LCD_String_xy@pos
  7380                           
  7381                           ;LCD.c: 54:     if(row == 0) {
  7382   001EA0  5008               	movf	LCD_String_xy@row^0,w,c
  7383   001EA2  A4D8               	btfss	status,2,c
  7384   001EA4  EF56  F00F         	goto	u1721
  7385   001EA8  EF58  F00F         	goto	u1720
  7386   001EAC                     u1721:
  7387   001EAC  EF5D  F00F         	goto	l2399
  7388   001EB0                     u1720:
  7389   001EB0                     
  7390                           ;LCD.c: 55:         location = 0x80 + pos;
  7391   001EB0  5005               	movf	LCD_String_xy@pos^0,w,c
  7392   001EB2  0F80               	addlw	128
  7393   001EB4  6E0B               	movwf	LCD_String_xy@location^0,c
  7394                           
  7395                           ;LCD.c: 56:     } else {
  7396   001EB6  EF60  F00F         	goto	l2401
  7397   001EBA                     l2399:
  7398                           
  7399                           ;LCD.c: 57:         location = 0xC0 + pos;
  7400   001EBA  5005               	movf	LCD_String_xy@pos^0,w,c
  7401   001EBC  0FC0               	addlw	192
  7402   001EBE  6E0B               	movwf	LCD_String_xy@location^0,c
  7403   001EC0                     l2401:
  7404                           
  7405                           ;LCD.c: 60:     LCD_Command(location);
  7406   001EC0  500B               	movf	LCD_String_xy@location^0,w,c
  7407   001EC2  ECC0  F00F         	call	_LCD_Command
  7408   001EC6                     
  7409                           ;LCD.c: 61:     LCD_String(msg);
  7410   001EC6  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  7411   001ECA  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7412   001ECE  EC0D  F00F         	call	_LCD_String	;wreg free
  7413   001ED2  0012               	return		;funcret
  7414   001ED4                     __end_of_LCD_String_xy:
  7415                           	callstack 0
  7416                           
  7417 ;; *************** function _LCD_String *****************
  7418 ;; Defined at:
  7419 ;;		line 43 in file "LCD.c"
  7420 ;; Parameters:    Size  Location     Type
  7421 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  7422 ;;		 -> STR_20(13), STR_16(13), STR_15(13), STR_12(13), 
  7423 ;;		 -> STR_11(15), STR_10(5), STR_9(5), Display_GPS@formatted_lon(17), 
  7424 ;;		 -> Display_GPS@formatted_lat(17), STR_4(16), STR_3(13), lcd_buffer(17), 
  7425 ;;		 -> STR_1(17), 
  7426 ;; Auto vars:     Size  Location     Type
  7427 ;;		None
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  1    wreg      void 
  7430 ;; Registers used:
  7431 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7437 ;;      Params:         2       0       0       0       0       0       0       0       0
  7438 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7439 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7440 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7441 ;;Total ram usage:        2 bytes
  7442 ;; Hardware stack levels used: 1
  7443 ;; Hardware stack levels required when called: 1
  7444 ;; This function calls:
  7445 ;;		_LCD_Char
  7446 ;; This function is called by:
  7447 ;;		_LCD_String_xy
  7448 ;; This function uses a non-reentrant model
  7449 ;;
  7450                           
  7451                           	psect	text45
  7452   001E1A                     __ptext45:
  7453                           	callstack 0
  7454   001E1A                     _LCD_String:
  7455                           	callstack 27
  7456   001E1A                     
  7457                           ;LCD.c: 44:     while(*msg != 0) {
  7458   001E1A  EF23  F00F         	goto	l2273
  7459   001E1E                     l2269:
  7460                           
  7461                           ;LCD.c: 45:         LCD_Char(*msg);
  7462   001E1E  C003  FFF6         	movff	LCD_String@msg,tblptrl
  7463   001E22  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  7464   001E26  6AF8               	clrf	tblptru,c
  7465   001E28  0E07               	movlw	(high __ramtop+-1)
  7466   001E2A  64F7               	cpfsgt	tblptrh,c
  7467   001E2C  D003               	bra	u1497
  7468   001E2E  0008               	tblrd		*
  7469   001E30  50F5               	movf	tablat,w,c
  7470   001E32  D005               	bra	u1490
  7471   001E34                     u1497:
  7472   001E34  CFF6 FFE9          	movff	tblptrl,fsr0l
  7473   001E38  CFF7 FFEA          	movff	tblptrh,fsr0h
  7474   001E3C  50EF               	movf	indf0,w,c
  7475   001E3E                     u1490:
  7476   001E3E  EC96  F00F         	call	_LCD_Char
  7477   001E42                     
  7478                           ;LCD.c: 46:         msg++;
  7479   001E42  4A03               	infsnz	LCD_String@msg^0,f,c
  7480   001E44  2A04               	incf	(LCD_String@msg+1)^0,f,c
  7481   001E46                     l2273:
  7482                           
  7483                           ;LCD.c: 44:     while(*msg != 0) {
  7484   001E46  C003  FFF6         	movff	LCD_String@msg,tblptrl
  7485   001E4A  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  7486   001E4E  6AF8               	clrf	tblptru,c
  7487   001E50  0E07               	movlw	(high __ramtop+-1)
  7488   001E52  64F7               	cpfsgt	tblptrh,c
  7489   001E54  D003               	bra	u1507
  7490   001E56  0008               	tblrd		*
  7491   001E58  50F5               	movf	tablat,w,c
  7492   001E5A  D005               	bra	u1500
  7493   001E5C                     u1507:
  7494   001E5C  CFF6 FFE9          	movff	tblptrl,fsr0l
  7495   001E60  CFF7 FFEA          	movff	tblptrh,fsr0h
  7496   001E64  50EF               	movf	indf0,w,c
  7497   001E66                     u1500:
  7498   001E66  0900               	iorlw	0
  7499   001E68  A4D8               	btfss	status,2,c
  7500   001E6A  EF39  F00F         	goto	u1511
  7501   001E6E  EF3B  F00F         	goto	u1510
  7502   001E72                     u1511:
  7503   001E72  EF0F  F00F         	goto	l2269
  7504   001E76                     u1510:
  7505   001E76  0012               	return		;funcret
  7506   001E78                     __end_of_LCD_String:
  7507                           	callstack 0
  7508                           
  7509 ;; *************** function _LCD_Char *****************
  7510 ;; Defined at:
  7511 ;;		line 28 in file "LCD.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  dat             1    wreg     unsigned char 
  7514 ;; Auto vars:     Size  Location     Type
  7515 ;;  dat             1    1[COMRAM] unsigned char 
  7516 ;; Return value:  Size  Location     Type
  7517 ;;                  1    wreg      void 
  7518 ;; Registers used:
  7519 ;;		wreg, status,2, status,0
  7520 ;; Tracked objects:
  7521 ;;		On entry : 0/0
  7522 ;;		On exit  : 0/0
  7523 ;;		Unchanged: 0/0
  7524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7525 ;;      Params:         0       0       0       0       0       0       0       0       0
  7526 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7527 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7528 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7529 ;;Total ram usage:        2 bytes
  7530 ;; Hardware stack levels used: 1
  7531 ;; This function calls:
  7532 ;;		Nothing
  7533 ;; This function is called by:
  7534 ;;		_LCD_String
  7535 ;; This function uses a non-reentrant model
  7536 ;;
  7537                           
  7538                           	psect	text46
  7539   001F2C                     __ptext46:
  7540                           	callstack 0
  7541   001F2C                     _LCD_Char:
  7542                           	callstack 27
  7543                           
  7544                           ;incstack = 0
  7545                           ;LCD_Char@dat stored from wreg
  7546   001F2C  6E02               	movwf	LCD_Char@dat^0,c
  7547   001F2E                     
  7548                           ;LCD.c: 29:     LATD = (LATD & 0x0F) | (dat & 0xF0);
  7549   001F2E  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  7550   001F32  0EF0               	movlw	240
  7551   001F34  1601               	andwf	??_LCD_Char^0,f,c
  7552   001F36  508C               	movf	140,w,c	;volatile
  7553   001F38  0B0F               	andlw	15
  7554   001F3A  1001               	iorwf	??_LCD_Char^0,w,c
  7555   001F3C  6E8C               	movwf	140,c	;volatile
  7556   001F3E                     
  7557                           ;LCD.c: 30:     LATD0 = 1;
  7558   001F3E  808C               	bsf	3980,0,c	;volatile
  7559   001F40                     
  7560                           ;LCD.c: 31:     LATD1 = 1;
  7561   001F40  828C               	bsf	3980,1,c	;volatile
  7562   001F42                     
  7563                           ;LCD.c: 32:     __nop();
  7564   001F42  0000               	nop	
  7565   001F44                     
  7566                           ;LCD.c: 33:     LATD1 = 0;
  7567   001F44  928C               	bcf	3980,1,c	;volatile
  7568   001F46                     
  7569                           ;LCD.c: 34:     _delay((unsigned long)((1)*(8000000/4000.0)));
  7570   001F46  0E03               	movlw	3
  7571   001F48  6E01               	movwf	??_LCD_Char^0,c
  7572   001F4A  0E98               	movlw	152
  7573   001F4C                     u2547:
  7574   001F4C  2EE8               	decfsz	wreg,f,c
  7575   001F4E  D7FE               	bra	u2547
  7576   001F50  2E01               	decfsz	??_LCD_Char^0,f,c
  7577   001F52  D7FC               	bra	u2547
  7578   001F54                     
  7579                           ;LCD.c: 36:     LATD = (LATD & 0x0F) | ((dat << 4) & 0xF0);
  7580   001F54  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  7581   001F58  3A01               	swapf	??_LCD_Char^0,f,c
  7582   001F5A  0EF0               	movlw	240
  7583   001F5C  1601               	andwf	??_LCD_Char^0,f,c
  7584   001F5E  0EF0               	movlw	240
  7585   001F60  1601               	andwf	??_LCD_Char^0,f,c
  7586   001F62  508C               	movf	140,w,c	;volatile
  7587   001F64  0B0F               	andlw	15
  7588   001F66  1001               	iorwf	??_LCD_Char^0,w,c
  7589   001F68  6E8C               	movwf	140,c	;volatile
  7590   001F6A                     
  7591                           ;LCD.c: 37:     LATD1 = 1;
  7592   001F6A  828C               	bsf	3980,1,c	;volatile
  7593   001F6C                     
  7594                           ;LCD.c: 38:     __nop();
  7595   001F6C  0000               	nop	
  7596   001F6E                     
  7597                           ;LCD.c: 39:     LATD1 = 0;
  7598   001F6E  928C               	bcf	3980,1,c	;volatile
  7599                           
  7600                           ;LCD.c: 40:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7601   001F70  0E08               	movlw	8
  7602   001F72  6E01               	movwf	??_LCD_Char^0,c
  7603   001F74  0ECA               	movlw	202
  7604   001F76                     u2557:
  7605   001F76  2EE8               	decfsz	wreg,f,c
  7606   001F78  D7FE               	bra	u2557
  7607   001F7A  2E01               	decfsz	??_LCD_Char^0,f,c
  7608   001F7C  D7FC               	bra	u2557
  7609   001F7E  0012               	return		;funcret
  7610   001F80                     __end_of_LCD_Char:
  7611                           	callstack 0
  7612                           
  7613 ;; *************** function _LCD_Command *****************
  7614 ;; Defined at:
  7615 ;;		line 13 in file "LCD.c"
  7616 ;; Parameters:    Size  Location     Type
  7617 ;;  cmd             1    wreg     unsigned char 
  7618 ;; Auto vars:     Size  Location     Type
  7619 ;;  cmd             1    1[COMRAM] unsigned char 
  7620 ;; Return value:  Size  Location     Type
  7621 ;;                  1    wreg      void 
  7622 ;; Registers used:
  7623 ;;		wreg, status,2, status,0
  7624 ;; Tracked objects:
  7625 ;;		On entry : 0/0
  7626 ;;		On exit  : 0/0
  7627 ;;		Unchanged: 0/0
  7628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7629 ;;      Params:         0       0       0       0       0       0       0       0       0
  7630 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7631 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7632 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7633 ;;Total ram usage:        2 bytes
  7634 ;; Hardware stack levels used: 1
  7635 ;; This function calls:
  7636 ;;		Nothing
  7637 ;; This function is called by:
  7638 ;;		_LCD_Init
  7639 ;;		_LCD_String_xy
  7640 ;;		_LCD_Clear
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text47
  7645   001F80                     __ptext47:
  7646                           	callstack 0
  7647   001F80                     _LCD_Command:
  7648                           	callstack 28
  7649                           
  7650                           ;incstack = 0
  7651                           ;LCD_Command@cmd stored from wreg
  7652   001F80  6E02               	movwf	LCD_Command@cmd^0,c
  7653   001F82                     
  7654                           ;LCD.c: 14:     LATD = (LATD & 0x0F) | (cmd & 0xF0);
  7655   001F82  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  7656   001F86  0EF0               	movlw	240
  7657   001F88  1601               	andwf	??_LCD_Command^0,f,c
  7658   001F8A  508C               	movf	140,w,c	;volatile
  7659   001F8C  0B0F               	andlw	15
  7660   001F8E  1001               	iorwf	??_LCD_Command^0,w,c
  7661   001F90  6E8C               	movwf	140,c	;volatile
  7662   001F92                     
  7663                           ;LCD.c: 15:     LATD0 = 0;
  7664   001F92  908C               	bcf	3980,0,c	;volatile
  7665   001F94                     
  7666                           ;LCD.c: 16:     LATD1 = 1;
  7667   001F94  828C               	bsf	3980,1,c	;volatile
  7668   001F96                     
  7669                           ;LCD.c: 17:     __nop();
  7670   001F96  0000               	nop	
  7671   001F98                     
  7672                           ;LCD.c: 18:     LATD1 = 0;
  7673   001F98  928C               	bcf	3980,1,c	;volatile
  7674   001F9A                     
  7675                           ;LCD.c: 19:     _delay((unsigned long)((1)*(8000000/4000.0)));
  7676   001F9A  0E03               	movlw	3
  7677   001F9C  6E01               	movwf	??_LCD_Command^0,c
  7678   001F9E  0E98               	movlw	152
  7679   001FA0                     u2567:
  7680   001FA0  2EE8               	decfsz	wreg,f,c
  7681   001FA2  D7FE               	bra	u2567
  7682   001FA4  2E01               	decfsz	??_LCD_Command^0,f,c
  7683   001FA6  D7FC               	bra	u2567
  7684   001FA8                     
  7685                           ;LCD.c: 21:     LATD = (LATD & 0x0F) | ((cmd << 4) & 0xF0);
  7686   001FA8  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  7687   001FAC  3A01               	swapf	??_LCD_Command^0,f,c
  7688   001FAE  0EF0               	movlw	240
  7689   001FB0  1601               	andwf	??_LCD_Command^0,f,c
  7690   001FB2  0EF0               	movlw	240
  7691   001FB4  1601               	andwf	??_LCD_Command^0,f,c
  7692   001FB6  508C               	movf	140,w,c	;volatile
  7693   001FB8  0B0F               	andlw	15
  7694   001FBA  1001               	iorwf	??_LCD_Command^0,w,c
  7695   001FBC  6E8C               	movwf	140,c	;volatile
  7696   001FBE                     
  7697                           ;LCD.c: 22:     LATD1 = 1;
  7698   001FBE  828C               	bsf	3980,1,c	;volatile
  7699   001FC0                     
  7700                           ;LCD.c: 23:     __nop();
  7701   001FC0  0000               	nop	
  7702   001FC2                     
  7703                           ;LCD.c: 24:     LATD1 = 0;
  7704   001FC2  928C               	bcf	3980,1,c	;volatile
  7705                           
  7706                           ;LCD.c: 25:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7707   001FC4  0E08               	movlw	8
  7708   001FC6  6E01               	movwf	??_LCD_Command^0,c
  7709   001FC8  0ECA               	movlw	202
  7710   001FCA                     u2577:
  7711   001FCA  2EE8               	decfsz	wreg,f,c
  7712   001FCC  D7FE               	bra	u2577
  7713   001FCE  2E01               	decfsz	??_LCD_Command^0,f,c
  7714   001FD0  D7FC               	bra	u2577
  7715   001FD2  0012               	return		;funcret
  7716   001FD4                     __end_of_LCD_Command:
  7717                           	callstack 0
  7718                           
  7719                           	psect	rparam
  7720   000001                     ___rparam_used  equ	1
  7721   000000                     ___param_bank   equ	0
  7722   000000                     __Lparam        equ	__Lrparam
  7723   000000                     __Hparam        equ	__Hrparam
  7724                           
  7725                           	psect	idloc
  7726                           
  7727                           ;Config register IDLOC0 @ 0x200000
  7728                           ;	unspecified, using default values
  7729   200000                     	org	2097152
  7730   200000  FF                 	db	255
  7731                           
  7732                           ;Config register IDLOC1 @ 0x200001
  7733                           ;	unspecified, using default values
  7734   200001                     	org	2097153
  7735   200001  FF                 	db	255
  7736                           
  7737                           ;Config register IDLOC2 @ 0x200002
  7738                           ;	unspecified, using default values
  7739   200002                     	org	2097154
  7740   200002  FF                 	db	255
  7741                           
  7742                           ;Config register IDLOC3 @ 0x200003
  7743                           ;	unspecified, using default values
  7744   200003                     	org	2097155
  7745   200003  FF                 	db	255
  7746                           
  7747                           ;Config register IDLOC4 @ 0x200004
  7748                           ;	unspecified, using default values
  7749   200004                     	org	2097156
  7750   200004  FF                 	db	255
  7751                           
  7752                           ;Config register IDLOC5 @ 0x200005
  7753                           ;	unspecified, using default values
  7754   200005                     	org	2097157
  7755   200005  FF                 	db	255
  7756                           
  7757                           ;Config register IDLOC6 @ 0x200006
  7758                           ;	unspecified, using default values
  7759   200006                     	org	2097158
  7760   200006  FF                 	db	255
  7761                           
  7762                           ;Config register IDLOC7 @ 0x200007
  7763                           ;	unspecified, using default values
  7764   200007                     	org	2097159
  7765   200007  FF                 	db	255
  7766                           
  7767                           	psect	config
  7768                           
  7769                           ;Config register CONFIG1L @ 0x300000
  7770                           ;	PLL Prescaler Selection bits
  7771                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  7772                           ;	System Clock Postscaler Selection bits
  7773                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  7774                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  7775                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  7776   300000                     	org	3145728
  7777   300000  00                 	db	0
  7778                           
  7779                           ;Config register CONFIG1H @ 0x300001
  7780                           ;	Oscillator Selection bits
  7781                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  7782                           ;	Fail-Safe Clock Monitor Enable bit
  7783                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7784                           ;	Internal/External Oscillator Switchover bit
  7785                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7786   300001                     	org	3145729
  7787   300001  09                 	db	9
  7788                           
  7789                           ;Config register CONFIG2L @ 0x300002
  7790                           ;	Power-up Timer Enable bit
  7791                           ;	PWRT = OFF, PWRT disabled
  7792                           ;	Brown-out Reset Enable bits
  7793                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7794                           ;	Brown-out Reset Voltage bits
  7795                           ;	BORV = 3, Minimum setting 2.05V
  7796                           ;	USB Voltage Regulator Enable bit
  7797                           ;	VREGEN = OFF, USB voltage regulator disabled
  7798   300002                     	org	3145730
  7799   300002  1F                 	db	31
  7800                           
  7801                           ;Config register CONFIG2H @ 0x300003
  7802                           ;	Watchdog Timer Enable bit
  7803                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  7804                           ;	Watchdog Timer Postscale Select bits
  7805                           ;	WDTPS = 32768, 1:32768
  7806   300003                     	org	3145731
  7807   300003  1E                 	db	30
  7808                           
  7809                           ; Padding undefined space
  7810   300004                     	org	3145732
  7811   300004  FF                 	db	255
  7812                           
  7813                           ;Config register CONFIG3H @ 0x300005
  7814                           ;	CCP2 MUX bit
  7815                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  7816                           ;	PORTB A/D Enable bit
  7817                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7818                           ;	Low-Power Timer 1 Oscillator Enable bit
  7819                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7820                           ;	MCLR Pin Enable bit
  7821                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  7822   300005                     	org	3145733
  7823   300005  01                 	db	1
  7824                           
  7825                           ;Config register CONFIG4L @ 0x300006
  7826                           ;	Stack Full/Underflow Reset Enable bit
  7827                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7828                           ;	Single-Supply ICSP Enable bit
  7829                           ;	LVP = OFF, Single-Supply ICSP disabled
  7830                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  7831                           ;	ICPRT = OFF, ICPORT disabled
  7832                           ;	Extended Instruction Set Enable bit
  7833                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7834                           ;	Background Debugger Enable bit
  7835                           ;	DEBUG = 0x1, unprogrammed default
  7836   300006                     	org	3145734
  7837   300006  81                 	db	129
  7838                           
  7839                           ; Padding undefined space
  7840   300007                     	org	3145735
  7841   300007  FF                 	db	255
  7842                           
  7843                           ;Config register CONFIG5L @ 0x300008
  7844                           ;	Code Protection bit
  7845                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  7846                           ;	Code Protection bit
  7847                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  7848                           ;	Code Protection bit
  7849                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  7850                           ;	Code Protection bit
  7851                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  7852   300008                     	org	3145736
  7853   300008  0F                 	db	15
  7854                           
  7855                           ;Config register CONFIG5H @ 0x300009
  7856                           ;	Boot Block Code Protection bit
  7857                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  7858                           ;	Data EEPROM Code Protection bit
  7859                           ;	CPD = OFF, Data EEPROM is not code-protected
  7860   300009                     	org	3145737
  7861   300009  C0                 	db	192
  7862                           
  7863                           ;Config register CONFIG6L @ 0x30000A
  7864                           ;	Write Protection bit
  7865                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  7866                           ;	Write Protection bit
  7867                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  7868                           ;	Write Protection bit
  7869                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  7870                           ;	Write Protection bit
  7871                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  7872   30000A                     	org	3145738
  7873   30000A  0F                 	db	15
  7874                           
  7875                           ;Config register CONFIG6H @ 0x30000B
  7876                           ;	Configuration Register Write Protection bit
  7877                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  7878                           ;	Boot Block Write Protection bit
  7879                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  7880                           ;	Data EEPROM Write Protection bit
  7881                           ;	WRTD = OFF, Data EEPROM is not write-protected
  7882   30000B                     	org	3145739
  7883   30000B  E0                 	db	224
  7884                           
  7885                           ;Config register CONFIG7L @ 0x30000C
  7886                           ;	Table Read Protection bit
  7887                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7888                           ;	Table Read Protection bit
  7889                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7890                           ;	Table Read Protection bit
  7891                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7892                           ;	Table Read Protection bit
  7893                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  7894   30000C                     	org	3145740
  7895   30000C  0F                 	db	15
  7896                           
  7897                           ;Config register CONFIG7H @ 0x30000D
  7898                           ;	Boot Block Table Read Protection bit
  7899                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  7900   30000D                     	org	3145741
  7901   30000D  40                 	db	64
  7902                           tosu	equ	0xFFF
  7903                           tosh	equ	0xFFE
  7904                           tosl	equ	0xFFD
  7905                           stkptr	equ	0xFFC
  7906                           pclatu	equ	0xFFB
  7907                           pclath	equ	0xFFA
  7908                           pcl	equ	0xFF9
  7909                           tblptru	equ	0xFF8
  7910                           tblptrh	equ	0xFF7
  7911                           tblptrl	equ	0xFF6
  7912                           tablat	equ	0xFF5
  7913                           prodh	equ	0xFF4
  7914                           prodl	equ	0xFF3
  7915                           indf0	equ	0xFEF
  7916                           postinc0	equ	0xFEE
  7917                           postdec0	equ	0xFED
  7918                           preinc0	equ	0xFEC
  7919                           plusw0	equ	0xFEB
  7920                           fsr0h	equ	0xFEA
  7921                           fsr0l	equ	0xFE9
  7922                           wreg	equ	0xFE8
  7923                           indf1	equ	0xFE7
  7924                           postinc1	equ	0xFE6
  7925                           postdec1	equ	0xFE5
  7926                           preinc1	equ	0xFE4
  7927                           plusw1	equ	0xFE3
  7928                           fsr1h	equ	0xFE2
  7929                           fsr1l	equ	0xFE1
  7930                           bsr	equ	0xFE0
  7931                           indf2	equ	0xFDF
  7932                           postinc2	equ	0xFDE
  7933                           postdec2	equ	0xFDD
  7934                           preinc2	equ	0xFDC
  7935                           plusw2	equ	0xFDB
  7936                           fsr2h	equ	0xFDA
  7937                           fsr2l	equ	0xFD9
  7938                           status	equ	0xFD8

Data Sizes:
    Strings     182
    Constant    0
    Data        0
    BSS         115
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     74      91
    BANK0           160    104     149
    BANK1           256    161     214
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DHT11_Read@humidity	PTR unsigned char  size(1) Largest target is 1
		 -> Display_DHT11@hum(COMRAM[1]), 

    DHT11_Read@temperature	PTR unsigned char  size(1) Largest target is 1
		 -> Display_DHT11@temp(COMRAM[1]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> lcd_buffer(BANK0[17]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> lcd_buffer(BANK0[17]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    GPS_ParseGPRMC@ew	PTR unsigned char  size(2) Largest target is 2
		 -> Display_GPS@ew(BANK1[2]), 

    GPS_ParseGPRMC@lat	PTR unsigned char  size(2) Largest target is 10
		 -> Display_GPS@lat(BANK1[10]), 

    GPS_ParseGPRMC@lon	PTR unsigned char  size(2) Largest target is 11
		 -> Display_GPS@lon(BANK1[11]), 

    GPS_ParseGPRMC@msg	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), 

    GPS_ParseGPRMC@ns	PTR unsigned char  size(2) Largest target is 2
		 -> Display_GPS@ns(BANK1[2]), 

    GPS_ParseGPRMC@token	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    GPS_ReadSentence@buffer	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> Display_GPS@formatted_lat(BANK1[17]), Display_GPS@formatted_lon(BANK1[17]), lcd_buffer(BANK0[17]), STR_1(CODE[17]), 
		 -> STR_10(CODE[5]), STR_11(CODE[15]), STR_12(CODE[13]), STR_15(CODE[13]), 
		 -> STR_16(CODE[13]), STR_20(CODE[13]), STR_3(CODE[13]), STR_4(CODE[16]), 
		 -> STR_9(CODE[5]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> Display_GPS@formatted_lat(BANK1[17]), Display_GPS@formatted_lon(BANK1[17]), lcd_buffer(BANK0[17]), STR_1(CODE[17]), 
		 -> STR_10(CODE[5]), STR_11(CODE[15]), STR_12(CODE[13]), STR_15(CODE[13]), 
		 -> STR_16(CODE[13]), STR_20(CODE[13]), STR_3(CODE[13]), STR_4(CODE[16]), 
		 -> STR_9(CODE[5]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    RTC_GetDateTime@day	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@day(COMRAM[1]), 

    RTC_GetDateTime@hour	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@h(COMRAM[1]), 

    RTC_GetDateTime@min	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@m(COMRAM[1]), 

    RTC_GetDateTime@month	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@mon(COMRAM[1]), 

    RTC_GetDateTime@sec	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@s(COMRAM[1]), 

    RTC_GetDateTime@year	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@year(COMRAM[1]), 

    S998$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> lcd_buffer(BANK0[17]), 

    S998$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strcat	PTR unsigned char  size(2) Largest target is 17
		 -> Display_GPS@formatted_lat(BANK1[17]), Display_GPS@formatted_lon(BANK1[17]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_18(CODE[2]), STR_19(CODE[2]), NULL(NULL[0]), 

    sp__strncat	PTR unsigned char  size(2) Largest target is 17
		 -> Display_GPS@formatted_lat(BANK1[17]), Display_GPS@formatted_lon(BANK1[17]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@formatted_lat(BANK1[17]), Display_GPS@formatted_lon(BANK1[17]), Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), 
		 -> GPS_ParseGPRMC@buf(BANK0[100]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_18(CODE[2]), STR_19(CODE[2]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_13(CODE[17]), STR_14(CODE[15]), STR_2(CODE[13]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> lcd_buffer(BANK0[17]), 

    strcat@dest	PTR unsigned char  size(2) Largest target is 17
		 -> Display_GPS@formatted_lat(BANK1[17]), Display_GPS@formatted_lon(BANK1[17]), 

    strcat@src	PTR const unsigned char  size(2) Largest target is 3
		 -> Display_GPS@ew(BANK1[2]), Display_GPS@ns(BANK1[2]), STR_5(CODE[2]), STR_6(CODE[3]), 
		 -> STR_7(CODE[2]), STR_8(CODE[3]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_18(CODE[2]), STR_19(CODE[2]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_18(CODE[2]), STR_19(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_17(CODE[7]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_17(CODE[7]), 

    strncat@cp	PTR unsigned char  size(2) Largest target is 17
		 -> Display_GPS@formatted_lat(BANK1[17]), Display_GPS@formatted_lon(BANK1[17]), 

    strncat@dest	PTR unsigned char  size(2) Largest target is 17
		 -> Display_GPS@formatted_lat(BANK1[17]), Display_GPS@formatted_lon(BANK1[17]), 

    strncat@src	PTR const unsigned char  size(2) Largest target is 11
		 -> Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_18(CODE[2]), STR_19(CODE[2]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_17(CODE[7]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@formatted_lat(BANK1[17]), Display_GPS@formatted_lon(BANK1[17]), Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), 
		 -> GPS_ParseGPRMC@buf(BANK0[100]), 

    strncpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@formatted_lat(BANK1[17]), Display_GPS@formatted_lon(BANK1[17]), Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), 
		 -> GPS_ParseGPRMC@buf(BANK0[100]), 

    strncpy@s	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), GPS_ParseGPRMC@buf(BANK0[100]), 
		 -> NULL(NULL[0]), 

    strspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_18(CODE[2]), STR_19(CODE[2]), 

    strspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_18(CODE[2]), STR_19(CODE[2]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_17(CODE[7]), 

    strtok@p	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strtok@sep	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_18(CODE[2]), STR_19(CODE[2]), 

    utoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 17
		 -> STR_13(CODE[17]), STR_14(CODE[15]), STR_2(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_13(CODE[17]), STR_14(CODE[15]), STR_2(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_13(CODE[17]), STR_14(CODE[15]), STR_2(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_Display_RTC
    _RTC_Init->_LCD_String_xy
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _I2C_Master_Init->___lldiv
    _Display_RTC->_sprintf
    _RTC_GetDateTime->_I2C_Master_Read
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _Display_GPS->_GPS_ParseGPRMC
    _GPS_ParseGPRMC->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strchr
    _strstr->_strncmp
    _Display_DHT11->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_utoa
    _utoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _DHT11_Read->_DHT11_ReadByte
    _Clear_Line->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char

Critical Paths under _main in BANK0

    _Display_GPS->_GPS_ParseGPRMC

Critical Paths under _main in BANK1

    _main->_Display_GPS

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   13574
                                             72 COMRAM     2     2      0
                      _Display_DHT11
                        _Display_GPS
                        _Display_RTC
                           _GPS_Init
                    _I2C_Master_Init
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                           _RTC_Init
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             3     3      0     576
                                             11 COMRAM     3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      58
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      58
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     187
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     164
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _GPS_Init                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Display_RTC                                          9     9      0    3980
                                             63 COMRAM     9     9      0
                         _Clear_Line
                      _LCD_String_xy
                    _RTC_GetDateTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_GetDateTime                                      6     0      6     289
                                              5 COMRAM     6     0      6
                            _BCD2DEC
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2      40
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      4     2      2      53
                                              1 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BCD2DEC                                              2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Display_GPS                                        162   162      0    4343
                                             24 COMRAM     1     1      0
                                              0 BANK1    161   161      0
                         _Clear_Line
                     _GPS_ParseGPRMC
                   _GPS_ReadSentence
                      _LCD_String_xy
                             _strcat
                            _strncat
                            _strncpy
 ---------------------------------------------------------------------------------
 (2) _strncat                                              8     2      6     171
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (2) _strcat                                               6     2      4     132
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _GPS_ReadSentence                                    15     9      6     386
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) _GPS_ParseGPRMC                                     115   105     10    2038
                                             13 COMRAM    11     1     10
                                              0 BANK0    104   104      0
                            _strncpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               2     0      2     556
                                             11 COMRAM     2     0      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               5     3      2     187
                                              6 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              5     3      2     187
                                              6 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     2      3     591
                                              6 COMRAM     5     2      3
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     1      5     182
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (4) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _strchr                                               6     2      4      94
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _strncpy                                              8     2      6     156
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _Display_DHT11                                        2     2      0    3829
                                             63 COMRAM     2     2      0
                         _Clear_Line
                         _DHT11_Read
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             22    14      8    2580
                                             43 COMRAM    20    12      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    2373
                                             39 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           10     7      3    2236
                                             30 COMRAM     9     6      3
                              _fputc
                 _read_prec_or_width
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 8     5      3    1329
                                             22 COMRAM     8     5      3
                            ___lwdiv
                            ___lwmod
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5     751
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3     335
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (8) _fputc                                                8     5      3     234
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (9) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     163
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     164
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read                                          12    10      2     368
                                              2 COMRAM    12    10      2
                     _DHT11_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DHT11_ReadByte                                       2     2      0      71
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Clear_Line                                           1     1      0     409
                                             11 COMRAM     1     1      0
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        7     4      3     380
                                              4 COMRAM     7     4      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     104
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_DHT11
     _Clear_Line
       _LCD_String_xy
         _LCD_Command
         _LCD_String
           _LCD_Char
     _DHT11_Read
       _DHT11_ReadByte
     _LCD_String_xy
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _fputc
             _putch
           _read_prec_or_width
           _utoa
             ___lwdiv
             ___lwmod
             _pad
               _fputc
               _fputs
                 _fputc
   _Display_GPS
     _Clear_Line
     _GPS_ParseGPRMC
       _strncpy
       _strstr
         _strchr
         _strlen
         _strncmp
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _GPS_ReadSentence
     _LCD_String_xy
     _strcat
     _strncat
     _strncpy
   _Display_RTC
     _Clear_Line
     _LCD_String_xy
     _RTC_GetDateTime
       _BCD2DEC
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sprintf
   _GPS_Init
   _I2C_Master_Init
     ___lldiv
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
   _RTC_Init
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _LCD_Clear
     _LCD_String_xy
   ___lwmod

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256    161     214     83.6%
BITBANK0           160      0       0      0.0%
BANK0              160    104     149     93.1%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     74      91     95.8%
BITBIGSFRh          58      0       0      0.0%
BITBIGSFRlh         49      0       0      0.0%
BITBIGSFRlll        32      0       0      0.0%
BITBIGSFRllh        18      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     452      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri May 09 09:35:31 2025

               _LCD_String_xy$482 0009                      ?_LCD_Command 0001                                l43 220C  
                              l71 0B26                                l48 1C00                                l76 16D2  
                     ?_LCD_String 0003                   __end_of_BCD2DEC 2224                               l100 1FD8  
                             l111 14DA                               l104 2002                               l120 1570  
                             l114 14E8                               l210 2172                               l107 2024  
                             l116 14F6                               l213 1FD2                               l222 1E76  
                             l150 21B8                               l231 1ED2                               l303 21F2  
                             l151 21CA                               l216 1F7E                               l312 2240  
                             l152 21CC                               l306 2248                               l234 2238  
                             l155 0F0A                               l315 2230                               l164 0FF8  
                             l156 0F06                               l260 1622                               l253 2222  
                             l309 2250                               l149 21BC                               l318 20D8  
                             l191 0D32                               l175 0D5A                               l159 0F24  
                             l193 0D58                               l169 101C                               l266 13E0  
                             l355 1820                               l348 1810                               l297 1F2A  
                             l812 1CE4                               l822 1E10                               l819 1CEC  
                             l829 1E18                               l999 2140                               _PEN 7E2A  
                             _SEN 7E28                               _pad 195C                               wreg 0FE8  
                     LCD_Char@dat 0002                              l1020 19CE                              l1022 19EC  
                            l1040 18C4                              l1032 1306                              l1017 1990  
                            l1036 18BC                              l1140 1AFC                              l1132 14AE  
                            l2101 16FE                              l1109 1A7A                              l2103 171A  
                            l2111 2032                              l1119 1B7E                              l1151 1124  
                            l2007 21A2                              l2121 1C94                              l2105 174C  
                            l2113 2040                              l2201 126A                              l1057 0EF0  
                            l1065 20A2                              l2009 21A4                              l1138 1A7C  
                            l2131 1CCE                              l2123 1C9C                              l2115 2044  
                            l2211 12B2                              l2203 126C                              l1147 210C  
                            l2221 1822                              l2133 1CD6                              l2125 1CA4  
                            l2117 1C7A                              l2141 1DC8                              l1077 177C  
                            l1085 2064                              l2109 2026                              l2213 12C2  
                            l2205 1272                              l2301 0DD0                              l1166 195A  
                            l2231 188E                              l2223 182A                              l2135 1CD8  
                            l2127 1CB2                              l2119 1C82                              l2151 1E04  
                            l2143 1DD0                              l2215 12DC                              l2207 128E  
                            l2311 0E16                              l2303 0DE0                              l1088 2252  
                            l1168 1956                              l2401 1EC0                              l2225 184C  
                            l2233 1896                              l2137 1CDE                              l2129 1CB8  
                            l2153 1E0A                              l2145 1DD8                              l2161 1988  
                            l2209 12A0                              l2217 12EA                              l2313 0E32  
                            l2305 0DF4                              l2241 1AB8                              l1097 1C78  
                            l1178 1DAC                              l2251 1F94                              l2171 1F2E  
                            l2403 1EC6                              l2227 1854                              l2147 1DE6  
                            l2139 1DB6                              l2163 199C                              l2155 195C  
                            l2323 0E6C                              l2315 0E4A                              l2307 0E02  
                            l2243 1AF4                              l2235 1A7C                              l1179 1DB4  
                            l1188 1D48                              l2261 1FBE                              l2253 1F96  
                            l2181 1F46                              l2173 1F3E                              l2421 1FD4  
                            l2229 1870                              l2149 1DFC                              l2165 19AC  
                            l2157 196A                              l2333 0EC2                              l2317 0E58  
                            l2325 0E84                              l2309 0E0C                              l2413 1B40  
                            l2405 1AFE                              l2237 1AAC                              l1189 1D50  
                            l2501 2228                              l2263 1FC0                              l2255 1F98  
                            l2247 1F82                              l2183 1F54                              l2175 1F40  
                            l2271 1E42                              l2431 1FF2                              l2095 16D4  
                            l2167 19B0                              l2159 197A                              l2191 1222  
                            l2327 0EA6                              l2415 1B56                              l2407 1B0A  
                            l2343 20DA                              l2511 20A4                              l2503 2230  
                            l2265 1FC2                              l2257 1F9A                              l2249 1F92  
                            l2185 1F6A                              l2177 1F42                              l2273 1E46  
                            l2433 2000                              l2097 16E4                              l2169 19DC  
                            l2193 1226                              l2329 0EAE                              l2337 0ECE  
                            l2281 0D5C                              l2417 1B60                              l2409 1B10  
                            l2345 20E2                              l2361 1050                              l2353 101E  
                            l2601 0F44                              l2521 20D0                              l2513 20A8  
                            l2259 1FA8                              l2187 1F6C                              l2179 1F44  
                            l2267 1E1A                              l2435 2010                              l2427 1FE6  
                            l2099 16F4                              l2195 1236                              l2291 0D9C  
                            l2283 0D7E                              l2531 206E                              l2419 1B64  
                            l2347 20E4                              l2363 1080                              l2355 1038  
                            l2443 13E2                              l2611 0F82                              l2603 0F4C  
                            l2275 21CE                              l2515 20AE                              l2507 224A  
                            l2189 1F6E                              l2269 1E1E                              l2437 2012  
                            l2429 1FEE                              l2541 14B0                              l2197 123E  
                            l2293 0D9E                              l2285 0D86                              l2533 207E  
                            l2349 2100                              l2365 109C                              l2453 143C  
                            l2445 13F2                              l2381 1D52                              l2373 1CEE  
                            l2701 0D34                              l2621 0FDC                              l2605 0F5C  
                            l2613 0F8A                              l2277 21CE                              l2517 20B8  
                            l2509 224E                              l2525 223A                              l2391 1E8A  
                            l2439 2022                              l2543 14B4                              l2199 1244  
                            l2295 0DAA                              l2287 0D92                              l2535 209A  
                            l2367 10AE                              l2359 1044                              l2447 1406  
                            l2455 1464                              l2383 1D5E                              l2375 1CFA  
                            l2471 18F0                              l2463 18C6                              l2703 0D44  
                            l2615 0F9A                              l2607 0F6E                              l2631 0FF8  
                            l2711 1C0E                              l2279 21E4                              l2519 20CE  
                            l2527 223E                              l2393 1E94                              l2561 1508  
                            l2545 14C2                              l2289 0D96                              l2529 2066  
                            l2369 10EC                              l2457 1476                              l2449 1430  
                            l2385 1D64                              l2377 1D00                              l2481 1932  
                            l2473 1900                              l2465 18D6                              l2705 0D54  
                            l2641 0B28                              l2625 0FE2                              l2617 0FAC  
                            l2609 0F72                              l2633 1000                              l2713 1C12  
                            l2721 19FA                              l2801 0958                              l2395 1E9C  
                            l2539 21F6                              l2563 1518                              l2571 156E  
                            l2547 14CA                              l2299 0DB2                              l2459 14A6  
                            l2387 1D7A                              l2379 1D16                              l2483 1948  
                            l2475 1916                              l2467 18EA                              l2651 0B70  
                            l2643 0B2E                              l2619 0FCE                              l2635 1004  
                            l2715 1C32                              l2731 1A5E                              l2723 19FE  
                            l2811 09AE                              l2803 0968                              l2491 2210  
                            l2397 1EB0                              l2389 1E7A                              l2565 1554  
                            l2557 14F8                              l2549 14CC                              l2581 2126  
                            l2485 1950                              l2661 0BCC                              l2653 0B74  
                            l2645 0B50                              l2637 101A                              l2717 1C3A  
                            l2709 1C02                              l2733 1A70                              l2725 1A1A  
                            l2821 0A2A                              l2813 09CA                              l2805 0978  
                            l2741 134E                              l2901 15F0                              l2399 1EBA  
                            l2567 1568                              l2559 1506                              l2583 2136  
                            l2575 210E                              l2487 1958                              l2479 1920  
                            l2671 0C2C                              l2663 0BE6                              l2655 0B88  
                            l2591 0EFC                              l2727 1A28                              l2719 19EE  
                            l2831 0AA6                              l2823 0A46                              l2815 09E2  
                            l2807 0984                              l2495 2242                              l2743 1368  
                            l2751 177E                              l2903 15F4                              l2911 1126  
                            l2577 2116                              l2681 0C8C                              l2673 0C3E  
                            l2665 0BF8                              l2657 0BAA                              l2649 0B56  
                            l2593 0EFE                              l2729 1A3A                              l2833 0ABC  
                            l2825 0A5E                              l2817 09FE                              l2809 0996  
                            l2497 2246                              l2745 1382                              l2737 1308  
                            l2841 1624                              l2761 17C6                              l2753 178E  
                            l2905 1600                              l2921 1152                              l2913 1132  
                            l2579 211E                              l2691 0CD2                              l2683 0C9E  
                            l2675 0C50                              l2667 0C0A                              l2659 0BBC  
                            l2595 0F00                              l2587 0EF2                              l2835 0ACE  
                            l2827 0A7A                              l2819 0A16                              l2499 2224  
                            l2747 13DC                              l2739 1334                              l2851 1648  
                            l2771 180A                              l2763 17D0                              l2755 17A4  
                            l2907 160C                              l2931 11A6                              l2923 1156  
                            l2915 1136                              l2781 1BD4                              l2773 1B80  
                            l2685 0CAE                              l2677 0C60                              l2669 0C1A  
                            l2693 0D00                              l2597 0F18                              l2589 0EFA  
                            l2837 0AE4                              l2829 0A92                              l2861 16AA  
                            l2853 1666                              l2765 17EE                              l2757 17AC  
                            l2749 2232                              l2909 161E                              l2941 1204  
                            l2933 11AE                              l2925 116C                              l2917 114A  
                            ?_pad 000F                              l2775 1B8C                              l2695 0D10  
                            l2687 0CC0                              l2679 0C7A                              l2599 0F32  
                            l2839 0AFA                              l2791 08E4                              l2783 08B8  
                            l2863 16C0                              l2855 1676                              l2847 1626  
                            l2767 17FE                              l2759 17B8                              l2871 2154  
                            l2927 1182                              l2919 114E                              l2777 1BA8  
                            l2697 0D12                              l2793 08EA                              l2785 08C4  
                            l2865 16C2                              l2857 167C                              l2849 1642  
                            l2769 1800                              l2881 1ED4                              l2873 215A  
                            l2929 119E                              l2937 11B6                              l2779 1BC0  
                            l2699 0D22                              l2795 0916                              l2787 08CE  
                            l2859 169A                              l2883 1ED8                              l2875 2160  
                            l2867 2142                              l2891 1572                              l2939 11E8  
                            l2797 0946                              l2789 08E2                              l2885 1EDC  
                            l2877 2166                              l2869 2144                              l2893 15B2  
                            l2799 0954                              l2887 1EDE                              l2879 216C  
                            l2895 15C0                              l2991 11CA                              l2889 1F28  
                            l2897 15C4                              l2899 15DA                              STR_1 0801  
                            STR_2 086B                              STR_3 0885                              STR_4 0823  
                            STR_5 08B5                              STR_6 08B0                              STR_7 08B5  
                            STR_8 08B0                              STR_9 08AB                              u2000 0F5C  
                            u2001 0F58                              u2010 0F6E                              u2011 0F6A  
                            u1300 1CCE                              u2100 0BBC                              u2020 0F9A  
                            u1220 21CA                              u1301 1CCA                              u2101 0BB8  
                            u2021 0F96                              u1221 21C6                              u1310 1DC8  
                            u1230 16E4                              u2110 0BCC                              u2030 0FAC  
                            u1311 1DC4                              u1231 16E0                              u2111 0BC8  
                            u2031 0FA8                              u1320 1DE6                              u1240 16F4  
                            u1400 12C2                              u2200 0D44                              u2120 0C0A  
                            u2040 0FCE                              u1321 1DE2                              u1241 16F0  
                            u1401 12BE                              u2201 0D40                              u2121 0C06  
                            u2041 0FCA                              u1330 1DFC                              u1250 171A  
                            u1410 12DC                              u2210 0D54                              u2130 0C1A  
                            u2050 0FF4                              u1331 1DF8                              u1251 1716  
                            u1411 12D8                              u2211 0D50                              u2131 0C16  
                            u2051 0FF0                              u1500 1E66                              u1260 174C  
                            u1340 196A                              u1420 12EA                              u2140 0C50  
                            u2060 101A                              u2220 1C2E                              u2300 17C6  
                            u1261 1748                              u1341 1966                              u1421 12E6  
                            u2141 0C4C                              u2061 1016                              u2221 1C2A  
                            u2301 17C2                              u1510 1E76                              u1430 184C  
                            u1270 2064                              u1350 1988                              u2150 0C60  
                            u2070 0B50                              u2230 1C66                              u2310 17EE  
                            u1511 1E72                              u1431 1848                              u1271 2060  
                            u1351 1984                              u2151 0C5C                              u2071 0B4C  
                            u2311 17EA                              u1440 18BC                              u1280 1C94  
                            u1360 19CE                              u2320 1BA8                              u1600 1038  
                            u2160 0C9E                              u2080 0BA2                              u2240 1C78  
                            u1520 21E4                              _LATD 0F8C                              u1441 18B8  
                            u1281 1C90                              u1361 19CA                              u2321 1BA4  
                            u1601 1034                              u2161 0C9A                              u2081 0B9C  
                            u2241 1C74                              u2401 09A8                              u1521 21E0  
                            u1290 1CB2                              u1370 19DC                              u1450 1A9C  
                            u1610 1070                              u2170 0CAE                              u2090 0BA4  
                            u2250 1A16                              u1530 21F2                              u2410 16D2  
                            u1507 1E5C                              u1291 1CAE                              u1371 19D8  
                            u2171 0CAA                              u2251 1A12                              u2331 08BE  
                            u1531 21EE                              u2411 16CE                              u1380 12A0  
                            u1540 0D7E                              u1460 1AAC                              u1620 1080  
                            u1700 1DAC                              u2180 0D22                              u2260 1A3A  
                            u1381 129C                              u1541 0D7A                              u1461 1AA8  
                            u1621 107C                              u1701 1DA8                              u2181 0D1E  
                            u2237 1C5C                              u2261 1A36                              u2341 08D4  
                            u1710 1E8A                              u1390 12B2                              u1550 0DE0  
                            u1470 1AE4                              u1630 109C                              u2190 0D32  
                            u2270 1A5E                              u2350 0916                              u2430 15C0  
                            u1711 1E86                              u1391 12AE                              u1551 0DDC  
                            u1631 1098                              u2191 0D2E                              u2271 1A5A  
                            u2351 0912                              u2431 15BC                              u1720 1EB0  
                            u1560 0E02                              u1480 1AF4                              u1640 10AE  
                            u1800 13F2                              u2280 1A70                              u2360 0968  
                            u1721 1EAC                              u1561 0DFE                              u1481 1AF0  
                            u1457 1A92                              u1641 10AA                              u1617 1066  
                            u1801 13EE                              u2281 1A6C                              u2361 0964  
                            u2425 1F00                              u1490 1E3E                              u1570 0E32  
                            u1730 1B3C                              u1650 10EC                              u1810 1430  
                            u2370 0978                              u2290 17A4                              u1571 0E2E  
                            u1731 1B38                              u1651 10E8                              u1811 142C  
                            u2507 0FFA                              u2371 0974                              u2291 17A0  
                            u1580 0EA6                              u1740 1B52                              u1660 110C  
                            u1820 1476                              u2380 0996                              u2517 14BA  
                            u1581 0EA2                              u1741 1B4E                              u1477 1ADA  
                            u1821 1472                              u2381 0992                              u1910 209A  
                            u1750 1B7E                              u1590 2100                              u1830 1496  
                            u1670 1D16                              u2527 14C6                              u1911 2096  
                            u1751 1B7A                              u1591 20FC                              u1655 10DC  
                            u1671 1D12                              u2391 099C                              u2447 118C  
                            u1760 1FE6                              u1920 14DA                              u1840 14A6  
                            u1680 1D48                              u1497 1E34                              u2537 1FE8  
                            u1761 1FE2                              u1921 14D6                              u1657 10D2  
                            u1841 14A2                              u1681 1D44                              u1905 20CE  
                            u2457 120E                              u1770 2000                              u1930 14E8  
                            u1690 1D7A                              u1850 18D6                              u2547 1F4C  
                            u1771 1FFC                              u1931 14E4                              u1667 1102  
                            u1691 1D76                              u1851 18D2                              u2467 15E4  
                            u1780 2010                              u1940 14F6                              u1860 18EA  
                            u2557 1F76                              u1781 200C                              u1941 14F2  
                            u1837 148C                              u1861 18E6                              u2477 214A  
                            u1790 2022                              u1950 1518                              u1870 1916  
                            u2567 1FA0                              u1791 201E                              u1951 1514  
                            u1871 1912                              u2487 16B4                              u1960 1554  
                            u1880 1948                              u2577 1FCA                              u1961 1550  
                            u1881 1944                              u2497 094C                              u1970 0F18  
                            u1890 20CC                              u1971 0F14                              u1891 20C6  
                            u1980 0F32                              u1981 0F2E                              u1990 0F44  
                            u1991 0F40                              _RCEN 7E2B                              _RSEN 7E29  
                            _dbuf 01B6  __end_of_I2C_Master_RepeatedStart 2252                              _main 1126  
                            _prec 0057                              pad@i 0015                              pad@p 0012  
                            fsr0h 0FEA                              fsr1h 0FE2                              indf0 0FEF  
                            fsr2h 0FDA                              fsr0l 0FE9                              indf1 0FE7  
                            indf2 0FDF                              fsr1l 0FE1                              fsr2l 0FD9  
                            _utoa 1222                        _Clear_Line 21F4                              prodh 0FF4  
                            prodl 0FF3                              start 7FFC                  ??_DHT11_ReadByte 0001  
                   _LCD_String_xy 1E78                      ___param_bank 0000                             ??_pad 0014  
                __end_of_LCD_Char 1F80                  __end_of_LCD_Init 2174                  ?_I2C_Master_Init 000E  
                ?_I2C_Master_Read 0002                  ?_I2C_Master_Wait 0001          __end_of_GPS_ReadSentence 101E  
                ?_I2C_Master_Stop 0001               __end_of_Display_GPS 0B28               __end_of_Display_RTC 16D4  
                           ?_main 0001                             _ACKEN 7E2C                             _ACKDT 7E2D  
                           STR_10 08A6                             STR_11 0833                             STR_12 0878  
                           STR_20 0851                             STR_13 0812                             STR_14 0842  
                           STR_15 0892                             STR_16 085E                             STR_17 089F  
                           STR_18 08B3                             STR_19 08B3                             _CMCON 0FB4  
                 __end_of___lldiv 1822                             ?_utoa 0017                             _LATD0 7C60  
                           _LATD1 7C61                   __end_of___lwdiv 1CEE                  __end_of_GPS_Init 21CE  
                 __end_of___lwmod 1E1A                             _RCREG 0FAE                             _RCSTA 0FAB  
                    vfpfcnvrt@fmt 0020                             _SPBRG 0FAF                             _TRISD 0F95  
                           _TXSTA 0FAC                  ??_GPS_ParseGPRMC 0018                             _flags 005A  
             read_prec_or_width@c 0005               read_prec_or_width@n 0006                             _fputc 16D4  
                           _fputs 2026                  __end_of_RTC_Init 1624                             pad@fp 000F  
                           _width 0055                             _putch 2252                             tablat 0FF5  
                           utoa@d 0018                             utoa@i 001D                             utoa@p 001A  
                           utoa@w 001B                             status 0FD8                   __end_of_sprintf 2142  
                 __end_of_strcspn 1DB6                   __end_of_strncat 1A7C                   __end_of_strncmp 1126  
                 __end_of_strncpy 1B80                    ?_LCD_String_xy 0005                   __initialization 2174  
                    __end_of_main 1222                      __end_of_utoa 1308                         ??_BCD2DEC 0001  
                          ??_main 0049                            ??_utoa 001A                 __end_of_LCD_Clear 223A  
                   __activetblptr 0002        __end_of_read_prec_or_width 18C6                 ?_I2C_Master_Start 0001  
               ?_I2C_Master_Write 0002                ??_I2C_Master_Start 0002                            _ADCON1 0FC1  
              ??_I2C_Master_Write 0004                            ?_fputc 0001                            ?_fputs 0009  
                          ?_putch 0001                  LCD_String_xy@msg 0006                  LCD_String_xy@pos 0005  
                LCD_String_xy@row 0008                            _OSCCON 0FD3                     vfpfcnvrt@done 0026  
                          _SSPADD 0FC8                            _TRISB0 7C98                            _TRISB1 7C99  
                          _TRISC7 7CA7                            _SSPBUF 0FC9                       ?_Clear_Line 0001  
                    ??_DHT11_Read 0005          _I2C_Master_RepeatedStart 224A                       _Display_GPS 08B8  
                     _Display_RTC 1624                      vfprintf@cfmt 002B                         ??___lldiv 0009  
                       ??___lwdiv 0005                         ??___lwmod 0005              read_prec_or_width@ap 0002  
                          clear_0 217A                            clear_1 2186                            clear_2 2192  
                          isa$std 0001                            pad@buf 0010                            _strcat 1C02  
                          _strchr 1A7C                            _strlen 20DA                            _strtok 18C6  
                          _strspn 1CEE                            _strstr 13E2                            fputc@c 0001  
                          fputs@c 000C                            fputs@i 000D                            fputs@s 0009  
                      BCD2DEC@val 0002                      __mediumconst 0800                            tblptrh 0FF7  
                          tblptrl 0FF6                            tblptru 0FF8                __end_of_DHT11_Read 1572  
                          putch@c 0001                  __end_of_vfprintf 20A4                            utoa@fp 0017  
                       ??_sprintf 0034                         ??_strcspn 0009                         ??_strncat 0007  
                       ??_strncmp 0006                         ??_strncpy 0007                   _current_display 005B  
                       ?_LCD_Char 0001                        __accesstop 0060           __end_of__initialization 2198  
                       ?_LCD_Init 0001                   ??_LCD_String_xy 0008                     ___rparam_used 0001  
                       ?_GPS_Init 0001                    __pcstackCOMRAM 0001                     __end_of_fputc 177E  
                   __end_of_fputs 2066                     __end_of_putch 2254                      ??_LCD_String 0005  
                       ?_RTC_Init 0001                           ??_fputc 0004                           ??_fputs 000C  
                         ??_putch 0001                        __pbssBANK0 00C8                        __pbssBANK1 01A1  
                      ??_LCD_Char 0001                        ??_LCD_Init 0003                __end_of_LCD_String 1E78  
           __end_of_Display_DHT11 1C02                        ??_GPS_Init 0001                           _BCD2DEC 220E  
                         _BAUDCON 0FB8                           _ACKSTAT 7E2E                        ??_RTC_Init 000C  
               ?_GPS_ReadSentence 0001                           ?_strcat 0001                           ?_strchr 0001  
                         ?_strlen 0001                           ?_strtok 000C                           ?_strspn 0007  
                         ?_strstr 0007             GPS_ReadSentence@dummy 000B                ??_GPS_ReadSentence 0007  
                      _lcd_buffer 00E4                           _SSPCON1 0FC6                           _SSPCON2 0FC5  
                         _SSPSTAT 0FC7                    Clear_Line@line 000C                     LCD_String@msg 0003  
                         __Hparam 0000                           __Lparam 0000                           ___lldiv 177E  
                         ___lwdiv 1C7A                           ___lwmod 1DB6                         ?_vfprintf 0028  
                    __psmallconst 0800                           __pcinit 2174                           __ramtop 0800  
                         __ptext0 1126                           __ptext1 1572                           __ptext2 2232  
                         __ptext3 2142                           __ptext4 1ED4                           __ptext5 177E  
                         __ptext6 21A2                           __ptext7 1624                           __ptext8 1308  
                         __ptext9 2224             read_prec_or_width@fmt 0001           GPS_ReadSentence@max_len 0003  
                       _LCD_Clear 2232                           _sprintf 210E                           _strcspn 1D52  
                         _strncat 19EE                           _strncmp 101E                           _strncpy 1AFE  
            end_of_initialization 2198           GPS_ReadSentence@started 000C        ??_I2C_Master_RepeatedStart 0002  
                         fputc@fp 0003                    LCD_Command@cmd 0002                     __Lmediumconst 0000  
                         fputs@fp 000B                _read_prec_or_width 1822                      ??_Clear_Line 000C  
               ??_RTC_GetDateTime 000C                   ___lldiv@divisor 0005                   ___lldiv@counter 000D  
                    ?_Display_GPS 0001                      ?_Display_RTC 0001                 __end_of_vfpfcnvrt 0EF2  
                       _RCSTAbits 0FAB                  I2C_Master_Init@c 000E                  I2C_Master_Read@a 0002  
                         postdec2 0FDD               ?_read_prec_or_width 0001                           postinc0 0FEE  
                         postinc1 0FE6                           postinc2 0FDE                  vfpfcnvrt@convarg 0022  
           DHT11_Read@temperature 0004                        ??_vfprintf 002B                           strcat@i 0005  
                         strchr@c 0003                           strchr@s 0001                           strlen@a 0003  
                         strlen@s 0001                           strspn@c 0008                           strspn@i 000A  
                         strtok@p 0059                           strtok@s 000C                           strspn@s 0007  
                         strstr@h 0007                           strstr@n 0009                         _PORTAbits 0F80  
                 Display_RTC@year 0047                         _TRISAbits 0F92                __end_of_Clear_Line 220E  
                      ?_LCD_Clear 0001              ??_read_prec_or_width 0003                     ??_LCD_Command 0001  
                     vfpfcnvrt@ap 0021                       vfpfcnvrt@cp 0027                       vfpfcnvrt@fp 001F  
                     RTC_Init@sec 000E                DHT11_Read@humidity 0003                    __end_of_strcat 1C7A  
                  __end_of_strchr 1AFE                    __end_of_strlen 210E                    __end_of_strtok 195C  
                  __end_of_strspn 1D52                    __end_of_strstr 14B0               start_initialization 2174  
              _GPS_ParseGPRMC$456 00C4                       __end_of_pad 19EE                DHT11_ReadByte@data 0001  
               ??_I2C_Master_Init 0012                 ??_I2C_Master_Read 0004               GPS_ParseGPRMC@field 00C5  
               ??_I2C_Master_Wait 0001                 ??_I2C_Master_Stop 0002               GPS_ParseGPRMC@token 00C7  
           __end_of_LCD_String_xy 1ED4                       vfprintf@fmt 0029                          ?_BCD2DEC 0001  
                        ??_strcat 0005                          ??_strchr 0005                          ??_strlen 0003  
                        ??_strtok 000E                          ??_strspn 0009              RTC_GetDateTime@month 000A  
                        ??_strstr 000A               __end_of_LCD_Command 1FD4                       __pbssCOMRAM 004B  
                   __pcstackBANK0 0060                     __pcstackBANK1 0100                       ??_LCD_Clear 0003  
                _I2C_Master_Start 2242                  _I2C_Master_Write 2224                  ___lwdiv@dividend 0001  
                        ?___lldiv 0001                          ?___lwdiv 0001                          ?___lwmod 0001  
        GPS_ParseGPRMC@data_valid 00C6                    _DHT11_ReadByte 1FD4                       __smallconst 0800  
                 _RTC_GetDateTime 1308                  ___lwdiv@quotient 0005                       strncat@dest 0001  
           LCD_String_xy@location 000B                          ?_sprintf 002C                          ?_strcspn 0007  
                        ?_strncat 0001                          ?_strncmp 0001                          ?_strncpy 0001  
               GPS_ReadSentence@c 000F                 GPS_ReadSentence@i 000D                 GPS_ReadSentence@t 0009  
      GPS_ReadSentence@timeout_ms 0005            GPS_ReadSentence@buffer 0001                          _LCD_Char 1F2C  
                        _LCD_Init 2142                    _GPS_ParseGPRMC 0B28          Display_GPS@formatted_lat 0179  
        Display_GPS@formatted_lon 018A                          _GPS_Init 21A2                          _PIR1bits 0F9E  
                     DHT11_Read@i 000E                    Display_GPS@lat 016F                    Display_GPS@lon 0164  
          __end_of_DHT11_ReadByte 2026                       _LCD_Command 1F80                         _vfpfcnvrt 0D5C  
                  Display_RTC@day 0045                    Display_RTC@cnt 0048                    Display_RTC@mon 0046  
                        _RTC_Init 1572               I2C_Master_Read@temp 0004            __end_of_GPS_ParseGPRMC 0D5C  
                      _DHT11_Read 14B0                          __Hrparam 0000                     _Display_DHT11 1B80  
               Display_DHT11@temp 0041                        vfprintf@ap 002A                          __Lrparam 0000  
                      vfprintf@fp 0028               RTC_GetDateTime@hour 0006               RTC_GetDateTime@year 000B  
                 ?_DHT11_ReadByte 0001         ?_I2C_Master_RepeatedStart 0001                        ?_vfpfcnvrt 001F  
         __end_of_RTC_GetDateTime 13E2                   DHT11_ReadByte@i 0002                        sprintf@fmt 002D  
                 _I2C_Master_Init 1ED4                   _I2C_Master_Read 20A4                        strcat@dest 0001  
                 _I2C_Master_Wait 21CE                   _I2C_Master_Stop 223A                   ___lwdiv@divisor 0003  
                 ___lwdiv@counter 0007                          __ptext10 223A                          __ptext11 2242  
                        __ptext20 0B28                          __ptext12 224A                          __ptext21 18C6  
                        __ptext13 20A4                          __ptext30 210E                          __ptext22 1CEE  
                        __ptext14 21CE                          __ptext31 2066                          __ptext23 1D52  
                        __ptext15 220E                          __ptext40 1822                          __ptext32 0D5C  
                        __ptext24 13E2                          __ptext16 08B8                          __ptext41 14B0  
                        __ptext33 1222                          __ptext25 101E                          __ptext17 19EE  
                        __ptext42 1FD4                          __ptext34 195C                          __ptext26 20DA  
                        __ptext18 1C02                          __ptext43 21F4                          __ptext35 2026  
                        __ptext27 1A7C                          __ptext19 0EF2                          __ptext44 1E78  
                        __ptext36 16D4                          __ptext28 1AFE                          __ptext45 1E1A  
                        __ptext37 2252                          __ptext29 1B80                          __ptext46 1F2C  
                        __ptext38 1DB6                          __ptext47 1F80                          __ptext39 1C7A  
                _GPS_ReadSentence 0EF2                   ?_GPS_ParseGPRMC 000E                        strncat@src 0003  
                  ?_Display_DHT11 0001                     Display_GPS@ew 019D                          isa$xinst 0000  
                   Display_GPS@ns 019B                          _vfprintf 2066                        _LCD_String 1E1A  
        __end_of_I2C_Master_Start 224A          __end_of_I2C_Master_Write 2232                 GPS_ParseGPRMC@buf 0060  
               GPS_ParseGPRMC@lat 0010                 GPS_ParseGPRMC@lon 0014                 GPS_ParseGPRMC@msg 000E  
                Display_DHT11@hum 0040                RTC_GetDateTime@day 0009                RTC_GetDateTime@min 0007  
              RTC_GetDateTime@sec 0008                    DHT11_Read@data 0009                 Display_GPS@buffer 0100  
                       sprintf@ap 0034                         strcat@src 0003                  ___lwmod@dividend 0001  
                ___lldiv@dividend 0001                       ?_DHT11_Read 0003                         strncat@cp 0007  
                       strncpy@cp 0007                  Display_GPS@F3770 01B4                  Display_GPS@F3780 01A1  
                Display_GPS@F3772 00D9                  Display_GPS@F3774 01B2                  Display_GPS@F3768 004B  
                Display_GPS@F3778 00C8                      Display_GPS@i 019F                      Display_RTC@h 0042  
                    Display_RTC@m 0043                      Display_RTC@s 0044                         strtok@sep 000D  
         __end_of_I2C_Master_Init 1F2C           __end_of_I2C_Master_Read 20DA           __end_of_I2C_Master_Wait 21F4  
         __end_of_I2C_Master_Stop 2242                       ??_vfpfcnvrt 0022                  GPS_ParseGPRMC@ew 0016  
                GPS_ParseGPRMC@ns 0012                  ?_RTC_GetDateTime 0006                          sprintf@f 0035  
                        sprintf@s 002C                  Display_GPS@valid 01A0                  ___lldiv@quotient 0009  
               I2C_Master_Write@d 0002                   ___lwmod@divisor 0003                   ___lwmod@counter 0005  
                        strcspn@c 0008                          strcspn@i 000A                          strncat@n 0005  
                        strcspn@s 0007                          strncmp@l 0001                          strncmp@n 0004  
                        strncmp@r 0003                          strncpy@d 0001                          strncpy@n 0005  
                        strncpy@s 0003                     GPS_Init@dummy 0001                          strstr@nl 000A  
                 ??_Display_DHT11 0040                     ??_Display_GPS 0019                     ??_Display_RTC 0040  
