

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon May 05 18:28:24 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=2
    15                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1,group=3
    35                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=3
    38                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1,group=1
    48                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,group=1
    49                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1,group=3
    50                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1,group=3
    51                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,group=3
    52                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,group=3
    53                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,group=2
    54                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1,group=2
    55                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    64                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    65                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    66   000000                     
    67                           ; Version 2.20
    68                           ; Generated 12/02/2020 GMT
    69                           ; 
    70                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    71                           ; All rights reserved.
    72                           ; 
    73                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    74                           ; 
    75                           ; Redistribution and use in source and binary forms, with or without modification, are
    76                           ; permitted provided that the following conditions are met:
    77                           ; 
    78                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    79                           ;        conditions and the following disclaimer.
    80                           ; 
    81                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    82                           ;        of conditions and the following disclaimer in the documentation and/or other
    83                           ;        materials provided with the distribution.
    84                           ; 
    85                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    86                           ;        software without specific prior written permission.
    87                           ; 
    88                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    89                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    90                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    91                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    92                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    93                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    94                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    95                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    96                           ; 
    97                           ; 
    98                           ; Code-generator required, PIC18F4550 Definitions
    99                           ; 
   100                           ; SFR Addresses
   101   000FE0                     bsr             equ	4064
   102   000FE9                     fsr0            equ	4073
   103   000FEA                     fsr0h           equ	4074
   104   000FE9                     fsr0l           equ	4073
   105   000FE1                     fsr1            equ	4065
   106   000FE2                     fsr1h           equ	4066
   107   000FE1                     fsr1l           equ	4065
   108   000FD9                     fsr2            equ	4057
   109   000FDA                     fsr2h           equ	4058
   110   000FD9                     fsr2l           equ	4057
   111   000FEF                     indf0           equ	4079
   112   000FE7                     indf1           equ	4071
   113   000FDF                     indf2           equ	4063
   114   000FF2                     intcon          equ	4082
   115   000000                     nvmcon          equ	0
   116   000FF9                     pcl             equ	4089
   117   000FFA                     pclath          equ	4090
   118   000FFB                     pclatu          equ	4091
   119   000FEB                     plusw0          equ	4075
   120   000FE3                     plusw1          equ	4067
   121   000FDB                     plusw2          equ	4059
   122   000FED                     postdec0        equ	4077
   123   000FE5                     postdec1        equ	4069
   124   000FDD                     postdec2        equ	4061
   125   000FEE                     postinc0        equ	4078
   126   000FE6                     postinc1        equ	4070
   127   000FDE                     postinc2        equ	4062
   128   000FEC                     preinc0         equ	4076
   129   000FE4                     preinc1         equ	4068
   130   000FDC                     preinc2         equ	4060
   131   000FF3                     prod            equ	4083
   132   000FF4                     prodh           equ	4084
   133   000FF3                     prodl           equ	4083
   134   000FD8                     status          equ	4056
   135   000FF5                     tablat          equ	4085
   136   000FF6                     tblptr          equ	4086
   137   000FF7                     tblptrh         equ	4087
   138   000FF6                     tblptrl         equ	4086
   139   000FF8                     tblptru         equ	4088
   140   000FFD                     tosl            equ	4093
   141   000FE8                     wreg            equ	4072
   142   000F62                     SPPDATA         equ	3938	;# 
   143   000F63                     SPPCFG          equ	3939	;# 
   144   000F64                     SPPEPS          equ	3940	;# 
   145   000F65                     SPPCON          equ	3941	;# 
   146   000F66                     UFRM            equ	3942	;# 
   147   000F66                     UFRML           equ	3942	;# 
   148   000F67                     UFRMH           equ	3943	;# 
   149   000F68                     UIR             equ	3944	;# 
   150   000F69                     UIE             equ	3945	;# 
   151   000F6A                     UEIR            equ	3946	;# 
   152   000F6B                     UEIE            equ	3947	;# 
   153   000F6C                     USTAT           equ	3948	;# 
   154   000F6D                     UCON            equ	3949	;# 
   155   000F6E                     UADDR           equ	3950	;# 
   156   000F6F                     UCFG            equ	3951	;# 
   157   000F70                     UEP0            equ	3952	;# 
   158   000F71                     UEP1            equ	3953	;# 
   159   000F72                     UEP2            equ	3954	;# 
   160   000F73                     UEP3            equ	3955	;# 
   161   000F74                     UEP4            equ	3956	;# 
   162   000F75                     UEP5            equ	3957	;# 
   163   000F76                     UEP6            equ	3958	;# 
   164   000F77                     UEP7            equ	3959	;# 
   165   000F78                     UEP8            equ	3960	;# 
   166   000F79                     UEP9            equ	3961	;# 
   167   000F7A                     UEP10           equ	3962	;# 
   168   000F7B                     UEP11           equ	3963	;# 
   169   000F7C                     UEP12           equ	3964	;# 
   170   000F7D                     UEP13           equ	3965	;# 
   171   000F7E                     UEP14           equ	3966	;# 
   172   000F7F                     UEP15           equ	3967	;# 
   173   000F80                     PORTA           equ	3968	;# 
   174   000F81                     PORTB           equ	3969	;# 
   175   000F82                     PORTC           equ	3970	;# 
   176   000F83                     PORTD           equ	3971	;# 
   177   000F84                     PORTE           equ	3972	;# 
   178   000F89                     LATA            equ	3977	;# 
   179   000F8A                     LATB            equ	3978	;# 
   180   000F8B                     LATC            equ	3979	;# 
   181   000F8C                     LATD            equ	3980	;# 
   182   000F8D                     LATE            equ	3981	;# 
   183   000F92                     TRISA           equ	3986	;# 
   184   000F92                     DDRA            equ	3986	;# 
   185   000F93                     TRISB           equ	3987	;# 
   186   000F93                     DDRB            equ	3987	;# 
   187   000F94                     TRISC           equ	3988	;# 
   188   000F94                     DDRC            equ	3988	;# 
   189   000F95                     TRISD           equ	3989	;# 
   190   000F95                     DDRD            equ	3989	;# 
   191   000F96                     TRISE           equ	3990	;# 
   192   000F96                     DDRE            equ	3990	;# 
   193   000F9B                     OSCTUNE         equ	3995	;# 
   194   000F9D                     PIE1            equ	3997	;# 
   195   000F9E                     PIR1            equ	3998	;# 
   196   000F9F                     IPR1            equ	3999	;# 
   197   000FA0                     PIE2            equ	4000	;# 
   198   000FA1                     PIR2            equ	4001	;# 
   199   000FA2                     IPR2            equ	4002	;# 
   200   000FA6                     EECON1          equ	4006	;# 
   201   000FA7                     EECON2          equ	4007	;# 
   202   000FA8                     EEDATA          equ	4008	;# 
   203   000FA9                     EEADR           equ	4009	;# 
   204   000FAB                     RCSTA           equ	4011	;# 
   205   000FAB                     RCSTA1          equ	4011	;# 
   206   000FAC                     TXSTA           equ	4012	;# 
   207   000FAC                     TXSTA1          equ	4012	;# 
   208   000FAD                     TXREG           equ	4013	;# 
   209   000FAD                     TXREG1          equ	4013	;# 
   210   000FAE                     RCREG           equ	4014	;# 
   211   000FAE                     RCREG1          equ	4014	;# 
   212   000FAF                     SPBRG           equ	4015	;# 
   213   000FAF                     SPBRG1          equ	4015	;# 
   214   000FB0                     SPBRGH          equ	4016	;# 
   215   000FB1                     T3CON           equ	4017	;# 
   216   000FB2                     TMR3            equ	4018	;# 
   217   000FB2                     TMR3L           equ	4018	;# 
   218   000FB3                     TMR3H           equ	4019	;# 
   219   000FB4                     CMCON           equ	4020	;# 
   220   000FB5                     CVRCON          equ	4021	;# 
   221   000FB6                     ECCP1AS         equ	4022	;# 
   222   000FB6                     CCP1AS          equ	4022	;# 
   223   000FB7                     ECCP1DEL        equ	4023	;# 
   224   000FB7                     CCP1DEL         equ	4023	;# 
   225   000FB8                     BAUDCON         equ	4024	;# 
   226   000FB8                     BAUDCTL         equ	4024	;# 
   227   000FBA                     CCP2CON         equ	4026	;# 
   228   000FBB                     CCPR2           equ	4027	;# 
   229   000FBB                     CCPR2L          equ	4027	;# 
   230   000FBC                     CCPR2H          equ	4028	;# 
   231   000FBD                     CCP1CON         equ	4029	;# 
   232   000FBD                     ECCP1CON        equ	4029	;# 
   233   000FBE                     CCPR1           equ	4030	;# 
   234   000FBE                     CCPR1L          equ	4030	;# 
   235   000FBF                     CCPR1H          equ	4031	;# 
   236   000FC0                     ADCON2          equ	4032	;# 
   237   000FC1                     ADCON1          equ	4033	;# 
   238   000FC2                     ADCON0          equ	4034	;# 
   239   000FC3                     ADRES           equ	4035	;# 
   240   000FC3                     ADRESL          equ	4035	;# 
   241   000FC4                     ADRESH          equ	4036	;# 
   242   000FC5                     SSPCON2         equ	4037	;# 
   243   000FC6                     SSPCON1         equ	4038	;# 
   244   000FC7                     SSPSTAT         equ	4039	;# 
   245   000FC8                     SSPADD          equ	4040	;# 
   246   000FC9                     SSPBUF          equ	4041	;# 
   247   000FCA                     T2CON           equ	4042	;# 
   248   000FCB                     PR2             equ	4043	;# 
   249   000FCB                     MEMCON          equ	4043	;# 
   250   000FCC                     TMR2            equ	4044	;# 
   251   000FCD                     T1CON           equ	4045	;# 
   252   000FCE                     TMR1            equ	4046	;# 
   253   000FCE                     TMR1L           equ	4046	;# 
   254   000FCF                     TMR1H           equ	4047	;# 
   255   000FD0                     RCON            equ	4048	;# 
   256   000FD1                     WDTCON          equ	4049	;# 
   257   000FD2                     HLVDCON         equ	4050	;# 
   258   000FD2                     LVDCON          equ	4050	;# 
   259   000FD3                     OSCCON          equ	4051	;# 
   260   000FD5                     T0CON           equ	4053	;# 
   261   000FD6                     TMR0            equ	4054	;# 
   262   000FD6                     TMR0L           equ	4054	;# 
   263   000FD7                     TMR0H           equ	4055	;# 
   264   000FD8                     STATUS          equ	4056	;# 
   265   000FD9                     FSR2            equ	4057	;# 
   266   000FD9                     FSR2L           equ	4057	;# 
   267   000FDA                     FSR2H           equ	4058	;# 
   268   000FDB                     PLUSW2          equ	4059	;# 
   269   000FDC                     PREINC2         equ	4060	;# 
   270   000FDD                     POSTDEC2        equ	4061	;# 
   271   000FDE                     POSTINC2        equ	4062	;# 
   272   000FDF                     INDF2           equ	4063	;# 
   273   000FE0                     BSR             equ	4064	;# 
   274   000FE1                     FSR1            equ	4065	;# 
   275   000FE1                     FSR1L           equ	4065	;# 
   276   000FE2                     FSR1H           equ	4066	;# 
   277   000FE3                     PLUSW1          equ	4067	;# 
   278   000FE4                     PREINC1         equ	4068	;# 
   279   000FE5                     POSTDEC1        equ	4069	;# 
   280   000FE6                     POSTINC1        equ	4070	;# 
   281   000FE7                     INDF1           equ	4071	;# 
   282   000FE8                     WREG            equ	4072	;# 
   283   000FE9                     FSR0            equ	4073	;# 
   284   000FE9                     FSR0L           equ	4073	;# 
   285   000FEA                     FSR0H           equ	4074	;# 
   286   000FEB                     PLUSW0          equ	4075	;# 
   287   000FEC                     PREINC0         equ	4076	;# 
   288   000FED                     POSTDEC0        equ	4077	;# 
   289   000FEE                     POSTINC0        equ	4078	;# 
   290   000FEF                     INDF0           equ	4079	;# 
   291   000FF0                     INTCON3         equ	4080	;# 
   292   000FF1                     INTCON2         equ	4081	;# 
   293   000FF2                     INTCON          equ	4082	;# 
   294   000FF3                     PROD            equ	4083	;# 
   295   000FF3                     PRODL           equ	4083	;# 
   296   000FF4                     PRODH           equ	4084	;# 
   297   000FF5                     TABLAT          equ	4085	;# 
   298   000FF6                     TBLPTR          equ	4086	;# 
   299   000FF6                     TBLPTRL         equ	4086	;# 
   300   000FF7                     TBLPTRH         equ	4087	;# 
   301   000FF8                     TBLPTRU         equ	4088	;# 
   302   000FF9                     PCLAT           equ	4089	;# 
   303   000FF9                     PC              equ	4089	;# 
   304   000FF9                     PCL             equ	4089	;# 
   305   000FFA                     PCLATH          equ	4090	;# 
   306   000FFB                     PCLATU          equ	4091	;# 
   307   000FFC                     STKPTR          equ	4092	;# 
   308   000FFD                     TOS             equ	4093	;# 
   309   000FFD                     TOSL            equ	4093	;# 
   310   000FFE                     TOSH            equ	4094	;# 
   311   000FFF                     TOSU            equ	4095	;# 
   312   000F62                     SPPDATA         equ	3938	;# 
   313   000F63                     SPPCFG          equ	3939	;# 
   314   000F64                     SPPEPS          equ	3940	;# 
   315   000F65                     SPPCON          equ	3941	;# 
   316   000F66                     UFRM            equ	3942	;# 
   317   000F66                     UFRML           equ	3942	;# 
   318   000F67                     UFRMH           equ	3943	;# 
   319   000F68                     UIR             equ	3944	;# 
   320   000F69                     UIE             equ	3945	;# 
   321   000F6A                     UEIR            equ	3946	;# 
   322   000F6B                     UEIE            equ	3947	;# 
   323   000F6C                     USTAT           equ	3948	;# 
   324   000F6D                     UCON            equ	3949	;# 
   325   000F6E                     UADDR           equ	3950	;# 
   326   000F6F                     UCFG            equ	3951	;# 
   327   000F70                     UEP0            equ	3952	;# 
   328   000F71                     UEP1            equ	3953	;# 
   329   000F72                     UEP2            equ	3954	;# 
   330   000F73                     UEP3            equ	3955	;# 
   331   000F74                     UEP4            equ	3956	;# 
   332   000F75                     UEP5            equ	3957	;# 
   333   000F76                     UEP6            equ	3958	;# 
   334   000F77                     UEP7            equ	3959	;# 
   335   000F78                     UEP8            equ	3960	;# 
   336   000F79                     UEP9            equ	3961	;# 
   337   000F7A                     UEP10           equ	3962	;# 
   338   000F7B                     UEP11           equ	3963	;# 
   339   000F7C                     UEP12           equ	3964	;# 
   340   000F7D                     UEP13           equ	3965	;# 
   341   000F7E                     UEP14           equ	3966	;# 
   342   000F7F                     UEP15           equ	3967	;# 
   343   000F80                     PORTA           equ	3968	;# 
   344   000F81                     PORTB           equ	3969	;# 
   345   000F82                     PORTC           equ	3970	;# 
   346   000F83                     PORTD           equ	3971	;# 
   347   000F84                     PORTE           equ	3972	;# 
   348   000F89                     LATA            equ	3977	;# 
   349   000F8A                     LATB            equ	3978	;# 
   350   000F8B                     LATC            equ	3979	;# 
   351   000F8C                     LATD            equ	3980	;# 
   352   000F8D                     LATE            equ	3981	;# 
   353   000F92                     TRISA           equ	3986	;# 
   354   000F92                     DDRA            equ	3986	;# 
   355   000F93                     TRISB           equ	3987	;# 
   356   000F93                     DDRB            equ	3987	;# 
   357   000F94                     TRISC           equ	3988	;# 
   358   000F94                     DDRC            equ	3988	;# 
   359   000F95                     TRISD           equ	3989	;# 
   360   000F95                     DDRD            equ	3989	;# 
   361   000F96                     TRISE           equ	3990	;# 
   362   000F96                     DDRE            equ	3990	;# 
   363   000F9B                     OSCTUNE         equ	3995	;# 
   364   000F9D                     PIE1            equ	3997	;# 
   365   000F9E                     PIR1            equ	3998	;# 
   366   000F9F                     IPR1            equ	3999	;# 
   367   000FA0                     PIE2            equ	4000	;# 
   368   000FA1                     PIR2            equ	4001	;# 
   369   000FA2                     IPR2            equ	4002	;# 
   370   000FA6                     EECON1          equ	4006	;# 
   371   000FA7                     EECON2          equ	4007	;# 
   372   000FA8                     EEDATA          equ	4008	;# 
   373   000FA9                     EEADR           equ	4009	;# 
   374   000FAB                     RCSTA           equ	4011	;# 
   375   000FAB                     RCSTA1          equ	4011	;# 
   376   000FAC                     TXSTA           equ	4012	;# 
   377   000FAC                     TXSTA1          equ	4012	;# 
   378   000FAD                     TXREG           equ	4013	;# 
   379   000FAD                     TXREG1          equ	4013	;# 
   380   000FAE                     RCREG           equ	4014	;# 
   381   000FAE                     RCREG1          equ	4014	;# 
   382   000FAF                     SPBRG           equ	4015	;# 
   383   000FAF                     SPBRG1          equ	4015	;# 
   384   000FB0                     SPBRGH          equ	4016	;# 
   385   000FB1                     T3CON           equ	4017	;# 
   386   000FB2                     TMR3            equ	4018	;# 
   387   000FB2                     TMR3L           equ	4018	;# 
   388   000FB3                     TMR3H           equ	4019	;# 
   389   000FB4                     CMCON           equ	4020	;# 
   390   000FB5                     CVRCON          equ	4021	;# 
   391   000FB6                     ECCP1AS         equ	4022	;# 
   392   000FB6                     CCP1AS          equ	4022	;# 
   393   000FB7                     ECCP1DEL        equ	4023	;# 
   394   000FB7                     CCP1DEL         equ	4023	;# 
   395   000FB8                     BAUDCON         equ	4024	;# 
   396   000FB8                     BAUDCTL         equ	4024	;# 
   397   000FBA                     CCP2CON         equ	4026	;# 
   398   000FBB                     CCPR2           equ	4027	;# 
   399   000FBB                     CCPR2L          equ	4027	;# 
   400   000FBC                     CCPR2H          equ	4028	;# 
   401   000FBD                     CCP1CON         equ	4029	;# 
   402   000FBD                     ECCP1CON        equ	4029	;# 
   403   000FBE                     CCPR1           equ	4030	;# 
   404   000FBE                     CCPR1L          equ	4030	;# 
   405   000FBF                     CCPR1H          equ	4031	;# 
   406   000FC0                     ADCON2          equ	4032	;# 
   407   000FC1                     ADCON1          equ	4033	;# 
   408   000FC2                     ADCON0          equ	4034	;# 
   409   000FC3                     ADRES           equ	4035	;# 
   410   000FC3                     ADRESL          equ	4035	;# 
   411   000FC4                     ADRESH          equ	4036	;# 
   412   000FC5                     SSPCON2         equ	4037	;# 
   413   000FC6                     SSPCON1         equ	4038	;# 
   414   000FC7                     SSPSTAT         equ	4039	;# 
   415   000FC8                     SSPADD          equ	4040	;# 
   416   000FC9                     SSPBUF          equ	4041	;# 
   417   000FCA                     T2CON           equ	4042	;# 
   418   000FCB                     PR2             equ	4043	;# 
   419   000FCB                     MEMCON          equ	4043	;# 
   420   000FCC                     TMR2            equ	4044	;# 
   421   000FCD                     T1CON           equ	4045	;# 
   422   000FCE                     TMR1            equ	4046	;# 
   423   000FCE                     TMR1L           equ	4046	;# 
   424   000FCF                     TMR1H           equ	4047	;# 
   425   000FD0                     RCON            equ	4048	;# 
   426   000FD1                     WDTCON          equ	4049	;# 
   427   000FD2                     HLVDCON         equ	4050	;# 
   428   000FD2                     LVDCON          equ	4050	;# 
   429   000FD3                     OSCCON          equ	4051	;# 
   430   000FD5                     T0CON           equ	4053	;# 
   431   000FD6                     TMR0            equ	4054	;# 
   432   000FD6                     TMR0L           equ	4054	;# 
   433   000FD7                     TMR0H           equ	4055	;# 
   434   000FD8                     STATUS          equ	4056	;# 
   435   000FD9                     FSR2            equ	4057	;# 
   436   000FD9                     FSR2L           equ	4057	;# 
   437   000FDA                     FSR2H           equ	4058	;# 
   438   000FDB                     PLUSW2          equ	4059	;# 
   439   000FDC                     PREINC2         equ	4060	;# 
   440   000FDD                     POSTDEC2        equ	4061	;# 
   441   000FDE                     POSTINC2        equ	4062	;# 
   442   000FDF                     INDF2           equ	4063	;# 
   443   000FE0                     BSR             equ	4064	;# 
   444   000FE1                     FSR1            equ	4065	;# 
   445   000FE1                     FSR1L           equ	4065	;# 
   446   000FE2                     FSR1H           equ	4066	;# 
   447   000FE3                     PLUSW1          equ	4067	;# 
   448   000FE4                     PREINC1         equ	4068	;# 
   449   000FE5                     POSTDEC1        equ	4069	;# 
   450   000FE6                     POSTINC1        equ	4070	;# 
   451   000FE7                     INDF1           equ	4071	;# 
   452   000FE8                     WREG            equ	4072	;# 
   453   000FE9                     FSR0            equ	4073	;# 
   454   000FE9                     FSR0L           equ	4073	;# 
   455   000FEA                     FSR0H           equ	4074	;# 
   456   000FEB                     PLUSW0          equ	4075	;# 
   457   000FEC                     PREINC0         equ	4076	;# 
   458   000FED                     POSTDEC0        equ	4077	;# 
   459   000FEE                     POSTINC0        equ	4078	;# 
   460   000FEF                     INDF0           equ	4079	;# 
   461   000FF0                     INTCON3         equ	4080	;# 
   462   000FF1                     INTCON2         equ	4081	;# 
   463   000FF2                     INTCON          equ	4082	;# 
   464   000FF3                     PROD            equ	4083	;# 
   465   000FF3                     PRODL           equ	4083	;# 
   466   000FF4                     PRODH           equ	4084	;# 
   467   000FF5                     TABLAT          equ	4085	;# 
   468   000FF6                     TBLPTR          equ	4086	;# 
   469   000FF6                     TBLPTRL         equ	4086	;# 
   470   000FF7                     TBLPTRH         equ	4087	;# 
   471   000FF8                     TBLPTRU         equ	4088	;# 
   472   000FF9                     PCLAT           equ	4089	;# 
   473   000FF9                     PC              equ	4089	;# 
   474   000FF9                     PCL             equ	4089	;# 
   475   000FFA                     PCLATH          equ	4090	;# 
   476   000FFB                     PCLATU          equ	4091	;# 
   477   000FFC                     STKPTR          equ	4092	;# 
   478   000FFD                     TOS             equ	4093	;# 
   479   000FFD                     TOSL            equ	4093	;# 
   480   000FFE                     TOSH            equ	4094	;# 
   481   000FFF                     TOSU            equ	4095	;# 
   482   000F62                     SPPDATA         equ	3938	;# 
   483   000F63                     SPPCFG          equ	3939	;# 
   484   000F64                     SPPEPS          equ	3940	;# 
   485   000F65                     SPPCON          equ	3941	;# 
   486   000F66                     UFRM            equ	3942	;# 
   487   000F66                     UFRML           equ	3942	;# 
   488   000F67                     UFRMH           equ	3943	;# 
   489   000F68                     UIR             equ	3944	;# 
   490   000F69                     UIE             equ	3945	;# 
   491   000F6A                     UEIR            equ	3946	;# 
   492   000F6B                     UEIE            equ	3947	;# 
   493   000F6C                     USTAT           equ	3948	;# 
   494   000F6D                     UCON            equ	3949	;# 
   495   000F6E                     UADDR           equ	3950	;# 
   496   000F6F                     UCFG            equ	3951	;# 
   497   000F70                     UEP0            equ	3952	;# 
   498   000F71                     UEP1            equ	3953	;# 
   499   000F72                     UEP2            equ	3954	;# 
   500   000F73                     UEP3            equ	3955	;# 
   501   000F74                     UEP4            equ	3956	;# 
   502   000F75                     UEP5            equ	3957	;# 
   503   000F76                     UEP6            equ	3958	;# 
   504   000F77                     UEP7            equ	3959	;# 
   505   000F78                     UEP8            equ	3960	;# 
   506   000F79                     UEP9            equ	3961	;# 
   507   000F7A                     UEP10           equ	3962	;# 
   508   000F7B                     UEP11           equ	3963	;# 
   509   000F7C                     UEP12           equ	3964	;# 
   510   000F7D                     UEP13           equ	3965	;# 
   511   000F7E                     UEP14           equ	3966	;# 
   512   000F7F                     UEP15           equ	3967	;# 
   513   000F80                     PORTA           equ	3968	;# 
   514   000F81                     PORTB           equ	3969	;# 
   515   000F82                     PORTC           equ	3970	;# 
   516   000F83                     PORTD           equ	3971	;# 
   517   000F84                     PORTE           equ	3972	;# 
   518   000F89                     LATA            equ	3977	;# 
   519   000F8A                     LATB            equ	3978	;# 
   520   000F8B                     LATC            equ	3979	;# 
   521   000F8C                     LATD            equ	3980	;# 
   522   000F8D                     LATE            equ	3981	;# 
   523   000F92                     TRISA           equ	3986	;# 
   524   000F92                     DDRA            equ	3986	;# 
   525   000F93                     TRISB           equ	3987	;# 
   526   000F93                     DDRB            equ	3987	;# 
   527   000F94                     TRISC           equ	3988	;# 
   528   000F94                     DDRC            equ	3988	;# 
   529   000F95                     TRISD           equ	3989	;# 
   530   000F95                     DDRD            equ	3989	;# 
   531   000F96                     TRISE           equ	3990	;# 
   532   000F96                     DDRE            equ	3990	;# 
   533   000F9B                     OSCTUNE         equ	3995	;# 
   534   000F9D                     PIE1            equ	3997	;# 
   535   000F9E                     PIR1            equ	3998	;# 
   536   000F9F                     IPR1            equ	3999	;# 
   537   000FA0                     PIE2            equ	4000	;# 
   538   000FA1                     PIR2            equ	4001	;# 
   539   000FA2                     IPR2            equ	4002	;# 
   540   000FA6                     EECON1          equ	4006	;# 
   541   000FA7                     EECON2          equ	4007	;# 
   542   000FA8                     EEDATA          equ	4008	;# 
   543   000FA9                     EEADR           equ	4009	;# 
   544   000FAB                     RCSTA           equ	4011	;# 
   545   000FAB                     RCSTA1          equ	4011	;# 
   546   000FAC                     TXSTA           equ	4012	;# 
   547   000FAC                     TXSTA1          equ	4012	;# 
   548   000FAD                     TXREG           equ	4013	;# 
   549   000FAD                     TXREG1          equ	4013	;# 
   550   000FAE                     RCREG           equ	4014	;# 
   551   000FAE                     RCREG1          equ	4014	;# 
   552   000FAF                     SPBRG           equ	4015	;# 
   553   000FAF                     SPBRG1          equ	4015	;# 
   554   000FB0                     SPBRGH          equ	4016	;# 
   555   000FB1                     T3CON           equ	4017	;# 
   556   000FB2                     TMR3            equ	4018	;# 
   557   000FB2                     TMR3L           equ	4018	;# 
   558   000FB3                     TMR3H           equ	4019	;# 
   559   000FB4                     CMCON           equ	4020	;# 
   560   000FB5                     CVRCON          equ	4021	;# 
   561   000FB6                     ECCP1AS         equ	4022	;# 
   562   000FB6                     CCP1AS          equ	4022	;# 
   563   000FB7                     ECCP1DEL        equ	4023	;# 
   564   000FB7                     CCP1DEL         equ	4023	;# 
   565   000FB8                     BAUDCON         equ	4024	;# 
   566   000FB8                     BAUDCTL         equ	4024	;# 
   567   000FBA                     CCP2CON         equ	4026	;# 
   568   000FBB                     CCPR2           equ	4027	;# 
   569   000FBB                     CCPR2L          equ	4027	;# 
   570   000FBC                     CCPR2H          equ	4028	;# 
   571   000FBD                     CCP1CON         equ	4029	;# 
   572   000FBD                     ECCP1CON        equ	4029	;# 
   573   000FBE                     CCPR1           equ	4030	;# 
   574   000FBE                     CCPR1L          equ	4030	;# 
   575   000FBF                     CCPR1H          equ	4031	;# 
   576   000FC0                     ADCON2          equ	4032	;# 
   577   000FC1                     ADCON1          equ	4033	;# 
   578   000FC2                     ADCON0          equ	4034	;# 
   579   000FC3                     ADRES           equ	4035	;# 
   580   000FC3                     ADRESL          equ	4035	;# 
   581   000FC4                     ADRESH          equ	4036	;# 
   582   000FC5                     SSPCON2         equ	4037	;# 
   583   000FC6                     SSPCON1         equ	4038	;# 
   584   000FC7                     SSPSTAT         equ	4039	;# 
   585   000FC8                     SSPADD          equ	4040	;# 
   586   000FC9                     SSPBUF          equ	4041	;# 
   587   000FCA                     T2CON           equ	4042	;# 
   588   000FCB                     PR2             equ	4043	;# 
   589   000FCB                     MEMCON          equ	4043	;# 
   590   000FCC                     TMR2            equ	4044	;# 
   591   000FCD                     T1CON           equ	4045	;# 
   592   000FCE                     TMR1            equ	4046	;# 
   593   000FCE                     TMR1L           equ	4046	;# 
   594   000FCF                     TMR1H           equ	4047	;# 
   595   000FD0                     RCON            equ	4048	;# 
   596   000FD1                     WDTCON          equ	4049	;# 
   597   000FD2                     HLVDCON         equ	4050	;# 
   598   000FD2                     LVDCON          equ	4050	;# 
   599   000FD3                     OSCCON          equ	4051	;# 
   600   000FD5                     T0CON           equ	4053	;# 
   601   000FD6                     TMR0            equ	4054	;# 
   602   000FD6                     TMR0L           equ	4054	;# 
   603   000FD7                     TMR0H           equ	4055	;# 
   604   000FD8                     STATUS          equ	4056	;# 
   605   000FD9                     FSR2            equ	4057	;# 
   606   000FD9                     FSR2L           equ	4057	;# 
   607   000FDA                     FSR2H           equ	4058	;# 
   608   000FDB                     PLUSW2          equ	4059	;# 
   609   000FDC                     PREINC2         equ	4060	;# 
   610   000FDD                     POSTDEC2        equ	4061	;# 
   611   000FDE                     POSTINC2        equ	4062	;# 
   612   000FDF                     INDF2           equ	4063	;# 
   613   000FE0                     BSR             equ	4064	;# 
   614   000FE1                     FSR1            equ	4065	;# 
   615   000FE1                     FSR1L           equ	4065	;# 
   616   000FE2                     FSR1H           equ	4066	;# 
   617   000FE3                     PLUSW1          equ	4067	;# 
   618   000FE4                     PREINC1         equ	4068	;# 
   619   000FE5                     POSTDEC1        equ	4069	;# 
   620   000FE6                     POSTINC1        equ	4070	;# 
   621   000FE7                     INDF1           equ	4071	;# 
   622   000FE8                     WREG            equ	4072	;# 
   623   000FE9                     FSR0            equ	4073	;# 
   624   000FE9                     FSR0L           equ	4073	;# 
   625   000FEA                     FSR0H           equ	4074	;# 
   626   000FEB                     PLUSW0          equ	4075	;# 
   627   000FEC                     PREINC0         equ	4076	;# 
   628   000FED                     POSTDEC0        equ	4077	;# 
   629   000FEE                     POSTINC0        equ	4078	;# 
   630   000FEF                     INDF0           equ	4079	;# 
   631   000FF0                     INTCON3         equ	4080	;# 
   632   000FF1                     INTCON2         equ	4081	;# 
   633   000FF2                     INTCON          equ	4082	;# 
   634   000FF3                     PROD            equ	4083	;# 
   635   000FF3                     PRODL           equ	4083	;# 
   636   000FF4                     PRODH           equ	4084	;# 
   637   000FF5                     TABLAT          equ	4085	;# 
   638   000FF6                     TBLPTR          equ	4086	;# 
   639   000FF6                     TBLPTRL         equ	4086	;# 
   640   000FF7                     TBLPTRH         equ	4087	;# 
   641   000FF8                     TBLPTRU         equ	4088	;# 
   642   000FF9                     PCLAT           equ	4089	;# 
   643   000FF9                     PC              equ	4089	;# 
   644   000FF9                     PCL             equ	4089	;# 
   645   000FFA                     PCLATH          equ	4090	;# 
   646   000FFB                     PCLATU          equ	4091	;# 
   647   000FFC                     STKPTR          equ	4092	;# 
   648   000FFD                     TOS             equ	4093	;# 
   649   000FFD                     TOSL            equ	4093	;# 
   650   000FFE                     TOSH            equ	4094	;# 
   651   000FFF                     TOSU            equ	4095	;# 
   652   000F62                     SPPDATA         equ	3938	;# 
   653   000F63                     SPPCFG          equ	3939	;# 
   654   000F64                     SPPEPS          equ	3940	;# 
   655   000F65                     SPPCON          equ	3941	;# 
   656   000F66                     UFRM            equ	3942	;# 
   657   000F66                     UFRML           equ	3942	;# 
   658   000F67                     UFRMH           equ	3943	;# 
   659   000F68                     UIR             equ	3944	;# 
   660   000F69                     UIE             equ	3945	;# 
   661   000F6A                     UEIR            equ	3946	;# 
   662   000F6B                     UEIE            equ	3947	;# 
   663   000F6C                     USTAT           equ	3948	;# 
   664   000F6D                     UCON            equ	3949	;# 
   665   000F6E                     UADDR           equ	3950	;# 
   666   000F6F                     UCFG            equ	3951	;# 
   667   000F70                     UEP0            equ	3952	;# 
   668   000F71                     UEP1            equ	3953	;# 
   669   000F72                     UEP2            equ	3954	;# 
   670   000F73                     UEP3            equ	3955	;# 
   671   000F74                     UEP4            equ	3956	;# 
   672   000F75                     UEP5            equ	3957	;# 
   673   000F76                     UEP6            equ	3958	;# 
   674   000F77                     UEP7            equ	3959	;# 
   675   000F78                     UEP8            equ	3960	;# 
   676   000F79                     UEP9            equ	3961	;# 
   677   000F7A                     UEP10           equ	3962	;# 
   678   000F7B                     UEP11           equ	3963	;# 
   679   000F7C                     UEP12           equ	3964	;# 
   680   000F7D                     UEP13           equ	3965	;# 
   681   000F7E                     UEP14           equ	3966	;# 
   682   000F7F                     UEP15           equ	3967	;# 
   683   000F80                     PORTA           equ	3968	;# 
   684   000F81                     PORTB           equ	3969	;# 
   685   000F82                     PORTC           equ	3970	;# 
   686   000F83                     PORTD           equ	3971	;# 
   687   000F84                     PORTE           equ	3972	;# 
   688   000F89                     LATA            equ	3977	;# 
   689   000F8A                     LATB            equ	3978	;# 
   690   000F8B                     LATC            equ	3979	;# 
   691   000F8C                     LATD            equ	3980	;# 
   692   000F8D                     LATE            equ	3981	;# 
   693   000F92                     TRISA           equ	3986	;# 
   694   000F92                     DDRA            equ	3986	;# 
   695   000F93                     TRISB           equ	3987	;# 
   696   000F93                     DDRB            equ	3987	;# 
   697   000F94                     TRISC           equ	3988	;# 
   698   000F94                     DDRC            equ	3988	;# 
   699   000F95                     TRISD           equ	3989	;# 
   700   000F95                     DDRD            equ	3989	;# 
   701   000F96                     TRISE           equ	3990	;# 
   702   000F96                     DDRE            equ	3990	;# 
   703   000F9B                     OSCTUNE         equ	3995	;# 
   704   000F9D                     PIE1            equ	3997	;# 
   705   000F9E                     PIR1            equ	3998	;# 
   706   000F9F                     IPR1            equ	3999	;# 
   707   000FA0                     PIE2            equ	4000	;# 
   708   000FA1                     PIR2            equ	4001	;# 
   709   000FA2                     IPR2            equ	4002	;# 
   710   000FA6                     EECON1          equ	4006	;# 
   711   000FA7                     EECON2          equ	4007	;# 
   712   000FA8                     EEDATA          equ	4008	;# 
   713   000FA9                     EEADR           equ	4009	;# 
   714   000FAB                     RCSTA           equ	4011	;# 
   715   000FAB                     RCSTA1          equ	4011	;# 
   716   000FAC                     TXSTA           equ	4012	;# 
   717   000FAC                     TXSTA1          equ	4012	;# 
   718   000FAD                     TXREG           equ	4013	;# 
   719   000FAD                     TXREG1          equ	4013	;# 
   720   000FAE                     RCREG           equ	4014	;# 
   721   000FAE                     RCREG1          equ	4014	;# 
   722   000FAF                     SPBRG           equ	4015	;# 
   723   000FAF                     SPBRG1          equ	4015	;# 
   724   000FB0                     SPBRGH          equ	4016	;# 
   725   000FB1                     T3CON           equ	4017	;# 
   726   000FB2                     TMR3            equ	4018	;# 
   727   000FB2                     TMR3L           equ	4018	;# 
   728   000FB3                     TMR3H           equ	4019	;# 
   729   000FB4                     CMCON           equ	4020	;# 
   730   000FB5                     CVRCON          equ	4021	;# 
   731   000FB6                     ECCP1AS         equ	4022	;# 
   732   000FB6                     CCP1AS          equ	4022	;# 
   733   000FB7                     ECCP1DEL        equ	4023	;# 
   734   000FB7                     CCP1DEL         equ	4023	;# 
   735   000FB8                     BAUDCON         equ	4024	;# 
   736   000FB8                     BAUDCTL         equ	4024	;# 
   737   000FBA                     CCP2CON         equ	4026	;# 
   738   000FBB                     CCPR2           equ	4027	;# 
   739   000FBB                     CCPR2L          equ	4027	;# 
   740   000FBC                     CCPR2H          equ	4028	;# 
   741   000FBD                     CCP1CON         equ	4029	;# 
   742   000FBD                     ECCP1CON        equ	4029	;# 
   743   000FBE                     CCPR1           equ	4030	;# 
   744   000FBE                     CCPR1L          equ	4030	;# 
   745   000FBF                     CCPR1H          equ	4031	;# 
   746   000FC0                     ADCON2          equ	4032	;# 
   747   000FC1                     ADCON1          equ	4033	;# 
   748   000FC2                     ADCON0          equ	4034	;# 
   749   000FC3                     ADRES           equ	4035	;# 
   750   000FC3                     ADRESL          equ	4035	;# 
   751   000FC4                     ADRESH          equ	4036	;# 
   752   000FC5                     SSPCON2         equ	4037	;# 
   753   000FC6                     SSPCON1         equ	4038	;# 
   754   000FC7                     SSPSTAT         equ	4039	;# 
   755   000FC8                     SSPADD          equ	4040	;# 
   756   000FC9                     SSPBUF          equ	4041	;# 
   757   000FCA                     T2CON           equ	4042	;# 
   758   000FCB                     PR2             equ	4043	;# 
   759   000FCB                     MEMCON          equ	4043	;# 
   760   000FCC                     TMR2            equ	4044	;# 
   761   000FCD                     T1CON           equ	4045	;# 
   762   000FCE                     TMR1            equ	4046	;# 
   763   000FCE                     TMR1L           equ	4046	;# 
   764   000FCF                     TMR1H           equ	4047	;# 
   765   000FD0                     RCON            equ	4048	;# 
   766   000FD1                     WDTCON          equ	4049	;# 
   767   000FD2                     HLVDCON         equ	4050	;# 
   768   000FD2                     LVDCON          equ	4050	;# 
   769   000FD3                     OSCCON          equ	4051	;# 
   770   000FD5                     T0CON           equ	4053	;# 
   771   000FD6                     TMR0            equ	4054	;# 
   772   000FD6                     TMR0L           equ	4054	;# 
   773   000FD7                     TMR0H           equ	4055	;# 
   774   000FD8                     STATUS          equ	4056	;# 
   775   000FD9                     FSR2            equ	4057	;# 
   776   000FD9                     FSR2L           equ	4057	;# 
   777   000FDA                     FSR2H           equ	4058	;# 
   778   000FDB                     PLUSW2          equ	4059	;# 
   779   000FDC                     PREINC2         equ	4060	;# 
   780   000FDD                     POSTDEC2        equ	4061	;# 
   781   000FDE                     POSTINC2        equ	4062	;# 
   782   000FDF                     INDF2           equ	4063	;# 
   783   000FE0                     BSR             equ	4064	;# 
   784   000FE1                     FSR1            equ	4065	;# 
   785   000FE1                     FSR1L           equ	4065	;# 
   786   000FE2                     FSR1H           equ	4066	;# 
   787   000FE3                     PLUSW1          equ	4067	;# 
   788   000FE4                     PREINC1         equ	4068	;# 
   789   000FE5                     POSTDEC1        equ	4069	;# 
   790   000FE6                     POSTINC1        equ	4070	;# 
   791   000FE7                     INDF1           equ	4071	;# 
   792   000FE8                     WREG            equ	4072	;# 
   793   000FE9                     FSR0            equ	4073	;# 
   794   000FE9                     FSR0L           equ	4073	;# 
   795   000FEA                     FSR0H           equ	4074	;# 
   796   000FEB                     PLUSW0          equ	4075	;# 
   797   000FEC                     PREINC0         equ	4076	;# 
   798   000FED                     POSTDEC0        equ	4077	;# 
   799   000FEE                     POSTINC0        equ	4078	;# 
   800   000FEF                     INDF0           equ	4079	;# 
   801   000FF0                     INTCON3         equ	4080	;# 
   802   000FF1                     INTCON2         equ	4081	;# 
   803   000FF2                     INTCON          equ	4082	;# 
   804   000FF3                     PROD            equ	4083	;# 
   805   000FF3                     PRODL           equ	4083	;# 
   806   000FF4                     PRODH           equ	4084	;# 
   807   000FF5                     TABLAT          equ	4085	;# 
   808   000FF6                     TBLPTR          equ	4086	;# 
   809   000FF6                     TBLPTRL         equ	4086	;# 
   810   000FF7                     TBLPTRH         equ	4087	;# 
   811   000FF8                     TBLPTRU         equ	4088	;# 
   812   000FF9                     PCLAT           equ	4089	;# 
   813   000FF9                     PC              equ	4089	;# 
   814   000FF9                     PCL             equ	4089	;# 
   815   000FFA                     PCLATH          equ	4090	;# 
   816   000FFB                     PCLATU          equ	4091	;# 
   817   000FFC                     STKPTR          equ	4092	;# 
   818   000FFD                     TOS             equ	4093	;# 
   819   000FFD                     TOSL            equ	4093	;# 
   820   000FFE                     TOSH            equ	4094	;# 
   821   000FFF                     TOSU            equ	4095	;# 
   822   000F62                     SPPDATA         equ	3938	;# 
   823   000F63                     SPPCFG          equ	3939	;# 
   824   000F64                     SPPEPS          equ	3940	;# 
   825   000F65                     SPPCON          equ	3941	;# 
   826   000F66                     UFRM            equ	3942	;# 
   827   000F66                     UFRML           equ	3942	;# 
   828   000F67                     UFRMH           equ	3943	;# 
   829   000F68                     UIR             equ	3944	;# 
   830   000F69                     UIE             equ	3945	;# 
   831   000F6A                     UEIR            equ	3946	;# 
   832   000F6B                     UEIE            equ	3947	;# 
   833   000F6C                     USTAT           equ	3948	;# 
   834   000F6D                     UCON            equ	3949	;# 
   835   000F6E                     UADDR           equ	3950	;# 
   836   000F6F                     UCFG            equ	3951	;# 
   837   000F70                     UEP0            equ	3952	;# 
   838   000F71                     UEP1            equ	3953	;# 
   839   000F72                     UEP2            equ	3954	;# 
   840   000F73                     UEP3            equ	3955	;# 
   841   000F74                     UEP4            equ	3956	;# 
   842   000F75                     UEP5            equ	3957	;# 
   843   000F76                     UEP6            equ	3958	;# 
   844   000F77                     UEP7            equ	3959	;# 
   845   000F78                     UEP8            equ	3960	;# 
   846   000F79                     UEP9            equ	3961	;# 
   847   000F7A                     UEP10           equ	3962	;# 
   848   000F7B                     UEP11           equ	3963	;# 
   849   000F7C                     UEP12           equ	3964	;# 
   850   000F7D                     UEP13           equ	3965	;# 
   851   000F7E                     UEP14           equ	3966	;# 
   852   000F7F                     UEP15           equ	3967	;# 
   853   000F80                     PORTA           equ	3968	;# 
   854   000F81                     PORTB           equ	3969	;# 
   855   000F82                     PORTC           equ	3970	;# 
   856   000F83                     PORTD           equ	3971	;# 
   857   000F84                     PORTE           equ	3972	;# 
   858   000F89                     LATA            equ	3977	;# 
   859   000F8A                     LATB            equ	3978	;# 
   860   000F8B                     LATC            equ	3979	;# 
   861   000F8C                     LATD            equ	3980	;# 
   862   000F8D                     LATE            equ	3981	;# 
   863   000F92                     TRISA           equ	3986	;# 
   864   000F92                     DDRA            equ	3986	;# 
   865   000F93                     TRISB           equ	3987	;# 
   866   000F93                     DDRB            equ	3987	;# 
   867   000F94                     TRISC           equ	3988	;# 
   868   000F94                     DDRC            equ	3988	;# 
   869   000F95                     TRISD           equ	3989	;# 
   870   000F95                     DDRD            equ	3989	;# 
   871   000F96                     TRISE           equ	3990	;# 
   872   000F96                     DDRE            equ	3990	;# 
   873   000F9B                     OSCTUNE         equ	3995	;# 
   874   000F9D                     PIE1            equ	3997	;# 
   875   000F9E                     PIR1            equ	3998	;# 
   876   000F9F                     IPR1            equ	3999	;# 
   877   000FA0                     PIE2            equ	4000	;# 
   878   000FA1                     PIR2            equ	4001	;# 
   879   000FA2                     IPR2            equ	4002	;# 
   880   000FA6                     EECON1          equ	4006	;# 
   881   000FA7                     EECON2          equ	4007	;# 
   882   000FA8                     EEDATA          equ	4008	;# 
   883   000FA9                     EEADR           equ	4009	;# 
   884   000FAB                     RCSTA           equ	4011	;# 
   885   000FAB                     RCSTA1          equ	4011	;# 
   886   000FAC                     TXSTA           equ	4012	;# 
   887   000FAC                     TXSTA1          equ	4012	;# 
   888   000FAD                     TXREG           equ	4013	;# 
   889   000FAD                     TXREG1          equ	4013	;# 
   890   000FAE                     RCREG           equ	4014	;# 
   891   000FAE                     RCREG1          equ	4014	;# 
   892   000FAF                     SPBRG           equ	4015	;# 
   893   000FAF                     SPBRG1          equ	4015	;# 
   894   000FB0                     SPBRGH          equ	4016	;# 
   895   000FB1                     T3CON           equ	4017	;# 
   896   000FB2                     TMR3            equ	4018	;# 
   897   000FB2                     TMR3L           equ	4018	;# 
   898   000FB3                     TMR3H           equ	4019	;# 
   899   000FB4                     CMCON           equ	4020	;# 
   900   000FB5                     CVRCON          equ	4021	;# 
   901   000FB6                     ECCP1AS         equ	4022	;# 
   902   000FB6                     CCP1AS          equ	4022	;# 
   903   000FB7                     ECCP1DEL        equ	4023	;# 
   904   000FB7                     CCP1DEL         equ	4023	;# 
   905   000FB8                     BAUDCON         equ	4024	;# 
   906   000FB8                     BAUDCTL         equ	4024	;# 
   907   000FBA                     CCP2CON         equ	4026	;# 
   908   000FBB                     CCPR2           equ	4027	;# 
   909   000FBB                     CCPR2L          equ	4027	;# 
   910   000FBC                     CCPR2H          equ	4028	;# 
   911   000FBD                     CCP1CON         equ	4029	;# 
   912   000FBD                     ECCP1CON        equ	4029	;# 
   913   000FBE                     CCPR1           equ	4030	;# 
   914   000FBE                     CCPR1L          equ	4030	;# 
   915   000FBF                     CCPR1H          equ	4031	;# 
   916   000FC0                     ADCON2          equ	4032	;# 
   917   000FC1                     ADCON1          equ	4033	;# 
   918   000FC2                     ADCON0          equ	4034	;# 
   919   000FC3                     ADRES           equ	4035	;# 
   920   000FC3                     ADRESL          equ	4035	;# 
   921   000FC4                     ADRESH          equ	4036	;# 
   922   000FC5                     SSPCON2         equ	4037	;# 
   923   000FC6                     SSPCON1         equ	4038	;# 
   924   000FC7                     SSPSTAT         equ	4039	;# 
   925   000FC8                     SSPADD          equ	4040	;# 
   926   000FC9                     SSPBUF          equ	4041	;# 
   927   000FCA                     T2CON           equ	4042	;# 
   928   000FCB                     PR2             equ	4043	;# 
   929   000FCB                     MEMCON          equ	4043	;# 
   930   000FCC                     TMR2            equ	4044	;# 
   931   000FCD                     T1CON           equ	4045	;# 
   932   000FCE                     TMR1            equ	4046	;# 
   933   000FCE                     TMR1L           equ	4046	;# 
   934   000FCF                     TMR1H           equ	4047	;# 
   935   000FD0                     RCON            equ	4048	;# 
   936   000FD1                     WDTCON          equ	4049	;# 
   937   000FD2                     HLVDCON         equ	4050	;# 
   938   000FD2                     LVDCON          equ	4050	;# 
   939   000FD3                     OSCCON          equ	4051	;# 
   940   000FD5                     T0CON           equ	4053	;# 
   941   000FD6                     TMR0            equ	4054	;# 
   942   000FD6                     TMR0L           equ	4054	;# 
   943   000FD7                     TMR0H           equ	4055	;# 
   944   000FD8                     STATUS          equ	4056	;# 
   945   000FD9                     FSR2            equ	4057	;# 
   946   000FD9                     FSR2L           equ	4057	;# 
   947   000FDA                     FSR2H           equ	4058	;# 
   948   000FDB                     PLUSW2          equ	4059	;# 
   949   000FDC                     PREINC2         equ	4060	;# 
   950   000FDD                     POSTDEC2        equ	4061	;# 
   951   000FDE                     POSTINC2        equ	4062	;# 
   952   000FDF                     INDF2           equ	4063	;# 
   953   000FE0                     BSR             equ	4064	;# 
   954   000FE1                     FSR1            equ	4065	;# 
   955   000FE1                     FSR1L           equ	4065	;# 
   956   000FE2                     FSR1H           equ	4066	;# 
   957   000FE3                     PLUSW1          equ	4067	;# 
   958   000FE4                     PREINC1         equ	4068	;# 
   959   000FE5                     POSTDEC1        equ	4069	;# 
   960   000FE6                     POSTINC1        equ	4070	;# 
   961   000FE7                     INDF1           equ	4071	;# 
   962   000FE8                     WREG            equ	4072	;# 
   963   000FE9                     FSR0            equ	4073	;# 
   964   000FE9                     FSR0L           equ	4073	;# 
   965   000FEA                     FSR0H           equ	4074	;# 
   966   000FEB                     PLUSW0          equ	4075	;# 
   967   000FEC                     PREINC0         equ	4076	;# 
   968   000FED                     POSTDEC0        equ	4077	;# 
   969   000FEE                     POSTINC0        equ	4078	;# 
   970   000FEF                     INDF0           equ	4079	;# 
   971   000FF0                     INTCON3         equ	4080	;# 
   972   000FF1                     INTCON2         equ	4081	;# 
   973   000FF2                     INTCON          equ	4082	;# 
   974   000FF3                     PROD            equ	4083	;# 
   975   000FF3                     PRODL           equ	4083	;# 
   976   000FF4                     PRODH           equ	4084	;# 
   977   000FF5                     TABLAT          equ	4085	;# 
   978   000FF6                     TBLPTR          equ	4086	;# 
   979   000FF6                     TBLPTRL         equ	4086	;# 
   980   000FF7                     TBLPTRH         equ	4087	;# 
   981   000FF8                     TBLPTRU         equ	4088	;# 
   982   000FF9                     PCLAT           equ	4089	;# 
   983   000FF9                     PC              equ	4089	;# 
   984   000FF9                     PCL             equ	4089	;# 
   985   000FFA                     PCLATH          equ	4090	;# 
   986   000FFB                     PCLATU          equ	4091	;# 
   987   000FFC                     STKPTR          equ	4092	;# 
   988   000FFD                     TOS             equ	4093	;# 
   989   000FFD                     TOSL            equ	4093	;# 
   990   000FFE                     TOSH            equ	4094	;# 
   991   000FFF                     TOSU            equ	4095	;# 
   992   000F62                     SPPDATA         equ	3938	;# 
   993   000F63                     SPPCFG          equ	3939	;# 
   994   000F64                     SPPEPS          equ	3940	;# 
   995   000F65                     SPPCON          equ	3941	;# 
   996   000F66                     UFRM            equ	3942	;# 
   997   000F66                     UFRML           equ	3942	;# 
   998   000F67                     UFRMH           equ	3943	;# 
   999   000F68                     UIR             equ	3944	;# 
  1000   000F69                     UIE             equ	3945	;# 
  1001   000F6A                     UEIR            equ	3946	;# 
  1002   000F6B                     UEIE            equ	3947	;# 
  1003   000F6C                     USTAT           equ	3948	;# 
  1004   000F6D                     UCON            equ	3949	;# 
  1005   000F6E                     UADDR           equ	3950	;# 
  1006   000F6F                     UCFG            equ	3951	;# 
  1007   000F70                     UEP0            equ	3952	;# 
  1008   000F71                     UEP1            equ	3953	;# 
  1009   000F72                     UEP2            equ	3954	;# 
  1010   000F73                     UEP3            equ	3955	;# 
  1011   000F74                     UEP4            equ	3956	;# 
  1012   000F75                     UEP5            equ	3957	;# 
  1013   000F76                     UEP6            equ	3958	;# 
  1014   000F77                     UEP7            equ	3959	;# 
  1015   000F78                     UEP8            equ	3960	;# 
  1016   000F79                     UEP9            equ	3961	;# 
  1017   000F7A                     UEP10           equ	3962	;# 
  1018   000F7B                     UEP11           equ	3963	;# 
  1019   000F7C                     UEP12           equ	3964	;# 
  1020   000F7D                     UEP13           equ	3965	;# 
  1021   000F7E                     UEP14           equ	3966	;# 
  1022   000F7F                     UEP15           equ	3967	;# 
  1023   000F80                     PORTA           equ	3968	;# 
  1024   000F81                     PORTB           equ	3969	;# 
  1025   000F82                     PORTC           equ	3970	;# 
  1026   000F83                     PORTD           equ	3971	;# 
  1027   000F84                     PORTE           equ	3972	;# 
  1028   000F89                     LATA            equ	3977	;# 
  1029   000F8A                     LATB            equ	3978	;# 
  1030   000F8B                     LATC            equ	3979	;# 
  1031   000F8C                     LATD            equ	3980	;# 
  1032   000F8D                     LATE            equ	3981	;# 
  1033   000F92                     TRISA           equ	3986	;# 
  1034   000F92                     DDRA            equ	3986	;# 
  1035   000F93                     TRISB           equ	3987	;# 
  1036   000F93                     DDRB            equ	3987	;# 
  1037   000F94                     TRISC           equ	3988	;# 
  1038   000F94                     DDRC            equ	3988	;# 
  1039   000F95                     TRISD           equ	3989	;# 
  1040   000F95                     DDRD            equ	3989	;# 
  1041   000F96                     TRISE           equ	3990	;# 
  1042   000F96                     DDRE            equ	3990	;# 
  1043   000F9B                     OSCTUNE         equ	3995	;# 
  1044   000F9D                     PIE1            equ	3997	;# 
  1045   000F9E                     PIR1            equ	3998	;# 
  1046   000F9F                     IPR1            equ	3999	;# 
  1047   000FA0                     PIE2            equ	4000	;# 
  1048   000FA1                     PIR2            equ	4001	;# 
  1049   000FA2                     IPR2            equ	4002	;# 
  1050   000FA6                     EECON1          equ	4006	;# 
  1051   000FA7                     EECON2          equ	4007	;# 
  1052   000FA8                     EEDATA          equ	4008	;# 
  1053   000FA9                     EEADR           equ	4009	;# 
  1054   000FAB                     RCSTA           equ	4011	;# 
  1055   000FAB                     RCSTA1          equ	4011	;# 
  1056   000FAC                     TXSTA           equ	4012	;# 
  1057   000FAC                     TXSTA1          equ	4012	;# 
  1058   000FAD                     TXREG           equ	4013	;# 
  1059   000FAD                     TXREG1          equ	4013	;# 
  1060   000FAE                     RCREG           equ	4014	;# 
  1061   000FAE                     RCREG1          equ	4014	;# 
  1062   000FAF                     SPBRG           equ	4015	;# 
  1063   000FAF                     SPBRG1          equ	4015	;# 
  1064   000FB0                     SPBRGH          equ	4016	;# 
  1065   000FB1                     T3CON           equ	4017	;# 
  1066   000FB2                     TMR3            equ	4018	;# 
  1067   000FB2                     TMR3L           equ	4018	;# 
  1068   000FB3                     TMR3H           equ	4019	;# 
  1069   000FB4                     CMCON           equ	4020	;# 
  1070   000FB5                     CVRCON          equ	4021	;# 
  1071   000FB6                     ECCP1AS         equ	4022	;# 
  1072   000FB6                     CCP1AS          equ	4022	;# 
  1073   000FB7                     ECCP1DEL        equ	4023	;# 
  1074   000FB7                     CCP1DEL         equ	4023	;# 
  1075   000FB8                     BAUDCON         equ	4024	;# 
  1076   000FB8                     BAUDCTL         equ	4024	;# 
  1077   000FBA                     CCP2CON         equ	4026	;# 
  1078   000FBB                     CCPR2           equ	4027	;# 
  1079   000FBB                     CCPR2L          equ	4027	;# 
  1080   000FBC                     CCPR2H          equ	4028	;# 
  1081   000FBD                     CCP1CON         equ	4029	;# 
  1082   000FBD                     ECCP1CON        equ	4029	;# 
  1083   000FBE                     CCPR1           equ	4030	;# 
  1084   000FBE                     CCPR1L          equ	4030	;# 
  1085   000FBF                     CCPR1H          equ	4031	;# 
  1086   000FC0                     ADCON2          equ	4032	;# 
  1087   000FC1                     ADCON1          equ	4033	;# 
  1088   000FC2                     ADCON0          equ	4034	;# 
  1089   000FC3                     ADRES           equ	4035	;# 
  1090   000FC3                     ADRESL          equ	4035	;# 
  1091   000FC4                     ADRESH          equ	4036	;# 
  1092   000FC5                     SSPCON2         equ	4037	;# 
  1093   000FC6                     SSPCON1         equ	4038	;# 
  1094   000FC7                     SSPSTAT         equ	4039	;# 
  1095   000FC8                     SSPADD          equ	4040	;# 
  1096   000FC9                     SSPBUF          equ	4041	;# 
  1097   000FCA                     T2CON           equ	4042	;# 
  1098   000FCB                     PR2             equ	4043	;# 
  1099   000FCB                     MEMCON          equ	4043	;# 
  1100   000FCC                     TMR2            equ	4044	;# 
  1101   000FCD                     T1CON           equ	4045	;# 
  1102   000FCE                     TMR1            equ	4046	;# 
  1103   000FCE                     TMR1L           equ	4046	;# 
  1104   000FCF                     TMR1H           equ	4047	;# 
  1105   000FD0                     RCON            equ	4048	;# 
  1106   000FD1                     WDTCON          equ	4049	;# 
  1107   000FD2                     HLVDCON         equ	4050	;# 
  1108   000FD2                     LVDCON          equ	4050	;# 
  1109   000FD3                     OSCCON          equ	4051	;# 
  1110   000FD5                     T0CON           equ	4053	;# 
  1111   000FD6                     TMR0            equ	4054	;# 
  1112   000FD6                     TMR0L           equ	4054	;# 
  1113   000FD7                     TMR0H           equ	4055	;# 
  1114   000FD8                     STATUS          equ	4056	;# 
  1115   000FD9                     FSR2            equ	4057	;# 
  1116   000FD9                     FSR2L           equ	4057	;# 
  1117   000FDA                     FSR2H           equ	4058	;# 
  1118   000FDB                     PLUSW2          equ	4059	;# 
  1119   000FDC                     PREINC2         equ	4060	;# 
  1120   000FDD                     POSTDEC2        equ	4061	;# 
  1121   000FDE                     POSTINC2        equ	4062	;# 
  1122   000FDF                     INDF2           equ	4063	;# 
  1123   000FE0                     BSR             equ	4064	;# 
  1124   000FE1                     FSR1            equ	4065	;# 
  1125   000FE1                     FSR1L           equ	4065	;# 
  1126   000FE2                     FSR1H           equ	4066	;# 
  1127   000FE3                     PLUSW1          equ	4067	;# 
  1128   000FE4                     PREINC1         equ	4068	;# 
  1129   000FE5                     POSTDEC1        equ	4069	;# 
  1130   000FE6                     POSTINC1        equ	4070	;# 
  1131   000FE7                     INDF1           equ	4071	;# 
  1132   000FE8                     WREG            equ	4072	;# 
  1133   000FE9                     FSR0            equ	4073	;# 
  1134   000FE9                     FSR0L           equ	4073	;# 
  1135   000FEA                     FSR0H           equ	4074	;# 
  1136   000FEB                     PLUSW0          equ	4075	;# 
  1137   000FEC                     PREINC0         equ	4076	;# 
  1138   000FED                     POSTDEC0        equ	4077	;# 
  1139   000FEE                     POSTINC0        equ	4078	;# 
  1140   000FEF                     INDF0           equ	4079	;# 
  1141   000FF0                     INTCON3         equ	4080	;# 
  1142   000FF1                     INTCON2         equ	4081	;# 
  1143   000FF2                     INTCON          equ	4082	;# 
  1144   000FF3                     PROD            equ	4083	;# 
  1145   000FF3                     PRODL           equ	4083	;# 
  1146   000FF4                     PRODH           equ	4084	;# 
  1147   000FF5                     TABLAT          equ	4085	;# 
  1148   000FF6                     TBLPTR          equ	4086	;# 
  1149   000FF6                     TBLPTRL         equ	4086	;# 
  1150   000FF7                     TBLPTRH         equ	4087	;# 
  1151   000FF8                     TBLPTRU         equ	4088	;# 
  1152   000FF9                     PCLAT           equ	4089	;# 
  1153   000FF9                     PC              equ	4089	;# 
  1154   000FF9                     PCL             equ	4089	;# 
  1155   000FFA                     PCLATH          equ	4090	;# 
  1156   000FFB                     PCLATU          equ	4091	;# 
  1157   000FFC                     STKPTR          equ	4092	;# 
  1158   000FFD                     TOS             equ	4093	;# 
  1159   000FFD                     TOSL            equ	4093	;# 
  1160   000FFE                     TOSH            equ	4094	;# 
  1161   000FFF                     TOSU            equ	4095	;# 
  1162   007E2C                     _ACKEN          set	32300
  1163   007E2D                     _ACKDT          set	32301
  1164   007E2B                     _RCEN           set	32299
  1165   007E2E                     _ACKSTAT        set	32302
  1166   007E2A                     _PEN            set	32298
  1167   007E29                     _RSEN           set	32297
  1168   007E28                     _SEN            set	32296
  1169   007C99                     _TRISB1         set	31897
  1170   007C98                     _TRISB0         set	31896
  1171   007C61                     _LATD1          set	31841
  1172   007C60                     _LATD0          set	31840
  1173   007CA7                     _TRISC7         set	31911
  1174   000FC9                     _SSPBUF         set	4041
  1175   000FC7                     _SSPSTAT        set	4039
  1176   000FC8                     _SSPADD         set	4040
  1177   000FC5                     _SSPCON2        set	4037
  1178   000FC6                     _SSPCON1        set	4038
  1179   000F8C                     _LATD           set	3980
  1180   000F95                     _TRISD          set	3989
  1181   000FAB                     _RCSTAbits      set	4011
  1182   000F9E                     _PIR1bits       set	3998
  1183   000FAE                     _RCREG          set	4014
  1184   000FAF                     _SPBRG          set	4015
  1185   000FAB                     _RCSTA          set	4011
  1186   000FAC                     _TXSTA          set	4012
  1187   000FB8                     _BAUDCON        set	4024
  1188   000F92                     _TRISAbits      set	3986
  1189   000F80                     _PORTAbits      set	3968
  1190   000FB4                     _CMCON          set	4020
  1191   000FC1                     _ADCON1         set	4033
  1192   000FD3                     _OSCCON         set	4051
  1193                           
  1194                           	psect	smallconst
  1195   000800                     __psmallconst:
  1196                           	callstack 0
  1197   000800  00                 	db	0
  1198   000801                     STR_12:
  1199   000801  46                 	db	70	;'F'
  1200   000802  65                 	db	101	;'e'
  1201   000803  63                 	db	99	;'c'
  1202   000804  68                 	db	104	;'h'
  1203   000805  61                 	db	97	;'a'
  1204   000806  3A                 	db	58	;':'
  1205   000807  25                 	db	37
  1206   000808  30                 	db	48	;'0'
  1207   000809  32                 	db	50	;'2'
  1208   00080A  64                 	db	100	;'d'
  1209   00080B  2F                 	db	47
  1210   00080C  25                 	db	37
  1211   00080D  30                 	db	48	;'0'
  1212   00080E  32                 	db	50	;'2'
  1213   00080F  64                 	db	100	;'d'
  1214   000810  2F                 	db	47
  1215   000811  32                 	db	50	;'2'
  1216   000812  30                 	db	48	;'0'
  1217   000813  25                 	db	37
  1218   000814  30                 	db	48	;'0'
  1219   000815  32                 	db	50	;'2'
  1220   000816  64                 	db	100	;'d'
  1221   000817  00                 	db	0
  1222   000818                     STR_13:
  1223   000818  48                 	db	72	;'H'
  1224   000819  6F                 	db	111	;'o'
  1225   00081A  72                 	db	114	;'r'
  1226   00081B  61                 	db	97	;'a'
  1227   00081C  3A                 	db	58	;':'
  1228   00081D  20                 	db	32
  1229   00081E  25                 	db	37
  1230   00081F  30                 	db	48	;'0'
  1231   000820  32                 	db	50	;'2'
  1232   000821  64                 	db	100	;'d'
  1233   000822  3A                 	db	58	;':'
  1234   000823  25                 	db	37
  1235   000824  30                 	db	48	;'0'
  1236   000825  32                 	db	50	;'2'
  1237   000826  64                 	db	100	;'d'
  1238   000827  3A                 	db	58	;':'
  1239   000828  25                 	db	37
  1240   000829  30                 	db	48	;'0'
  1241   00082A  32                 	db	50	;'2'
  1242   00082B  64                 	db	100	;'d'
  1243   00082C  00                 	db	0
  1244   00082D                     STR_1:
  1245   00082D  20                 	db	32
  1246   00082E  20                 	db	32
  1247   00082F  20                 	db	32
  1248   000830  20                 	db	32
  1249   000831  20                 	db	32
  1250   000832  20                 	db	32
  1251   000833  20                 	db	32
  1252   000834  20                 	db	32
  1253   000835  20                 	db	32
  1254   000836  20                 	db	32
  1255   000837  20                 	db	32
  1256   000838  20                 	db	32
  1257   000839  20                 	db	32
  1258   00083A  20                 	db	32
  1259   00083B  20                 	db	32
  1260   00083C  20                 	db	32
  1261   00083D  00                 	db	0
  1262   00083E                     STR_5:
  1263   00083E  52                 	db	82	;'R'
  1264   00083F  65                 	db	101	;'e'
  1265   000840  69                 	db	105	;'i'
  1266   000841  6E                 	db	110	;'n'
  1267   000842  74                 	db	116	;'t'
  1268   000843  65                 	db	101	;'e'
  1269   000844  6E                 	db	110	;'n'
  1270   000845  74                 	db	116	;'t'
  1271   000846  61                 	db	97	;'a'
  1272   000847  6E                 	db	110	;'n'
  1273   000848  64                 	db	100	;'d'
  1274   000849  6F                 	db	111	;'o'
  1275   00084A  2E                 	db	46
  1276   00084B  2E                 	db	46
  1277   00084C  2E                 	db	46
  1278   00084D  00                 	db	0
  1279   00084E                     STR_10:
  1280   00084E  47                 	db	71	;'G'
  1281   00084F  50                 	db	80	;'P'
  1282   000850  53                 	db	83	;'S'
  1283   000851  3A                 	db	58	;':'
  1284   000852  20                 	db	32
  1285   000853  53                 	db	83	;'S'
  1286   000854  69                 	db	105	;'i'
  1287   000855  6E                 	db	110	;'n'
  1288   000856  20                 	db	32
  1289   000857  73                 	db	115	;'s'
  1290   000858  65                 	db	101	;'e'
  1291   000859  6E                 	db	110	;'n'
  1292   00085A  61                 	db	97	;'a'
  1293   00085B  6C                 	db	108	;'l'
  1294   00085C  00                 	db	0
  1295   00085D                     STR_19:
  1296   00085D  52                 	db	82	;'R'
  1297   00085E  54                 	db	84	;'T'
  1298   00085F  43                 	db	67	;'C'
  1299   000860  20                 	db	32
  1300   000861  64                 	db	100	;'d'
  1301   000862  65                 	db	101	;'e'
  1302   000863  74                 	db	116	;'t'
  1303   000864  65                 	db	101	;'e'
  1304   000865  6E                 	db	110	;'n'
  1305   000866  69                 	db	105	;'i'
  1306   000867  64                 	db	100	;'d'
  1307   000868  6F                 	db	111	;'o'
  1308   000869  00                 	db	0
  1309   00086A                     STR_15:
  1310   00086A  49                 	db	73	;'I'
  1311   00086B  6E                 	db	110	;'n'
  1312   00086C  69                 	db	105	;'i'
  1313   00086D  63                 	db	99	;'c'
  1314   00086E  69                 	db	105	;'i'
  1315   00086F  61                 	db	97	;'a'
  1316   000870  6E                 	db	110	;'n'
  1317   000871  64                 	db	100	;'d'
  1318   000872  6F                 	db	111	;'o'
  1319   000873  2E                 	db	46
  1320   000874  2E                 	db	46
  1321   000875  2E                 	db	46
  1322   000876  00                 	db	0
  1323   000877                     STR_4:
  1324   000877  44                 	db	68	;'D'
  1325   000878  48                 	db	72	;'H'
  1326   000879  54                 	db	84	;'T'
  1327   00087A  31                 	db	49	;'1'
  1328   00087B  31                 	db	49	;'1'
  1329   00087C  3A                 	db	58	;':'
  1330   00087D  20                 	db	32
  1331   00087E  45                 	db	69	;'E'
  1332   00087F  72                 	db	114	;'r'
  1333   000880  72                 	db	114	;'r'
  1334   000881  6F                 	db	111	;'o'
  1335   000882  72                 	db	114	;'r'
  1336   000883  00                 	db	0
  1337   000884                     STR_14:
  1338   000884  45                 	db	69	;'E'
  1339   000885  73                 	db	115	;'s'
  1340   000886  74                 	db	116	;'t'
  1341   000887  61                 	db	97	;'a'
  1342   000888  63                 	db	99	;'c'
  1343   000889  69                 	db	105	;'i'
  1344   00088A  6F                 	db	111	;'o'
  1345   00088B  6E                 	db	110	;'n'
  1346   00088C  20                 	db	32
  1347   00088D  4D                 	db	77	;'M'
  1348   00088E  65                 	db	101	;'e'
  1349   00088F  74                 	db	116	;'t'
  1350   000890  00                 	db	0
  1351   000891                     STR_11:
  1352   000891  42                 	db	66	;'B'
  1353   000892  75                 	db	117	;'u'
  1354   000893  73                 	db	115	;'s'
  1355   000894  63                 	db	99	;'c'
  1356   000895  61                 	db	97	;'a'
  1357   000896  6E                 	db	110	;'n'
  1358   000897  64                 	db	100	;'d'
  1359   000898  6F                 	db	111	;'o'
  1360   000899  2E                 	db	46
  1361   00089A  2E                 	db	46
  1362   00089B  2E                 	db	46
  1363   00089C  00                 	db	0
  1364   00089D                     STR_9:
  1365   00089D  4C                 	db	76	;'L'
  1366   00089E  6F                 	db	111	;'o'
  1367   00089F  6E                 	db	110	;'n'
  1368   0008A0  3A                 	db	58	;':'
  1369   0008A1  25                 	db	37
  1370   0008A2  73                 	db	115	;'s'
  1371   0008A3  25                 	db	37
  1372   0008A4  73                 	db	115	;'s'
  1373   0008A5  00                 	db	0
  1374   0008A6                     STR_8:
  1375   0008A6  4C                 	db	76	;'L'
  1376   0008A7  61                 	db	97	;'a'
  1377   0008A8  74                 	db	116	;'t'
  1378   0008A9  3A                 	db	58	;':'
  1379   0008AA  25                 	db	37
  1380   0008AB  73                 	db	115	;'s'
  1381   0008AC  25                 	db	37
  1382   0008AD  73                 	db	115	;'s'
  1383   0008AE  00                 	db	0
  1384   0008AF                     STR_2:
  1385   0008AF  48                 	db	72	;'H'
  1386   0008B0  3A                 	db	58	;':'
  1387   0008B1  20                 	db	32
  1388   0008B2  25                 	db	37
  1389   0008B3  64                 	db	100	;'d'
  1390   0008B4  25                 	db	37
  1391   0008B5  25                 	db	37
  1392   0008B6  00                 	db	0
  1393   0008B7                     STR_3:
  1394   0008B7  54                 	db	84	;'T'
  1395   0008B8  3A                 	db	58	;':'
  1396   0008B9  20                 	db	32
  1397   0008BA  25                 	db	37
  1398   0008BB  64                 	db	100	;'d'
  1399   0008BC  DF                 	db	-33
  1400   0008BD  43                 	db	67	;'C'
  1401   0008BE  00                 	db	0
  1402   0008BF                     STR_20:
  1403   0008BF  28                 	db	40
  1404   0008C0  6E                 	db	110	;'n'
  1405   0008C1  75                 	db	117	;'u'
  1406   0008C2  6C                 	db	108	;'l'
  1407   0008C3  6C                 	db	108	;'l'
  1408   0008C4  29                 	db	41
  1409   0008C5  00                 	db	0
  1410   0008C6                     STR_6:
  1411   0008C6  24                 	db	36
  1412   0008C7  47                 	db	71	;'G'
  1413   0008C8  50                 	db	80	;'P'
  1414   0008C9  52                 	db	82	;'R'
  1415   0008CA  4D                 	db	77	;'M'
  1416   0008CB  43                 	db	67	;'C'
  1417   0008CC  00                 	db	0
  1418   0008CD                     STR_17:
  1419   0008CD  2C                 	db	44
  1420   0008CE  00                 	db	0
  1421   0008C6                     STR_7           equ	STR_6
  1422   0008C6                     STR_16          equ	STR_6
  1423   0008CD                     STR_18          equ	STR_17
  1424   0008CF  00                 	db	0	; dummy byte at the end
  1425   000002                     __activetblptr  equ	2
  1426                           
  1427                           ; #config settings
  1428                           
  1429                           	psect	cinit
  1430   00238E                     __pcinit:
  1431                           	callstack 0
  1432   00238E                     start_initialization:
  1433                           	callstack 0
  1434   00238E                     __initialization:
  1435                           	callstack 0
  1436                           
  1437                           ; Clear objects allocated to BANK1 (17 bytes)
  1438   00238E  EE01  F07D         	lfsr	0,__pbssBANK1
  1439   002392  0E11               	movlw	17
  1440   002394                     clear_0:
  1441   002394  6AEE               	clrf	postinc0,c
  1442   002396  06E8               	decf	wreg,f,c
  1443   002398  E1FD               	bnz	clear_0
  1444                           
  1445                           ; Clear objects allocated to BANK0 (32 bytes)
  1446   00239A  EE00  F0C8         	lfsr	0,__pbssBANK0
  1447   00239E  0E20               	movlw	32
  1448   0023A0                     clear_1:
  1449   0023A0  6AEE               	clrf	postinc0,c
  1450   0023A2  06E8               	decf	wreg,f,c
  1451   0023A4  E1FD               	bnz	clear_1
  1452                           
  1453                           ; Clear objects allocated to COMRAM (7 bytes)
  1454   0023A6  EE00  F04F         	lfsr	0,__pbssCOMRAM
  1455   0023AA  0E07               	movlw	7
  1456   0023AC                     clear_2:
  1457   0023AC  6AEE               	clrf	postinc0,c
  1458   0023AE  06E8               	decf	wreg,f,c
  1459   0023B0  E1FD               	bnz	clear_2
  1460   0023B2                     end_of_initialization:
  1461                           	callstack 0
  1462   0023B2                     __end_of__initialization:
  1463                           	callstack 0
  1464   0023B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1465   0023B4  6EF8               	movwf	tblptru,c
  1466   0023B6  0100               	movlb	0
  1467   0023B8  EFD6  F009         	goto	_main	;jump to C main() function
  1468                           
  1469                           	psect	bssCOMRAM
  1470   00004F                     __pbssCOMRAM:
  1471                           	callstack 0
  1472   00004F                     _width:
  1473                           	callstack 0
  1474   00004F                     	ds	2
  1475   000051                     _prec:
  1476                           	callstack 0
  1477   000051                     	ds	2
  1478   000053                     strtok@p:
  1479                           	callstack 0
  1480   000053                     	ds	1
  1481   000054                     _flags:
  1482                           	callstack 0
  1483   000054                     	ds	1
  1484   000055                     _current_display:
  1485                           	callstack 0
  1486   000055                     	ds	1
  1487                           
  1488                           	psect	bssBANK0
  1489   0000C8                     __pbssBANK0:
  1490                           	callstack 0
  1491   0000C8                     _dbuf:
  1492                           	callstack 0
  1493   0000C8                     	ds	32
  1494                           
  1495                           	psect	bssBANK1
  1496   00017D                     __pbssBANK1:
  1497                           	callstack 0
  1498   00017D                     _lcd_buffer:
  1499                           	callstack 0
  1500   00017D                     	ds	17
  1501                           
  1502                           	psect	cstackBANK1
  1503   000100                     __pcstackBANK1:
  1504                           	callstack 0
  1505   000100                     Display_GPS@buffer:
  1506                           	callstack 0
  1507                           
  1508                           ; 100 bytes @ 0x0
  1509   000100                     	ds	100
  1510   000164                     Display_GPS@lon:
  1511                           	callstack 0
  1512                           
  1513                           ; 11 bytes @ 0x64
  1514   000164                     	ds	11
  1515   00016F                     Display_GPS@lat:
  1516                           	callstack 0
  1517                           
  1518                           ; 10 bytes @ 0x6F
  1519   00016F                     	ds	10
  1520   000179                     Display_GPS@ns:
  1521                           	callstack 0
  1522                           
  1523                           ; 2 bytes @ 0x79
  1524   000179                     	ds	2
  1525   00017B                     Display_GPS@ew:
  1526                           	callstack 0
  1527                           
  1528                           ; 2 bytes @ 0x7B
  1529   00017B                     	ds	2
  1530                           
  1531                           	psect	cstackBANK0
  1532   000060                     __pcstackBANK0:
  1533                           	callstack 0
  1534   000060                     GPS_ParseGPRMC@buf:
  1535                           	callstack 0
  1536                           
  1537                           ; 100 bytes @ 0x0
  1538   000060                     	ds	100
  1539   0000C4                     _GPS_ParseGPRMC$432:
  1540                           	callstack 0
  1541                           
  1542                           ; 1 bytes @ 0x64
  1543   0000C4                     	ds	1
  1544   0000C5                     GPS_ParseGPRMC@field:
  1545                           	callstack 0
  1546                           
  1547                           ; 1 bytes @ 0x65
  1548   0000C5                     	ds	1
  1549   0000C6                     GPS_ParseGPRMC@data_valid:
  1550                           	callstack 0
  1551                           
  1552                           ; 1 bytes @ 0x66
  1553   0000C6                     	ds	1
  1554   0000C7                     GPS_ParseGPRMC@token:
  1555                           	callstack 0
  1556                           
  1557                           ; 1 bytes @ 0x67
  1558   0000C7                     	ds	1
  1559                           
  1560                           	psect	cstackCOMRAM
  1561   000001                     __pcstackCOMRAM:
  1562                           	callstack 0
  1563   000001                     ?_strlen:
  1564                           	callstack 0
  1565   000001                     ?_strncmp:
  1566                           	callstack 0
  1567   000001                     ?_strchr:
  1568                           	callstack 0
  1569   000001                     ?___awdiv:
  1570                           	callstack 0
  1571   000001                     ?___awmod:
  1572                           	callstack 0
  1573   000001                     ?___lwmod:
  1574                           	callstack 0
  1575   000001                     ?_read_prec_or_width:
  1576                           	callstack 0
  1577   000001                     ?___lldiv:
  1578                           	callstack 0
  1579   000001                     DHT11_ReadByte@data:
  1580                           	callstack 0
  1581   000001                     GPS_Init@dummy:
  1582                           	callstack 0
  1583   000001                     read_prec_or_width@fmt:
  1584                           	callstack 0
  1585   000001                     strlen@s:
  1586                           	callstack 0
  1587   000001                     GPS_ReadSentence@buffer:
  1588                           	callstack 0
  1589   000001                     ___awdiv@dividend:
  1590                           	callstack 0
  1591   000001                     ___awmod@dividend:
  1592                           	callstack 0
  1593   000001                     ___lwmod@dividend:
  1594                           	callstack 0
  1595   000001                     fputc@c:
  1596                           	callstack 0
  1597   000001                     strncpy@d:
  1598                           	callstack 0
  1599   000001                     strchr@s:
  1600                           	callstack 0
  1601   000001                     strncmp@l:
  1602                           	callstack 0
  1603   000001                     ___lldiv@dividend:
  1604                           	callstack 0
  1605   000001                     ??_LCD_Command:
  1606   000001                     ??_LCD_Char:
  1607   000001                     ??_BCD2DEC:
  1608   000001                     ??_I2C_Master_Wait:
  1609                           
  1610                           ; 1 bytes @ 0x0
  1611   000001                     	ds	1
  1612   000002                     ?_I2C_Master_Read:
  1613                           	callstack 0
  1614   000002                     DHT11_ReadByte@i:
  1615                           	callstack 0
  1616   000002                     LCD_Command@cmd:
  1617                           	callstack 0
  1618   000002                     LCD_Char@dat:
  1619                           	callstack 0
  1620   000002                     BCD2DEC@val:
  1621                           	callstack 0
  1622   000002                     read_prec_or_width@ap:
  1623                           	callstack 0
  1624   000002                     I2C_Master_Write@d:
  1625                           	callstack 0
  1626   000002                     I2C_Master_Read@a:
  1627                           	callstack 0
  1628   000002                     
  1629                           ; 1 bytes @ 0x1
  1630   000002                     	ds	1
  1631   000003                     DHT11_Read@humidity:
  1632                           	callstack 0
  1633   000003                     fputc@fp:
  1634                           	callstack 0
  1635   000003                     strlen@a:
  1636                           	callstack 0
  1637   000003                     strncmp@r:
  1638                           	callstack 0
  1639   000003                     GPS_ReadSentence@max_len:
  1640                           	callstack 0
  1641   000003                     LCD_String@msg:
  1642                           	callstack 0
  1643   000003                     ___awdiv@divisor:
  1644                           	callstack 0
  1645   000003                     ___awmod@divisor:
  1646                           	callstack 0
  1647   000003                     ___lwmod@divisor:
  1648                           	callstack 0
  1649   000003                     strncpy@s:
  1650                           	callstack 0
  1651   000003                     strchr@c:
  1652                           	callstack 0
  1653   000003                     ??_LCD_Init:
  1654   000003                     ??_read_prec_or_width:
  1655                           
  1656                           ; 1 bytes @ 0x2
  1657   000003                     	ds	1
  1658   000004                     DHT11_Read@temperature:
  1659                           	callstack 0
  1660   000004                     I2C_Master_Read@temp:
  1661                           	callstack 0
  1662   000004                     strncmp@n:
  1663                           	callstack 0
  1664   000004                     ??_fputc:
  1665                           
  1666                           ; 1 bytes @ 0x3
  1667   000004                     	ds	1
  1668   000005                     LCD_String_xy@pos:
  1669                           	callstack 0
  1670   000005                     ___awdiv@counter:
  1671                           	callstack 0
  1672   000005                     ___awmod@counter:
  1673                           	callstack 0
  1674   000005                     ___lwmod@counter:
  1675                           	callstack 0
  1676   000005                     read_prec_or_width@c:
  1677                           	callstack 0
  1678   000005                     GPS_ReadSentence@timeout_ms:
  1679                           	callstack 0
  1680   000005                     strncpy@n:
  1681                           	callstack 0
  1682   000005                     ___lldiv@divisor:
  1683                           	callstack 0
  1684   000005                     ??_DHT11_Read:
  1685   000005                     ??_strchr:
  1686   000005                     
  1687                           ; 1 bytes @ 0x4
  1688   000005                     	ds	1
  1689   000006                     RTC_GetDateTime@hour:
  1690                           	callstack 0
  1691   000006                     ___awdiv@sign:
  1692                           	callstack 0
  1693   000006                     ___awmod@sign:
  1694                           	callstack 0
  1695   000006                     LCD_String_xy@msg:
  1696                           	callstack 0
  1697   000006                     read_prec_or_width@n:
  1698                           	callstack 0
  1699   000006                     ??_strncmp:
  1700                           
  1701                           ; 1 bytes @ 0x5
  1702   000006                     	ds	1
  1703   000007                     ?_strstr:
  1704                           	callstack 0
  1705   000007                     ?_abs:
  1706                           	callstack 0
  1707   000007                     ?_strspn:
  1708                           	callstack 0
  1709   000007                     ?_strcspn:
  1710                           	callstack 0
  1711   000007                     RTC_GetDateTime@min:
  1712                           	callstack 0
  1713   000007                     strcspn@s:
  1714                           	callstack 0
  1715   000007                     strspn@s:
  1716                           	callstack 0
  1717   000007                     ___awdiv@quotient:
  1718                           	callstack 0
  1719   000007                     abs@a:
  1720                           	callstack 0
  1721   000007                     strncpy@cp:
  1722                           	callstack 0
  1723   000007                     strstr@h:
  1724                           	callstack 0
  1725   000007                     ??_GPS_ReadSentence:
  1726   000007                     
  1727                           ; 1 bytes @ 0x6
  1728   000007                     	ds	1
  1729   000008                     LCD_String_xy@row:
  1730                           	callstack 0
  1731   000008                     RTC_GetDateTime@sec:
  1732                           	callstack 0
  1733   000008                     strcspn@c:
  1734                           	callstack 0
  1735   000008                     strspn@c:
  1736                           	callstack 0
  1737   000008                     
  1738                           ; 1 bytes @ 0x7
  1739   000008                     	ds	1
  1740   000009                     RTC_GetDateTime@day:
  1741                           	callstack 0
  1742   000009                     stoa@fp:
  1743                           	callstack 0
  1744   000009                     fputs@s:
  1745                           	callstack 0
  1746   000009                     strstr@n:
  1747                           	callstack 0
  1748   000009                     GPS_ReadSentence@t:
  1749                           	callstack 0
  1750   000009                     _LCD_String_xy$458:
  1751                           	callstack 0
  1752   000009                     ___lldiv@quotient:
  1753                           	callstack 0
  1754   000009                     DHT11_Read@data:
  1755                           	callstack 0
  1756   000009                     ??_abs:
  1757   000009                     ??_strspn:
  1758   000009                     ??_strcspn:
  1759   000009                     
  1760                           ; 1 bytes @ 0x8
  1761   000009                     	ds	1
  1762   00000A                     RTC_GetDateTime@month:
  1763                           	callstack 0
  1764   00000A                     fputs@fp:
  1765                           	callstack 0
  1766   00000A                     stoa@s:
  1767                           	callstack 0
  1768   00000A                     strstr@nl:
  1769                           	callstack 0
  1770   00000A                     strcspn@i:
  1771                           	callstack 0
  1772   00000A                     strspn@i:
  1773                           	callstack 0
  1774   00000A                     
  1775                           ; 1 bytes @ 0x9
  1776   00000A                     	ds	1
  1777   00000B                     GPS_ReadSentence@dummy:
  1778                           	callstack 0
  1779   00000B                     LCD_String_xy@location:
  1780                           	callstack 0
  1781   00000B                     RTC_GetDateTime@year:
  1782                           	callstack 0
  1783   00000B                     fputs@c:
  1784                           	callstack 0
  1785   00000B                     
  1786                           ; 1 bytes @ 0xA
  1787   00000B                     	ds	1
  1788   00000C                     Clear_Line@line:
  1789                           	callstack 0
  1790   00000C                     GPS_ReadSentence@started:
  1791                           	callstack 0
  1792   00000C                     strtok@s:
  1793                           	callstack 0
  1794   00000C                     fputs@i:
  1795                           	callstack 0
  1796   00000C                     ??_RTC_Init:
  1797   00000C                     ??_stoa:
  1798                           
  1799                           ; 1 bytes @ 0xB
  1800   00000C                     	ds	1
  1801   00000D                     ___lldiv@counter:
  1802                           	callstack 0
  1803   00000D                     strtok@sep:
  1804                           	callstack 0
  1805   00000D                     GPS_ReadSentence@i:
  1806                           	callstack 0
  1807                           
  1808                           ; 2 bytes @ 0xC
  1809   00000D                     	ds	1
  1810   00000E                     DHT11_Read@i:
  1811                           	callstack 0
  1812   00000E                     RTC_Init@sec:
  1813                           	callstack 0
  1814   00000E                     pad@fp:
  1815                           	callstack 0
  1816   00000E                     GPS_ParseGPRMC@msg:
  1817                           	callstack 0
  1818   00000E                     stoa@p:
  1819                           	callstack 0
  1820   00000E                     I2C_Master_Init@c:
  1821                           	callstack 0
  1822   00000E                     
  1823                           ; 1 bytes @ 0xD
  1824   00000E                     	ds	1
  1825   00000F                     GPS_ReadSentence@c:
  1826                           	callstack 0
  1827   00000F                     pad@buf:
  1828                           	callstack 0
  1829                           
  1830                           ; 1 bytes @ 0xE
  1831   00000F                     	ds	1
  1832   000010                     GPS_ParseGPRMC@lat:
  1833                           	callstack 0
  1834   000010                     pad@p:
  1835                           	callstack 0
  1836   000010                     stoa@w:
  1837                           	callstack 0
  1838                           
  1839                           ; 2 bytes @ 0xF
  1840   000010                     	ds	2
  1841   000012                     GPS_ParseGPRMC@ns:
  1842                           	callstack 0
  1843   000012                     stoa@cp:
  1844                           	callstack 0
  1845   000012                     ??_I2C_Master_Init:
  1846   000012                     ??_pad:
  1847                           
  1848                           ; 1 bytes @ 0x11
  1849   000012                     	ds	1
  1850   000013                     pad@i:
  1851                           	callstack 0
  1852                           
  1853                           ; 2 bytes @ 0x12
  1854   000013                     	ds	1
  1855   000014                     GPS_ParseGPRMC@lon:
  1856                           	callstack 0
  1857   000014                     stoa@l:
  1858                           	callstack 0
  1859                           
  1860                           ; 2 bytes @ 0x13
  1861   000014                     	ds	1
  1862   000015                     dtoa@fp:
  1863                           	callstack 0
  1864                           
  1865                           ; 1 bytes @ 0x14
  1866   000015                     	ds	1
  1867   000016                     GPS_ParseGPRMC@ew:
  1868                           	callstack 0
  1869   000016                     dtoa@d:
  1870                           	callstack 0
  1871                           
  1872                           ; 2 bytes @ 0x15
  1873   000016                     	ds	2
  1874   000018                     _dtoa$1053:
  1875                           	callstack 0
  1876   000018                     
  1877                           ; 1 bytes @ 0x17
  1878   000018                     	ds	2
  1879   00001A                     dtoa@p:
  1880                           	callstack 0
  1881                           
  1882                           ; 1 bytes @ 0x19
  1883   00001A                     	ds	1
  1884   00001B                     dtoa@w:
  1885                           	callstack 0
  1886                           
  1887                           ; 2 bytes @ 0x1A
  1888   00001B                     	ds	2
  1889   00001D                     dtoa@s:
  1890                           	callstack 0
  1891                           
  1892                           ; 1 bytes @ 0x1C
  1893   00001D                     	ds	1
  1894   00001E                     dtoa@i:
  1895                           	callstack 0
  1896                           
  1897                           ; 2 bytes @ 0x1D
  1898   00001E                     	ds	2
  1899   000020                     vfpfcnvrt@fp:
  1900                           	callstack 0
  1901                           
  1902                           ; 1 bytes @ 0x1F
  1903   000020                     	ds	1
  1904   000021                     vfpfcnvrt@fmt:
  1905                           	callstack 0
  1906                           
  1907                           ; 1 bytes @ 0x20
  1908   000021                     	ds	1
  1909   000022                     vfpfcnvrt@ap:
  1910                           	callstack 0
  1911                           
  1912                           ; 2 bytes @ 0x21
  1913   000022                     	ds	2
  1914   000024                     ??_vfpfcnvrt:
  1915                           
  1916                           ; 1 bytes @ 0x23
  1917   000024                     	ds	1
  1918   000025                     vfpfcnvrt@convarg:
  1919                           	callstack 0
  1920                           
  1921                           ; 4 bytes @ 0x24
  1922   000025                     	ds	4
  1923   000029                     vfpfcnvrt@cp:
  1924                           	callstack 0
  1925                           
  1926                           ; 1 bytes @ 0x28
  1927   000029                     	ds	1
  1928   00002A                     vfpfcnvrt@done:
  1929                           	callstack 0
  1930                           
  1931                           ; 1 bytes @ 0x29
  1932   00002A                     	ds	1
  1933   00002B                     ?_vfprintf:
  1934                           	callstack 0
  1935   00002B                     vfprintf@fp:
  1936                           	callstack 0
  1937                           
  1938                           ; 1 bytes @ 0x2A
  1939   00002B                     	ds	1
  1940   00002C                     vfprintf@fmt:
  1941                           	callstack 0
  1942                           
  1943                           ; 1 bytes @ 0x2B
  1944   00002C                     	ds	1
  1945   00002D                     vfprintf@ap:
  1946                           	callstack 0
  1947                           
  1948                           ; 1 bytes @ 0x2C
  1949   00002D                     	ds	1
  1950   00002E                     vfprintf@cfmt:
  1951                           	callstack 0
  1952   00002E                     
  1953                           ; 1 bytes @ 0x2D
  1954   00002E                     	ds	1
  1955   00002F                     ?_sprintf:
  1956                           	callstack 0
  1957   00002F                     sprintf@s:
  1958                           	callstack 0
  1959                           
  1960                           ; 2 bytes @ 0x2E
  1961   00002F                     	ds	2
  1962   000031                     sprintf@fmt:
  1963                           	callstack 0
  1964                           
  1965                           ; 1 bytes @ 0x30
  1966   000031                     	ds	7
  1967   000038                     sprintf@ap:
  1968                           	callstack 0
  1969   000038                     
  1970                           ; 1 bytes @ 0x37
  1971   000038                     	ds	1
  1972   000039                     sprintf@f:
  1973                           	callstack 0
  1974                           
  1975                           ; 11 bytes @ 0x38
  1976   000039                     	ds	11
  1977   000044                     Display_DHT11@hum:
  1978                           	callstack 0
  1979   000044                     ??_Display_RTC:
  1980                           
  1981                           ; 1 bytes @ 0x43
  1982   000044                     	ds	1
  1983   000045                     Display_DHT11@temp:
  1984                           	callstack 0
  1985                           
  1986                           ; 1 bytes @ 0x44
  1987   000045                     	ds	1
  1988   000046                     Display_RTC@refresh_count:
  1989                           	callstack 0
  1990                           
  1991                           ; 1 bytes @ 0x45
  1992   000046                     	ds	1
  1993   000047                     Display_RTC@h:
  1994                           	callstack 0
  1995                           
  1996                           ; 1 bytes @ 0x46
  1997   000047                     	ds	1
  1998   000048                     Display_RTC@m:
  1999                           	callstack 0
  2000                           
  2001                           ; 1 bytes @ 0x47
  2002   000048                     	ds	1
  2003   000049                     Display_RTC@s:
  2004                           	callstack 0
  2005                           
  2006                           ; 1 bytes @ 0x48
  2007   000049                     	ds	1
  2008   00004A                     Display_RTC@day:
  2009                           	callstack 0
  2010                           
  2011                           ; 1 bytes @ 0x49
  2012   00004A                     	ds	1
  2013   00004B                     Display_RTC@mon:
  2014                           	callstack 0
  2015                           
  2016                           ; 1 bytes @ 0x4A
  2017   00004B                     	ds	1
  2018   00004C                     Display_RTC@year:
  2019                           	callstack 0
  2020                           
  2021                           ; 1 bytes @ 0x4B
  2022   00004C                     	ds	1
  2023   00004D                     ??_main:
  2024                           
  2025                           ; 1 bytes @ 0x4C
  2026   00004D                     	ds	2
  2027                           
  2028 ;;
  2029 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2030 ;;
  2031 ;; *************** function _main *****************
  2032 ;; Defined at:
  2033 ;;		line 120 in file "main.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2049 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2050 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2051 ;;Total ram usage:        2 bytes
  2052 ;; Hardware stack levels required when called: 9
  2053 ;; This function calls:
  2054 ;;		_Display_DHT11
  2055 ;;		_Display_GPS
  2056 ;;		_Display_RTC
  2057 ;;		_GPS_Init
  2058 ;;		_I2C_Master_Init
  2059 ;;		_LCD_Clear
  2060 ;;		_LCD_Init
  2061 ;;		_LCD_String_xy
  2062 ;;		_RTC_Init
  2063 ;;		___lwmod
  2064 ;; This function is called by:
  2065 ;;		Startup code after reset
  2066 ;; This function uses a non-reentrant model
  2067 ;;
  2068                           
  2069                           	psect	text0
  2070   0013AC                     __ptext0:
  2071                           	callstack 0
  2072   0013AC                     _main:
  2073                           	callstack 22
  2074   0013AC                     
  2075                           ;main.c: 122:     OSCCON = 0x72;
  2076   0013AC  0E72               	movlw	114
  2077   0013AE  6ED3               	movwf	211,c	;volatile
  2078                           
  2079                           ;main.c: 123:     ADCON1 = 0x0F;
  2080   0013B0  0E0F               	movlw	15
  2081   0013B2  6EC1               	movwf	193,c	;volatile
  2082                           
  2083                           ;main.c: 124:     CMCON = 0x07;
  2084   0013B4  0E07               	movlw	7
  2085   0013B6  6EB4               	movwf	180,c	;volatile
  2086   0013B8                     
  2087                           ;main.c: 127:     LCD_Init();
  2088   0013B8  ECAE  F011         	call	_LCD_Init	;wreg free
  2089   0013BC                     
  2090                           ;main.c: 128:     I2C_Master_Init(100000);
  2091   0013BC  0EA0               	movlw	160
  2092   0013BE  6E0E               	movwf	I2C_Master_Init@c^0,c
  2093   0013C0  0E86               	movlw	134
  2094   0013C2  6E0F               	movwf	(I2C_Master_Init@c+1)^0,c
  2095   0013C4  0E01               	movlw	1
  2096   0013C6  6E10               	movwf	(I2C_Master_Init@c+2)^0,c
  2097   0013C8  0E00               	movlw	0
  2098   0013CA  6E11               	movwf	(I2C_Master_Init@c+3)^0,c
  2099   0013CC  EC5A  F010         	call	_I2C_Master_Init	;wreg free
  2100   0013D0                     
  2101                           ;main.c: 129:     RTC_Init();
  2102   0013D0  ECAC  F00C         	call	_RTC_Init	;wreg free
  2103   0013D4                     
  2104                           ;main.c: 130:     GPS_Init();
  2105   0013D4  ECDE  F011         	call	_GPS_Init	;wreg free
  2106   0013D8                     
  2107                           ;main.c: 133:     LCD_Clear();
  2108   0013D8  EC26  F012         	call	_LCD_Clear	;wreg free
  2109   0013DC                     
  2110                           ;main.c: 134:     LCD_String_xy(0, 0, "Estacion Met");
  2111   0013DC  0E00               	movlw	0
  2112   0013DE  6E05               	movwf	LCD_String_xy@pos^0,c
  2113   0013E0  0E84               	movlw	low STR_14
  2114   0013E2  6E06               	movwf	LCD_String_xy@msg^0,c
  2115   0013E4  5006               	movf	LCD_String_xy@msg^0,w,c
  2116   0013E6  A4D8               	btfss	status,2,c
  2117   0013E8  0E08               	movlw	high __smallconst
  2118   0013EA  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2119   0013EC  0E00               	movlw	0
  2120   0013EE  EC2C  F010         	call	_LCD_String_xy
  2121   0013F2                     
  2122                           ;main.c: 135:     LCD_String_xy(1, 0, "Iniciando...");
  2123   0013F2  0E00               	movlw	0
  2124   0013F4  6E05               	movwf	LCD_String_xy@pos^0,c
  2125   0013F6  0E6A               	movlw	low STR_15
  2126   0013F8  6E06               	movwf	LCD_String_xy@msg^0,c
  2127   0013FA  5006               	movf	LCD_String_xy@msg^0,w,c
  2128   0013FC  A4D8               	btfss	status,2,c
  2129   0013FE  0E08               	movlw	high __smallconst
  2130   001400  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2131   001402  0E01               	movlw	1
  2132   001404  EC2C  F010         	call	_LCD_String_xy
  2133   001408                     
  2134                           ;main.c: 136:     _delay((unsigned long)((2000)*(8000000/4000.0)));
  2135   001408  0E15               	movlw	21
  2136   00140A  6E4E               	movwf	(??_main+1)^0,c
  2137   00140C  0E4B               	movlw	75
  2138   00140E  6E4D               	movwf	??_main^0,c
  2139   001410  0EBE               	movlw	190
  2140   001412                     u2807:
  2141   001412  2EE8               	decfsz	wreg,f,c
  2142   001414  D7FE               	bra	u2807
  2143   001416  2E4D               	decfsz	??_main^0,f,c
  2144   001418  D7FC               	bra	u2807
  2145   00141A  2E4E               	decfsz	(??_main+1)^0,f,c
  2146   00141C  D7FA               	bra	u2807
  2147   00141E  D000               	nop2	
  2148   001420  EF21  F00A         	goto	l3055
  2149   001424                     l3049:
  2150                           
  2151                           ;main.c: 143:                 Display_DHT11();
  2152   001424  EC5C  F00D         	call	_Display_DHT11	;wreg free
  2153                           
  2154                           ;main.c: 144:                 break;
  2155   001428  EF3A  F00A         	goto	l3057
  2156   00142C                     l3051:
  2157                           
  2158                           ;main.c: 146:                 Display_GPS();
  2159   00142C  EC26  F008         	call	_Display_GPS	;wreg free
  2160                           
  2161                           ;main.c: 147:                 break;
  2162   001430  EF3A  F00A         	goto	l3057
  2163   001434                     l3053:
  2164                           
  2165                           ;main.c: 149:                 Display_RTC();
  2166   001434  EC2B  F00B         	call	_Display_RTC	;wreg free
  2167                           
  2168                           ;main.c: 150:                 break;
  2169   001438  EF3A  F00A         	goto	l3057
  2170   00143C                     l66:
  2171                           
  2172                           ;main.c: 152:                 current_display = SHOW_DHT11;
  2173   00143C  6A55               	clrf	_current_display^0,c
  2174                           
  2175                           ;main.c: 153:         }
  2176   00143E  EF3A  F00A         	goto	l3057
  2177   001442                     l3055:
  2178   001442  5055               	movf	_current_display^0,w,c
  2179   001444  6E4D               	movwf	??_main^0,c
  2180   001446  6A4E               	clrf	(??_main+1)^0,c
  2181                           
  2182                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2183                           ; Switch size 1, requested type "simple"
  2184                           ; Number of cases is 1, Range of values is 0 to 0
  2185                           ; switch strategies available:
  2186                           ; Name         Instructions Cycles
  2187                           ; simple_byte            4     3 (average)
  2188                           ;	Chosen strategy is simple_byte
  2189   001448  504E               	movf	(??_main+1)^0,w,c
  2190   00144A  0A00               	xorlw	0	; case 0
  2191   00144C  B4D8               	btfsc	status,2,c
  2192   00144E  EF2B  F00A         	goto	l3109
  2193   001452  EF1E  F00A         	goto	l66
  2194   001456                     l3109:
  2195                           
  2196                           ; Switch size 1, requested type "simple"
  2197                           ; Number of cases is 3, Range of values is 0 to 2
  2198                           ; switch strategies available:
  2199                           ; Name         Instructions Cycles
  2200                           ; simple_byte           10     6 (average)
  2201                           ;	Chosen strategy is simple_byte
  2202   001456  504D               	movf	??_main^0,w,c
  2203   001458  0A00               	xorlw	0	; case 0
  2204   00145A  B4D8               	btfsc	status,2,c
  2205   00145C  EF12  F00A         	goto	l3049
  2206   001460  0A01               	xorlw	1	; case 1
  2207   001462  B4D8               	btfsc	status,2,c
  2208   001464  EF16  F00A         	goto	l3051
  2209   001468  0A03               	xorlw	3	; case 2
  2210   00146A  B4D8               	btfsc	status,2,c
  2211   00146C  EF1A  F00A         	goto	l3053
  2212   001470  EF1E  F00A         	goto	l66
  2213   001474                     l3057:
  2214                           
  2215                           ;main.c: 156:         current_display = (current_display + 1) % NUM_DISPLAYS;
  2216   001474  0E01               	movlw	1
  2217   001476  2455               	addwf	_current_display^0,w,c
  2218   001478  6E01               	movwf	___lwmod@dividend^0,c
  2219   00147A  6A02               	clrf	(___lwmod@dividend+1)^0,c
  2220   00147C  0E00               	movlw	0
  2221   00147E  2202               	addwfc	(___lwmod@dividend+1)^0,f,c
  2222   001480  0E00               	movlw	0
  2223   001482  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2224   001484  0E03               	movlw	3
  2225   001486  6E03               	movwf	___lwmod@divisor^0,c
  2226   001488  EC67  F00F         	call	___lwmod	;wreg free
  2227   00148C  5001               	movf	?___lwmod^0,w,c
  2228   00148E  6E55               	movwf	_current_display^0,c
  2229   001490                     
  2230                           ;main.c: 157:         _delay((unsigned long)((5000)*(8000000/4000.0)));
  2231   001490  0E33               	movlw	51
  2232   001492  6E4E               	movwf	(??_main+1)^0,c
  2233   001494  0EBB               	movlw	187
  2234   001496  6E4D               	movwf	??_main^0,c
  2235   001498  0EE0               	movlw	224
  2236   00149A                     u2817:
  2237   00149A  2EE8               	decfsz	wreg,f,c
  2238   00149C  D7FE               	bra	u2817
  2239   00149E  2E4D               	decfsz	??_main^0,f,c
  2240   0014A0  D7FC               	bra	u2817
  2241   0014A2  2E4E               	decfsz	(??_main+1)^0,f,c
  2242   0014A4  D7FA               	bra	u2817
  2243   0014A6  EF21  F00A         	goto	l3055
  2244   0014AA  EF00  F000         	goto	start
  2245   0014AE                     __end_of_main:
  2246                           	callstack 0
  2247                           
  2248 ;; *************** function ___lwmod *****************
  2249 ;; Defined at:
  2250 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\lwmod.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  dividend        2    0[COMRAM] unsigned int 
  2253 ;;  divisor         2    2[COMRAM] unsigned int 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  counter         1    4[COMRAM] unsigned char 
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  2    0[COMRAM] unsigned int 
  2258 ;; Registers used:
  2259 ;;		wreg, status,2, status,0
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2265 ;;      Params:         4       0       0       0       0       0       0       0       0
  2266 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2268 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2269 ;;Total ram usage:        5 bytes
  2270 ;; Hardware stack levels used: 1
  2271 ;; This function calls:
  2272 ;;		Nothing
  2273 ;; This function is called by:
  2274 ;;		_main
  2275 ;; This function uses a non-reentrant model
  2276 ;;
  2277                           
  2278                           	psect	text1
  2279   001ECE                     __ptext1:
  2280                           	callstack 0
  2281   001ECE                     ___lwmod:
  2282                           	callstack 30
  2283   001ECE  5003               	movf	___lwmod@divisor^0,w,c
  2284   001ED0  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2285   001ED2  B4D8               	btfsc	status,2,c
  2286   001ED4  EF6E  F00F         	goto	u2771
  2287   001ED8  EF70  F00F         	goto	u2770
  2288   001EDC                     u2771:
  2289   001EDC  EF94  F00F         	goto	l802
  2290   001EE0                     u2770:
  2291   001EE0  0E01               	movlw	1
  2292   001EE2  6E05               	movwf	___lwmod@counter^0,c
  2293   001EE4  EF78  F00F         	goto	l3021
  2294   001EE8                     l3019:
  2295   001EE8  90D8               	bcf	status,0,c
  2296   001EEA  3603               	rlcf	___lwmod@divisor^0,f,c
  2297   001EEC  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2298   001EEE  2A05               	incf	___lwmod@counter^0,f,c
  2299   001EF0                     l3021:
  2300   001EF0  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2301   001EF2  EF7D  F00F         	goto	u2781
  2302   001EF6  EF7F  F00F         	goto	u2780
  2303   001EFA                     u2781:
  2304   001EFA  EF74  F00F         	goto	l3019
  2305   001EFE                     u2780:
  2306   001EFE                     l3023:
  2307   001EFE  5003               	movf	___lwmod@divisor^0,w,c
  2308   001F00  5C01               	subwf	___lwmod@dividend^0,w,c
  2309   001F02  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2310   001F04  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2311   001F06  A0D8               	btfss	status,0,c
  2312   001F08  EF88  F00F         	goto	u2791
  2313   001F0C  EF8A  F00F         	goto	u2790
  2314   001F10                     u2791:
  2315   001F10  EF8E  F00F         	goto	l3027
  2316   001F14                     u2790:
  2317   001F14  5003               	movf	___lwmod@divisor^0,w,c
  2318   001F16  5E01               	subwf	___lwmod@dividend^0,f,c
  2319   001F18  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2320   001F1A  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2321   001F1C                     l3027:
  2322   001F1C  90D8               	bcf	status,0,c
  2323   001F1E  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2324   001F20  3203               	rrcf	___lwmod@divisor^0,f,c
  2325   001F22  2E05               	decfsz	___lwmod@counter^0,f,c
  2326   001F24  EF7F  F00F         	goto	l3023
  2327   001F28                     l802:
  2328   001F28  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2329   001F2C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2330   001F30  0012               	return		;funcret
  2331   001F32                     __end_of___lwmod:
  2332                           	callstack 0
  2333                           
  2334 ;; *************** function _RTC_Init *****************
  2335 ;; Defined at:
  2336 ;;		line 14 in file "ds1307.c"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  sec             1   13[COMRAM] unsigned char 
  2341 ;; Return value:  Size  Location     Type
  2342 ;;                  1    wreg      void 
  2343 ;; Registers used:
  2344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2345 ;; Tracked objects:
  2346 ;;		On entry : 0/0
  2347 ;;		On exit  : 0/0
  2348 ;;		Unchanged: 0/0
  2349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2350 ;;      Params:         0       0       0       0       0       0       0       0       0
  2351 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2352 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2353 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2354 ;;Total ram usage:        3 bytes
  2355 ;; Hardware stack levels used: 1
  2356 ;; Hardware stack levels required when called: 3
  2357 ;; This function calls:
  2358 ;;		_I2C_Master_Read
  2359 ;;		_I2C_Master_RepeatedStart
  2360 ;;		_I2C_Master_Start
  2361 ;;		_I2C_Master_Stop
  2362 ;;		_I2C_Master_Write
  2363 ;;		_LCD_Clear
  2364 ;;		_LCD_String_xy
  2365 ;; This function is called by:
  2366 ;;		_main
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text2
  2371   001958                     __ptext2:
  2372                           	callstack 0
  2373   001958                     _RTC_Init:
  2374                           	callstack 27
  2375   001958                     
  2376                           ;ds1307.c: 15:     unsigned char sec;;ds1307.c: 17:     I2C_Master_Start();
  2377   001958  EC2E  F012         	call	_I2C_Master_Start	;wreg free
  2378                           
  2379                           ;ds1307.c: 18:     I2C_Master_Write(0b11010000);
  2380   00195C  0E00               	movlw	0
  2381   00195E  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2382   001960  0ED0               	movlw	208
  2383   001962  6E02               	movwf	I2C_Master_Write@d^0,c
  2384   001964  EC1F  F012         	call	_I2C_Master_Write	;wreg free
  2385                           
  2386                           ;ds1307.c: 19:     I2C_Master_Write(0x00);
  2387   001968  0E00               	movlw	0
  2388   00196A  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2389   00196C  0E00               	movlw	0
  2390   00196E  6E02               	movwf	I2C_Master_Write@d^0,c
  2391   001970  EC1F  F012         	call	_I2C_Master_Write	;wreg free
  2392                           
  2393                           ;ds1307.c: 20:     I2C_Master_RepeatedStart();
  2394   001974  EC32  F012         	call	_I2C_Master_RepeatedStart	;wreg free
  2395                           
  2396                           ;ds1307.c: 21:     I2C_Master_Write(0b11010000 | 1);
  2397   001978  0E00               	movlw	0
  2398   00197A  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2399   00197C  0ED1               	movlw	209
  2400   00197E  6E02               	movwf	I2C_Master_Write@d^0,c
  2401   001980  EC1F  F012         	call	_I2C_Master_Write	;wreg free
  2402                           
  2403                           ;ds1307.c: 22:     sec = I2C_Master_Read(0);
  2404   001984  0E00               	movlw	0
  2405   001986  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  2406   001988  0E00               	movlw	0
  2407   00198A  6E02               	movwf	I2C_Master_Read@a^0,c
  2408   00198C  EC5F  F011         	call	_I2C_Master_Read	;wreg free
  2409   001990  5002               	movf	?_I2C_Master_Read^0,w,c
  2410   001992  6E0E               	movwf	RTC_Init@sec^0,c
  2411                           
  2412                           ;ds1307.c: 23:     I2C_Master_Stop();
  2413   001994  EC2A  F012         	call	_I2C_Master_Stop	;wreg free
  2414   001998                     
  2415                           ;ds1307.c: 25:     if (sec & 0x80) {
  2416   001998  AE0E               	btfss	RTC_Init@sec^0,7,c
  2417   00199A  EFD1  F00C         	goto	u2761
  2418   00199E  EFD3  F00C         	goto	u2760
  2419   0019A2                     u2761:
  2420   0019A2  EF04  F00D         	goto	l240
  2421   0019A6                     u2760:
  2422   0019A6                     
  2423                           ;ds1307.c: 27:         LCD_Clear();
  2424   0019A6  EC26  F012         	call	_LCD_Clear	;wreg free
  2425   0019AA                     
  2426                           ;ds1307.c: 28:         LCD_String_xy(0, 0, "RTC detenido");
  2427   0019AA  0E00               	movlw	0
  2428   0019AC  6E05               	movwf	LCD_String_xy@pos^0,c
  2429   0019AE  0E5D               	movlw	low STR_19
  2430   0019B0  6E06               	movwf	LCD_String_xy@msg^0,c
  2431   0019B2  5006               	movf	LCD_String_xy@msg^0,w,c
  2432   0019B4  A4D8               	btfss	status,2,c
  2433   0019B6  0E08               	movlw	high __smallconst
  2434   0019B8  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2435   0019BA  0E00               	movlw	0
  2436   0019BC  EC2C  F010         	call	_LCD_String_xy
  2437   0019C0                     
  2438                           ;ds1307.c: 29:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  2439   0019C0  0E0B               	movlw	11
  2440   0019C2  6E0D               	movwf	(??_RTC_Init+1)^0,c
  2441   0019C4  0E26               	movlw	38
  2442   0019C6  6E0C               	movwf	??_RTC_Init^0,c
  2443   0019C8  0E5E               	movlw	94
  2444   0019CA                     u2827:
  2445   0019CA  2EE8               	decfsz	wreg,f,c
  2446   0019CC  D7FE               	bra	u2827
  2447   0019CE  2E0C               	decfsz	??_RTC_Init^0,f,c
  2448   0019D0  D7FC               	bra	u2827
  2449   0019D2  2E0D               	decfsz	(??_RTC_Init+1)^0,f,c
  2450   0019D4  D7FA               	bra	u2827
  2451   0019D6                     
  2452                           ;ds1307.c: 31:         I2C_Master_Start();
  2453   0019D6  EC2E  F012         	call	_I2C_Master_Start	;wreg free
  2454   0019DA                     
  2455                           ;ds1307.c: 32:         I2C_Master_Write(0b11010000);
  2456   0019DA  0E00               	movlw	0
  2457   0019DC  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2458   0019DE  0ED0               	movlw	208
  2459   0019E0  6E02               	movwf	I2C_Master_Write@d^0,c
  2460   0019E2  EC1F  F012         	call	_I2C_Master_Write	;wreg free
  2461   0019E6                     
  2462                           ;ds1307.c: 33:         I2C_Master_Write(0x00);
  2463   0019E6  0E00               	movlw	0
  2464   0019E8  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  2465   0019EA  0E00               	movlw	0
  2466   0019EC  6E02               	movwf	I2C_Master_Write@d^0,c
  2467   0019EE  EC1F  F012         	call	_I2C_Master_Write	;wreg free
  2468   0019F2                     
  2469                           ;ds1307.c: 34:         I2C_Master_Write(sec & 0x7F);
  2470   0019F2  C00E  F00C         	movff	RTC_Init@sec,??_RTC_Init
  2471   0019F6  0E7F               	movlw	127
  2472   0019F8  160C               	andwf	??_RTC_Init^0,f,c
  2473   0019FA  500C               	movf	??_RTC_Init^0,w,c
  2474   0019FC  6E02               	movwf	I2C_Master_Write@d^0,c
  2475   0019FE  6A03               	clrf	(I2C_Master_Write@d+1)^0,c
  2476   001A00  EC1F  F012         	call	_I2C_Master_Write	;wreg free
  2477   001A04                     
  2478                           ;ds1307.c: 35:         I2C_Master_Stop();
  2479   001A04  EC2A  F012         	call	_I2C_Master_Stop	;wreg free
  2480   001A08                     l240:
  2481   001A08  0012               	return		;funcret
  2482   001A0A                     __end_of_RTC_Init:
  2483                           	callstack 0
  2484                           
  2485 ;; *************** function _LCD_Clear *****************
  2486 ;; Defined at:
  2487 ;;		line 64 in file "LCD.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;		None
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;		None
  2492 ;; Return value:  Size  Location     Type
  2493 ;;                  1    wreg      void 
  2494 ;; Registers used:
  2495 ;;		wreg, status,2, status,0, cstack
  2496 ;; Tracked objects:
  2497 ;;		On entry : 0/0
  2498 ;;		On exit  : 0/0
  2499 ;;		Unchanged: 0/0
  2500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2501 ;;      Params:         0       0       0       0       0       0       0       0       0
  2502 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2503 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2504 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2505 ;;Total ram usage:        0 bytes
  2506 ;; Hardware stack levels used: 1
  2507 ;; Hardware stack levels required when called: 1
  2508 ;; This function calls:
  2509 ;;		_LCD_Command
  2510 ;; This function is called by:
  2511 ;;		_main
  2512 ;;		_RTC_Init
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text3
  2517   00244C                     __ptext3:
  2518                           	callstack 0
  2519   00244C                     _LCD_Clear:
  2520                           	callstack 28
  2521   00244C                     
  2522                           ;LCD.c: 65:     LCD_Command(0x01);
  2523   00244C  0E01               	movlw	1
  2524   00244E  ECB0  F010         	call	_LCD_Command
  2525   002452  0012               	return		;funcret
  2526   002454                     __end_of_LCD_Clear:
  2527                           	callstack 0
  2528                           
  2529 ;; *************** function _LCD_Init *****************
  2530 ;; Defined at:
  2531 ;;		line 3 in file "LCD.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;		None
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;		None
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, status,2, status,0, cstack
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2545 ;;      Params:         0       0       0       0       0       0       0       0       0
  2546 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2547 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2548 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2549 ;;Total ram usage:        1 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 1
  2552 ;; This function calls:
  2553 ;;		_LCD_Command
  2554 ;; This function is called by:
  2555 ;;		_main
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559                           	psect	text4
  2560   00235C                     __ptext4:
  2561                           	callstack 0
  2562   00235C                     _LCD_Init:
  2563                           	callstack 29
  2564   00235C                     
  2565                           ;LCD.c: 4:     TRISD = 0;
  2566   00235C  6A95               	clrf	149,c	;volatile
  2567   00235E                     
  2568                           ;LCD.c: 5:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2569   00235E  0E27               	movlw	39
  2570   002360  6E03               	movwf	??_LCD_Init^0,c
  2571   002362  0EF5               	movlw	245
  2572   002364                     u2837:
  2573   002364  2EE8               	decfsz	wreg,f,c
  2574   002366  D7FE               	bra	u2837
  2575   002368  2E03               	decfsz	??_LCD_Init^0,f,c
  2576   00236A  D7FC               	bra	u2837
  2577   00236C  0000               	nop	
  2578   00236E                     
  2579                           ;LCD.c: 6:     LCD_Command(0x02);
  2580   00236E  0E02               	movlw	2
  2581   002370  ECB0  F010         	call	_LCD_Command
  2582   002374                     
  2583                           ;LCD.c: 7:     LCD_Command(0x28);
  2584   002374  0E28               	movlw	40
  2585   002376  ECB0  F010         	call	_LCD_Command
  2586   00237A                     
  2587                           ;LCD.c: 8:     LCD_Command(0x01);
  2588   00237A  0E01               	movlw	1
  2589   00237C  ECB0  F010         	call	_LCD_Command
  2590   002380                     
  2591                           ;LCD.c: 9:     LCD_Command(0x0C);
  2592   002380  0E0C               	movlw	12
  2593   002382  ECB0  F010         	call	_LCD_Command
  2594   002386                     
  2595                           ;LCD.c: 10:     LCD_Command(0x06);
  2596   002386  0E06               	movlw	6
  2597   002388  ECB0  F010         	call	_LCD_Command
  2598   00238C  0012               	return		;funcret
  2599   00238E                     __end_of_LCD_Init:
  2600                           	callstack 0
  2601                           
  2602 ;; *************** function _I2C_Master_Init *****************
  2603 ;; Defined at:
  2604 ;;		line 4 in file "i2c.c"
  2605 ;; Parameters:    Size  Location     Type
  2606 ;;  c               4   13[COMRAM] const unsigned long 
  2607 ;; Auto vars:     Size  Location     Type
  2608 ;;		None
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  1    wreg      void 
  2611 ;; Registers used:
  2612 ;;		wreg, status,2, status,0, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2618 ;;      Params:         4       0       0       0       0       0       0       0       0
  2619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2620 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2621 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2622 ;;Total ram usage:        8 bytes
  2623 ;; Hardware stack levels used: 1
  2624 ;; Hardware stack levels required when called: 1
  2625 ;; This function calls:
  2626 ;;		___lldiv
  2627 ;; This function is called by:
  2628 ;;		_main
  2629 ;; This function uses a non-reentrant model
  2630 ;;
  2631                           
  2632                           	psect	text5
  2633   0020B4                     __ptext5:
  2634                           	callstack 0
  2635   0020B4                     _I2C_Master_Init:
  2636                           	callstack 29
  2637   0020B4                     
  2638                           ;i2c.c: 5:     TRISB0 = 1;
  2639   0020B4  8093               	bsf	3987,0,c	;volatile
  2640                           
  2641                           ;i2c.c: 6:     TRISB1 = 1;
  2642   0020B6  8293               	bsf	3987,1,c	;volatile
  2643   0020B8                     
  2644                           ;i2c.c: 7:     SSPCON1 = 0b00101000;
  2645   0020B8  0E28               	movlw	40
  2646   0020BA  6EC6               	movwf	198,c	;volatile
  2647   0020BC                     
  2648                           ;i2c.c: 8:     SSPCON2 = 0;
  2649   0020BC  6AC5               	clrf	197,c	;volatile
  2650   0020BE                     
  2651                           ;i2c.c: 9:     SSPADD = (8000000 / (4 * c)) - 1;
  2652   0020BE  0E00               	movlw	0
  2653   0020C0  6E01               	movwf	___lldiv@dividend^0,c
  2654   0020C2  0E12               	movlw	18
  2655   0020C4  6E02               	movwf	(___lldiv@dividend+1)^0,c
  2656   0020C6  0E7A               	movlw	122
  2657   0020C8  6E03               	movwf	(___lldiv@dividend+2)^0,c
  2658   0020CA  0E00               	movlw	0
  2659   0020CC  6E04               	movwf	(___lldiv@dividend+3)^0,c
  2660   0020CE  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  2661   0020D2  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  2662   0020D6  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  2663   0020DA  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  2664   0020DE  0E02               	movlw	2
  2665   0020E0                     u2755:
  2666   0020E0  90D8               	bcf	status,0,c
  2667   0020E2  3612               	rlcf	??_I2C_Master_Init^0,f,c
  2668   0020E4  3613               	rlcf	(??_I2C_Master_Init+1)^0,f,c
  2669   0020E6  3614               	rlcf	(??_I2C_Master_Init+2)^0,f,c
  2670   0020E8  3615               	rlcf	(??_I2C_Master_Init+3)^0,f,c
  2671   0020EA  2EE8               	decfsz	wreg,f,c
  2672   0020EC  EF70  F010         	goto	u2755
  2673   0020F0  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  2674   0020F4  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  2675   0020F8  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  2676   0020FC  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  2677   002100  ECB1  F00D         	call	___lldiv	;wreg free
  2678   002104  0401               	decf	?___lldiv^0,w,c
  2679   002106  6EC8               	movwf	200,c	;volatile
  2680   002108                     
  2681                           ;i2c.c: 10:     SSPSTAT = 0;
  2682   002108  6AC7               	clrf	199,c	;volatile
  2683   00210A  0012               	return		;funcret
  2684   00210C                     __end_of_I2C_Master_Init:
  2685                           	callstack 0
  2686                           
  2687 ;; *************** function ___lldiv *****************
  2688 ;; Defined at:
  2689 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__lldiv.c"
  2690 ;; Parameters:    Size  Location     Type
  2691 ;;  dividend        4    0[COMRAM] unsigned long 
  2692 ;;  divisor         4    4[COMRAM] unsigned long 
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  quotient        4    8[COMRAM] unsigned long 
  2695 ;;  counter         1   12[COMRAM] unsigned char 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  4    0[COMRAM] unsigned long 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2, status,0
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2705 ;;      Params:         8       0       0       0       0       0       0       0       0
  2706 ;;      Locals:         5       0       0       0       0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2708 ;;      Totals:        13       0       0       0       0       0       0       0       0
  2709 ;;Total ram usage:       13 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; This function calls:
  2712 ;;		Nothing
  2713 ;; This function is called by:
  2714 ;;		_I2C_Master_Init
  2715 ;; This function uses a non-reentrant model
  2716 ;;
  2717                           
  2718                           	psect	text6
  2719   001B62                     __ptext6:
  2720                           	callstack 0
  2721   001B62                     ___lldiv:
  2722                           	callstack 29
  2723   001B62  0E00               	movlw	0
  2724   001B64  6E09               	movwf	___lldiv@quotient^0,c
  2725   001B66  0E00               	movlw	0
  2726   001B68  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  2727   001B6A  0E00               	movlw	0
  2728   001B6C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  2729   001B6E  0E00               	movlw	0
  2730   001B70  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  2731   001B72  5005               	movf	___lldiv@divisor^0,w,c
  2732   001B74  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  2733   001B76  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  2734   001B78  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  2735   001B7A  B4D8               	btfsc	status,2,c
  2736   001B7C  EFC2  F00D         	goto	u2671
  2737   001B80  EFC4  F00D         	goto	u2670
  2738   001B84                     u2671:
  2739   001B84  EFFA  F00D         	goto	l328
  2740   001B88                     u2670:
  2741   001B88  0E01               	movlw	1
  2742   001B8A  6E0D               	movwf	___lldiv@counter^0,c
  2743   001B8C  EFCE  F00D         	goto	l2903
  2744   001B90                     l2901:
  2745   001B90  90D8               	bcf	status,0,c
  2746   001B92  3605               	rlcf	___lldiv@divisor^0,f,c
  2747   001B94  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  2748   001B96  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  2749   001B98  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  2750   001B9A  2A0D               	incf	___lldiv@counter^0,f,c
  2751   001B9C                     l2903:
  2752   001B9C  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  2753   001B9E  EFD3  F00D         	goto	u2681
  2754   001BA2  EFD5  F00D         	goto	u2680
  2755   001BA6                     u2681:
  2756   001BA6  EFC8  F00D         	goto	l2901
  2757   001BAA                     u2680:
  2758   001BAA                     l2905:
  2759   001BAA  90D8               	bcf	status,0,c
  2760   001BAC  3609               	rlcf	___lldiv@quotient^0,f,c
  2761   001BAE  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  2762   001BB0  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  2763   001BB2  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  2764   001BB4  5005               	movf	___lldiv@divisor^0,w,c
  2765   001BB6  5C01               	subwf	___lldiv@dividend^0,w,c
  2766   001BB8  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2767   001BBA  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  2768   001BBC  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2769   001BBE  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  2770   001BC0  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2771   001BC2  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  2772   001BC4  A0D8               	btfss	status,0,c
  2773   001BC6  EFE7  F00D         	goto	u2691
  2774   001BCA  EFE9  F00D         	goto	u2690
  2775   001BCE                     u2691:
  2776   001BCE  EFF2  F00D         	goto	l2913
  2777   001BD2                     u2690:
  2778   001BD2  5005               	movf	___lldiv@divisor^0,w,c
  2779   001BD4  5E01               	subwf	___lldiv@dividend^0,f,c
  2780   001BD6  5006               	movf	(___lldiv@divisor+1)^0,w,c
  2781   001BD8  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  2782   001BDA  5007               	movf	(___lldiv@divisor+2)^0,w,c
  2783   001BDC  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  2784   001BDE  5008               	movf	(___lldiv@divisor+3)^0,w,c
  2785   001BE0  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  2786   001BE2  8009               	bsf	___lldiv@quotient^0,0,c
  2787   001BE4                     l2913:
  2788   001BE4  90D8               	bcf	status,0,c
  2789   001BE6  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  2790   001BE8  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  2791   001BEA  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  2792   001BEC  3205               	rrcf	___lldiv@divisor^0,f,c
  2793   001BEE  2E0D               	decfsz	___lldiv@counter^0,f,c
  2794   001BF0  EFD5  F00D         	goto	l2905
  2795   001BF4                     l328:
  2796   001BF4  C009  F001         	movff	___lldiv@quotient,?___lldiv
  2797   001BF8  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  2798   001BFC  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  2799   001C00  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  2800   001C04  0012               	return		;funcret
  2801   001C06                     __end_of___lldiv:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _GPS_Init *****************
  2805 ;; Defined at:
  2806 ;;		line 6 in file "GPS.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;  dummy           1    0[COMRAM] volatile unsigned char 
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2820 ;;      Params:         0       0       0       0       0       0       0       0       0
  2821 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2823 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2824 ;;Total ram usage:        1 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; This function calls:
  2827 ;;		Nothing
  2828 ;; This function is called by:
  2829 ;;		_main
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           	psect	text7
  2834   0023BC                     __ptext7:
  2835                           	callstack 0
  2836   0023BC                     _GPS_Init:
  2837                           	callstack 30
  2838   0023BC                     
  2839                           ;GPS.c: 7:     TRISC7 = 1;
  2840   0023BC  8E94               	bsf	3988,7,c	;volatile
  2841   0023BE                     
  2842                           ;GPS.c: 10:     BAUDCON = 0x08;
  2843   0023BE  0E08               	movlw	8
  2844   0023C0  6EB8               	movwf	184,c	;volatile
  2845                           
  2846                           ;GPS.c: 11:     TXSTA = 0x24;
  2847   0023C2  0E24               	movlw	36
  2848   0023C4  6EAC               	movwf	172,c	;volatile
  2849                           
  2850                           ;GPS.c: 12:     RCSTA = 0x90;
  2851   0023C6  0E90               	movlw	144
  2852   0023C8  6EAB               	movwf	171,c	;volatile
  2853                           
  2854                           ;GPS.c: 13:     SPBRG = 207;
  2855   0023CA  0ECF               	movlw	207
  2856   0023CC  6EAF               	movwf	175,c	;volatile
  2857                           
  2858                           ;GPS.c: 16:     while(PIR1bits.RCIF) {
  2859   0023CE  EFEB  F011         	goto	l129
  2860   0023D2                     l130:
  2861                           
  2862                           ;GPS.c: 17:         volatile char dummy = RCREG;
  2863   0023D2  CFAE F001          	movff	4014,GPS_Init@dummy	;volatile
  2864   0023D6                     l129:
  2865                           
  2866                           ;GPS.c: 16:     while(PIR1bits.RCIF) {
  2867   0023D6  BA9E               	btfsc	158,5,c	;volatile
  2868   0023D8  EFF0  F011         	goto	u1371
  2869   0023DC  EFF2  F011         	goto	u1370
  2870   0023E0                     u1371:
  2871   0023E0  EFE9  F011         	goto	l130
  2872   0023E4                     u1370:
  2873   0023E4                     
  2874                           ;GPS.c: 20:     PIR1bits.RCIF = 0;
  2875   0023E4  9A9E               	bcf	158,5,c	;volatile
  2876   0023E6  0012               	return		;funcret
  2877   0023E8                     __end_of_GPS_Init:
  2878                           	callstack 0
  2879                           
  2880 ;; *************** function _Display_RTC *****************
  2881 ;; Defined at:
  2882 ;;		line 94 in file "main.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;		None
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;  year            1   75[COMRAM] unsigned char 
  2887 ;;  mon             1   74[COMRAM] unsigned char 
  2888 ;;  day             1   73[COMRAM] unsigned char 
  2889 ;;  s               1   72[COMRAM] unsigned char 
  2890 ;;  m               1   71[COMRAM] unsigned char 
  2891 ;;  h               1   70[COMRAM] unsigned char 
  2892 ;;  refresh_coun    1   69[COMRAM] char 
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2902 ;;      Params:         0       0       0       0       0       0       0       0       0
  2903 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2904 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2905 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2906 ;;Total ram usage:        9 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 8
  2909 ;; This function calls:
  2910 ;;		_Clear_Line
  2911 ;;		_LCD_String_xy
  2912 ;;		_RTC_GetDateTime
  2913 ;;		_sprintf
  2914 ;; This function is called by:
  2915 ;;		_main
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text8
  2920   001656                     __ptext8:
  2921                           	callstack 0
  2922   001656                     _Display_RTC:
  2923                           	callstack 22
  2924   001656                     
  2925                           ;main.c: 95:     unsigned char h, m, s, day, mon, year;;main.c: 96:     int8_t refresh_c
      +                          ount = 0;
  2926   001656  6A46               	clrf	Display_RTC@refresh_count^0,c
  2927                           
  2928                           ;main.c: 98:     while (refresh_count < 5) {
  2929   001658  EF82  F00B         	goto	l2965
  2930   00165C                     l2947:
  2931                           
  2932                           ;main.c: 100:         RTC_GetDateTime(&h, &m, &s, &day, &mon, &year);
  2933   00165C  0E47               	movlw	low Display_RTC@h
  2934   00165E  6E06               	movwf	RTC_GetDateTime@hour^0,c
  2935   001660  0E48               	movlw	low Display_RTC@m
  2936   001662  6E07               	movwf	RTC_GetDateTime@min^0,c
  2937   001664  0E49               	movlw	low Display_RTC@s
  2938   001666  6E08               	movwf	RTC_GetDateTime@sec^0,c
  2939   001668  0E4A               	movlw	low Display_RTC@day
  2940   00166A  6E09               	movwf	RTC_GetDateTime@day^0,c
  2941   00166C  0E4B               	movlw	low Display_RTC@mon
  2942   00166E  6E0A               	movwf	RTC_GetDateTime@month^0,c
  2943   001670  0E4C               	movlw	low Display_RTC@year
  2944   001672  6E0B               	movwf	RTC_GetDateTime@year^0,c
  2945   001674  EC57  F00A         	call	_RTC_GetDateTime	;wreg free
  2946   001678                     
  2947                           ;main.c: 103:         Clear_Line(0);
  2948   001678  0E00               	movlw	0
  2949   00167A  EC07  F012         	call	_Clear_Line
  2950   00167E                     
  2951                           ;main.c: 104:         sprintf(lcd_buffer, "Fecha:%02d/%02d/20%02d", day, mon, year);
  2952   00167E  0E7D               	movlw	low _lcd_buffer
  2953   001680  6E2F               	movwf	sprintf@s^0,c
  2954   001682  0E01               	movlw	high _lcd_buffer
  2955   001684  6E30               	movwf	(sprintf@s+1)^0,c
  2956   001686  0E01               	movlw	low STR_12
  2957   001688  6E31               	movwf	sprintf@fmt^0,c
  2958   00168A  C04A  F032         	movff	Display_RTC@day,?_sprintf+3
  2959   00168E  6A33               	clrf	(?_sprintf+4)^0,c
  2960   001690  C04B  F034         	movff	Display_RTC@mon,?_sprintf+5
  2961   001694  6A35               	clrf	(?_sprintf+6)^0,c
  2962   001696  C04C  F036         	movff	Display_RTC@year,?_sprintf+7
  2963   00169A  6A37               	clrf	(?_sprintf+8)^0,c
  2964   00169C  EC23  F011         	call	_sprintf	;wreg free
  2965   0016A0                     
  2966                           ;main.c: 105:         LCD_String_xy(0, 0, lcd_buffer);
  2967   0016A0  0E00               	movlw	0
  2968   0016A2  6E05               	movwf	LCD_String_xy@pos^0,c
  2969   0016A4  0E7D               	movlw	low _lcd_buffer
  2970   0016A6  6E06               	movwf	LCD_String_xy@msg^0,c
  2971   0016A8  0E01               	movlw	high _lcd_buffer
  2972   0016AA  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2973   0016AC  0E00               	movlw	0
  2974   0016AE  EC2C  F010         	call	_LCD_String_xy
  2975   0016B2                     
  2976                           ;main.c: 108:         Clear_Line(1);
  2977   0016B2  0E01               	movlw	1
  2978   0016B4  EC07  F012         	call	_Clear_Line
  2979   0016B8                     
  2980                           ;main.c: 109:         sprintf(lcd_buffer, "Hora: %02d:%02d:%02d", h, m, s);
  2981   0016B8  0E7D               	movlw	low _lcd_buffer
  2982   0016BA  6E2F               	movwf	sprintf@s^0,c
  2983   0016BC  0E01               	movlw	high _lcd_buffer
  2984   0016BE  6E30               	movwf	(sprintf@s+1)^0,c
  2985   0016C0  0E18               	movlw	low STR_13
  2986   0016C2  6E31               	movwf	sprintf@fmt^0,c
  2987   0016C4  C047  F032         	movff	Display_RTC@h,?_sprintf+3
  2988   0016C8  6A33               	clrf	(?_sprintf+4)^0,c
  2989   0016CA  C048  F034         	movff	Display_RTC@m,?_sprintf+5
  2990   0016CE  6A35               	clrf	(?_sprintf+6)^0,c
  2991   0016D0  C049  F036         	movff	Display_RTC@s,?_sprintf+7
  2992   0016D4  6A37               	clrf	(?_sprintf+8)^0,c
  2993   0016D6  EC23  F011         	call	_sprintf	;wreg free
  2994   0016DA                     
  2995                           ;main.c: 110:         LCD_String_xy(1, 0, lcd_buffer);
  2996   0016DA  0E00               	movlw	0
  2997   0016DC  6E05               	movwf	LCD_String_xy@pos^0,c
  2998   0016DE  0E7D               	movlw	low _lcd_buffer
  2999   0016E0  6E06               	movwf	LCD_String_xy@msg^0,c
  3000   0016E2  0E01               	movlw	high _lcd_buffer
  3001   0016E4  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3002   0016E6  0E01               	movlw	1
  3003   0016E8  EC2C  F010         	call	_LCD_String_xy
  3004   0016EC                     
  3005                           ;main.c: 112:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3006   0016EC  0E0B               	movlw	11
  3007   0016EE  6E45               	movwf	(??_Display_RTC+1)^0,c
  3008   0016F0  0E26               	movlw	38
  3009   0016F2  6E44               	movwf	??_Display_RTC^0,c
  3010   0016F4  0E5E               	movlw	94
  3011   0016F6                     u2847:
  3012   0016F6  2EE8               	decfsz	wreg,f,c
  3013   0016F8  D7FE               	bra	u2847
  3014   0016FA  2E44               	decfsz	??_Display_RTC^0,f,c
  3015   0016FC  D7FC               	bra	u2847
  3016   0016FE  2E45               	decfsz	(??_Display_RTC+1)^0,f,c
  3017   001700  D7FA               	bra	u2847
  3018   001702                     
  3019                           ;main.c: 113:         refresh_count++;
  3020   001702  2A46               	incf	Display_RTC@refresh_count^0,f,c
  3021   001704                     l2965:
  3022                           
  3023                           ;main.c: 98:     while (refresh_count < 5) {
  3024   001704  5046               	movf	Display_RTC@refresh_count^0,w,c
  3025   001706  0A80               	xorlw	128
  3026   001708  0F7B               	addlw	-133
  3027   00170A  A0D8               	btfss	status,0,c
  3028   00170C  EF8A  F00B         	goto	u2741
  3029   001710  EF8C  F00B         	goto	u2740
  3030   001714                     u2741:
  3031   001714  EF2E  F00B         	goto	l2947
  3032   001718                     u2740:
  3033   001718  0012               	return		;funcret
  3034   00171A                     __end_of_Display_RTC:
  3035                           	callstack 0
  3036                           
  3037 ;; *************** function _RTC_GetDateTime *****************
  3038 ;; Defined at:
  3039 ;;		line 63 in file "ds1307.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  hour            1    5[COMRAM] PTR unsigned char 
  3042 ;;		 -> Display_RTC@h(1), 
  3043 ;;  min             1    6[COMRAM] PTR unsigned char 
  3044 ;;		 -> Display_RTC@m(1), 
  3045 ;;  sec             1    7[COMRAM] PTR unsigned char 
  3046 ;;		 -> Display_RTC@s(1), 
  3047 ;;  day             1    8[COMRAM] PTR unsigned char 
  3048 ;;		 -> Display_RTC@day(1), 
  3049 ;;  month           1    9[COMRAM] PTR unsigned char 
  3050 ;;		 -> Display_RTC@mon(1), 
  3051 ;;  year            1   10[COMRAM] PTR unsigned char 
  3052 ;;		 -> Display_RTC@year(1), 
  3053 ;; Auto vars:     Size  Location     Type
  3054 ;;		None
  3055 ;; Return value:  Size  Location     Type
  3056 ;;                  1    wreg      void 
  3057 ;; Registers used:
  3058 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3059 ;; Tracked objects:
  3060 ;;		On entry : 0/0
  3061 ;;		On exit  : 0/0
  3062 ;;		Unchanged: 0/0
  3063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3064 ;;      Params:         6       0       0       0       0       0       0       0       0
  3065 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3067 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3068 ;;Total ram usage:        6 bytes
  3069 ;; Hardware stack levels used: 1
  3070 ;; Hardware stack levels required when called: 2
  3071 ;; This function calls:
  3072 ;;		_BCD2DEC
  3073 ;;		_I2C_Master_Read
  3074 ;;		_I2C_Master_RepeatedStart
  3075 ;;		_I2C_Master_Start
  3076 ;;		_I2C_Master_Stop
  3077 ;;		_I2C_Master_Write
  3078 ;; This function is called by:
  3079 ;;		_Display_RTC
  3080 ;; This function uses a non-reentrant model
  3081 ;;
  3082                           
  3083                           	psect	text9
  3084   0014AE                     __ptext9:
  3085                           	callstack 0
  3086   0014AE                     _RTC_GetDateTime:
  3087                           	callstack 27
  3088   0014AE                     
  3089                           ;ds1307.c: 63: void RTC_GetDateTime(unsigned char *hour, unsigned char *min, unsigned ch
      +                          ar *sec,;ds1307.c: 64:                      unsigned char *day, unsigned char *month, un
      +                          signed char *year) {;ds1307.c: 65:     I2C_Master_Start();
  3090   0014AE  EC2E  F012         	call	_I2C_Master_Start	;wreg free
  3091                           
  3092                           ;ds1307.c: 66:     I2C_Master_Write(0b11010000);
  3093   0014B2  0E00               	movlw	0
  3094   0014B4  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  3095   0014B6  0ED0               	movlw	208
  3096   0014B8  6E02               	movwf	I2C_Master_Write@d^0,c
  3097   0014BA  EC1F  F012         	call	_I2C_Master_Write	;wreg free
  3098                           
  3099                           ;ds1307.c: 67:     I2C_Master_Write(0b00000000);
  3100   0014BE  0E00               	movlw	0
  3101   0014C0  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  3102   0014C2  0E00               	movlw	0
  3103   0014C4  6E02               	movwf	I2C_Master_Write@d^0,c
  3104   0014C6  EC1F  F012         	call	_I2C_Master_Write	;wreg free
  3105                           
  3106                           ;ds1307.c: 68:     I2C_Master_RepeatedStart();
  3107   0014CA  EC32  F012         	call	_I2C_Master_RepeatedStart	;wreg free
  3108                           
  3109                           ;ds1307.c: 69:     I2C_Master_Write(0b11010000 | 1);
  3110   0014CE  0E00               	movlw	0
  3111   0014D0  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  3112   0014D2  0ED1               	movlw	209
  3113   0014D4  6E02               	movwf	I2C_Master_Write@d^0,c
  3114   0014D6  EC1F  F012         	call	_I2C_Master_Write	;wreg free
  3115   0014DA                     
  3116                           ;ds1307.c: 71:     *sec = BCD2DEC(I2C_Master_Read(1));
  3117   0014DA  5008               	movf	RTC_GetDateTime@sec^0,w,c
  3118   0014DC  6ED9               	movwf	fsr2l,c
  3119   0014DE  6ADA               	clrf	fsr2h,c
  3120   0014E0  0E00               	movlw	0
  3121   0014E2  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3122   0014E4  0E01               	movlw	1
  3123   0014E6  6E02               	movwf	I2C_Master_Read@a^0,c
  3124   0014E8  EC5F  F011         	call	_I2C_Master_Read	;wreg free
  3125   0014EC  5002               	movf	?_I2C_Master_Read^0,w,c
  3126   0014EE  EC14  F012         	call	_BCD2DEC
  3127   0014F2  6EDF               	movwf	indf2,c
  3128   0014F4                     
  3129                           ;ds1307.c: 72:     *min = BCD2DEC(I2C_Master_Read(1));
  3130   0014F4  5007               	movf	RTC_GetDateTime@min^0,w,c
  3131   0014F6  6ED9               	movwf	fsr2l,c
  3132   0014F8  6ADA               	clrf	fsr2h,c
  3133   0014FA  0E00               	movlw	0
  3134   0014FC  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3135   0014FE  0E01               	movlw	1
  3136   001500  6E02               	movwf	I2C_Master_Read@a^0,c
  3137   001502  EC5F  F011         	call	_I2C_Master_Read	;wreg free
  3138   001506  5002               	movf	?_I2C_Master_Read^0,w,c
  3139   001508  EC14  F012         	call	_BCD2DEC
  3140   00150C  6EDF               	movwf	indf2,c
  3141   00150E                     
  3142                           ;ds1307.c: 73:     *hour = BCD2DEC(I2C_Master_Read(1));
  3143   00150E  5006               	movf	RTC_GetDateTime@hour^0,w,c
  3144   001510  6ED9               	movwf	fsr2l,c
  3145   001512  6ADA               	clrf	fsr2h,c
  3146   001514  0E00               	movlw	0
  3147   001516  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3148   001518  0E01               	movlw	1
  3149   00151A  6E02               	movwf	I2C_Master_Read@a^0,c
  3150   00151C  EC5F  F011         	call	_I2C_Master_Read	;wreg free
  3151   001520  5002               	movf	?_I2C_Master_Read^0,w,c
  3152   001522  EC14  F012         	call	_BCD2DEC
  3153   001526  6EDF               	movwf	indf2,c
  3154   001528                     
  3155                           ;ds1307.c: 74:     I2C_Master_Read(1);
  3156   001528  0E00               	movlw	0
  3157   00152A  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3158   00152C  0E01               	movlw	1
  3159   00152E  6E02               	movwf	I2C_Master_Read@a^0,c
  3160   001530  EC5F  F011         	call	_I2C_Master_Read	;wreg free
  3161                           
  3162                           ;ds1307.c: 75:     *day = BCD2DEC(I2C_Master_Read(1));
  3163   001534  5009               	movf	RTC_GetDateTime@day^0,w,c
  3164   001536  6ED9               	movwf	fsr2l,c
  3165   001538  6ADA               	clrf	fsr2h,c
  3166   00153A  0E00               	movlw	0
  3167   00153C  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3168   00153E  0E01               	movlw	1
  3169   001540  6E02               	movwf	I2C_Master_Read@a^0,c
  3170   001542  EC5F  F011         	call	_I2C_Master_Read	;wreg free
  3171   001546  5002               	movf	?_I2C_Master_Read^0,w,c
  3172   001548  EC14  F012         	call	_BCD2DEC
  3173   00154C  6EDF               	movwf	indf2,c
  3174                           
  3175                           ;ds1307.c: 76:     *month = BCD2DEC(I2C_Master_Read(1));
  3176   00154E  500A               	movf	RTC_GetDateTime@month^0,w,c
  3177   001550  6ED9               	movwf	fsr2l,c
  3178   001552  6ADA               	clrf	fsr2h,c
  3179   001554  0E00               	movlw	0
  3180   001556  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3181   001558  0E01               	movlw	1
  3182   00155A  6E02               	movwf	I2C_Master_Read@a^0,c
  3183   00155C  EC5F  F011         	call	_I2C_Master_Read	;wreg free
  3184   001560  5002               	movf	?_I2C_Master_Read^0,w,c
  3185   001562  EC14  F012         	call	_BCD2DEC
  3186   001566  6EDF               	movwf	indf2,c
  3187                           
  3188                           ;ds1307.c: 77:     *year = BCD2DEC(I2C_Master_Read(0));
  3189   001568  500B               	movf	RTC_GetDateTime@year^0,w,c
  3190   00156A  6ED9               	movwf	fsr2l,c
  3191   00156C  6ADA               	clrf	fsr2h,c
  3192   00156E  0E00               	movlw	0
  3193   001570  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3194   001572  0E00               	movlw	0
  3195   001574  6E02               	movwf	I2C_Master_Read@a^0,c
  3196   001576  EC5F  F011         	call	_I2C_Master_Read	;wreg free
  3197   00157A  5002               	movf	?_I2C_Master_Read^0,w,c
  3198   00157C  EC14  F012         	call	_BCD2DEC
  3199   001580  6EDF               	movwf	indf2,c
  3200   001582                     
  3201                           ;ds1307.c: 78:     I2C_Master_Stop();
  3202   001582  EC2A  F012         	call	_I2C_Master_Stop	;wreg free
  3203   001586  0012               	return		;funcret
  3204   001588                     __end_of_RTC_GetDateTime:
  3205                           	callstack 0
  3206                           
  3207 ;; *************** function _I2C_Master_Write *****************
  3208 ;; Defined at:
  3209 ;;		line 32 in file "i2c.c"
  3210 ;; Parameters:    Size  Location     Type
  3211 ;;  d               2    1[COMRAM] unsigned int 
  3212 ;; Auto vars:     Size  Location     Type
  3213 ;;		None
  3214 ;; Return value:  Size  Location     Type
  3215 ;;                  1    wreg      unsigned char 
  3216 ;; Registers used:
  3217 ;;		wreg, status,2, status,0, cstack
  3218 ;; Tracked objects:
  3219 ;;		On entry : 0/0
  3220 ;;		On exit  : 0/0
  3221 ;;		Unchanged: 0/0
  3222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3223 ;;      Params:         2       0       0       0       0       0       0       0       0
  3224 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3226 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3227 ;;Total ram usage:        2 bytes
  3228 ;; Hardware stack levels used: 1
  3229 ;; Hardware stack levels required when called: 1
  3230 ;; This function calls:
  3231 ;;		_I2C_Master_Wait
  3232 ;; This function is called by:
  3233 ;;		_RTC_Init
  3234 ;;		_RTC_GetDateTime
  3235 ;;		_RTC_SetDateTime
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text10
  3240   00243E                     __ptext10:
  3241                           	callstack 0
  3242   00243E                     _I2C_Master_Write:
  3243                           	callstack 28
  3244   00243E                     
  3245                           ;i2c.c: 33:     I2C_Master_Wait();
  3246   00243E  ECF4  F011         	call	_I2C_Master_Wait	;wreg free
  3247   002442                     
  3248                           ;i2c.c: 34:     SSPBUF = d;
  3249   002442  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  3250                           
  3251                           ;i2c.c: 35:     I2C_Master_Wait();
  3252   002446  ECF4  F011         	call	_I2C_Master_Wait	;wreg free
  3253   00244A  0012               	return		;funcret
  3254   00244C                     __end_of_I2C_Master_Write:
  3255                           	callstack 0
  3256                           
  3257 ;; *************** function _I2C_Master_Stop *****************
  3258 ;; Defined at:
  3259 ;;		line 27 in file "i2c.c"
  3260 ;; Parameters:    Size  Location     Type
  3261 ;;		None
  3262 ;; Auto vars:     Size  Location     Type
  3263 ;;		None
  3264 ;; Return value:  Size  Location     Type
  3265 ;;                  1    wreg      void 
  3266 ;; Registers used:
  3267 ;;		wreg, status,2, status,0, cstack
  3268 ;; Tracked objects:
  3269 ;;		On entry : 0/0
  3270 ;;		On exit  : 0/0
  3271 ;;		Unchanged: 0/0
  3272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3273 ;;      Params:         0       0       0       0       0       0       0       0       0
  3274 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3276 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3277 ;;Total ram usage:        0 bytes
  3278 ;; Hardware stack levels used: 1
  3279 ;; Hardware stack levels required when called: 1
  3280 ;; This function calls:
  3281 ;;		_I2C_Master_Wait
  3282 ;; This function is called by:
  3283 ;;		_RTC_Init
  3284 ;;		_RTC_GetDateTime
  3285 ;;		_RTC_SetDateTime
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text11
  3290   002454                     __ptext11:
  3291                           	callstack 0
  3292   002454                     _I2C_Master_Stop:
  3293                           	callstack 28
  3294   002454                     
  3295                           ;i2c.c: 28:     I2C_Master_Wait();
  3296   002454  ECF4  F011         	call	_I2C_Master_Wait	;wreg free
  3297   002458                     
  3298                           ;i2c.c: 29:     PEN = 1;
  3299   002458  84C5               	bsf	4037,2,c	;volatile
  3300   00245A  0012               	return		;funcret
  3301   00245C                     __end_of_I2C_Master_Stop:
  3302                           	callstack 0
  3303                           
  3304 ;; *************** function _I2C_Master_Start *****************
  3305 ;; Defined at:
  3306 ;;		line 17 in file "i2c.c"
  3307 ;; Parameters:    Size  Location     Type
  3308 ;;		None
  3309 ;; Auto vars:     Size  Location     Type
  3310 ;;		None
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  1    wreg      void 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0, cstack
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3320 ;;      Params:         0       0       0       0       0       0       0       0       0
  3321 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3323 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3324 ;;Total ram usage:        0 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; Hardware stack levels required when called: 1
  3327 ;; This function calls:
  3328 ;;		_I2C_Master_Wait
  3329 ;; This function is called by:
  3330 ;;		_RTC_Init
  3331 ;;		_RTC_GetDateTime
  3332 ;;		_RTC_SetDateTime
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text12
  3337   00245C                     __ptext12:
  3338                           	callstack 0
  3339   00245C                     _I2C_Master_Start:
  3340                           	callstack 28
  3341   00245C                     
  3342                           ;i2c.c: 18:     I2C_Master_Wait();
  3343   00245C  ECF4  F011         	call	_I2C_Master_Wait	;wreg free
  3344   002460                     
  3345                           ;i2c.c: 19:     SEN = 1;
  3346   002460  80C5               	bsf	4037,0,c	;volatile
  3347   002462  0012               	return		;funcret
  3348   002464                     __end_of_I2C_Master_Start:
  3349                           	callstack 0
  3350                           
  3351 ;; *************** function _I2C_Master_RepeatedStart *****************
  3352 ;; Defined at:
  3353 ;;		line 22 in file "i2c.c"
  3354 ;; Parameters:    Size  Location     Type
  3355 ;;		None
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;		None
  3358 ;; Return value:  Size  Location     Type
  3359 ;;                  1    wreg      void 
  3360 ;; Registers used:
  3361 ;;		wreg, status,2, status,0, cstack
  3362 ;; Tracked objects:
  3363 ;;		On entry : 0/0
  3364 ;;		On exit  : 0/0
  3365 ;;		Unchanged: 0/0
  3366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3367 ;;      Params:         0       0       0       0       0       0       0       0       0
  3368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3369 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3370 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3371 ;;Total ram usage:        0 bytes
  3372 ;; Hardware stack levels used: 1
  3373 ;; Hardware stack levels required when called: 1
  3374 ;; This function calls:
  3375 ;;		_I2C_Master_Wait
  3376 ;; This function is called by:
  3377 ;;		_RTC_Init
  3378 ;;		_RTC_GetDateTime
  3379 ;; This function uses a non-reentrant model
  3380 ;;
  3381                           
  3382                           	psect	text13
  3383   002464                     __ptext13:
  3384                           	callstack 0
  3385   002464                     _I2C_Master_RepeatedStart:
  3386                           	callstack 28
  3387   002464                     
  3388                           ;i2c.c: 23:     I2C_Master_Wait();
  3389   002464  ECF4  F011         	call	_I2C_Master_Wait	;wreg free
  3390   002468                     
  3391                           ;i2c.c: 24:     RSEN = 1;
  3392   002468  82C5               	bsf	4037,1,c	;volatile
  3393   00246A  0012               	return		;funcret
  3394   00246C                     __end_of_I2C_Master_RepeatedStart:
  3395                           	callstack 0
  3396                           
  3397 ;; *************** function _I2C_Master_Read *****************
  3398 ;; Defined at:
  3399 ;;		line 39 in file "i2c.c"
  3400 ;; Parameters:    Size  Location     Type
  3401 ;;  a               2    1[COMRAM] unsigned short 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  temp            2    3[COMRAM] unsigned short 
  3404 ;; Return value:  Size  Location     Type
  3405 ;;                  2    1[COMRAM] unsigned short 
  3406 ;; Registers used:
  3407 ;;		wreg, status,2, status,0, cstack
  3408 ;; Tracked objects:
  3409 ;;		On entry : 0/0
  3410 ;;		On exit  : 0/0
  3411 ;;		Unchanged: 0/0
  3412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3413 ;;      Params:         2       0       0       0       0       0       0       0       0
  3414 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3416 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3417 ;;Total ram usage:        4 bytes
  3418 ;; Hardware stack levels used: 1
  3419 ;; Hardware stack levels required when called: 1
  3420 ;; This function calls:
  3421 ;;		_I2C_Master_Wait
  3422 ;; This function is called by:
  3423 ;;		_RTC_Init
  3424 ;;		_RTC_GetDateTime
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           	psect	text14
  3429   0022BE                     __ptext14:
  3430                           	callstack 0
  3431   0022BE                     _I2C_Master_Read:
  3432                           	callstack 28
  3433   0022BE                     
  3434                           ;i2c.c: 40:     unsigned short temp;;i2c.c: 41:     I2C_Master_Wait();
  3435   0022BE  ECF4  F011         	call	_I2C_Master_Wait	;wreg free
  3436   0022C2                     
  3437                           ;i2c.c: 42:     RCEN = 1;
  3438   0022C2  86C5               	bsf	4037,3,c	;volatile
  3439                           
  3440                           ;i2c.c: 43:     I2C_Master_Wait();
  3441   0022C4  ECF4  F011         	call	_I2C_Master_Wait	;wreg free
  3442   0022C8                     
  3443                           ;i2c.c: 44:     temp = SSPBUF;
  3444   0022C8  CFC9 F004          	movff	4041,I2C_Master_Read@temp	;volatile
  3445   0022CC  6A05               	clrf	(I2C_Master_Read@temp+1)^0,c
  3446                           
  3447                           ;i2c.c: 45:     I2C_Master_Wait();
  3448   0022CE  ECF4  F011         	call	_I2C_Master_Wait	;wreg free
  3449   0022D2                     
  3450                           ;i2c.c: 46:     ACKDT = (a)?0:1;
  3451   0022D2  5002               	movf	I2C_Master_Read@a^0,w,c
  3452   0022D4  1003               	iorwf	(I2C_Master_Read@a+1)^0,w,c
  3453   0022D6  B4D8               	btfsc	status,2,c
  3454   0022D8  EF70  F011         	goto	u2341
  3455   0022DC  EF73  F011         	goto	u2340
  3456   0022E0                     u2341:
  3457   0022E0  8AC5               	bsf	4037,5,c	;volatile
  3458   0022E2  EF74  F011         	goto	u2355
  3459   0022E6                     u2340:
  3460   0022E6  9AC5               	bcf	4037,5,c	;volatile
  3461   0022E8                     u2355:
  3462   0022E8                     
  3463                           ;i2c.c: 47:     ACKEN = 1;
  3464   0022E8  88C5               	bsf	4037,4,c	;volatile
  3465   0022EA                     
  3466                           ;i2c.c: 48:     return temp;
  3467   0022EA  C004  F002         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
  3468   0022EE  C005  F003         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
  3469   0022F2  0012               	return		;funcret
  3470   0022F4                     __end_of_I2C_Master_Read:
  3471                           	callstack 0
  3472                           
  3473 ;; *************** function _I2C_Master_Wait *****************
  3474 ;; Defined at:
  3475 ;;		line 13 in file "i2c.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0
  3490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3491 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3492 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3493 ;;Total ram usage:        1 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_I2C_Master_Start
  3499 ;;		_I2C_Master_RepeatedStart
  3500 ;;		_I2C_Master_Stop
  3501 ;;		_I2C_Master_Write
  3502 ;;		_I2C_Master_Read
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506                           	psect	text15
  3507   0023E8                     __ptext15:
  3508                           	callstack 0
  3509   0023E8                     _I2C_Master_Wait:
  3510                           	callstack 28
  3511   0023E8                     l2429:
  3512   0023E8  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  3513   0023EC  0E1F               	movlw	31
  3514   0023EE  1601               	andwf	??_I2C_Master_Wait^0,f,c
  3515   0023F0  A4D8               	btfss	status,2,c
  3516   0023F2  EFFD  F011         	goto	u1911
  3517   0023F6  EFFF  F011         	goto	u1910
  3518   0023FA                     u1911:
  3519   0023FA  EFF4  F011         	goto	l2429
  3520   0023FE                     u1910:
  3521   0023FE  B4C7               	btfsc	199,2,c	;volatile
  3522   002400  EF04  F012         	goto	u1921
  3523   002404  EF06  F012         	goto	u1920
  3524   002408                     u1921:
  3525   002408  EFF4  F011         	goto	l2429
  3526   00240C                     u1920:
  3527   00240C  0012               	return		;funcret
  3528   00240E                     __end_of_I2C_Master_Wait:
  3529                           	callstack 0
  3530                           
  3531 ;; *************** function _BCD2DEC *****************
  3532 ;; Defined at:
  3533 ;;		line 6 in file "ds1307.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;  val             1    wreg     unsigned char 
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  val             1    1[COMRAM] unsigned char 
  3538 ;; Return value:  Size  Location     Type
  3539 ;;                  1    wreg      unsigned char 
  3540 ;; Registers used:
  3541 ;;		wreg, status,2, status,0, prodl, prodh
  3542 ;; Tracked objects:
  3543 ;;		On entry : 0/0
  3544 ;;		On exit  : 0/0
  3545 ;;		Unchanged: 0/0
  3546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3547 ;;      Params:         0       0       0       0       0       0       0       0       0
  3548 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3549 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3550 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3551 ;;Total ram usage:        2 bytes
  3552 ;; Hardware stack levels used: 1
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_RTC_GetDateTime
  3557 ;; This function uses a non-reentrant model
  3558 ;;
  3559                           
  3560                           	psect	text16
  3561   002428                     __ptext16:
  3562                           	callstack 0
  3563   002428                     _BCD2DEC:
  3564                           	callstack 28
  3565                           
  3566                           ;incstack = 0
  3567                           ;BCD2DEC@val stored from wreg
  3568   002428  6E02               	movwf	BCD2DEC@val^0,c
  3569   00242A                     
  3570                           ;ds1307.c: 7:     return ((val >> 4) * 10) + (val & 0x0F);
  3571   00242A  C002  F001         	movff	BCD2DEC@val,??_BCD2DEC
  3572   00242E  0E0F               	movlw	15
  3573   002430  1601               	andwf	??_BCD2DEC^0,f,c
  3574   002432  3802               	swapf	BCD2DEC@val^0,w,c
  3575   002434  0B0F               	andlw	15
  3576   002436  0D0A               	mullw	10
  3577   002438  50F3               	movf	243,w,c
  3578   00243A  2401               	addwf	??_BCD2DEC^0,w,c
  3579   00243C  0012               	return		;funcret
  3580   00243E                     __end_of_BCD2DEC:
  3581                           	callstack 0
  3582                           
  3583 ;; *************** function _Display_GPS *****************
  3584 ;; Defined at:
  3585 ;;		line 65 in file "main.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;		None
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  buffer        100    0[BANK1 ] unsigned char [100]
  3590 ;;  lon            11  100[BANK1 ] unsigned char [11]
  3591 ;;  lat            10  111[BANK1 ] unsigned char [10]
  3592 ;;  ew              2  123[BANK1 ] unsigned char [2]
  3593 ;;  ns              2  121[BANK1 ] unsigned char [2]
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3603 ;;      Params:         0       0       0       0       0       0       0       0       0
  3604 ;;      Locals:         0       0     125       0       0       0       0       0       0
  3605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3606 ;;      Totals:         0       0     125       0       0       0       0       0       0
  3607 ;;Total ram usage:      125 bytes
  3608 ;; Hardware stack levels used: 1
  3609 ;; Hardware stack levels required when called: 8
  3610 ;; This function calls:
  3611 ;;		_Clear_Line
  3612 ;;		_GPS_ParseGPRMC
  3613 ;;		_GPS_ReadSentence
  3614 ;;		_LCD_String_xy
  3615 ;;		_sprintf
  3616 ;;		_strstr
  3617 ;; This function is called by:
  3618 ;;		_main
  3619 ;; This function uses a non-reentrant model
  3620 ;;
  3621                           
  3622                           	psect	text17
  3623   00104C                     __ptext17:
  3624                           	callstack 0
  3625   00104C                     _Display_GPS:
  3626                           	callstack 22
  3627   00104C                     
  3628                           ;main.c: 66:     char buffer[100], lat[10], ns[2], lon[11], ew[2];;main.c: 69:     Clear
      +                          _Line(0);
  3629   00104C  0E00               	movlw	0
  3630   00104E  EC07  F012         	call	_Clear_Line
  3631                           
  3632                           ;main.c: 70:     Clear_Line(1);
  3633   001052  0E01               	movlw	1
  3634   001054  EC07  F012         	call	_Clear_Line
  3635   001058                     
  3636                           ;main.c: 73:     if(GPS_ReadSentence(buffer, sizeof(buffer), 500) &&
  3637   001058  0E00               	movlw	low Display_GPS@buffer
  3638   00105A  6E01               	movwf	GPS_ReadSentence@buffer^0,c
  3639   00105C  0E01               	movlw	high Display_GPS@buffer
  3640   00105E  6E02               	movwf	(GPS_ReadSentence@buffer+1)^0,c
  3641   001060  0E00               	movlw	0
  3642   001062  6E04               	movwf	(GPS_ReadSentence@max_len+1)^0,c
  3643   001064  0E64               	movlw	100
  3644   001066  6E03               	movwf	GPS_ReadSentence@max_len^0,c
  3645   001068  0E01               	movlw	1
  3646   00106A  6E06               	movwf	(GPS_ReadSentence@timeout_ms+1)^0,c
  3647   00106C  0EF4               	movlw	244
  3648   00106E  6E05               	movwf	GPS_ReadSentence@timeout_ms^0,c
  3649   001070  ECBC  F008         	call	_GPS_ReadSentence	;wreg free
  3650   001074  0900               	iorlw	0
  3651   001076  B4D8               	btfsc	status,2,c
  3652   001078  EF40  F008         	goto	u2711
  3653   00107C  EF42  F008         	goto	u2710
  3654   001080                     u2711:
  3655   001080  EFA5  F008         	goto	l2943
  3656   001084                     u2710:
  3657   001084  0E00               	movlw	low Display_GPS@buffer
  3658   001086  6E07               	movwf	strstr@h^0,c
  3659   001088  0E01               	movlw	high Display_GPS@buffer
  3660   00108A  6E08               	movwf	(strstr@h+1)^0,c
  3661   00108C  0EC6               	movlw	low STR_6
  3662   00108E  6E09               	movwf	strstr@n^0,c
  3663   001090  ECC4  F00A         	call	_strstr	;wreg free
  3664   001094  5007               	movf	?_strstr^0,w,c
  3665   001096  1008               	iorwf	(?_strstr+1)^0,w,c
  3666   001098  B4D8               	btfsc	status,2,c
  3667   00109A  EF51  F008         	goto	u2721
  3668   00109E  EF53  F008         	goto	u2720
  3669   0010A2                     u2721:
  3670   0010A2  EFA5  F008         	goto	l2943
  3671   0010A6                     u2720:
  3672   0010A6  0E00               	movlw	low Display_GPS@buffer
  3673   0010A8  6E0E               	movwf	GPS_ParseGPRMC@msg^0,c
  3674   0010AA  0E01               	movlw	high Display_GPS@buffer
  3675   0010AC  6E0F               	movwf	(GPS_ParseGPRMC@msg+1)^0,c
  3676   0010AE  0E6F               	movlw	low Display_GPS@lat
  3677   0010B0  6E10               	movwf	GPS_ParseGPRMC@lat^0,c
  3678   0010B2  0E01               	movlw	high Display_GPS@lat
  3679   0010B4  6E11               	movwf	(GPS_ParseGPRMC@lat+1)^0,c
  3680   0010B6  0E79               	movlw	low Display_GPS@ns
  3681   0010B8  6E12               	movwf	GPS_ParseGPRMC@ns^0,c
  3682   0010BA  0E01               	movlw	high Display_GPS@ns
  3683   0010BC  6E13               	movwf	(GPS_ParseGPRMC@ns+1)^0,c
  3684   0010BE  0E64               	movlw	low Display_GPS@lon
  3685   0010C0  6E14               	movwf	GPS_ParseGPRMC@lon^0,c
  3686   0010C2  0E01               	movlw	high Display_GPS@lon
  3687   0010C4  6E15               	movwf	(GPS_ParseGPRMC@lon+1)^0,c
  3688   0010C6  0E7B               	movlw	low Display_GPS@ew
  3689   0010C8  6E16               	movwf	GPS_ParseGPRMC@ew^0,c
  3690   0010CA  0E01               	movlw	high Display_GPS@ew
  3691   0010CC  6E17               	movwf	(GPS_ParseGPRMC@ew+1)^0,c
  3692   0010CE  ECAB  F005         	call	_GPS_ParseGPRMC	;wreg free
  3693   0010D2  0900               	iorlw	0
  3694   0010D4  B4D8               	btfsc	status,2,c
  3695   0010D6  EF6F  F008         	goto	u2731
  3696   0010DA  EF71  F008         	goto	u2730
  3697   0010DE                     u2731:
  3698   0010DE  EFA5  F008         	goto	l2943
  3699   0010E2                     u2730:
  3700   0010E2                     
  3701                           ;main.c: 75:        GPS_ParseGPRMC(buffer, lat, ns, lon, ew)) {;main.c: 78:         spri
      +                          ntf(lcd_buffer, "Lat:%s%s", lat, ns);
  3702   0010E2  0E7D               	movlw	low _lcd_buffer
  3703   0010E4  6E2F               	movwf	sprintf@s^0,c
  3704   0010E6  0E01               	movlw	high _lcd_buffer
  3705   0010E8  6E30               	movwf	(sprintf@s+1)^0,c
  3706   0010EA  0EA6               	movlw	low STR_8
  3707   0010EC  6E31               	movwf	sprintf@fmt^0,c
  3708   0010EE  0E6F               	movlw	low Display_GPS@lat
  3709   0010F0  6E32               	movwf	(?_sprintf+3)^0,c
  3710   0010F2  0E01               	movlw	high Display_GPS@lat
  3711   0010F4  6E33               	movwf	(?_sprintf+4)^0,c
  3712   0010F6  0E79               	movlw	low Display_GPS@ns
  3713   0010F8  6E34               	movwf	(?_sprintf+5)^0,c
  3714   0010FA  0E01               	movlw	high Display_GPS@ns
  3715   0010FC  6E35               	movwf	(?_sprintf+6)^0,c
  3716   0010FE  EC23  F011         	call	_sprintf	;wreg free
  3717   001102                     
  3718                           ;main.c: 79:         LCD_String_xy(0, 0, lcd_buffer);
  3719   001102  0E00               	movlw	0
  3720   001104  6E05               	movwf	LCD_String_xy@pos^0,c
  3721   001106  0E7D               	movlw	low _lcd_buffer
  3722   001108  6E06               	movwf	LCD_String_xy@msg^0,c
  3723   00110A  0E01               	movlw	high _lcd_buffer
  3724   00110C  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3725   00110E  0E00               	movlw	0
  3726   001110  EC2C  F010         	call	_LCD_String_xy
  3727   001114                     
  3728                           ;main.c: 82:         sprintf(lcd_buffer, "Lon:%s%s", lon, ew);
  3729   001114  0E7D               	movlw	low _lcd_buffer
  3730   001116  6E2F               	movwf	sprintf@s^0,c
  3731   001118  0E01               	movlw	high _lcd_buffer
  3732   00111A  6E30               	movwf	(sprintf@s+1)^0,c
  3733   00111C  0E9D               	movlw	low STR_9
  3734   00111E  6E31               	movwf	sprintf@fmt^0,c
  3735   001120  0E64               	movlw	low Display_GPS@lon
  3736   001122  6E32               	movwf	(?_sprintf+3)^0,c
  3737   001124  0E01               	movlw	high Display_GPS@lon
  3738   001126  6E33               	movwf	(?_sprintf+4)^0,c
  3739   001128  0E7B               	movlw	low Display_GPS@ew
  3740   00112A  6E34               	movwf	(?_sprintf+5)^0,c
  3741   00112C  0E01               	movlw	high Display_GPS@ew
  3742   00112E  6E35               	movwf	(?_sprintf+6)^0,c
  3743   001130  EC23  F011         	call	_sprintf	;wreg free
  3744                           
  3745                           ;main.c: 83:         LCD_String_xy(1, 0, lcd_buffer);
  3746   001134  0E00               	movlw	0
  3747   001136  6E05               	movwf	LCD_String_xy@pos^0,c
  3748   001138  0E7D               	movlw	low _lcd_buffer
  3749   00113A  6E06               	movwf	LCD_String_xy@msg^0,c
  3750   00113C  0E01               	movlw	high _lcd_buffer
  3751   00113E  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3752   001140  0E01               	movlw	1
  3753   001142  EC2C  F010         	call	_LCD_String_xy
  3754                           
  3755                           ;main.c: 84:     } else {
  3756   001146  EFBB  F008         	goto	l49
  3757   00114A                     l2943:
  3758                           
  3759                           ;main.c: 86:         LCD_String_xy(0, 0, "GPS: Sin senal");
  3760   00114A  0E00               	movlw	0
  3761   00114C  6E05               	movwf	LCD_String_xy@pos^0,c
  3762   00114E  0E4E               	movlw	low STR_10
  3763   001150  6E06               	movwf	LCD_String_xy@msg^0,c
  3764   001152  5006               	movf	LCD_String_xy@msg^0,w,c
  3765   001154  A4D8               	btfss	status,2,c
  3766   001156  0E08               	movlw	high __smallconst
  3767   001158  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3768   00115A  0E00               	movlw	0
  3769   00115C  EC2C  F010         	call	_LCD_String_xy
  3770                           
  3771                           ;main.c: 87:         LCD_String_xy(1, 0, "Buscando...");
  3772   001160  0E00               	movlw	0
  3773   001162  6E05               	movwf	LCD_String_xy@pos^0,c
  3774   001164  0E91               	movlw	low STR_11
  3775   001166  6E06               	movwf	LCD_String_xy@msg^0,c
  3776   001168  5006               	movf	LCD_String_xy@msg^0,w,c
  3777   00116A  A4D8               	btfss	status,2,c
  3778   00116C  0E08               	movlw	high __smallconst
  3779   00116E  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3780   001170  0E01               	movlw	1
  3781   001172  EC2C  F010         	call	_LCD_String_xy
  3782   001176                     l49:
  3783   001176  0012               	return		;funcret
  3784   001178                     __end_of_Display_GPS:
  3785                           	callstack 0
  3786                           
  3787 ;; *************** function _GPS_ReadSentence *****************
  3788 ;; Defined at:
  3789 ;;		line 24 in file "GPS.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;  buffer          2    0[COMRAM] PTR unsigned char 
  3792 ;;		 -> Display_GPS@buffer(100), 
  3793 ;;  max_len         2    2[COMRAM] unsigned short 
  3794 ;;  timeout_ms      2    4[COMRAM] unsigned short 
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  t               2    8[COMRAM] unsigned short 
  3797 ;;  dummy           1   10[COMRAM] volatile unsigned char 
  3798 ;;  i               2   12[COMRAM] unsigned short 
  3799 ;;  c               1   14[COMRAM] unsigned char 
  3800 ;;  started         1   11[COMRAM] unsigned char 
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      unsigned char 
  3803 ;; Registers used:
  3804 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3810 ;;      Params:         6       0       0       0       0       0       0       0       0
  3811 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3812 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3813 ;;      Totals:        15       0       0       0       0       0       0       0       0
  3814 ;;Total ram usage:       15 bytes
  3815 ;; Hardware stack levels used: 1
  3816 ;; This function calls:
  3817 ;;		Nothing
  3818 ;; This function is called by:
  3819 ;;		_Display_GPS
  3820 ;; This function uses a non-reentrant model
  3821 ;;
  3822                           
  3823                           	psect	text18
  3824   001178                     __ptext18:
  3825                           	callstack 0
  3826   001178                     _GPS_ReadSentence:
  3827                           	callstack 29
  3828   001178                     
  3829                           ;GPS.c: 25:     uint16_t i = 0;
  3830   001178  0E00               	movlw	0
  3831   00117A  6E0E               	movwf	(GPS_ReadSentence@i+1)^0,c
  3832   00117C  0E00               	movlw	0
  3833   00117E  6E0D               	movwf	GPS_ReadSentence@i^0,c
  3834   001180                     
  3835                           ;GPS.c: 26:     char c;;GPS.c: 27:     uint8_t started = 0;
  3836   001180  6A0C               	clrf	GPS_ReadSentence@started^0,c
  3837   001182                     
  3838                           ;GPS.c: 30:     RCSTAbits.CREN = 0;
  3839   001182  98AB               	bcf	171,4,c	;volatile
  3840   001184                     
  3841                           ;GPS.c: 31:     __nop();
  3842   001184  0000               	nop	
  3843   001186                     
  3844                           ;GPS.c: 32:     RCSTAbits.CREN = 1;
  3845   001186  88AB               	bsf	171,4,c	;volatile
  3846                           
  3847                           ;GPS.c: 35:     while(PIR1bits.RCIF) {
  3848   001188  EFC8  F008         	goto	l135
  3849   00118C                     l136:
  3850                           
  3851                           ;GPS.c: 36:         volatile char dummy = RCREG;
  3852   00118C  CFAE F00B          	movff	4014,GPS_ReadSentence@dummy	;volatile
  3853   001190                     l135:
  3854                           
  3855                           ;GPS.c: 35:     while(PIR1bits.RCIF) {
  3856   001190  BA9E               	btfsc	158,5,c	;volatile
  3857   001192  EFCD  F008         	goto	u2421
  3858   001196  EFCF  F008         	goto	u2420
  3859   00119A                     u2421:
  3860   00119A  EFC6  F008         	goto	l136
  3861   00119E                     u2420:
  3862   00119E                     
  3863                           ;GPS.c: 41:     for(uint16_t t = 0; t < timeout_ms; t++) {
  3864   00119E  0E00               	movlw	0
  3865   0011A0  6E0A               	movwf	(GPS_ReadSentence@t+1)^0,c
  3866   0011A2  0E00               	movlw	0
  3867   0011A4  6E09               	movwf	GPS_ReadSentence@t^0,c
  3868   0011A6  EF45  F009         	goto	l2807
  3869   0011AA                     l139:
  3870                           
  3871                           ;GPS.c: 42:         if(PIR1bits.RCIF) {
  3872   0011AA  AA9E               	btfss	158,5,c	;volatile
  3873   0011AC  EFDA  F008         	goto	u2431
  3874   0011B0  EFDC  F008         	goto	u2430
  3875   0011B4                     u2431:
  3876   0011B4  EF3F  F009         	goto	l2803
  3877   0011B8                     u2430:
  3878   0011B8                     
  3879                           ;GPS.c: 43:             c = RCREG;
  3880   0011B8  CFAE F00F          	movff	4014,GPS_ReadSentence@c	;volatile
  3881                           
  3882                           ;GPS.c: 46:             if(RCSTAbits.OERR) {
  3883   0011BC  A2AB               	btfss	171,1,c	;volatile
  3884   0011BE  EFE3  F008         	goto	u2441
  3885   0011C2  EFE5  F008         	goto	u2440
  3886   0011C6                     u2441:
  3887   0011C6  EFE9  F008         	goto	l2775
  3888   0011CA                     u2440:
  3889   0011CA                     
  3890                           ;GPS.c: 47:                 RCSTAbits.CREN = 0;
  3891   0011CA  98AB               	bcf	171,4,c	;volatile
  3892                           
  3893                           ;GPS.c: 48:                 RCSTAbits.CREN = 1;
  3894   0011CC  88AB               	bsf	171,4,c	;volatile
  3895                           
  3896                           ;GPS.c: 49:                 continue;
  3897   0011CE  EF43  F009         	goto	l2805
  3898   0011D2                     l2775:
  3899                           
  3900                           ;GPS.c: 53:             if(!started && c == '$') {
  3901   0011D2  500C               	movf	GPS_ReadSentence@started^0,w,c
  3902   0011D4  A4D8               	btfss	status,2,c
  3903   0011D6  EFEF  F008         	goto	u2451
  3904   0011DA  EFF1  F008         	goto	u2450
  3905   0011DE                     u2451:
  3906   0011DE  EF08  F009         	goto	l2785
  3907   0011E2                     u2450:
  3908   0011E2  0E24               	movlw	36
  3909   0011E4  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  3910   0011E6  A4D8               	btfss	status,2,c
  3911   0011E8  EFF8  F008         	goto	u2461
  3912   0011EC  EFFA  F008         	goto	u2460
  3913   0011F0                     u2461:
  3914   0011F0  EF08  F009         	goto	l2785
  3915   0011F4                     u2460:
  3916   0011F4                     
  3917                           ;GPS.c: 54:                 started = 1;
  3918   0011F4  0E01               	movlw	1
  3919   0011F6  6E0C               	movwf	GPS_ReadSentence@started^0,c
  3920   0011F8                     l2781:
  3921                           
  3922                           ;GPS.c: 55:                 buffer[i++] = c;
  3923   0011F8  500D               	movf	GPS_ReadSentence@i^0,w,c
  3924   0011FA  2401               	addwf	GPS_ReadSentence@buffer^0,w,c
  3925   0011FC  6ED9               	movwf	fsr2l,c
  3926   0011FE  500E               	movf	(GPS_ReadSentence@i+1)^0,w,c
  3927   001200  2002               	addwfc	(GPS_ReadSentence@buffer+1)^0,w,c
  3928   001202  6EDA               	movwf	fsr2h,c
  3929   001204  C00F  FFDF         	movff	GPS_ReadSentence@c,indf2
  3930   001208  4A0D               	infsnz	GPS_ReadSentence@i^0,f,c
  3931   00120A  2A0E               	incf	(GPS_ReadSentence@i+1)^0,f,c
  3932                           
  3933                           ;GPS.c: 56:             }
  3934   00120C  EF3F  F009         	goto	l2803
  3935   001210                     l2785:
  3936   001210  500C               	movf	GPS_ReadSentence@started^0,w,c
  3937   001212  B4D8               	btfsc	status,2,c
  3938   001214  EF0E  F009         	goto	u2471
  3939   001218  EF10  F009         	goto	u2470
  3940   00121C                     u2471:
  3941   00121C  EF3F  F009         	goto	l2803
  3942   001220                     u2470:
  3943   001220                     
  3944                           ;GPS.c: 59:                 if(c == '\n' || i >= max_len-1) {
  3945   001220  0E0A               	movlw	10
  3946   001222  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  3947   001224  B4D8               	btfsc	status,2,c
  3948   001226  EF17  F009         	goto	u2481
  3949   00122A  EF19  F009         	goto	u2480
  3950   00122E                     u2481:
  3951   00122E  EF2A  F009         	goto	l2791
  3952   001232                     u2480:
  3953   001232  0EFF               	movlw	255
  3954   001234  2403               	addwf	GPS_ReadSentence@max_len^0,w,c
  3955   001236  6E07               	movwf	??_GPS_ReadSentence^0,c
  3956   001238  0EFF               	movlw	255
  3957   00123A  2004               	addwfc	(GPS_ReadSentence@max_len+1)^0,w,c
  3958   00123C  6E08               	movwf	(??_GPS_ReadSentence+1)^0,c
  3959   00123E  5007               	movf	??_GPS_ReadSentence^0,w,c
  3960   001240  5C0D               	subwf	GPS_ReadSentence@i^0,w,c
  3961   001242  5008               	movf	(??_GPS_ReadSentence+1)^0,w,c
  3962   001244  580E               	subwfb	(GPS_ReadSentence@i+1)^0,w,c
  3963   001246  A0D8               	btfss	status,0,c
  3964   001248  EF28  F009         	goto	u2491
  3965   00124C  EF2A  F009         	goto	u2490
  3966   001250                     u2491:
  3967   001250  EF34  F009         	goto	l2797
  3968   001254                     u2490:
  3969   001254                     l2791:
  3970                           
  3971                           ;GPS.c: 60:                     buffer[i] = '\0';
  3972   001254  500D               	movf	GPS_ReadSentence@i^0,w,c
  3973   001256  2401               	addwf	GPS_ReadSentence@buffer^0,w,c
  3974   001258  6ED9               	movwf	fsr2l,c
  3975   00125A  500E               	movf	(GPS_ReadSentence@i+1)^0,w,c
  3976   00125C  2002               	addwfc	(GPS_ReadSentence@buffer+1)^0,w,c
  3977   00125E  6EDA               	movwf	fsr2h,c
  3978   001260  6ADF               	clrf	indf2,c
  3979   001262                     
  3980                           ;GPS.c: 61:                     return 1;
  3981   001262  0E01               	movlw	1
  3982   001264  EF51  F009         	goto	l149
  3983   001268                     l2797:
  3984                           
  3985                           ;GPS.c: 63:                 if(c != '\r') buffer[i++] = c;
  3986   001268  0E0D               	movlw	13
  3987   00126A  180F               	xorwf	GPS_ReadSentence@c^0,w,c
  3988   00126C  B4D8               	btfsc	status,2,c
  3989   00126E  EF3B  F009         	goto	u2501
  3990   001272  EF3D  F009         	goto	u2500
  3991   001276                     u2501:
  3992   001276  EF3F  F009         	goto	l144
  3993   00127A                     u2500:
  3994   00127A  EFFC  F008         	goto	l2781
  3995   00127E                     l144:
  3996   00127E                     l2803:
  3997                           
  3998                           ;GPS.c: 66:         _delay((unsigned long)((100)*(8000000/4000000.0)));
  3999   00127E  0E42               	movlw	66
  4000   001280                     u2857:
  4001   001280  2EE8               	decfsz	wreg,f,c
  4002   001282  D7FE               	bra	u2857
  4003   001284  D000               	nop2	
  4004   001286                     l2805:
  4005   001286  4A09               	infsnz	GPS_ReadSentence@t^0,f,c
  4006   001288  2A0A               	incf	(GPS_ReadSentence@t+1)^0,f,c
  4007   00128A                     l2807:
  4008   00128A  5005               	movf	GPS_ReadSentence@timeout_ms^0,w,c
  4009   00128C  5C09               	subwf	GPS_ReadSentence@t^0,w,c
  4010   00128E  5006               	movf	(GPS_ReadSentence@timeout_ms+1)^0,w,c
  4011   001290  580A               	subwfb	(GPS_ReadSentence@t+1)^0,w,c
  4012   001292  A0D8               	btfss	status,0,c
  4013   001294  EF4E  F009         	goto	u2511
  4014   001298  EF50  F009         	goto	u2510
  4015   00129C                     u2511:
  4016   00129C  EFD5  F008         	goto	l139
  4017   0012A0                     u2510:
  4018   0012A0                     
  4019                           ;GPS.c: 68:     return 0;
  4020   0012A0  0E00               	movlw	0
  4021   0012A2                     l149:
  4022   0012A2  0012               	return		;funcret
  4023   0012A4                     __end_of_GPS_ReadSentence:
  4024                           	callstack 0
  4025                           
  4026 ;; *************** function _GPS_ParseGPRMC *****************
  4027 ;; Defined at:
  4028 ;;		line 72 in file "GPS.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;  msg             2   13[COMRAM] PTR const unsigned char 
  4031 ;;		 -> Display_GPS@buffer(100), 
  4032 ;;  lat             2   15[COMRAM] PTR unsigned char 
  4033 ;;		 -> Display_GPS@lat(10), 
  4034 ;;  ns              2   17[COMRAM] PTR unsigned char 
  4035 ;;		 -> Display_GPS@ns(2), 
  4036 ;;  lon             2   19[COMRAM] PTR unsigned char 
  4037 ;;		 -> Display_GPS@lon(11), 
  4038 ;;  ew              2   21[COMRAM] PTR unsigned char 
  4039 ;;		 -> Display_GPS@ew(2), 
  4040 ;; Auto vars:     Size  Location     Type
  4041 ;;  buf           100    0[BANK0 ] unsigned char [100]
  4042 ;;  token           1  103[BANK0 ] PTR unsigned char 
  4043 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  4044 ;;  data_valid      1  102[BANK0 ] unsigned char 
  4045 ;;  field           1  101[BANK0 ] unsigned char 
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      unsigned char 
  4048 ;; Registers used:
  4049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4055 ;;      Params:        10       0       0       0       0       0       0       0       0
  4056 ;;      Locals:         0     104       0       0       0       0       0       0       0
  4057 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4058 ;;      Totals:        11     104       0       0       0       0       0       0       0
  4059 ;;Total ram usage:      115 bytes
  4060 ;; Hardware stack levels used: 1
  4061 ;; Hardware stack levels required when called: 3
  4062 ;; This function calls:
  4063 ;;		_strncpy
  4064 ;;		_strstr
  4065 ;;		_strtok
  4066 ;; This function is called by:
  4067 ;;		_Display_GPS
  4068 ;; This function uses a non-reentrant model
  4069 ;;
  4070                           
  4071                           	psect	text19
  4072   000B56                     __ptext19:
  4073                           	callstack 0
  4074   000B56                     _GPS_ParseGPRMC:
  4075                           	callstack 26
  4076   000B56                     
  4077                           ;GPS.c: 73:     char buf[100];;GPS.c: 74:     char *token;;GPS.c: 75:     uint8_t field 
      +                          = 0;
  4078   000B56  0100               	movlb	0	; () banked
  4079   000B58  6BC5               	clrf	GPS_ParseGPRMC@field& (0+255),b
  4080                           
  4081                           ;GPS.c: 76:     uint8_t data_valid = 0;
  4082   000B5A  6BC6               	clrf	GPS_ParseGPRMC@data_valid& (0+255),b
  4083   000B5C                     
  4084                           ; BSR set to: 0
  4085                           ;GPS.c: 79:     if(strstr(msg, "$GPRMC") == ((void*)0)) return 0;
  4086   000B5C  C00E  F007         	movff	GPS_ParseGPRMC@msg,strstr@h
  4087   000B60  C00F  F008         	movff	GPS_ParseGPRMC@msg+1,strstr@h+1
  4088   000B64  0EC6               	movlw	low STR_6
  4089   000B66  6E09               	movwf	strstr@n^0,c
  4090   000B68  ECC4  F00A         	call	_strstr	;wreg free
  4091   000B6C  5007               	movf	?_strstr^0,w,c
  4092   000B6E  1008               	iorwf	(?_strstr+1)^0,w,c
  4093   000B70  A4D8               	btfss	status,2,c
  4094   000B72  EFBD  F005         	goto	u2521
  4095   000B76  EFBF  F005         	goto	u2520
  4096   000B7A                     u2521:
  4097   000B7A  EFC2  F005         	goto	l2821
  4098   000B7E                     u2520:
  4099   000B7E  0E00               	movlw	0
  4100   000B80  EFC4  F006         	goto	l155
  4101   000B84                     l2821:
  4102                           
  4103                           ;GPS.c: 82:     strncpy(buf, msg, sizeof(buf)-1);
  4104   000B84  0E60               	movlw	low GPS_ParseGPRMC@buf
  4105   000B86  6E01               	movwf	strncpy@d^0,c
  4106   000B88  6A02               	clrf	(strncpy@d+1)^0,c
  4107   000B8A  C00E  F003         	movff	GPS_ParseGPRMC@msg,strncpy@s
  4108   000B8E  C00F  F004         	movff	GPS_ParseGPRMC@msg+1,strncpy@s+1
  4109   000B92  0E00               	movlw	0
  4110   000B94  6E06               	movwf	(strncpy@n+1)^0,c
  4111   000B96  0E63               	movlw	99
  4112   000B98  6E05               	movwf	strncpy@n^0,c
  4113   000B9A  EC26  F00F         	call	_strncpy	;wreg free
  4114   000B9E                     
  4115                           ;GPS.c: 83:     buf[sizeof(buf)-1] = '\0';
  4116   000B9E  0100               	movlb	0	; () banked
  4117   000BA0  6BC3               	clrf	(GPS_ParseGPRMC@buf+99)& (0+255),b
  4118   000BA2                     
  4119                           ; BSR set to: 0
  4120                           ;GPS.c: 86:     token = strtok(buf, ",");
  4121   000BA2  0E60               	movlw	low GPS_ParseGPRMC@buf
  4122   000BA4  6E0C               	movwf	strtok@s^0,c
  4123   000BA6  0ECD               	movlw	low STR_17
  4124   000BA8  6E0D               	movwf	strtok@sep^0,c
  4125   000BAA  EC55  F00E         	call	_strtok	;wreg free
  4126   000BAE  0100               	movlb	0	; () banked
  4127   000BB0  6FC7               	movwf	GPS_ParseGPRMC@token& (0+255),b
  4128                           
  4129                           ;GPS.c: 87:     while(token && field <= 6) {
  4130   000BB2  EFA0  F006         	goto	l2869
  4131   000BB6                     l2827:
  4132                           
  4133                           ; BSR set to: 0
  4134                           ;GPS.c: 90:                 data_valid = (token[0] == 'A');
  4135   000BB6  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4136   000BB8  6ED9               	movwf	fsr2l,c
  4137   000BBA  6ADA               	clrf	fsr2h,c
  4138   000BBC  0E41               	movlw	65
  4139   000BBE  18DE               	xorwf	postinc2,w,c
  4140   000BC0  B4D8               	btfsc	status,2,c
  4141   000BC2  EFE5  F005         	goto	u2531
  4142   000BC6  EFE8  F005         	goto	u2530
  4143   000BCA                     u2531:
  4144   000BCA  0E01               	movlw	1
  4145   000BCC  EFE9  F005         	goto	u2540
  4146   000BD0                     u2530:
  4147   000BD0  0E00               	movlw	0
  4148   000BD2                     u2540:
  4149   000BD2  6FC6               	movwf	GPS_ParseGPRMC@data_valid& (0+255),b
  4150                           
  4151                           ;GPS.c: 91:                 break;
  4152   000BD4  EF97  F006         	goto	l2865
  4153   000BD8                     l2829:
  4154                           
  4155                           ; BSR set to: 0
  4156                           ;GPS.c: 93:                 if(lat && data_valid) {
  4157   000BD8  5010               	movf	GPS_ParseGPRMC@lat^0,w,c
  4158   000BDA  1011               	iorwf	(GPS_ParseGPRMC@lat+1)^0,w,c
  4159   000BDC  B4D8               	btfsc	status,2,c
  4160   000BDE  EFF3  F005         	goto	u2551
  4161   000BE2  EFF5  F005         	goto	u2550
  4162   000BE6                     u2551:
  4163   000BE6  EF97  F006         	goto	l2865
  4164   000BEA                     u2550:
  4165   000BEA                     
  4166                           ; BSR set to: 0
  4167   000BEA  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4168   000BEC  B4D8               	btfsc	status,2,c
  4169   000BEE  EFFB  F005         	goto	u2561
  4170   000BF2  EFFD  F005         	goto	u2560
  4171   000BF6                     u2561:
  4172   000BF6  EF97  F006         	goto	l2865
  4173   000BFA                     u2560:
  4174   000BFA                     
  4175                           ; BSR set to: 0
  4176                           ;GPS.c: 94:                     strncpy(lat, token, 7);
  4177   000BFA  C010  F001         	movff	GPS_ParseGPRMC@lat,strncpy@d
  4178   000BFE  C011  F002         	movff	GPS_ParseGPRMC@lat+1,strncpy@d+1
  4179   000C02  C0C7  F003         	movff	GPS_ParseGPRMC@token,strncpy@s
  4180   000C06  6A04               	clrf	(strncpy@s+1)^0,c
  4181   000C08  0E00               	movlw	0
  4182   000C0A  6E06               	movwf	(strncpy@n+1)^0,c
  4183   000C0C  0E07               	movlw	7
  4184   000C0E  6E05               	movwf	strncpy@n^0,c
  4185   000C10  EC26  F00F         	call	_strncpy	;wreg free
  4186   000C14                     
  4187                           ;GPS.c: 95:                     lat[7] = '\0';
  4188   000C14  EE20 F007          	lfsr	2,7
  4189   000C18  5010               	movf	GPS_ParseGPRMC@lat^0,w,c
  4190   000C1A  26D9               	addwf	fsr2l,f,c
  4191   000C1C  5011               	movf	(GPS_ParseGPRMC@lat+1)^0,w,c
  4192   000C1E  22DA               	addwfc	fsr2h,f,c
  4193   000C20  6ADF               	clrf	indf2,c
  4194   000C22  EF97  F006         	goto	l2865
  4195   000C26                     l2837:
  4196                           
  4197                           ; BSR set to: 0
  4198                           ;GPS.c: 99:                 if(ns && data_valid) {
  4199   000C26  5012               	movf	GPS_ParseGPRMC@ns^0,w,c
  4200   000C28  1013               	iorwf	(GPS_ParseGPRMC@ns+1)^0,w,c
  4201   000C2A  B4D8               	btfsc	status,2,c
  4202   000C2C  EF1A  F006         	goto	u2571
  4203   000C30  EF1C  F006         	goto	u2570
  4204   000C34                     u2571:
  4205   000C34  EF97  F006         	goto	l2865
  4206   000C38                     u2570:
  4207   000C38                     
  4208                           ; BSR set to: 0
  4209   000C38  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4210   000C3A  B4D8               	btfsc	status,2,c
  4211   000C3C  EF22  F006         	goto	u2581
  4212   000C40  EF24  F006         	goto	u2580
  4213   000C44                     u2581:
  4214   000C44  EF97  F006         	goto	l2865
  4215   000C48                     u2580:
  4216   000C48                     
  4217                           ; BSR set to: 0
  4218                           ;GPS.c: 100:                     ns[0] = token[0];
  4219   000C48  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4220   000C4A  6ED9               	movwf	fsr2l,c
  4221   000C4C  6ADA               	clrf	fsr2h,c
  4222   000C4E  C012  FFE1         	movff	GPS_ParseGPRMC@ns,fsr1l
  4223   000C52  C013  FFE2         	movff	GPS_ParseGPRMC@ns+1,fsr1h
  4224   000C56  CFDF FFE7          	movff	indf2,indf1
  4225   000C5A                     
  4226                           ; BSR set to: 0
  4227                           ;GPS.c: 101:                     ns[1] = '\0';
  4228   000C5A  EE20 F001          	lfsr	2,1
  4229   000C5E  5012               	movf	GPS_ParseGPRMC@ns^0,w,c
  4230   000C60  26D9               	addwf	fsr2l,f,c
  4231   000C62  5013               	movf	(GPS_ParseGPRMC@ns+1)^0,w,c
  4232   000C64  22DA               	addwfc	fsr2h,f,c
  4233   000C66  6ADF               	clrf	indf2,c
  4234   000C68  EF97  F006         	goto	l2865
  4235   000C6C                     l2845:
  4236                           
  4237                           ; BSR set to: 0
  4238                           ;GPS.c: 105:                 if(lon && data_valid) {
  4239   000C6C  5014               	movf	GPS_ParseGPRMC@lon^0,w,c
  4240   000C6E  1015               	iorwf	(GPS_ParseGPRMC@lon+1)^0,w,c
  4241   000C70  B4D8               	btfsc	status,2,c
  4242   000C72  EF3D  F006         	goto	u2591
  4243   000C76  EF3F  F006         	goto	u2590
  4244   000C7A                     u2591:
  4245   000C7A  EF97  F006         	goto	l2865
  4246   000C7E                     u2590:
  4247   000C7E                     
  4248                           ; BSR set to: 0
  4249   000C7E  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4250   000C80  B4D8               	btfsc	status,2,c
  4251   000C82  EF45  F006         	goto	u2601
  4252   000C86  EF47  F006         	goto	u2600
  4253   000C8A                     u2601:
  4254   000C8A  EF97  F006         	goto	l2865
  4255   000C8E                     u2600:
  4256   000C8E                     
  4257                           ; BSR set to: 0
  4258                           ;GPS.c: 106:                     strncpy(lon, token, 8);
  4259   000C8E  C014  F001         	movff	GPS_ParseGPRMC@lon,strncpy@d
  4260   000C92  C015  F002         	movff	GPS_ParseGPRMC@lon+1,strncpy@d+1
  4261   000C96  C0C7  F003         	movff	GPS_ParseGPRMC@token,strncpy@s
  4262   000C9A  6A04               	clrf	(strncpy@s+1)^0,c
  4263   000C9C  0E00               	movlw	0
  4264   000C9E  6E06               	movwf	(strncpy@n+1)^0,c
  4265   000CA0  0E08               	movlw	8
  4266   000CA2  6E05               	movwf	strncpy@n^0,c
  4267   000CA4  EC26  F00F         	call	_strncpy	;wreg free
  4268   000CA8                     
  4269                           ;GPS.c: 107:                     lon[8] = '\0';
  4270   000CA8  EE20 F008          	lfsr	2,8
  4271   000CAC  5014               	movf	GPS_ParseGPRMC@lon^0,w,c
  4272   000CAE  26D9               	addwf	fsr2l,f,c
  4273   000CB0  5015               	movf	(GPS_ParseGPRMC@lon+1)^0,w,c
  4274   000CB2  22DA               	addwfc	fsr2h,f,c
  4275   000CB4  6ADF               	clrf	indf2,c
  4276   000CB6  EF97  F006         	goto	l2865
  4277   000CBA                     l2853:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;GPS.c: 111:                 if(ew && data_valid) {
  4281   000CBA  5016               	movf	GPS_ParseGPRMC@ew^0,w,c
  4282   000CBC  1017               	iorwf	(GPS_ParseGPRMC@ew+1)^0,w,c
  4283   000CBE  B4D8               	btfsc	status,2,c
  4284   000CC0  EF64  F006         	goto	u2611
  4285   000CC4  EF66  F006         	goto	u2610
  4286   000CC8                     u2611:
  4287   000CC8  EF97  F006         	goto	l2865
  4288   000CCC                     u2610:
  4289   000CCC                     
  4290                           ; BSR set to: 0
  4291   000CCC  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4292   000CCE  B4D8               	btfsc	status,2,c
  4293   000CD0  EF6C  F006         	goto	u2621
  4294   000CD4  EF6E  F006         	goto	u2620
  4295   000CD8                     u2621:
  4296   000CD8  EF97  F006         	goto	l2865
  4297   000CDC                     u2620:
  4298   000CDC                     
  4299                           ; BSR set to: 0
  4300                           ;GPS.c: 112:                     ew[0] = token[0];
  4301   000CDC  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4302   000CDE  6ED9               	movwf	fsr2l,c
  4303   000CE0  6ADA               	clrf	fsr2h,c
  4304   000CE2  C016  FFE1         	movff	GPS_ParseGPRMC@ew,fsr1l
  4305   000CE6  C017  FFE2         	movff	GPS_ParseGPRMC@ew+1,fsr1h
  4306   000CEA  CFDF FFE7          	movff	indf2,indf1
  4307   000CEE                     
  4308                           ; BSR set to: 0
  4309                           ;GPS.c: 113:                     ew[1] = '\0';
  4310   000CEE  EE20 F001          	lfsr	2,1
  4311   000CF2  5016               	movf	GPS_ParseGPRMC@ew^0,w,c
  4312   000CF4  26D9               	addwf	fsr2l,f,c
  4313   000CF6  5017               	movf	(GPS_ParseGPRMC@ew+1)^0,w,c
  4314   000CF8  22DA               	addwfc	fsr2h,f,c
  4315   000CFA  6ADF               	clrf	indf2,c
  4316   000CFC  EF97  F006         	goto	l2865
  4317   000D00                     l2863:
  4318                           
  4319                           ; BSR set to: 0
  4320   000D00  51C5               	movf	GPS_ParseGPRMC@field& (0+255),w,b
  4321                           
  4322                           ; Switch size 1, requested type "simple"
  4323                           ; Number of cases is 5, Range of values is 2 to 6
  4324                           ; switch strategies available:
  4325                           ; Name         Instructions Cycles
  4326                           ; simple_byte           16     9 (average)
  4327                           ;	Chosen strategy is simple_byte
  4328   000D02  0A02               	xorlw	2	; case 2
  4329   000D04  B4D8               	btfsc	status,2,c
  4330   000D06  EFDB  F005         	goto	l2827
  4331   000D0A  0A01               	xorlw	1	; case 3
  4332   000D0C  B4D8               	btfsc	status,2,c
  4333   000D0E  EFEC  F005         	goto	l2829
  4334   000D12  0A07               	xorlw	7	; case 4
  4335   000D14  B4D8               	btfsc	status,2,c
  4336   000D16  EF13  F006         	goto	l2837
  4337   000D1A  0A01               	xorlw	1	; case 5
  4338   000D1C  B4D8               	btfsc	status,2,c
  4339   000D1E  EF36  F006         	goto	l2845
  4340   000D22  0A03               	xorlw	3	; case 6
  4341   000D24  B4D8               	btfsc	status,2,c
  4342   000D26  EF5D  F006         	goto	l2853
  4343   000D2A  EF97  F006         	goto	l2865
  4344   000D2E                     l2865:
  4345                           
  4346                           ;GPS.c: 117:         token = strtok(((void*)0), ",");
  4347   000D2E  0E00               	movlw	0
  4348   000D30  6E0C               	movwf	strtok@s^0,c
  4349   000D32  0ECD               	movlw	low STR_17
  4350   000D34  6E0D               	movwf	strtok@sep^0,c
  4351   000D36  EC55  F00E         	call	_strtok	;wreg free
  4352   000D3A  0100               	movlb	0	; () banked
  4353   000D3C  6FC7               	movwf	GPS_ParseGPRMC@token& (0+255),b
  4354   000D3E                     
  4355                           ; BSR set to: 0
  4356                           ;GPS.c: 118:         field++;
  4357   000D3E  2BC5               	incf	GPS_ParseGPRMC@field& (0+255),f,b
  4358   000D40                     l2869:
  4359                           
  4360                           ; BSR set to: 0
  4361                           ;GPS.c: 87:     while(token && field <= 6) {
  4362   000D40  51C7               	movf	GPS_ParseGPRMC@token& (0+255),w,b
  4363   000D42  B4D8               	btfsc	status,2,c
  4364   000D44  EFA6  F006         	goto	u2631
  4365   000D48  EFA8  F006         	goto	u2630
  4366   000D4C                     u2631:
  4367   000D4C  EFB0  F006         	goto	l171
  4368   000D50                     u2630:
  4369   000D50                     
  4370                           ; BSR set to: 0
  4371   000D50  0E06               	movlw	6
  4372   000D52  65C5               	cpfsgt	GPS_ParseGPRMC@field& (0+255),b
  4373   000D54  EFAE  F006         	goto	u2641
  4374   000D58  EFB0  F006         	goto	u2640
  4375   000D5C                     u2641:
  4376   000D5C  EF80  F006         	goto	l2863
  4377   000D60                     u2640:
  4378   000D60                     l171:
  4379                           
  4380                           ; BSR set to: 0
  4381                           ;GPS.c: 120:     return (data_valid && field >= 6);
  4382   000D60  6BC4               	clrf	_GPS_ParseGPRMC$432& (0+255),b
  4383   000D62                     
  4384                           ; BSR set to: 0
  4385   000D62  51C6               	movf	GPS_ParseGPRMC@data_valid& (0+255),w,b
  4386   000D64  B4D8               	btfsc	status,2,c
  4387   000D66  EFB7  F006         	goto	u2651
  4388   000D6A  EFB9  F006         	goto	u2650
  4389   000D6E                     u2651:
  4390   000D6E  EFC3  F006         	goto	l173
  4391   000D72                     u2650:
  4392   000D72                     
  4393                           ; BSR set to: 0
  4394   000D72  0E05               	movlw	5
  4395   000D74  65C5               	cpfsgt	GPS_ParseGPRMC@field& (0+255),b
  4396   000D76  EFBF  F006         	goto	u2661
  4397   000D7A  EFC1  F006         	goto	u2660
  4398   000D7E                     u2661:
  4399   000D7E  EFC3  F006         	goto	l173
  4400   000D82                     u2660:
  4401   000D82                     
  4402                           ; BSR set to: 0
  4403   000D82  0E01               	movlw	1
  4404   000D84  6FC4               	movwf	_GPS_ParseGPRMC$432& (0+255),b
  4405   000D86                     l173:
  4406                           
  4407                           ; BSR set to: 0
  4408   000D86  51C4               	movf	_GPS_ParseGPRMC$432& (0+255),w,b
  4409   000D88                     l155:
  4410   000D88  0012               	return		;funcret
  4411   000D8A                     __end_of_GPS_ParseGPRMC:
  4412                           	callstack 0
  4413                           
  4414 ;; *************** function _strtok *****************
  4415 ;; Defined at:
  4416 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strtok.c"
  4417 ;; Parameters:    Size  Location     Type
  4418 ;;  s               1   11[COMRAM] PTR unsigned char 
  4419 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  4420 ;;  sep             1   12[COMRAM] PTR const unsigned char 
  4421 ;;		 -> STR_18(2), STR_17(2), 
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;		None
  4424 ;; Return value:  Size  Location     Type
  4425 ;;                  1   11[COMRAM] PTR unsigned char 
  4426 ;; Registers used:
  4427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4433 ;;      Params:         2       0       0       0       0       0       0       0       0
  4434 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4436 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4437 ;;Total ram usage:        2 bytes
  4438 ;; Hardware stack levels used: 1
  4439 ;; Hardware stack levels required when called: 2
  4440 ;; This function calls:
  4441 ;;		_strcspn
  4442 ;;		_strspn
  4443 ;; This function is called by:
  4444 ;;		_GPS_ParseGPRMC
  4445 ;; This function uses a non-reentrant model
  4446 ;;
  4447                           
  4448                           	psect	text20
  4449   001CAA                     __ptext20:
  4450                           	callstack 0
  4451   001CAA                     _strtok:
  4452                           	callstack 26
  4453   001CAA  500C               	movf	strtok@s^0,w,c
  4454   001CAC  A4D8               	btfss	status,2,c
  4455   001CAE  EF5B  F00E         	goto	u2301
  4456   001CB2  EF5D  F00E         	goto	u2300
  4457   001CB6                     u2301:
  4458   001CB6  EF6A  F00E         	goto	l2643
  4459   001CBA                     u2300:
  4460   001CBA  C053  F00C         	movff	strtok@p,strtok@s
  4461   001CBE  500C               	movf	strtok@s^0,w,c
  4462   001CC0  A4D8               	btfss	status,2,c
  4463   001CC2  EF65  F00E         	goto	u2311
  4464   001CC6  EF67  F00E         	goto	u2310
  4465   001CCA                     u2311:
  4466   001CCA  EF6A  F00E         	goto	l2643
  4467   001CCE                     u2310:
  4468   001CCE  0E00               	movlw	0
  4469   001CD0  EF9F  F00E         	goto	l1160
  4470   001CD4                     l2643:
  4471   001CD4  C00C  F007         	movff	strtok@s,strspn@s
  4472   001CD8  C00D  F008         	movff	strtok@sep,strspn@c
  4473   001CDC  EC99  F00F         	call	_strspn	;wreg free
  4474   001CE0  5007               	movf	?_strspn^0,w,c
  4475   001CE2  260C               	addwf	strtok@s^0,f,c
  4476   001CE4  500C               	movf	strtok@s^0,w,c
  4477   001CE6  6ED9               	movwf	fsr2l,c
  4478   001CE8  6ADA               	clrf	fsr2h,c
  4479   001CEA  50DF               	movf	indf2,w,c
  4480   001CEC  A4D8               	btfss	status,2,c
  4481   001CEE  EF7B  F00E         	goto	u2321
  4482   001CF2  EF7D  F00E         	goto	u2320
  4483   001CF6                     u2321:
  4484   001CF6  EF82  F00E         	goto	l2651
  4485   001CFA                     u2320:
  4486   001CFA  0E00               	movlw	0
  4487   001CFC  6E53               	movwf	strtok@p^0,c
  4488   001CFE  5053               	movf	strtok@p^0,w,c
  4489   001D00  EF9F  F00E         	goto	l1160
  4490   001D04                     l2651:
  4491   001D04  C00C  F007         	movff	strtok@s,strcspn@s
  4492   001D08  C00D  F008         	movff	strtok@sep,strcspn@c
  4493   001D0C  ECCB  F00F         	call	_strcspn	;wreg free
  4494   001D10  500C               	movf	strtok@s^0,w,c
  4495   001D12  2407               	addwf	?_strcspn^0,w,c
  4496   001D14  6E53               	movwf	strtok@p^0,c
  4497   001D16  5053               	movf	strtok@p^0,w,c
  4498   001D18  6ED9               	movwf	fsr2l,c
  4499   001D1A  6ADA               	clrf	fsr2h,c
  4500   001D1C  50DF               	movf	indf2,w,c
  4501   001D1E  B4D8               	btfsc	status,2,c
  4502   001D20  EF94  F00E         	goto	u2331
  4503   001D24  EF96  F00E         	goto	u2330
  4504   001D28                     u2331:
  4505   001D28  EF9D  F00E         	goto	l1162
  4506   001D2C                     u2330:
  4507   001D2C  5053               	movf	strtok@p^0,w,c
  4508   001D2E  6ED9               	movwf	fsr2l,c
  4509   001D30  6ADA               	clrf	fsr2h,c
  4510   001D32  6ADF               	clrf	indf2,c
  4511   001D34  2A53               	incf	strtok@p^0,f,c
  4512   001D36  EF9E  F00E         	goto	l2659
  4513   001D3A                     l1162:
  4514   001D3A  6A53               	clrf	strtok@p^0,c
  4515   001D3C                     l2659:
  4516   001D3C  500C               	movf	strtok@s^0,w,c
  4517   001D3E                     l1160:
  4518   001D3E  0012               	return		;funcret
  4519   001D40                     __end_of_strtok:
  4520                           	callstack 0
  4521                           
  4522 ;; *************** function _strspn *****************
  4523 ;; Defined at:
  4524 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strspn.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  s               1    6[COMRAM] PTR const unsigned char 
  4527 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  4528 ;;  c               1    7[COMRAM] PTR const unsigned char 
  4529 ;;		 -> STR_18(2), STR_17(2), 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  i               2    9[COMRAM] unsigned int 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  2    6[COMRAM] unsigned int 
  4534 ;; Registers used:
  4535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4541 ;;      Params:         2       0       0       0       0       0       0       0       0
  4542 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4543 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4544 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4545 ;;Total ram usage:        5 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 1
  4548 ;; This function calls:
  4549 ;;		_strchr
  4550 ;; This function is called by:
  4551 ;;		_strtok
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text21
  4556   001F32                     __ptext21:
  4557                           	callstack 0
  4558   001F32                     _strspn:
  4559                           	callstack 26
  4560   001F32  0E00               	movlw	0
  4561   001F34  6E0B               	movwf	(strspn@i+1)^0,c
  4562   001F36  0E00               	movlw	0
  4563   001F38  6E0A               	movwf	strspn@i^0,c
  4564   001F3A  EFA2  F00F         	goto	l2549
  4565   001F3E                     l2547:
  4566   001F3E  2A07               	incf	strspn@s^0,f,c
  4567   001F40  4A0A               	infsnz	strspn@i^0,f,c
  4568   001F42  2A0B               	incf	(strspn@i+1)^0,f,c
  4569   001F44                     l2549:
  4570   001F44  5007               	movf	strspn@s^0,w,c
  4571   001F46  6ED9               	movwf	fsr2l,c
  4572   001F48  6ADA               	clrf	fsr2h,c
  4573   001F4A  50DF               	movf	indf2,w,c
  4574   001F4C  B4D8               	btfsc	status,2,c
  4575   001F4E  EFAB  F00F         	goto	u2121
  4576   001F52  EFAD  F00F         	goto	u2120
  4577   001F56                     u2121:
  4578   001F56  EFC6  F00F         	goto	l1182
  4579   001F5A                     u2120:
  4580   001F5A  C008  F001         	movff	strspn@c,strchr@s
  4581   001F5E  5001               	movf	strchr@s^0,w,c
  4582   001F60  A4D8               	btfss	status,2,c
  4583   001F62  0E08               	movlw	high __smallconst
  4584   001F64  6E02               	movwf	(strchr@s+1)^0,c
  4585   001F66  5007               	movf	strspn@s^0,w,c
  4586   001F68  6ED9               	movwf	fsr2l,c
  4587   001F6A  6ADA               	clrf	fsr2h,c
  4588   001F6C  50DF               	movf	indf2,w,c
  4589   001F6E  6E09               	movwf	??_strspn^0,c
  4590   001F70  5009               	movf	??_strspn^0,w,c
  4591   001F72  6E03               	movwf	strchr@c^0,c
  4592   001F74  6A04               	clrf	(strchr@c+1)^0,c
  4593   001F76  ECE5  F00E         	call	_strchr	;wreg free
  4594   001F7A  5001               	movf	?_strchr^0,w,c
  4595   001F7C  1002               	iorwf	(?_strchr+1)^0,w,c
  4596   001F7E  A4D8               	btfss	status,2,c
  4597   001F80  EFC4  F00F         	goto	u2131
  4598   001F84  EFC6  F00F         	goto	u2130
  4599   001F88                     u2131:
  4600   001F88  EF9F  F00F         	goto	l2547
  4601   001F8C                     u2130:
  4602   001F8C                     l1182:
  4603   001F8C  C00A  F007         	movff	strspn@i,?_strspn
  4604   001F90  C00B  F008         	movff	strspn@i+1,?_strspn+1
  4605   001F94  0012               	return		;funcret
  4606   001F96                     __end_of_strspn:
  4607                           	callstack 0
  4608                           
  4609 ;; *************** function _strcspn *****************
  4610 ;; Defined at:
  4611 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcspn.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;  s               1    6[COMRAM] PTR const unsigned char 
  4614 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), 
  4615 ;;  c               1    7[COMRAM] PTR const unsigned char 
  4616 ;;		 -> STR_18(2), STR_17(2), 
  4617 ;; Auto vars:     Size  Location     Type
  4618 ;;  i               2    9[COMRAM] unsigned int 
  4619 ;; Return value:  Size  Location     Type
  4620 ;;                  2    6[COMRAM] unsigned int 
  4621 ;; Registers used:
  4622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4623 ;; Tracked objects:
  4624 ;;		On entry : 0/0
  4625 ;;		On exit  : 0/0
  4626 ;;		Unchanged: 0/0
  4627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4628 ;;      Params:         2       0       0       0       0       0       0       0       0
  4629 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4630 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4631 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4632 ;;Total ram usage:        5 bytes
  4633 ;; Hardware stack levels used: 1
  4634 ;; Hardware stack levels required when called: 1
  4635 ;; This function calls:
  4636 ;;		_strchr
  4637 ;; This function is called by:
  4638 ;;		_strtok
  4639 ;; This function uses a non-reentrant model
  4640 ;;
  4641                           
  4642                           	psect	text22
  4643   001F96                     __ptext22:
  4644                           	callstack 0
  4645   001F96                     _strcspn:
  4646                           	callstack 26
  4647   001F96  0E00               	movlw	0
  4648   001F98  6E0B               	movwf	(strcspn@i+1)^0,c
  4649   001F9A  0E00               	movlw	0
  4650   001F9C  6E0A               	movwf	strcspn@i^0,c
  4651   001F9E  EFD4  F00F         	goto	l2557
  4652   001FA2                     l2555:
  4653   001FA2  2A07               	incf	strcspn@s^0,f,c
  4654   001FA4  4A0A               	infsnz	strcspn@i^0,f,c
  4655   001FA6  2A0B               	incf	(strcspn@i+1)^0,f,c
  4656   001FA8                     l2557:
  4657   001FA8  5007               	movf	strcspn@s^0,w,c
  4658   001FAA  6ED9               	movwf	fsr2l,c
  4659   001FAC  6ADA               	clrf	fsr2h,c
  4660   001FAE  50DF               	movf	indf2,w,c
  4661   001FB0  B4D8               	btfsc	status,2,c
  4662   001FB2  EFDD  F00F         	goto	u2141
  4663   001FB6  EFDF  F00F         	goto	u2140
  4664   001FBA                     u2141:
  4665   001FBA  EFF8  F00F         	goto	l1172
  4666   001FBE                     u2140:
  4667   001FBE  C008  F001         	movff	strcspn@c,strchr@s
  4668   001FC2  5001               	movf	strchr@s^0,w,c
  4669   001FC4  A4D8               	btfss	status,2,c
  4670   001FC6  0E08               	movlw	high __smallconst
  4671   001FC8  6E02               	movwf	(strchr@s+1)^0,c
  4672   001FCA  5007               	movf	strcspn@s^0,w,c
  4673   001FCC  6ED9               	movwf	fsr2l,c
  4674   001FCE  6ADA               	clrf	fsr2h,c
  4675   001FD0  50DF               	movf	indf2,w,c
  4676   001FD2  6E09               	movwf	??_strcspn^0,c
  4677   001FD4  5009               	movf	??_strcspn^0,w,c
  4678   001FD6  6E03               	movwf	strchr@c^0,c
  4679   001FD8  6A04               	clrf	(strchr@c+1)^0,c
  4680   001FDA  ECE5  F00E         	call	_strchr	;wreg free
  4681   001FDE  5001               	movf	?_strchr^0,w,c
  4682   001FE0  1002               	iorwf	(?_strchr+1)^0,w,c
  4683   001FE2  B4D8               	btfsc	status,2,c
  4684   001FE4  EFF6  F00F         	goto	u2151
  4685   001FE8  EFF8  F00F         	goto	u2150
  4686   001FEC                     u2151:
  4687   001FEC  EFD1  F00F         	goto	l2555
  4688   001FF0                     u2150:
  4689   001FF0                     l1172:
  4690   001FF0  C00A  F007         	movff	strcspn@i,?_strcspn
  4691   001FF4  C00B  F008         	movff	strcspn@i+1,?_strcspn+1
  4692   001FF8  0012               	return		;funcret
  4693   001FFA                     __end_of_strcspn:
  4694                           	callstack 0
  4695                           
  4696 ;; *************** function _strstr *****************
  4697 ;; Defined at:
  4698 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strstr.c"
  4699 ;; Parameters:    Size  Location     Type
  4700 ;;  h               2    6[COMRAM] PTR const unsigned char 
  4701 ;;		 -> STR_18(2), STR_17(2), NULL(0), Display_GPS@buffer(100), 
  4702 ;;  n               1    8[COMRAM] PTR const unsigned char 
  4703 ;;		 -> STR_16(7), STR_7(7), 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  nl              2    9[COMRAM] unsigned int 
  4706 ;; Return value:  Size  Location     Type
  4707 ;;                  2    6[COMRAM] PTR unsigned char 
  4708 ;; Registers used:
  4709 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4710 ;; Tracked objects:
  4711 ;;		On entry : 0/0
  4712 ;;		On exit  : 0/0
  4713 ;;		Unchanged: 0/0
  4714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4715 ;;      Params:         3       0       0       0       0       0       0       0       0
  4716 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4717 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4718 ;;      Totals:         5       0       0       0       0       0       0       0       0
  4719 ;;Total ram usage:        5 bytes
  4720 ;; Hardware stack levels used: 1
  4721 ;; Hardware stack levels required when called: 1
  4722 ;; This function calls:
  4723 ;;		_strchr
  4724 ;;		_strlen
  4725 ;;		_strncmp
  4726 ;; This function is called by:
  4727 ;;		_Display_GPS
  4728 ;;		_GPS_ParseGPRMC
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text23
  4733   001588                     __ptext23:
  4734                           	callstack 0
  4735   001588                     _strstr:
  4736                           	callstack 28
  4737   001588  5009               	movf	strstr@n^0,w,c
  4738   00158A  B4D8               	btfsc	status,2,c
  4739   00158C  EFCA  F00A         	goto	u2181
  4740   001590  EFCC  F00A         	goto	u2180
  4741   001594                     u2181:
  4742   001594  EF26  F00B         	goto	l2593
  4743   001598                     u2180:
  4744   001598  C009  F001         	movff	strstr@n,strlen@s
  4745   00159C  EC7A  F011         	call	_strlen	;wreg free
  4746   0015A0  C001  F00A         	movff	?_strlen,strstr@nl
  4747   0015A4  C002  F00B         	movff	?_strlen+1,strstr@nl+1
  4748   0015A8  EF05  F00B         	goto	l2589
  4749   0015AC                     l2581:
  4750   0015AC  C007  F001         	movff	strstr@h,strncmp@l
  4751   0015B0  C008  F002         	movff	strstr@h+1,strncmp@l+1
  4752   0015B4  C009  F003         	movff	strstr@n,strncmp@r
  4753   0015B8  C00A  F004         	movff	strstr@nl,strncmp@n
  4754   0015BC  C00B  F005         	movff	strstr@nl+1,strncmp@n+1
  4755   0015C0  EC52  F009         	call	_strncmp	;wreg free
  4756   0015C4  5001               	movf	?_strncmp^0,w,c
  4757   0015C6  1002               	iorwf	(?_strncmp+1)^0,w,c
  4758   0015C8  A4D8               	btfss	status,2,c
  4759   0015CA  EFE9  F00A         	goto	u2191
  4760   0015CE  EFEB  F00A         	goto	u2190
  4761   0015D2                     u2191:
  4762   0015D2  EFF1  F00A         	goto	l2587
  4763   0015D6                     u2190:
  4764   0015D6  C007  F007         	movff	strstr@h,?_strstr
  4765   0015DA  C008  F008         	movff	strstr@h+1,?_strstr+1
  4766   0015DE  EF2A  F00B         	goto	l1126
  4767   0015E2                     l2587:
  4768   0015E2  0E01               	movlw	1
  4769   0015E4  2407               	addwf	strstr@h^0,w,c
  4770   0015E6  6E01               	movwf	strchr@s^0,c
  4771   0015E8  0E00               	movlw	0
  4772   0015EA  2008               	addwfc	(strstr@h+1)^0,w,c
  4773   0015EC  6E02               	movwf	(strchr@s+1)^0,c
  4774   0015EE  C009  FFF6         	movff	strstr@n,tblptrl
  4775   0015F2                     	if	1	;There is more than 1 active tblptr byte
  4776   0015F2  0E08               	movlw	high __smallconst
  4777   0015F4  6EF7               	movwf	tblptrh,c
  4778   0015F6                     	endif
  4779   0015F6                     	if	0	;tblptru may be non-zero
  4780   0015F6                     	endif
  4781   0015F6                     	if	0	;tblptru may be non-zero
  4782   0015F6                     	endif
  4783   0015F6  0008               	tblrd		*
  4784   0015F8  50F5               	movf	tablat,w,c
  4785   0015FA  6E03               	movwf	strchr@c^0,c
  4786   0015FC  6A04               	clrf	(strchr@c+1)^0,c
  4787   0015FE  ECE5  F00E         	call	_strchr	;wreg free
  4788   001602  C001  F007         	movff	?_strchr,strstr@h
  4789   001606  C002  F008         	movff	?_strchr+1,strstr@h+1
  4790   00160A                     l2589:
  4791   00160A  5007               	movf	strstr@h^0,w,c
  4792   00160C  1008               	iorwf	(strstr@h+1)^0,w,c
  4793   00160E  B4D8               	btfsc	status,2,c
  4794   001610  EF0C  F00B         	goto	u2201
  4795   001614  EF0E  F00B         	goto	u2200
  4796   001618                     u2201:
  4797   001618  EF26  F00B         	goto	l2593
  4798   00161C                     u2200:
  4799   00161C  C007  FFF6         	movff	strstr@h,tblptrl
  4800   001620  C008  FFF7         	movff	strstr@h+1,tblptrh
  4801   001624  6AF8               	clrf	tblptru,c
  4802   001626  0E07               	movlw	(high __ramtop+-1)
  4803   001628  64F7               	cpfsgt	tblptrh,c
  4804   00162A  D003               	bra	u2217
  4805   00162C  0008               	tblrd		*
  4806   00162E  50F5               	movf	tablat,w,c
  4807   001630  D005               	bra	u2210
  4808   001632                     u2217:
  4809   001632  CFF6 FFE1          	movff	tblptrl,fsr1l
  4810   001636  CFF7 FFE2          	movff	tblptrh,fsr1h
  4811   00163A  50E7               	movf	indf1,w,c
  4812   00163C                     u2210:
  4813   00163C  0900               	iorlw	0
  4814   00163E  A4D8               	btfss	status,2,c
  4815   001640  EF24  F00B         	goto	u2221
  4816   001644  EF26  F00B         	goto	u2220
  4817   001648                     u2221:
  4818   001648  EFD6  F00A         	goto	l2581
  4819   00164C                     u2220:
  4820   00164C                     l2593:
  4821   00164C  0E00               	movlw	0
  4822   00164E  6E07               	movwf	?_strstr^0,c
  4823   001650  0E00               	movlw	0
  4824   001652  6E08               	movwf	(?_strstr+1)^0,c
  4825   001654                     l1126:
  4826   001654  0012               	return		;funcret
  4827   001656                     __end_of_strstr:
  4828                           	callstack 0
  4829                           
  4830 ;; *************** function _strncmp *****************
  4831 ;; Defined at:
  4832 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncmp.c"
  4833 ;; Parameters:    Size  Location     Type
  4834 ;;  l               2    0[COMRAM] PTR const unsigned char 
  4835 ;;		 -> STR_18(2), STR_17(2), NULL(0), Display_GPS@buffer(100), 
  4836 ;;  r               1    2[COMRAM] PTR const unsigned char 
  4837 ;;		 -> STR_16(7), STR_7(7), 
  4838 ;;  n               2    3[COMRAM] unsigned int 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;		None
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  2    0[COMRAM] int 
  4843 ;; Registers used:
  4844 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4850 ;;      Params:         5       0       0       0       0       0       0       0       0
  4851 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4852 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4853 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4854 ;;Total ram usage:        6 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_strstr
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text24
  4864   0012A4                     __ptext24:
  4865                           	callstack 0
  4866   0012A4                     _strncmp:
  4867                           	callstack 28
  4868   0012A4  0604               	decf	strncmp@n^0,f,c
  4869   0012A6  A0D8               	btfss	status,0,c
  4870   0012A8  0605               	decf	(strncmp@n+1)^0,f,c
  4871   0012AA  2804               	incf	strncmp@n^0,w,c
  4872   0012AC  E106               	bnz	u2051
  4873   0012AE  2805               	incf	(strncmp@n+1)^0,w,c
  4874   0012B0  A4D8               	btfss	status,2,c
  4875   0012B2  EF5D  F009         	goto	u2051
  4876   0012B6  EF5F  F009         	goto	u2050
  4877   0012BA                     u2051:
  4878   0012BA  EF6B  F009         	goto	l2533
  4879   0012BE                     u2050:
  4880   0012BE  0E00               	movlw	0
  4881   0012C0  6E02               	movwf	(?_strncmp+1)^0,c
  4882   0012C2  0E00               	movlw	0
  4883   0012C4  6E01               	movwf	?_strncmp^0,c
  4884   0012C6  EFD5  F009         	goto	l1145
  4885   0012CA                     l2531:
  4886   0012CA  4A01               	infsnz	strncmp@l^0,f,c
  4887   0012CC  2A02               	incf	(strncmp@l+1)^0,f,c
  4888   0012CE  2A03               	incf	strncmp@r^0,f,c
  4889   0012D0  0604               	decf	strncmp@n^0,f,c
  4890   0012D2  A0D8               	btfss	status,0,c
  4891   0012D4  0605               	decf	(strncmp@n+1)^0,f,c
  4892   0012D6                     l2533:
  4893   0012D6  C001  FFF6         	movff	strncmp@l,tblptrl
  4894   0012DA  C002  FFF7         	movff	strncmp@l+1,tblptrh
  4895   0012DE  6AF8               	clrf	tblptru,c
  4896   0012E0  0E07               	movlw	(high __ramtop+-1)
  4897   0012E2  64F7               	cpfsgt	tblptrh,c
  4898   0012E4  D003               	bra	u2067
  4899   0012E6  0008               	tblrd		*
  4900   0012E8  50F5               	movf	tablat,w,c
  4901   0012EA  D005               	bra	u2060
  4902   0012EC                     u2067:
  4903   0012EC  CFF6 FFE1          	movff	tblptrl,fsr1l
  4904   0012F0  CFF7 FFE2          	movff	tblptrh,fsr1h
  4905   0012F4  50E7               	movf	indf1,w,c
  4906   0012F6                     u2060:
  4907   0012F6  0900               	iorlw	0
  4908   0012F8  B4D8               	btfsc	status,2,c
  4909   0012FA  EF81  F009         	goto	u2071
  4910   0012FE  EF83  F009         	goto	u2070
  4911   001302                     u2071:
  4912   001302  EFB9  F009         	goto	l2541
  4913   001306                     u2070:
  4914   001306  C003  FFF6         	movff	strncmp@r,tblptrl
  4915   00130A                     	if	1	;There is more than 1 active tblptr byte
  4916   00130A  0E08               	movlw	high __smallconst
  4917   00130C  6EF7               	movwf	tblptrh,c
  4918   00130E                     	endif
  4919   00130E                     	if	0	;tblptru may be non-zero
  4920   00130E                     	endif
  4921   00130E                     	if	0	;tblptru may be non-zero
  4922   00130E                     	endif
  4923   00130E  0008               	tblrd		*
  4924   001310  50F5               	movf	tablat,w,c
  4925   001312  0900               	iorlw	0
  4926   001314  B4D8               	btfsc	status,2,c
  4927   001316  EF8F  F009         	goto	u2081
  4928   00131A  EF91  F009         	goto	u2080
  4929   00131E                     u2081:
  4930   00131E  EFB9  F009         	goto	l2541
  4931   001322                     u2080:
  4932   001322  5004               	movf	strncmp@n^0,w,c
  4933   001324  1005               	iorwf	(strncmp@n+1)^0,w,c
  4934   001326  B4D8               	btfsc	status,2,c
  4935   001328  EF98  F009         	goto	u2091
  4936   00132C  EF9A  F009         	goto	u2090
  4937   001330                     u2091:
  4938   001330  EFB9  F009         	goto	l2541
  4939   001334                     u2090:
  4940   001334  C003  FFF6         	movff	strncmp@r,tblptrl
  4941   001338                     	if	1	;There is more than 1 active tblptr byte
  4942   001338  0E08               	movlw	high __smallconst
  4943   00133A  6EF7               	movwf	tblptrh,c
  4944   00133C                     	endif
  4945   00133C                     	if	0	;tblptru may be non-zero
  4946   00133C                     	endif
  4947   00133C                     	if	0	;tblptru may be non-zero
  4948   00133C                     	endif
  4949   00133C  0008               	tblrd		*
  4950   00133E  CFF5 F006          	movff	tablat,??_strncmp
  4951   001342  C001  FFF6         	movff	strncmp@l,tblptrl
  4952   001346  C002  FFF7         	movff	strncmp@l+1,tblptrh
  4953   00134A  6AF8               	clrf	tblptru,c
  4954   00134C  0E07               	movlw	(high __ramtop+-1)
  4955   00134E  64F7               	cpfsgt	tblptrh,c
  4956   001350  D003               	bra	u2107
  4957   001352  0008               	tblrd		*
  4958   001354  50F5               	movf	tablat,w,c
  4959   001356  D005               	bra	u2105
  4960   001358                     u2107:
  4961   001358  CFF6 FFE1          	movff	tblptrl,fsr1l
  4962   00135C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4963   001360  50E7               	movf	indf1,w,c
  4964   001362                     u2105:
  4965   001362  1806               	xorwf	??_strncmp^0,w,c
  4966   001364  B4D8               	btfsc	status,2,c
  4967   001366  EFB7  F009         	goto	u2101
  4968   00136A  EFB9  F009         	goto	u2100
  4969   00136E                     u2101:
  4970   00136E  EF65  F009         	goto	l2531
  4971   001372                     u2100:
  4972   001372                     l2541:
  4973   001372  C001  FFF6         	movff	strncmp@l,tblptrl
  4974   001376  C002  FFF7         	movff	strncmp@l+1,tblptrh
  4975   00137A  6AF8               	clrf	tblptru,c
  4976   00137C  0E07               	movlw	(high __ramtop+-1)
  4977   00137E  64F7               	cpfsgt	tblptrh,c
  4978   001380  D003               	bra	u2117
  4979   001382  0008               	tblrd		*
  4980   001384  50F5               	movf	tablat,w,c
  4981   001386  D005               	bra	u2110
  4982   001388                     u2117:
  4983   001388  CFF6 FFE1          	movff	tblptrl,fsr1l
  4984   00138C  CFF7 FFE2          	movff	tblptrh,fsr1h
  4985   001390  50E7               	movf	indf1,w,c
  4986   001392                     u2110:
  4987   001392  6E06               	movwf	??_strncmp^0,c
  4988   001394  C003  FFF6         	movff	strncmp@r,tblptrl
  4989   001398                     	if	1	;There is more than 1 active tblptr byte
  4990   001398  0E08               	movlw	high __smallconst
  4991   00139A  6EF7               	movwf	tblptrh,c
  4992   00139C                     	endif
  4993   00139C                     	if	0	;tblptru may be non-zero
  4994   00139C                     	endif
  4995   00139C                     	if	0	;tblptru may be non-zero
  4996   00139C                     	endif
  4997   00139C  0008               	tblrd		*
  4998   00139E  50F5               	movf	tablat,w,c
  4999   0013A0  5C06               	subwf	??_strncmp^0,w,c
  5000   0013A2  6E01               	movwf	?_strncmp^0,c
  5001   0013A4  6A02               	clrf	(?_strncmp+1)^0,c
  5002   0013A6  A0D8               	btfss	status,0,c
  5003   0013A8  0602               	decf	(?_strncmp+1)^0,f,c
  5004   0013AA                     l1145:
  5005   0013AA  0012               	return		;funcret
  5006   0013AC                     __end_of_strncmp:
  5007                           	callstack 0
  5008                           
  5009 ;; *************** function _strlen *****************
  5010 ;; Defined at:
  5011 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strlen.c"
  5012 ;; Parameters:    Size  Location     Type
  5013 ;;  s               1    0[COMRAM] PTR const unsigned char 
  5014 ;;		 -> STR_16(7), STR_7(7), 
  5015 ;; Auto vars:     Size  Location     Type
  5016 ;;  a               1    2[COMRAM] PTR const unsigned char 
  5017 ;;		 -> STR_16(7), STR_7(7), 
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  2    0[COMRAM] unsigned int 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5027 ;;      Params:         2       0       0       0       0       0       0       0       0
  5028 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5029 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5030 ;;      Totals:         3       0       0       0       0       0       0       0       0
  5031 ;;Total ram usage:        3 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		_strstr
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040                           	psect	text25
  5041   0022F4                     __ptext25:
  5042                           	callstack 0
  5043   0022F4                     _strlen:
  5044                           	callstack 28
  5045   0022F4  C001  F003         	movff	strlen@s,strlen@a
  5046   0022F8  EF7F  F011         	goto	l2519
  5047   0022FC                     l2517:
  5048   0022FC  2A01               	incf	strlen@s^0,f,c
  5049   0022FE                     l2519:
  5050   0022FE  C001  FFF6         	movff	strlen@s,tblptrl
  5051   002302                     	if	1	;There is more than 1 active tblptr byte
  5052   002302  0E08               	movlw	high __smallconst
  5053   002304  6EF7               	movwf	tblptrh,c
  5054   002306                     	endif
  5055   002306                     	if	0	;tblptru may be non-zero
  5056   002306                     	endif
  5057   002306                     	if	0	;tblptru may be non-zero
  5058   002306                     	endif
  5059   002306  0008               	tblrd		*
  5060   002308  50F5               	movf	tablat,w,c
  5061   00230A  0900               	iorlw	0
  5062   00230C  A4D8               	btfss	status,2,c
  5063   00230E  EF8B  F011         	goto	u2041
  5064   002312  EF8D  F011         	goto	u2040
  5065   002316                     u2041:
  5066   002316  EF7E  F011         	goto	l2517
  5067   00231A                     u2040:
  5068   00231A  5003               	movf	strlen@a^0,w,c
  5069   00231C  5C01               	subwf	strlen@s^0,w,c
  5070   00231E  6E01               	movwf	?_strlen^0,c
  5071   002320  6A02               	clrf	(?_strlen+1)^0,c
  5072   002322  BE01               	btfsc	?_strlen^0,7,c
  5073   002324  0602               	decf	(?_strlen+1)^0,f,c
  5074   002326  0012               	return		;funcret
  5075   002328                     __end_of_strlen:
  5076                           	callstack 0
  5077                           
  5078 ;; *************** function _strchr *****************
  5079 ;; Defined at:
  5080 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strchr.c"
  5081 ;; Parameters:    Size  Location     Type
  5082 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5083 ;;		 -> STR_18(2), STR_17(2), NULL(0), Display_GPS@buffer(100), 
  5084 ;;  c               2    2[COMRAM] int 
  5085 ;; Auto vars:     Size  Location     Type
  5086 ;;		None
  5087 ;; Return value:  Size  Location     Type
  5088 ;;                  2    0[COMRAM] PTR unsigned char 
  5089 ;; Registers used:
  5090 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  5091 ;; Tracked objects:
  5092 ;;		On entry : 0/0
  5093 ;;		On exit  : 0/0
  5094 ;;		Unchanged: 0/0
  5095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5096 ;;      Params:         4       0       0       0       0       0       0       0       0
  5097 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5098 ;;      Temps:          2       0       0       0       0       0       0       0       0
  5099 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5100 ;;Total ram usage:        6 bytes
  5101 ;; Hardware stack levels used: 1
  5102 ;; This function calls:
  5103 ;;		Nothing
  5104 ;; This function is called by:
  5105 ;;		_strstr
  5106 ;;		_strcspn
  5107 ;;		_strspn
  5108 ;; This function uses a non-reentrant model
  5109 ;;
  5110                           
  5111                           	psect	text26
  5112   001DCA                     __ptext26:
  5113                           	callstack 0
  5114   001DCA                     _strchr:
  5115                           	callstack 28
  5116   001DCA                     l1132:
  5117   001DCA  C001  FFF6         	movff	strchr@s,tblptrl
  5118   001DCE  C002  FFF7         	movff	strchr@s+1,tblptrh
  5119   001DD2  6AF8               	clrf	tblptru,c
  5120   001DD4  0E07               	movlw	(high __ramtop+-1)
  5121   001DD6  64F7               	cpfsgt	tblptrh,c
  5122   001DD8  D003               	bra	u1847
  5123   001DDA  0008               	tblrd		*
  5124   001DDC  50F5               	movf	tablat,w,c
  5125   001DDE  D005               	bra	u1840
  5126   001DE0                     u1847:
  5127   001DE0  CFF6 FFE1          	movff	tblptrl,fsr1l
  5128   001DE4  CFF7 FFE2          	movff	tblptrh,fsr1h
  5129   001DE8  50E7               	movf	indf1,w,c
  5130   001DEA                     u1840:
  5131   001DEA  1803               	xorwf	strchr@c^0,w,c
  5132   001DEC  A4D8               	btfss	status,2,c
  5133   001DEE  EFFB  F00E         	goto	u1851
  5134   001DF2  EFFD  F00E         	goto	u1850
  5135   001DF6                     u1851:
  5136   001DF6  EF03  F00F         	goto	l2393
  5137   001DFA                     u1850:
  5138   001DFA  C001  F001         	movff	strchr@s,?_strchr
  5139   001DFE  C002  F002         	movff	strchr@s+1,?_strchr+1
  5140   001E02  EF25  F00F         	goto	l1134
  5141   001E06                     l2393:
  5142   001E06  5001               	movf	strchr@s^0,w,c
  5143   001E08  6E05               	movwf	??_strchr^0,c
  5144   001E0A  5002               	movf	(strchr@s+1)^0,w,c
  5145   001E0C  6E06               	movwf	(??_strchr+1)^0,c
  5146   001E0E  4A01               	infsnz	strchr@s^0,f,c
  5147   001E10  2A02               	incf	(strchr@s+1)^0,f,c
  5148   001E12  C005  FFF6         	movff	??_strchr,tblptrl
  5149   001E16  C006  FFF7         	movff	??_strchr+1,tblptrh
  5150   001E1A  6AF8               	clrf	tblptru,c
  5151   001E1C  0E07               	movlw	(high __ramtop+-1)
  5152   001E1E  64F7               	cpfsgt	tblptrh,c
  5153   001E20  D003               	bra	u1867
  5154   001E22  0008               	tblrd		*
  5155   001E24  50F5               	movf	tablat,w,c
  5156   001E26  D005               	bra	u1860
  5157   001E28                     u1867:
  5158   001E28  CFF6 FFE1          	movff	tblptrl,fsr1l
  5159   001E2C  CFF7 FFE2          	movff	tblptrh,fsr1h
  5160   001E30  50E7               	movf	indf1,w,c
  5161   001E32                     u1860:
  5162   001E32  0900               	iorlw	0
  5163   001E34  A4D8               	btfss	status,2,c
  5164   001E36  EF1F  F00F         	goto	u1871
  5165   001E3A  EF21  F00F         	goto	u1870
  5166   001E3E                     u1871:
  5167   001E3E  EFE5  F00E         	goto	l1132
  5168   001E42                     u1870:
  5169   001E42  0E00               	movlw	0
  5170   001E44  6E01               	movwf	?_strchr^0,c
  5171   001E46  0E00               	movlw	0
  5172   001E48  6E02               	movwf	(?_strchr+1)^0,c
  5173   001E4A                     l1134:
  5174   001E4A  0012               	return		;funcret
  5175   001E4C                     __end_of_strchr:
  5176                           	callstack 0
  5177                           
  5178 ;; *************** function _strncpy *****************
  5179 ;; Defined at:
  5180 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strncpy.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  d               2    0[COMRAM] PTR unsigned char 
  5183 ;;		 -> GPS_ParseGPRMC@buf(100), Display_GPS@lon(11), Display_GPS@lat(10), 
  5184 ;;  s               2    2[COMRAM] PTR const unsigned char 
  5185 ;;		 -> GPS_ParseGPRMC@buf(100), NULL(0), Display_GPS@buffer(100), 
  5186 ;;  n               2    4[COMRAM] unsigned int 
  5187 ;; Auto vars:     Size  Location     Type
  5188 ;;  cp              2    6[COMRAM] PTR unsigned char 
  5189 ;;		 -> GPS_ParseGPRMC@buf(100), Display_GPS@lon(11), Display_GPS@lat(10), 
  5190 ;; Return value:  Size  Location     Type
  5191 ;;                  2    0[COMRAM] PTR unsigned char 
  5192 ;; Registers used:
  5193 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5194 ;; Tracked objects:
  5195 ;;		On entry : 0/0
  5196 ;;		On exit  : 0/0
  5197 ;;		Unchanged: 0/0
  5198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5199 ;;      Params:         6       0       0       0       0       0       0       0       0
  5200 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5201 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5202 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5203 ;;Total ram usage:        8 bytes
  5204 ;; Hardware stack levels used: 1
  5205 ;; This function calls:
  5206 ;;		Nothing
  5207 ;; This function is called by:
  5208 ;;		_GPS_ParseGPRMC
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           	psect	text27
  5213   001E4C                     __ptext27:
  5214                           	callstack 0
  5215   001E4C                     _strncpy:
  5216                           	callstack 28
  5217   001E4C  C001  F007         	movff	strncpy@d,strncpy@cp
  5218   001E50  C002  F008         	movff	strncpy@d+1,strncpy@cp+1
  5219   001E54  EF47  F00F         	goto	l2627
  5220   001E58                     l2621:
  5221   001E58  0605               	decf	strncpy@n^0,f,c
  5222   001E5A  A0D8               	btfss	status,0,c
  5223   001E5C  0606               	decf	(strncpy@n+1)^0,f,c
  5224   001E5E  C003  FFD9         	movff	strncpy@s,fsr2l
  5225   001E62  C004  FFDA         	movff	strncpy@s+1,fsr2h
  5226   001E66  4A03               	infsnz	strncpy@s^0,f,c
  5227   001E68  2A04               	incf	(strncpy@s+1)^0,f,c
  5228   001E6A  C007  FFE1         	movff	strncpy@cp,fsr1l
  5229   001E6E  C008  FFE2         	movff	strncpy@cp+1,fsr1h
  5230   001E72  4A07               	infsnz	strncpy@cp^0,f,c
  5231   001E74  2A08               	incf	(strncpy@cp+1)^0,f,c
  5232   001E76  CFDF FFE7          	movff	indf2,indf1
  5233   001E7A  50E7               	movf	indf1,w,c
  5234   001E7C  A4D8               	btfss	status,2,c
  5235   001E7E  EF43  F00F         	goto	u2271
  5236   001E82  EF45  F00F         	goto	u2270
  5237   001E86                     u2271:
  5238   001E86  EF47  F00F         	goto	l2627
  5239   001E8A                     u2270:
  5240   001E8A  EF59  F00F         	goto	l2633
  5241   001E8E                     l2627:
  5242   001E8E  5005               	movf	strncpy@n^0,w,c
  5243   001E90  1006               	iorwf	(strncpy@n+1)^0,w,c
  5244   001E92  A4D8               	btfss	status,2,c
  5245   001E94  EF4E  F00F         	goto	u2281
  5246   001E98  EF50  F00F         	goto	u2280
  5247   001E9C                     u2281:
  5248   001E9C  EF2C  F00F         	goto	l2621
  5249   001EA0                     u2280:
  5250   001EA0  EF59  F00F         	goto	l2633
  5251   001EA4                     l2629:
  5252   001EA4  C007  FFD9         	movff	strncpy@cp,fsr2l
  5253   001EA8  C008  FFDA         	movff	strncpy@cp+1,fsr2h
  5254   001EAC  6ADF               	clrf	indf2,c
  5255   001EAE  4A07               	infsnz	strncpy@cp^0,f,c
  5256   001EB0  2A08               	incf	(strncpy@cp+1)^0,f,c
  5257   001EB2                     l2633:
  5258   001EB2  0605               	decf	strncpy@n^0,f,c
  5259   001EB4  A0D8               	btfss	status,0,c
  5260   001EB6  0606               	decf	(strncpy@n+1)^0,f,c
  5261   001EB8  2805               	incf	strncpy@n^0,w,c
  5262   001EBA  E106               	bnz	u2291
  5263   001EBC  2806               	incf	(strncpy@n+1)^0,w,c
  5264   001EBE  A4D8               	btfss	status,2,c
  5265   001EC0  EF64  F00F         	goto	u2291
  5266   001EC4  EF66  F00F         	goto	u2290
  5267   001EC8                     u2291:
  5268   001EC8  EF52  F00F         	goto	l2629
  5269   001ECC                     u2290:
  5270   001ECC  0012               	return		;funcret
  5271   001ECE                     __end_of_strncpy:
  5272                           	callstack 0
  5273                           
  5274 ;; *************** function _Display_DHT11 *****************
  5275 ;; Defined at:
  5276 ;;		line 39 in file "main.c"
  5277 ;; Parameters:    Size  Location     Type
  5278 ;;		None
  5279 ;; Auto vars:     Size  Location     Type
  5280 ;;  temp            1   68[COMRAM] unsigned char 
  5281 ;;  hum             1   67[COMRAM] unsigned char 
  5282 ;; Return value:  Size  Location     Type
  5283 ;;                  1    wreg      void 
  5284 ;; Registers used:
  5285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5286 ;; Tracked objects:
  5287 ;;		On entry : 0/0
  5288 ;;		On exit  : 0/0
  5289 ;;		Unchanged: 0/0
  5290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5291 ;;      Params:         0       0       0       0       0       0       0       0       0
  5292 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5293 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5294 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5295 ;;Total ram usage:        2 bytes
  5296 ;; Hardware stack levels used: 1
  5297 ;; Hardware stack levels required when called: 8
  5298 ;; This function calls:
  5299 ;;		_Clear_Line
  5300 ;;		_DHT11_Read
  5301 ;;		_LCD_String_xy
  5302 ;;		_sprintf
  5303 ;; This function is called by:
  5304 ;;		_main
  5305 ;; This function uses a non-reentrant model
  5306 ;;
  5307                           
  5308                           	psect	text28
  5309   001AB8                     __ptext28:
  5310                           	callstack 0
  5311   001AB8                     _Display_DHT11:
  5312                           	callstack 22
  5313   001AB8                     
  5314                           ;main.c: 40:     uint8_t hum, temp;;main.c: 43:     Clear_Line(0);
  5315   001AB8  0E00               	movlw	0
  5316   001ABA  EC07  F012         	call	_Clear_Line
  5317                           
  5318                           ;main.c: 44:     Clear_Line(1);
  5319   001ABE  0E01               	movlw	1
  5320   001AC0  EC07  F012         	call	_Clear_Line
  5321   001AC4                     
  5322                           ;main.c: 47:     if(DHT11_Read(&hum, &temp)) {
  5323   001AC4  0E44               	movlw	low Display_DHT11@hum
  5324   001AC6  6E03               	movwf	DHT11_Read@humidity^0,c
  5325   001AC8  0E45               	movlw	low Display_DHT11@temp
  5326   001ACA  6E04               	movwf	DHT11_Read@temperature^0,c
  5327   001ACC  ECEE  F00B         	call	_DHT11_Read	;wreg free
  5328   001AD0  0900               	iorlw	0
  5329   001AD2  B4D8               	btfsc	status,2,c
  5330   001AD4  EF6E  F00D         	goto	u2701
  5331   001AD8  EF70  F00D         	goto	u2700
  5332   001ADC                     u2701:
  5333   001ADC  EF9A  F00D         	goto	l2927
  5334   001AE0                     u2700:
  5335   001AE0                     
  5336                           ;main.c: 49:         sprintf(lcd_buffer, "H: %d%%", hum);
  5337   001AE0  0E7D               	movlw	low _lcd_buffer
  5338   001AE2  6E2F               	movwf	sprintf@s^0,c
  5339   001AE4  0E01               	movlw	high _lcd_buffer
  5340   001AE6  6E30               	movwf	(sprintf@s+1)^0,c
  5341   001AE8  0EAF               	movlw	low STR_2
  5342   001AEA  6E31               	movwf	sprintf@fmt^0,c
  5343   001AEC  C044  F032         	movff	Display_DHT11@hum,?_sprintf+3
  5344   001AF0  6A33               	clrf	(?_sprintf+4)^0,c
  5345   001AF2  EC23  F011         	call	_sprintf	;wreg free
  5346   001AF6                     
  5347                           ;main.c: 50:         LCD_String_xy(0, 0, lcd_buffer);
  5348   001AF6  0E00               	movlw	0
  5349   001AF8  6E05               	movwf	LCD_String_xy@pos^0,c
  5350   001AFA  0E7D               	movlw	low _lcd_buffer
  5351   001AFC  6E06               	movwf	LCD_String_xy@msg^0,c
  5352   001AFE  0E01               	movlw	high _lcd_buffer
  5353   001B00  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  5354   001B02  0E00               	movlw	0
  5355   001B04  EC2C  F010         	call	_LCD_String_xy
  5356   001B08                     
  5357                           ;main.c: 53:         sprintf(lcd_buffer, "T: %d\xDF""C", temp);
  5358   001B08  0E7D               	movlw	low _lcd_buffer
  5359   001B0A  6E2F               	movwf	sprintf@s^0,c
  5360   001B0C  0E01               	movlw	high _lcd_buffer
  5361   001B0E  6E30               	movwf	(sprintf@s+1)^0,c
  5362   001B10  0EB7               	movlw	low STR_3
  5363   001B12  6E31               	movwf	sprintf@fmt^0,c
  5364   001B14  C045  F032         	movff	Display_DHT11@temp,?_sprintf+3
  5365   001B18  6A33               	clrf	(?_sprintf+4)^0,c
  5366   001B1A  EC23  F011         	call	_sprintf	;wreg free
  5367                           
  5368                           ;main.c: 54:         LCD_String_xy(1, 0, lcd_buffer);
  5369   001B1E  0E00               	movlw	0
  5370   001B20  6E05               	movwf	LCD_String_xy@pos^0,c
  5371   001B22  0E7D               	movlw	low _lcd_buffer
  5372   001B24  6E06               	movwf	LCD_String_xy@msg^0,c
  5373   001B26  0E01               	movlw	high _lcd_buffer
  5374   001B28  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  5375   001B2A  0E01               	movlw	1
  5376   001B2C  EC2C  F010         	call	_LCD_String_xy
  5377                           
  5378                           ;main.c: 55:     } else {
  5379   001B30  EFB0  F00D         	goto	l44
  5380   001B34                     l2927:
  5381                           
  5382                           ;main.c: 57:         LCD_String_xy(0, 0, "DHT11: Error");
  5383   001B34  0E00               	movlw	0
  5384   001B36  6E05               	movwf	LCD_String_xy@pos^0,c
  5385   001B38  0E77               	movlw	low STR_4
  5386   001B3A  6E06               	movwf	LCD_String_xy@msg^0,c
  5387   001B3C  5006               	movf	LCD_String_xy@msg^0,w,c
  5388   001B3E  A4D8               	btfss	status,2,c
  5389   001B40  0E08               	movlw	high __smallconst
  5390   001B42  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  5391   001B44  0E00               	movlw	0
  5392   001B46  EC2C  F010         	call	_LCD_String_xy
  5393                           
  5394                           ;main.c: 58:         LCD_String_xy(1, 0, "Reintentando...");
  5395   001B4A  0E00               	movlw	0
  5396   001B4C  6E05               	movwf	LCD_String_xy@pos^0,c
  5397   001B4E  0E3E               	movlw	low STR_5
  5398   001B50  6E06               	movwf	LCD_String_xy@msg^0,c
  5399   001B52  5006               	movf	LCD_String_xy@msg^0,w,c
  5400   001B54  A4D8               	btfss	status,2,c
  5401   001B56  0E08               	movlw	high __smallconst
  5402   001B58  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  5403   001B5A  0E01               	movlw	1
  5404   001B5C  EC2C  F010         	call	_LCD_String_xy
  5405   001B60                     l44:
  5406   001B60  0012               	return		;funcret
  5407   001B62                     __end_of_Display_DHT11:
  5408                           	callstack 0
  5409                           
  5410 ;; *************** function _sprintf *****************
  5411 ;; Defined at:
  5412 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  s               2   46[COMRAM] PTR unsigned char 
  5415 ;;		 -> lcd_buffer(17), 
  5416 ;;  fmt             1   48[COMRAM] PTR const unsigned char 
  5417 ;;		 -> STR_13(21), STR_12(23), STR_9(9), STR_8(9), 
  5418 ;;		 -> STR_3(8), STR_2(8), 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  f              11   56[COMRAM] struct _IO_FILE
  5421 ;;  ret             2    0        int 
  5422 ;;  ap              1   55[COMRAM] PTR void [1]
  5423 ;;		 -> ?_sprintf(2), 
  5424 ;; Return value:  Size  Location     Type
  5425 ;;                  2   46[COMRAM] int 
  5426 ;; Registers used:
  5427 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5428 ;; Tracked objects:
  5429 ;;		On entry : 0/0
  5430 ;;		On exit  : 0/0
  5431 ;;		Unchanged: 0/0
  5432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5433 ;;      Params:         9       0       0       0       0       0       0       0       0
  5434 ;;      Locals:        12       0       0       0       0       0       0       0       0
  5435 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5436 ;;      Totals:        21       0       0       0       0       0       0       0       0
  5437 ;;Total ram usage:       21 bytes
  5438 ;; Hardware stack levels used: 1
  5439 ;; Hardware stack levels required when called: 7
  5440 ;; This function calls:
  5441 ;;		_vfprintf
  5442 ;; This function is called by:
  5443 ;;		_Display_DHT11
  5444 ;;		_Display_GPS
  5445 ;;		_Display_RTC
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text29
  5450   002246                     __ptext29:
  5451                           	callstack 0
  5452   002246                     _sprintf:
  5453                           	callstack 22
  5454   002246  0E32               	movlw	low (?_sprintf+3)
  5455   002248  6E38               	movwf	sprintf@ap^0,c
  5456   00224A  C02F  F039         	movff	sprintf@s,sprintf@f
  5457   00224E  C030  F03A         	movff	sprintf@s+1,sprintf@f+1
  5458   002252  0E00               	movlw	0
  5459   002254  6E3C               	movwf	(sprintf@f+3)^0,c
  5460   002256  0E00               	movlw	0
  5461   002258  6E3B               	movwf	(sprintf@f+2)^0,c
  5462   00225A  0E00               	movlw	0
  5463   00225C  6E43               	movwf	(sprintf@f+10)^0,c
  5464   00225E  0E00               	movlw	0
  5465   002260  6E42               	movwf	(sprintf@f+9)^0,c
  5466   002262  0E39               	movlw	low sprintf@f
  5467   002264  6E2B               	movwf	vfprintf@fp^0,c
  5468   002266  C031  F02C         	movff	sprintf@fmt,vfprintf@fmt
  5469   00226A  0E38               	movlw	low sprintf@ap
  5470   00226C  6E2D               	movwf	vfprintf@ap^0,c
  5471   00226E  EC03  F011         	call	_vfprintf	;wreg free
  5472   002272  503B               	movf	(sprintf@f+2)^0,w,c
  5473   002274  242F               	addwf	sprintf@s^0,w,c
  5474   002276  6ED9               	movwf	fsr2l,c
  5475   002278  503C               	movf	(sprintf@f+3)^0,w,c
  5476   00227A  2030               	addwfc	(sprintf@s+1)^0,w,c
  5477   00227C  6EDA               	movwf	fsr2h,c
  5478   00227E  6ADF               	clrf	indf2,c
  5479   002280  0012               	return		;funcret
  5480   002282                     __end_of_sprintf:
  5481                           	callstack 0
  5482                           
  5483 ;; *************** function _vfprintf *****************
  5484 ;; Defined at:
  5485 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  5486 ;; Parameters:    Size  Location     Type
  5487 ;;  fp              1   42[COMRAM] PTR struct _IO_FILE
  5488 ;;		 -> sprintf@f(11), 
  5489 ;;  fmt             1   43[COMRAM] PTR const unsigned char 
  5490 ;;		 -> STR_13(21), STR_12(23), STR_9(9), STR_8(9), 
  5491 ;;		 -> STR_3(8), STR_2(8), 
  5492 ;;  ap              1   44[COMRAM] PTR PTR void 
  5493 ;;		 -> sprintf@ap(1), 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  cfmt            1   45[COMRAM] PTR unsigned char 
  5496 ;;		 -> STR_13(21), STR_12(23), STR_9(9), STR_8(9), 
  5497 ;;		 -> STR_3(8), STR_2(8), 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  2   42[COMRAM] int 
  5500 ;; Registers used:
  5501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5507 ;;      Params:         3       0       0       0       0       0       0       0       0
  5508 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5509 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5510 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5511 ;;Total ram usage:        4 bytes
  5512 ;; Hardware stack levels used: 1
  5513 ;; Hardware stack levels required when called: 6
  5514 ;; This function calls:
  5515 ;;		_vfpfcnvrt
  5516 ;; This function is called by:
  5517 ;;		_sprintf
  5518 ;; This function uses a non-reentrant model
  5519 ;;
  5520                           
  5521                           	psect	text30
  5522   002206                     __ptext30:
  5523                           	callstack 0
  5524   002206                     _vfprintf:
  5525                           	callstack 22
  5526   002206                     
  5527                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  5528   002206  C02C  F02E         	movff	vfprintf@fmt,vfprintf@cfmt
  5529                           
  5530                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5531   00220A  EF10  F011         	goto	l2705
  5532   00220E                     l2703:
  5533                           
  5534                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5535   00220E  C02B  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  5536   002212  0E2E               	movlw	low vfprintf@cfmt
  5537   002214  6E21               	movwf	vfpfcnvrt@fmt^0,c
  5538   002216  C02D  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  5539   00221A  6A23               	clrf	(vfpfcnvrt@ap+1)^0,c
  5540   00221C  EC68  F004         	call	_vfpfcnvrt	;wreg free
  5541   002220                     l2705:
  5542                           
  5543                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  5544   002220  C02E  FFF6         	movff	vfprintf@cfmt,tblptrl
  5545   002224                     	if	1	;There is more than 1 active tblptr byte
  5546   002224  0E08               	movlw	high __smallconst
  5547   002226  6EF7               	movwf	tblptrh,c
  5548   002228                     	endif
  5549   002228                     	if	0	;tblptru may be non-zero
  5550   002228                     	endif
  5551   002228                     	if	0	;tblptru may be non-zero
  5552   002228                     	endif
  5553   002228  0008               	tblrd		*
  5554   00222A  50F5               	movf	tablat,w,c
  5555   00222C  0900               	iorlw	0
  5556   00222E  A4D8               	btfss	status,2,c
  5557   002230  EF1C  F011         	goto	u2361
  5558   002234  EF1E  F011         	goto	u2360
  5559   002238                     u2361:
  5560   002238  EF07  F011         	goto	l2703
  5561   00223C                     u2360:
  5562   00223C                     
  5563                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  5564   00223C  0E00               	movlw	0
  5565   00223E  6E2C               	movwf	(?_vfprintf+1)^0,c
  5566   002240  0E00               	movlw	0
  5567   002242  6E2B               	movwf	?_vfprintf^0,c
  5568   002244  0012               	return		;funcret
  5569   002246                     __end_of_vfprintf:
  5570                           	callstack 0
  5571                           
  5572 ;; *************** function _vfpfcnvrt *****************
  5573 ;; Defined at:
  5574 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  5575 ;; Parameters:    Size  Location     Type
  5576 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  5577 ;;		 -> sprintf@f(11), 
  5578 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  5579 ;;		 -> vfprintf@cfmt(1), 
  5580 ;;  ap              2   33[COMRAM] PTR PTR void 
  5581 ;;		 -> sprintf@ap(1), 
  5582 ;; Auto vars:     Size  Location     Type
  5583 ;;  convarg         4   36[COMRAM] struct .
  5584 ;;  done            1   41[COMRAM] _Bool 
  5585 ;;  cp              1   40[COMRAM] PTR unsigned char 
  5586 ;;		 -> STR_13(21), STR_12(23), STR_9(9), STR_8(9), 
  5587 ;;		 -> STR_3(8), STR_2(8), 
  5588 ;;  c               1    0        unsigned char 
  5589 ;; Return value:  Size  Location     Type
  5590 ;;                  1    wreg      void 
  5591 ;; Registers used:
  5592 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5593 ;; Tracked objects:
  5594 ;;		On entry : 0/0
  5595 ;;		On exit  : 0/0
  5596 ;;		Unchanged: 0/0
  5597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5598 ;;      Params:         4       0       0       0       0       0       0       0       0
  5599 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5600 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5601 ;;      Totals:        11       0       0       0       0       0       0       0       0
  5602 ;;Total ram usage:       11 bytes
  5603 ;; Hardware stack levels used: 1
  5604 ;; Hardware stack levels required when called: 5
  5605 ;; This function calls:
  5606 ;;		_dtoa
  5607 ;;		_fputc
  5608 ;;		_read_prec_or_width
  5609 ;;		_stoa
  5610 ;; This function is called by:
  5611 ;;		_vfprintf
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text31
  5616   0008D0                     __ptext31:
  5617                           	callstack 0
  5618   0008D0                     _vfpfcnvrt:
  5619                           	callstack 22
  5620   0008D0                     
  5621                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  5622   0008D0  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5623   0008D2  6ED9               	movwf	fsr2l,c
  5624   0008D4  6ADA               	clrf	fsr2h,c
  5625   0008D6  CFDF FFF6          	movff	indf2,tblptrl
  5626   0008DA                     	if	1	;There is more than 1 active tblptr byte
  5627   0008DA  0E08               	movlw	high __smallconst
  5628   0008DC  6EF7               	movwf	tblptrh,c
  5629   0008DE                     	endif
  5630   0008DE                     	if	0	;tblptru may be non-zero
  5631   0008DE                     	endif
  5632   0008DE                     	if	0	;tblptru may be non-zero
  5633   0008DE                     	endif
  5634   0008DE  0008               	tblrd		*
  5635   0008E0  50F5               	movf	tablat,w,c
  5636   0008E2  0A25               	xorlw	37
  5637   0008E4  A4D8               	btfss	status,2,c
  5638   0008E6  EF77  F004         	goto	u1931
  5639   0008EA  EF79  F004         	goto	u1930
  5640   0008EE                     u1931:
  5641   0008EE  EF99  F005         	goto	l2509
  5642   0008F2                     u1930:
  5643   0008F2                     
  5644                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  5645   0008F2  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5646   0008F4  6ED9               	movwf	fsr2l,c
  5647   0008F6  6ADA               	clrf	fsr2h,c
  5648   0008F8  2ADF               	incf	indf2,f,c
  5649   0008FA                     
  5650                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  5651   0008FA  0E00               	movlw	0
  5652   0008FC  6E50               	movwf	(_width+1)^0,c
  5653   0008FE  0E00               	movlw	0
  5654   000900  6E4F               	movwf	_width^0,c
  5655   000902  C04F  F054         	movff	_width,_flags
  5656   000906                     
  5657                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  5658   000906  6851               	setf	_prec^0,c
  5659   000908  6852               	setf	(_prec+1)^0,c
  5660   00090A                     
  5661                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  5662   00090A  6A2A               	clrf	vfpfcnvrt@done^0,c
  5663                           
  5664                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5665   00090C  EFA2  F004         	goto	l2453
  5666   000910                     l2443:
  5667                           
  5668                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  5669   000910  8254               	bsf	_flags^0,1,c
  5670   000912                     
  5671                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  5672   000912  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5673   000914  6ED9               	movwf	fsr2l,c
  5674   000916  6ADA               	clrf	fsr2h,c
  5675   000918  2ADF               	incf	indf2,f,c
  5676                           
  5677                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  5678   00091A  EFA2  F004         	goto	l2453
  5679   00091E                     l2447:
  5680                           
  5681                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  5682   00091E  0E01               	movlw	1
  5683   000920  6E2A               	movwf	vfpfcnvrt@done^0,c
  5684                           
  5685                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  5686   000922  EFA2  F004         	goto	l2453
  5687   000926                     l2451:
  5688   000926  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5689   000928  6ED9               	movwf	fsr2l,c
  5690   00092A  6ADA               	clrf	fsr2h,c
  5691   00092C  CFDF FFF6          	movff	indf2,tblptrl
  5692   000930                     	if	1	;There is more than 1 active tblptr byte
  5693   000930  0E08               	movlw	high __smallconst
  5694   000932  6EF7               	movwf	tblptrh,c
  5695   000934                     	endif
  5696   000934                     	if	0	;tblptru may be non-zero
  5697   000934                     	endif
  5698   000934                     	if	0	;tblptru may be non-zero
  5699   000934                     	endif
  5700   000934  0008               	tblrd		*
  5701   000936  50F5               	movf	tablat,w,c
  5702                           
  5703                           ; Switch size 1, requested type "simple"
  5704                           ; Number of cases is 1, Range of values is 48 to 48
  5705                           ; switch strategies available:
  5706                           ; Name         Instructions Cycles
  5707                           ; simple_byte            4     3 (average)
  5708                           ;	Chosen strategy is simple_byte
  5709   000938  0A30               	xorlw	48	; case 48
  5710   00093A  B4D8               	btfsc	status,2,c
  5711   00093C  EF88  F004         	goto	l2443
  5712   000940  EF8F  F004         	goto	l2447
  5713   000944                     l2453:
  5714                           
  5715                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  5716   000944  502A               	movf	vfpfcnvrt@done^0,w,c
  5717   000946  B4D8               	btfsc	status,2,c
  5718   000948  EFA8  F004         	goto	u1941
  5719   00094C  EFAA  F004         	goto	u1940
  5720   000950                     u1941:
  5721   000950  EF93  F004         	goto	l2451
  5722   000954                     u1940:
  5723   000954                     
  5724                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  5725   000954  C021  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  5726   000958  C022  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  5727   00095C  EC03  F00E         	call	_read_prec_or_width	;wreg free
  5728   000960  C001  F04F         	movff	?_read_prec_or_width,_width
  5729   000964  C002  F050         	movff	?_read_prec_or_width+1,_width+1
  5730   000968                     
  5731                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  5732   000968  BE50               	btfsc	(_width+1)^0,7,c
  5733   00096A  EFBB  F004         	goto	u1950
  5734   00096E  EFB9  F004         	goto	u1951
  5735   000972                     u1951:
  5736   000972  EFC0  F004         	goto	l2461
  5737   000976                     u1950:
  5738   000976                     
  5739                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  5740   000976  8054               	bsf	_flags^0,0,c
  5741                           
  5742                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  5743   000978  6C4F               	negf	_width^0,c
  5744   00097A  1E50               	comf	(_width+1)^0,f,c
  5745   00097C  B0D8               	btfsc	status,0,c
  5746   00097E  2A50               	incf	(_width+1)^0,f,c
  5747   000980                     l2461:
  5748                           
  5749                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  5750   000980  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5751   000982  6ED9               	movwf	fsr2l,c
  5752   000984  6ADA               	clrf	fsr2h,c
  5753   000986  50DF               	movf	indf2,w,c
  5754   000988  6E29               	movwf	vfpfcnvrt@cp^0,c
  5755   00098A                     
  5756                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5757   00098A  C029  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5758   00098E                     	if	1	;There is more than 1 active tblptr byte
  5759   00098E  0E08               	movlw	high __smallconst
  5760   000990  6EF7               	movwf	tblptrh,c
  5761   000992                     	endif
  5762   000992                     	if	0	;tblptru may be non-zero
  5763   000992                     	endif
  5764   000992                     	if	0	;tblptru may be non-zero
  5765   000992                     	endif
  5766   000992  0008               	tblrd		*
  5767   000994  50F5               	movf	tablat,w,c
  5768   000996  0A64               	xorlw	100
  5769   000998  B4D8               	btfsc	status,2,c
  5770   00099A  EFD1  F004         	goto	u1961
  5771   00099E  EFD3  F004         	goto	u1960
  5772   0009A2                     u1961:
  5773   0009A2  EFE1  F004         	goto	l2467
  5774   0009A6                     u1960:
  5775   0009A6  C029  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  5776   0009AA                     	if	1	;There is more than 1 active tblptr byte
  5777   0009AA  0E08               	movlw	high __smallconst
  5778   0009AC  6EF7               	movwf	tblptrh,c
  5779   0009AE                     	endif
  5780   0009AE                     	if	0	;tblptru may be non-zero
  5781   0009AE                     	endif
  5782   0009AE                     	if	0	;tblptru may be non-zero
  5783   0009AE                     	endif
  5784   0009AE  0008               	tblrd		*
  5785   0009B0  50F5               	movf	tablat,w,c
  5786   0009B2  0A69               	xorlw	105
  5787   0009B4  A4D8               	btfss	status,2,c
  5788   0009B6  EFDF  F004         	goto	u1971
  5789   0009BA  EFE1  F004         	goto	u1970
  5790   0009BE                     u1971:
  5791   0009BE  EFFD  F004         	goto	l1059
  5792   0009C2                     u1970:
  5793   0009C2                     l2467:
  5794                           
  5795                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5796   0009C2  C022  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5797   0009C6  C023  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5798   0009CA  0E02               	movlw	2
  5799   0009CC  26DF               	addwf	indf2,f,c
  5800   0009CE  5CDF               	subwf	indf2,w,c
  5801   0009D0  6ED9               	movwf	fsr2l,c
  5802   0009D2  6ADA               	clrf	fsr2h,c
  5803   0009D4  CFDE F025          	movff	postinc2,vfpfcnvrt@convarg
  5804   0009D8  CFDE F026          	movff	postinc2,vfpfcnvrt@convarg+1
  5805   0009DC                     
  5806                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  5807   0009DC  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5808   0009DE  6ED9               	movwf	fsr2l,c
  5809   0009E0  6ADA               	clrf	fsr2h,c
  5810   0009E2  2829               	incf	vfpfcnvrt@cp^0,w,c
  5811   0009E4  6EDF               	movwf	indf2,c
  5812   0009E6                     
  5813                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5814   0009E6  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  5815   0009EA  C025  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  5816   0009EE  C026  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  5817   0009F2  ECC5  F006         	call	_dtoa	;wreg free
  5818   0009F6  EFAA  F005         	goto	l1062
  5819   0009FA                     l1059:
  5820                           
  5821                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  5822   0009FA  6A2A               	clrf	vfpfcnvrt@done^0,c
  5823   0009FC                     
  5824                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  5825   0009FC  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5826   0009FE  6ED9               	movwf	fsr2l,c
  5827   000A00  6ADA               	clrf	fsr2h,c
  5828   000A02  CFDF FFF6          	movff	indf2,tblptrl
  5829   000A06                     	if	1	;There is more than 1 active tblptr byte
  5830   000A06  0E08               	movlw	high __smallconst
  5831   000A08  6EF7               	movwf	tblptrh,c
  5832   000A0A                     	endif
  5833   000A0A                     	if	0	;tblptru may be non-zero
  5834   000A0A                     	endif
  5835   000A0A                     	if	0	;tblptru may be non-zero
  5836   000A0A                     	endif
  5837   000A0A  0008               	tblrd		*
  5838   000A0C  50F5               	movf	tablat,w,c
  5839   000A0E  0A73               	xorlw	115
  5840   000A10  A4D8               	btfss	status,2,c
  5841   000A12  EF0D  F005         	goto	u1981
  5842   000A16  EF0F  F005         	goto	u1980
  5843   000A1A                     u1981:
  5844   000A1A  EF17  F005         	goto	l2481
  5845   000A1E                     u1980:
  5846   000A1E                     
  5847                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  5848   000A1E  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5849   000A20  6ED9               	movwf	fsr2l,c
  5850   000A22  6ADA               	clrf	fsr2h,c
  5851   000A24  2ADF               	incf	indf2,f,c
  5852   000A26                     l2479:
  5853                           
  5854                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  5855   000A26  0E01               	movlw	1
  5856   000A28  6E2A               	movwf	vfpfcnvrt@done^0,c
  5857                           
  5858                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1660:   }
  5859   000A2A  EF59  F005         	goto	l2491
  5860   000A2E                     l2481:
  5861   000A2E  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5862   000A30  6ED9               	movwf	fsr2l,c
  5863   000A32  6ADA               	clrf	fsr2h,c
  5864   000A34  CFDF FFF6          	movff	indf2,tblptrl
  5865   000A38                     	if	1	;There is more than 1 active tblptr byte
  5866   000A38  0E08               	movlw	high __smallconst
  5867   000A3A  6EF7               	movwf	tblptrh,c
  5868   000A3C                     	endif
  5869   000A3C                     	if	0	;tblptru may be non-zero
  5870   000A3C                     	endif
  5871   000A3C                     	if	0	;tblptru may be non-zero
  5872   000A3C                     	endif
  5873   000A3C  0008               	tblrd		*
  5874   000A3E  50F5               	movf	tablat,w,c
  5875   000A40  0A6C               	xorlw	108
  5876   000A42  A4D8               	btfss	status,2,c
  5877   000A44  EF26  F005         	goto	u1991
  5878   000A48  EF28  F005         	goto	u1990
  5879   000A4C                     u1991:
  5880   000A4C  EF59  F005         	goto	l2491
  5881   000A50                     u1990:
  5882   000A50  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5883   000A52  6ED9               	movwf	fsr2l,c
  5884   000A54  6ADA               	clrf	fsr2h,c
  5885   000A56  50DF               	movf	indf2,w,c
  5886   000A58  6E24               	movwf	??_vfpfcnvrt^0,c
  5887   000A5A  0E01               	movlw	1
  5888   000A5C  2624               	addwf	??_vfpfcnvrt^0,f,c
  5889   000A5E  C024  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5890   000A62                     	if	1	;There is more than 1 active tblptr byte
  5891   000A62  0E08               	movlw	high __smallconst
  5892   000A64  6EF7               	movwf	tblptrh,c
  5893   000A66                     	endif
  5894   000A66                     	if	0	;tblptru may be non-zero
  5895   000A66                     	endif
  5896   000A66                     	if	0	;tblptru may be non-zero
  5897   000A66                     	endif
  5898   000A66  0008               	tblrd		*
  5899   000A68  50F5               	movf	tablat,w,c
  5900   000A6A  0A6C               	xorlw	108
  5901   000A6C  A4D8               	btfss	status,2,c
  5902   000A6E  EF3B  F005         	goto	u2001
  5903   000A72  EF3D  F005         	goto	u2000
  5904   000A76                     u2001:
  5905   000A76  EF59  F005         	goto	l2491
  5906   000A7A                     u2000:
  5907   000A7A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5908   000A7C  6ED9               	movwf	fsr2l,c
  5909   000A7E  6ADA               	clrf	fsr2h,c
  5910   000A80  50DF               	movf	indf2,w,c
  5911   000A82  6E24               	movwf	??_vfpfcnvrt^0,c
  5912   000A84  0E02               	movlw	2
  5913   000A86  2624               	addwf	??_vfpfcnvrt^0,f,c
  5914   000A88  C024  FFF6         	movff	??_vfpfcnvrt,tblptrl
  5915   000A8C                     	if	1	;There is more than 1 active tblptr byte
  5916   000A8C  0E08               	movlw	high __smallconst
  5917   000A8E  6EF7               	movwf	tblptrh,c
  5918   000A90                     	endif
  5919   000A90                     	if	0	;tblptru may be non-zero
  5920   000A90                     	endif
  5921   000A90                     	if	0	;tblptru may be non-zero
  5922   000A90                     	endif
  5923   000A90  0008               	tblrd		*
  5924   000A92  50F5               	movf	tablat,w,c
  5925   000A94  0A73               	xorlw	115
  5926   000A96  A4D8               	btfss	status,2,c
  5927   000A98  EF50  F005         	goto	u2011
  5928   000A9C  EF52  F005         	goto	u2010
  5929   000AA0                     u2011:
  5930   000AA0  EF59  F005         	goto	l2491
  5931   000AA4                     u2010:
  5932   000AA4                     
  5933                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  5934   000AA4  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5935   000AA6  6ED9               	movwf	fsr2l,c
  5936   000AA8  6ADA               	clrf	fsr2h,c
  5937   000AAA  0E03               	movlw	3
  5938   000AAC  26DF               	addwf	indf2,f,c
  5939   000AAE  EF13  F005         	goto	l2479
  5940   000AB2                     l2491:
  5941                           
  5942                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  5943   000AB2  502A               	movf	vfpfcnvrt@done^0,w,c
  5944   000AB4  B4D8               	btfsc	status,2,c
  5945   000AB6  EF5F  F005         	goto	u2021
  5946   000ABA  EF61  F005         	goto	u2020
  5947   000ABE                     u2021:
  5948   000ABE  EF74  F005         	goto	l2497
  5949   000AC2                     u2020:
  5950   000AC2                     
  5951                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1682:    return (
      +                          void) stoa(fp, (*(char * *)__va_arg(*(char * **)ap, (char *)0)));;	Return value of _vfpf
      +                          cnvrt is never used
  5952   000AC2  C020  F009         	movff	vfpfcnvrt@fp,stoa@fp
  5953   000AC6  C022  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5954   000ACA  C023  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5955   000ACE  0E02               	movlw	2
  5956   000AD0  26DF               	addwf	indf2,f,c
  5957   000AD2  5CDF               	subwf	indf2,w,c
  5958   000AD4  6ED9               	movwf	fsr2l,c
  5959   000AD6  6ADA               	clrf	fsr2h,c
  5960   000AD8  CFDE F00A          	movff	postinc2,stoa@s
  5961   000ADC  CFDE F00B          	movff	postinc2,stoa@s+1
  5962   000AE0  EC77  F007         	call	_stoa	;wreg free
  5963   000AE4  EFAA  F005         	goto	l1062
  5964   000AE8                     l2497:
  5965                           
  5966                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  5967   000AE8  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5968   000AEA  6ED9               	movwf	fsr2l,c
  5969   000AEC  6ADA               	clrf	fsr2h,c
  5970   000AEE  CFDF FFF6          	movff	indf2,tblptrl
  5971   000AF2                     	if	1	;There is more than 1 active tblptr byte
  5972   000AF2  0E08               	movlw	high __smallconst
  5973   000AF4  6EF7               	movwf	tblptrh,c
  5974   000AF6                     	endif
  5975   000AF6                     	if	0	;tblptru may be non-zero
  5976   000AF6                     	endif
  5977   000AF6                     	if	0	;tblptru may be non-zero
  5978   000AF6                     	endif
  5979   000AF6  0008               	tblrd		*
  5980   000AF8  50F5               	movf	tablat,w,c
  5981   000AFA  0A25               	xorlw	37
  5982   000AFC  A4D8               	btfss	status,2,c
  5983   000AFE  EF83  F005         	goto	u2031
  5984   000B02  EF85  F005         	goto	u2030
  5985   000B06                     u2031:
  5986   000B06  EF93  F005         	goto	l2505
  5987   000B0A                     u2030:
  5988   000B0A                     
  5989                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  5990   000B0A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  5991   000B0C  6ED9               	movwf	fsr2l,c
  5992   000B0E  6ADA               	clrf	fsr2h,c
  5993   000B10  2ADF               	incf	indf2,f,c
  5994   000B12                     
  5995                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  5996   000B12  0E00               	movlw	0
  5997   000B14  6E02               	movwf	(fputc@c+1)^0,c
  5998   000B16  0E25               	movlw	37
  5999   000B18  6E01               	movwf	fputc@c^0,c
  6000   000B1A  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6001   000B1E  EC4F  F00C         	call	_fputc	;wreg free
  6002   000B22  EFAA  F005         	goto	l1062
  6003   000B26                     l2505:
  6004                           
  6005                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  6006   000B26  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6007   000B28  6ED9               	movwf	fsr2l,c
  6008   000B2A  6ADA               	clrf	fsr2h,c
  6009   000B2C  2ADF               	incf	indf2,f,c
  6010   000B2E  EFAA  F005         	goto	l1062
  6011   000B32                     l2509:
  6012                           
  6013                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  6014   000B32  5021               	movf	vfpfcnvrt@fmt^0,w,c
  6015   000B34  6ED9               	movwf	fsr2l,c
  6016   000B36  6ADA               	clrf	fsr2h,c
  6017   000B38  CFDF FFF6          	movff	indf2,tblptrl
  6018   000B3C                     	if	1	;There is more than 1 active tblptr byte
  6019   000B3C  0E08               	movlw	high __smallconst
  6020   000B3E  6EF7               	movwf	tblptrh,c
  6021   000B40                     	endif
  6022   000B40                     	if	0	;tblptru may be non-zero
  6023   000B40                     	endif
  6024   000B40                     	if	0	;tblptru may be non-zero
  6025   000B40                     	endif
  6026   000B40  0008               	tblrd		*
  6027   000B42  50F5               	movf	tablat,w,c
  6028   000B44  6E01               	movwf	fputc@c^0,c
  6029   000B46  6A02               	clrf	(fputc@c+1)^0,c
  6030   000B48  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6031   000B4C  EC4F  F00C         	call	_fputc	;wreg free
  6032   000B50  EF93  F005         	goto	l2505
  6033   000B54                     l1062:
  6034   000B54  0012               	return		;funcret
  6035   000B56                     __end_of_vfpfcnvrt:
  6036                           	callstack 0
  6037                           
  6038 ;; *************** function _stoa *****************
  6039 ;; Defined at:
  6040 ;;		line 942 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;  fp              1    8[COMRAM] PTR struct _IO_FILE
  6043 ;;		 -> sprintf@f(11), 
  6044 ;;  s               2    9[COMRAM] PTR unsigned char 
  6045 ;;		 -> ?_sprintf(2), Display_GPS@ew(2), Display_GPS@lon(11), Display_GPS@ns(2), 
  6046 ;;		 -> Display_GPS@lat(10), 
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;  l               2   19[COMRAM] int 
  6049 ;;  cp              2   17[COMRAM] PTR unsigned char 
  6050 ;;		 -> STR_20(7), ?_sprintf(2), Display_GPS@ew(2), Display_GPS@lon(11), 
  6051 ;;		 -> Display_GPS@ns(2), Display_GPS@lat(10), 
  6052 ;;  w               2   15[COMRAM] int 
  6053 ;;  p               2   13[COMRAM] int 
  6054 ;; Return value:  Size  Location     Type
  6055 ;;                  1    wreg      void 
  6056 ;; Registers used:
  6057 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6058 ;; Tracked objects:
  6059 ;;		On entry : 0/0
  6060 ;;		On exit  : 0/0
  6061 ;;		Unchanged: 0/0
  6062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6063 ;;      Params:         3       0       0       0       0       0       0       0       0
  6064 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6065 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6066 ;;      Totals:        13       0       0       0       0       0       0       0       0
  6067 ;;Total ram usage:       13 bytes
  6068 ;; Hardware stack levels used: 1
  6069 ;; Hardware stack levels required when called: 2
  6070 ;; This function calls:
  6071 ;;		_fputc
  6072 ;; This function is called by:
  6073 ;;		_vfpfcnvrt
  6074 ;; This function uses a non-reentrant model
  6075 ;;
  6076                           
  6077                           	psect	text32
  6078   000EEE                     __ptext32:
  6079                           	callstack 0
  6080   000EEE                     _stoa:
  6081                           	callstack 24
  6082   000EEE                     
  6083                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 942: static void 
      +                          stoa(FILE *fp, char *s);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 943: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 944: 
      +                              char *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 945:
      +                               int l, p;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 947
      +                          :  int w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 951:    
      +                           cp = s;
  6084   000EEE  C00A  F012         	movff	stoa@s,stoa@cp
  6085   000EF2  C00B  F013         	movff	stoa@s+1,stoa@cp+1
  6086                           
  6087                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 952:     if (!cp)
      +                           {
  6088   000EF6  5012               	movf	stoa@cp^0,w,c
  6089   000EF8  1013               	iorwf	(stoa@cp+1)^0,w,c
  6090   000EFA  A4D8               	btfss	status,2,c
  6091   000EFC  EF82  F007         	goto	u1731
  6092   000F00  EF84  F007         	goto	u1730
  6093   000F04                     u1731:
  6094   000F04  EF8A  F007         	goto	l2345
  6095   000F08                     u1730:
  6096   000F08                     
  6097                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 953:         cp =
      +                           "(null)";
  6098   000F08  0EBF               	movlw	low STR_20
  6099   000F0A  6E12               	movwf	stoa@cp^0,c
  6100   000F0C  5012               	movf	stoa@cp^0,w,c
  6101   000F0E  A4D8               	btfss	status,2,c
  6102   000F10  0E08               	movlw	high __smallconst
  6103   000F12  6E13               	movwf	(stoa@cp+1)^0,c
  6104   000F14                     l2345:
  6105                           
  6106                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 957:  for (l = 0;
      +                           cp[l] != '\0'; l++) {
  6107   000F14  0E00               	movlw	0
  6108   000F16  6E15               	movwf	(stoa@l+1)^0,c
  6109   000F18  0E00               	movlw	0
  6110   000F1A  6E14               	movwf	stoa@l^0,c
  6111   000F1C  EF92  F007         	goto	l2349
  6112   000F20                     l2347:
  6113   000F20  4A14               	infsnz	stoa@l^0,f,c
  6114   000F22  2A15               	incf	(stoa@l+1)^0,f,c
  6115   000F24                     l2349:
  6116   000F24  5014               	movf	stoa@l^0,w,c
  6117   000F26  2412               	addwf	stoa@cp^0,w,c
  6118   000F28  6E0C               	movwf	??_stoa^0,c
  6119   000F2A  5015               	movf	(stoa@l+1)^0,w,c
  6120   000F2C  2013               	addwfc	(stoa@cp+1)^0,w,c
  6121   000F2E  6E0D               	movwf	(??_stoa+1)^0,c
  6122   000F30  C00C  FFF6         	movff	??_stoa,tblptrl
  6123   000F34  C00D  FFF7         	movff	??_stoa+1,tblptrh
  6124   000F38  6AF8               	clrf	tblptru,c
  6125   000F3A  0E07               	movlw	(high __ramtop+-1)
  6126   000F3C  64F7               	cpfsgt	tblptrh,c
  6127   000F3E  D003               	bra	u1747
  6128   000F40  0008               	tblrd		*
  6129   000F42  50F5               	movf	tablat,w,c
  6130   000F44  D005               	bra	u1740
  6131   000F46                     u1747:
  6132   000F46  CFF6 FFE1          	movff	tblptrl,fsr1l
  6133   000F4A  CFF7 FFE2          	movff	tblptrh,fsr1h
  6134   000F4E  50E7               	movf	indf1,w,c
  6135   000F50                     u1740:
  6136   000F50  0900               	iorlw	0
  6137   000F52  A4D8               	btfss	status,2,c
  6138   000F54  EFAE  F007         	goto	u1751
  6139   000F58  EFB0  F007         	goto	u1750
  6140   000F5C                     u1751:
  6141   000F5C  EF90  F007         	goto	l2347
  6142   000F60                     u1750:
  6143   000F60                     
  6144                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 965:     p = l;
  6145   000F60  C014  F00E         	movff	stoa@l,stoa@p
  6146   000F64  C015  F00F         	movff	stoa@l+1,stoa@p+1
  6147                           
  6148                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 969:     w = widt
      +                          h;
  6149   000F68  C04F  F010         	movff	_width,stoa@w
  6150   000F6C  C050  F011         	movff	_width+1,stoa@w+1
  6151                           
  6152                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 970:     if (!(fl
      +                          ags & (1 << 0))) {
  6153   000F70  B054               	btfsc	_flags^0,0,c
  6154   000F72  EFBD  F007         	goto	u1761
  6155   000F76  EFBF  F007         	goto	u1760
  6156   000F7A                     u1761:
  6157   000F7A  EFF6  F007         	goto	l2363
  6158   000F7E                     u1760:
  6159   000F7E  EFCB  F007         	goto	l2357
  6160   000F82                     l2353:
  6161                           
  6162                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 972:             
      +                          fputc(' ', fp);
  6163   000F82  0E00               	movlw	0
  6164   000F84  6E02               	movwf	(fputc@c+1)^0,c
  6165   000F86  0E20               	movlw	32
  6166   000F88  6E01               	movwf	fputc@c^0,c
  6167   000F8A  C009  F003         	movff	stoa@fp,fputc@fp
  6168   000F8E  EC4F  F00C         	call	_fputc	;wreg free
  6169   000F92                     
  6170                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 973:             
      +                          ++l;
  6171   000F92  4A14               	infsnz	stoa@l^0,f,c
  6172   000F94  2A15               	incf	(stoa@l+1)^0,f,c
  6173   000F96                     l2357:
  6174                           
  6175                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 971:         whil
      +                          e (l < w) {
  6176   000F96  5010               	movf	stoa@w^0,w,c
  6177   000F98  5C14               	subwf	stoa@l^0,w,c
  6178   000F9A  5015               	movf	(stoa@l+1)^0,w,c
  6179   000F9C  0A80               	xorlw	128
  6180   000F9E  6E0C               	movwf	??_stoa^0,c
  6181   000FA0  5011               	movf	(stoa@w+1)^0,w,c
  6182   000FA2  0A80               	xorlw	128
  6183   000FA4  580C               	subwfb	??_stoa^0,w,c
  6184   000FA6  A0D8               	btfss	status,0,c
  6185   000FA8  EFD8  F007         	goto	u1771
  6186   000FAC  EFDA  F007         	goto	u1770
  6187   000FB0                     u1771:
  6188   000FB0  EFC1  F007         	goto	l2353
  6189   000FB4                     u1770:
  6190   000FB4  EFF6  F007         	goto	l2363
  6191   000FB8                     l2359:
  6192                           
  6193                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 980:         fput
      +                          c(*cp, fp);
  6194   000FB8  C012  FFF6         	movff	stoa@cp,tblptrl
  6195   000FBC  C013  FFF7         	movff	stoa@cp+1,tblptrh
  6196   000FC0  6AF8               	clrf	tblptru,c
  6197   000FC2  0E07               	movlw	(high __ramtop+-1)
  6198   000FC4  64F7               	cpfsgt	tblptrh,c
  6199   000FC6  D003               	bra	u1787
  6200   000FC8  0008               	tblrd		*
  6201   000FCA  50F5               	movf	tablat,w,c
  6202   000FCC  D005               	bra	u1780
  6203   000FCE                     u1787:
  6204   000FCE  CFF6 FFE1          	movff	tblptrl,fsr1l
  6205   000FD2  CFF7 FFE2          	movff	tblptrh,fsr1h
  6206   000FD6  50E7               	movf	indf1,w,c
  6207   000FD8                     u1780:
  6208   000FD8  6E0C               	movwf	??_stoa^0,c
  6209   000FDA  500C               	movf	??_stoa^0,w,c
  6210   000FDC  6E01               	movwf	fputc@c^0,c
  6211   000FDE  6A02               	clrf	(fputc@c+1)^0,c
  6212   000FE0  C009  F003         	movff	stoa@fp,fputc@fp
  6213   000FE4  EC4F  F00C         	call	_fputc	;wreg free
  6214   000FE8                     
  6215                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 981:         ++cp
      +                          ;
  6216   000FE8  4A12               	infsnz	stoa@cp^0,f,c
  6217   000FEA  2A13               	incf	(stoa@cp+1)^0,f,c
  6218   000FEC                     l2363:
  6219                           
  6220                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 979:     while (p
      +                          --) {
  6221   000FEC  060E               	decf	stoa@p^0,f,c
  6222   000FEE  A0D8               	btfss	status,0,c
  6223   000FF0  060F               	decf	(stoa@p+1)^0,f,c
  6224   000FF2  280E               	incf	stoa@p^0,w,c
  6225   000FF4  E106               	bnz	u1791
  6226   000FF6  280F               	incf	(stoa@p+1)^0,w,c
  6227   000FF8  A4D8               	btfss	status,2,c
  6228   000FFA  EF01  F008         	goto	u1791
  6229   000FFE  EF03  F008         	goto	u1790
  6230   001002                     u1791:
  6231   001002  EFDC  F007         	goto	l2359
  6232   001006                     u1790:
  6233   001006                     
  6234                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 986:     if (flag
      +                          s & (1 << 0)) {
  6235   001006  A054               	btfss	_flags^0,0,c
  6236   001008  EF08  F008         	goto	u1801
  6237   00100C  EF0A  F008         	goto	u1800
  6238   001010                     u1801:
  6239   001010  EF25  F008         	goto	l1039
  6240   001014                     u1800:
  6241   001014  EF16  F008         	goto	l2371
  6242   001018                     l2367:
  6243                           
  6244                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 988:             
      +                          fputc(' ', fp);
  6245   001018  0E00               	movlw	0
  6246   00101A  6E02               	movwf	(fputc@c+1)^0,c
  6247   00101C  0E20               	movlw	32
  6248   00101E  6E01               	movwf	fputc@c^0,c
  6249   001020  C009  F003         	movff	stoa@fp,fputc@fp
  6250   001024  EC4F  F00C         	call	_fputc	;wreg free
  6251   001028                     
  6252                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 989:             
      +                          ++l;
  6253   001028  4A14               	infsnz	stoa@l^0,f,c
  6254   00102A  2A15               	incf	(stoa@l+1)^0,f,c
  6255   00102C                     l2371:
  6256                           
  6257                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 987:         whil
      +                          e (l < w) {
  6258   00102C  5010               	movf	stoa@w^0,w,c
  6259   00102E  5C14               	subwf	stoa@l^0,w,c
  6260   001030  5015               	movf	(stoa@l+1)^0,w,c
  6261   001032  0A80               	xorlw	128
  6262   001034  6E0C               	movwf	??_stoa^0,c
  6263   001036  5011               	movf	(stoa@w+1)^0,w,c
  6264   001038  0A80               	xorlw	128
  6265   00103A  580C               	subwfb	??_stoa^0,w,c
  6266   00103C  A0D8               	btfss	status,0,c
  6267   00103E  EF23  F008         	goto	u1811
  6268   001042  EF25  F008         	goto	u1810
  6269   001046                     u1811:
  6270   001046  EF0C  F008         	goto	l2367
  6271   00104A                     u1810:
  6272   00104A                     l1039:
  6273   00104A  0012               	return		;funcret
  6274   00104C                     __end_of_stoa:
  6275                           	callstack 0
  6276                           
  6277 ;; *************** function _read_prec_or_width *****************
  6278 ;; Defined at:
  6279 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  6282 ;;		 -> vfprintf@cfmt(1), 
  6283 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  6284 ;;		 -> sprintf@ap(1), 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  c               1    4[COMRAM] unsigned char 
  6287 ;;  n               2    5[COMRAM] int 
  6288 ;; Return value:  Size  Location     Type
  6289 ;;                  2    0[COMRAM] int 
  6290 ;; Registers used:
  6291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  6292 ;; Tracked objects:
  6293 ;;		On entry : 0/0
  6294 ;;		On exit  : 0/0
  6295 ;;		Unchanged: 0/0
  6296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6297 ;;      Params:         2       0       0       0       0       0       0       0       0
  6298 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6299 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6300 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6301 ;;Total ram usage:        7 bytes
  6302 ;; Hardware stack levels used: 1
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_vfpfcnvrt
  6307 ;; This function uses a non-reentrant model
  6308 ;;
  6309                           
  6310                           	psect	text33
  6311   001C06                     __ptext33:
  6312                           	callstack 0
  6313   001C06                     _read_prec_or_width:
  6314                           	callstack 26
  6315   001C06                     
  6316                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  6317   001C06  0E00               	movlw	0
  6318   001C08  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  6319   001C0A  0E00               	movlw	0
  6320   001C0C  6E06               	movwf	read_prec_or_width@n^0,c
  6321   001C0E                     
  6322                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  6323   001C0E  5001               	movf	read_prec_or_width@fmt^0,w,c
  6324   001C10  6ED9               	movwf	fsr2l,c
  6325   001C12  6ADA               	clrf	fsr2h,c
  6326   001C14  CFDF FFF6          	movff	indf2,tblptrl
  6327   001C18                     	if	1	;There is more than 1 active tblptr byte
  6328   001C18  0E08               	movlw	high __smallconst
  6329   001C1A  6EF7               	movwf	tblptrh,c
  6330   001C1C                     	endif
  6331   001C1C                     	if	0	;tblptru may be non-zero
  6332   001C1C                     	endif
  6333   001C1C                     	if	0	;tblptru may be non-zero
  6334   001C1C                     	endif
  6335   001C1C  0008               	tblrd		*
  6336   001C1E  50F5               	movf	tablat,w,c
  6337   001C20  0A2A               	xorlw	42
  6338   001C22  A4D8               	btfss	status,2,c
  6339   001C24  EF16  F00E         	goto	u1821
  6340   001C28  EF18  F00E         	goto	u1820
  6341   001C2C                     u1821:
  6342   001C2C  EF3D  F00E         	goto	l2385
  6343   001C30                     u1820:
  6344   001C30                     
  6345                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  6346   001C30  5001               	movf	read_prec_or_width@fmt^0,w,c
  6347   001C32  6ED9               	movwf	fsr2l,c
  6348   001C34  6ADA               	clrf	fsr2h,c
  6349   001C36  2ADF               	incf	indf2,f,c
  6350   001C38                     
  6351                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  6352   001C38  5002               	movf	read_prec_or_width@ap^0,w,c
  6353   001C3A  6ED9               	movwf	fsr2l,c
  6354   001C3C  6ADA               	clrf	fsr2h,c
  6355   001C3E  0E02               	movlw	2
  6356   001C40  26DF               	addwf	indf2,f,c
  6357   001C42  5CDF               	subwf	indf2,w,c
  6358   001C44  6ED9               	movwf	fsr2l,c
  6359   001C46  6ADA               	clrf	fsr2h,c
  6360   001C48  CFDE F006          	movff	postinc2,read_prec_or_width@n
  6361   001C4C  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  6362                           
  6363                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  6364   001C50  EF50  F00E         	goto	l1043
  6365   001C54                     l2381:
  6366                           
  6367                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  6368   001C54  0E0A               	movlw	10
  6369   001C56  0206               	mulwf	read_prec_or_width@n^0,c
  6370   001C58  CFF3 F003          	movff	prodl,??_read_prec_or_width
  6371   001C5C  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  6372   001C60  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  6373   001C62  50F3               	movf	prodl,w,c
  6374   001C64  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  6375   001C66  5005               	movf	read_prec_or_width@c^0,w,c
  6376   001C68  2403               	addwf	??_read_prec_or_width^0,w,c
  6377   001C6A  6E06               	movwf	read_prec_or_width@n^0,c
  6378   001C6C  0E00               	movlw	0
  6379   001C6E  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  6380   001C70  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  6381   001C72                     
  6382                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  6383   001C72  5001               	movf	read_prec_or_width@fmt^0,w,c
  6384   001C74  6ED9               	movwf	fsr2l,c
  6385   001C76  6ADA               	clrf	fsr2h,c
  6386   001C78  2ADF               	incf	indf2,f,c
  6387   001C7A                     l2385:
  6388                           
  6389                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  6390   001C7A  5001               	movf	read_prec_or_width@fmt^0,w,c
  6391   001C7C  6ED9               	movwf	fsr2l,c
  6392   001C7E  6ADA               	clrf	fsr2h,c
  6393   001C80  CFDF FFF6          	movff	indf2,tblptrl
  6394   001C84                     	if	1	;There is more than 1 active tblptr byte
  6395   001C84  0E08               	movlw	high __smallconst
  6396   001C86  6EF7               	movwf	tblptrh,c
  6397   001C88                     	endif
  6398   001C88                     	if	0	;tblptru may be non-zero
  6399   001C88                     	endif
  6400   001C88                     	if	0	;tblptru may be non-zero
  6401   001C88                     	endif
  6402   001C88  0008               	tblrd		*
  6403   001C8A  50F5               	movf	tablat,w,c
  6404   001C8C  0FD0               	addlw	208
  6405   001C8E  6E05               	movwf	read_prec_or_width@c^0,c
  6406   001C90  0E09               	movlw	9
  6407   001C92  6405               	cpfsgt	read_prec_or_width@c^0,c
  6408   001C94  EF4E  F00E         	goto	u1831
  6409   001C98  EF50  F00E         	goto	u1830
  6410   001C9C                     u1831:
  6411   001C9C  EF2A  F00E         	goto	l2381
  6412   001CA0                     u1830:
  6413   001CA0                     l1043:
  6414                           
  6415                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  6416   001CA0  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  6417   001CA4  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  6418   001CA8  0012               	return		;funcret
  6419   001CAA                     __end_of_read_prec_or_width:
  6420                           	callstack 0
  6421                           
  6422 ;; *************** function _dtoa *****************
  6423 ;; Defined at:
  6424 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  6425 ;; Parameters:    Size  Location     Type
  6426 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  6427 ;;		 -> sprintf@f(11), 
  6428 ;;  d               2   21[COMRAM] int 
  6429 ;; Auto vars:     Size  Location     Type
  6430 ;;  i               2   29[COMRAM] int 
  6431 ;;  w               2   26[COMRAM] int 
  6432 ;;  s               1   28[COMRAM] unsigned char 
  6433 ;;  p               1   25[COMRAM] _Bool 
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  1    wreg      void 
  6436 ;; Registers used:
  6437 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6443 ;;      Params:         3       0       0       0       0       0       0       0       0
  6444 ;;      Locals:         8       0       0       0       0       0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6446 ;;      Totals:        11       0       0       0       0       0       0       0       0
  6447 ;;Total ram usage:       11 bytes
  6448 ;; Hardware stack levels used: 1
  6449 ;; Hardware stack levels required when called: 4
  6450 ;; This function calls:
  6451 ;;		___awdiv
  6452 ;;		___awmod
  6453 ;;		_abs
  6454 ;;		_pad
  6455 ;; This function is called by:
  6456 ;;		_vfpfcnvrt
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text34
  6461   000D8A                     __ptext34:
  6462                           	callstack 0
  6463   000D8A                     _dtoa:
  6464                           	callstack 22
  6465   000D8A                     
  6466                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  6467   000D8A  0E01               	movlw	1
  6468   000D8C  6E1A               	movwf	dtoa@p^0,c
  6469   000D8E                     
  6470                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  6471   000D8E  BE17               	btfsc	(dtoa@d+1)^0,7,c
  6472   000D90  EFCC  F006         	goto	u1631
  6473   000D94  EFCF  F006         	goto	u1630
  6474   000D98                     u1631:
  6475   000D98  0E01               	movlw	1
  6476   000D9A  EFD0  F006         	goto	u1640
  6477   000D9E                     u1630:
  6478   000D9E  0E00               	movlw	0
  6479   000DA0                     u1640:
  6480   000DA0  6E1D               	movwf	dtoa@s^0,c
  6481   000DA2                     
  6482                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6483   000DA2  C04F  F01B         	movff	_width,dtoa@w
  6484   000DA6  C050  F01C         	movff	_width+1,dtoa@w+1
  6485   000DAA                     
  6486                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
  6487   000DAA  501D               	movf	dtoa@s^0,w,c
  6488   000DAC  B4D8               	btfsc	status,2,c
  6489   000DAE  EFDB  F006         	goto	u1651
  6490   000DB2  EFDD  F006         	goto	u1650
  6491   000DB6                     u1651:
  6492   000DB6  EFF4  F006         	goto	l1007
  6493   000DBA                     u1650:
  6494   000DBA                     
  6495                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
  6496   000DBA  061B               	decf	dtoa@w^0,f,c
  6497   000DBC  A0D8               	btfss	status,0,c
  6498   000DBE  061C               	decf	(dtoa@w+1)^0,f,c
  6499   000DC0                     
  6500                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6501   000DC0  501D               	movf	dtoa@s^0,w,c
  6502   000DC2  A4D8               	btfss	status,2,c
  6503   000DC4  EFE6  F006         	goto	u1661
  6504   000DC8  EFE8  F006         	goto	u1660
  6505   000DCC                     u1661:
  6506   000DCC  EFEE  F006         	goto	l2305
  6507   000DD0                     u1660:
  6508   000DD0  0E00               	movlw	0
  6509   000DD2  6E19               	movwf	(_dtoa$1053+1)^0,c
  6510   000DD4  0E2B               	movlw	43
  6511   000DD6  6E18               	movwf	_dtoa$1053^0,c
  6512   000DD8  EFF2  F006         	goto	l2307
  6513   000DDC                     l2305:
  6514   000DDC  0E00               	movlw	0
  6515   000DDE  6E19               	movwf	(_dtoa$1053+1)^0,c
  6516   000DE0  0E2D               	movlw	45
  6517   000DE2  6E18               	movwf	_dtoa$1053^0,c
  6518   000DE4                     l2307:
  6519   000DE4  C018  F01D         	movff	_dtoa$1053,dtoa@s
  6520   000DE8                     l1007:
  6521                           
  6522                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6523   000DE8  0E00               	movlw	0
  6524   000DEA  6E1F               	movwf	(dtoa@i+1)^0,c
  6525   000DEC  0E1F               	movlw	31
  6526   000DEE  6E1E               	movwf	dtoa@i^0,c
  6527   000DF0                     
  6528                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6529   000DF0  0100               	movlb	0	; () banked
  6530   000DF2  6BE7               	clrf	(_dbuf+31)& (0+255),b
  6531                           
  6532                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6533   000DF4  EF28  F007         	goto	l2321
  6534   000DF8                     l2311:
  6535                           
  6536                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
  6537   000DF8  061E               	decf	dtoa@i^0,f,c
  6538   000DFA  A0D8               	btfss	status,0,c
  6539   000DFC  061F               	decf	(dtoa@i+1)^0,f,c
  6540   000DFE                     
  6541                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6542   000DFE  501E               	movf	dtoa@i^0,w,c
  6543   000E00  0FC8               	addlw	low _dbuf
  6544   000E02  6ED9               	movwf	fsr2l,c
  6545   000E04  6ADA               	clrf	fsr2h,c
  6546   000E06  C016  F001         	movff	dtoa@d,___awmod@dividend
  6547   000E0A  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6548   000E0E  0E00               	movlw	0
  6549   000E10  6E04               	movwf	(___awmod@divisor+1)^0,c
  6550   000E12  0E0A               	movlw	10
  6551   000E14  6E03               	movwf	___awmod@divisor^0,c
  6552   000E16  EC05  F00D         	call	___awmod	;wreg free
  6553   000E1A  C001  F007         	movff	?___awmod,abs@a
  6554   000E1E  C002  F008         	movff	?___awmod+1,abs@a+1
  6555   000E22  EC94  F011         	call	_abs	;wreg free
  6556   000E26  5007               	movf	?_abs^0,w,c
  6557   000E28  0F30               	addlw	48
  6558   000E2A  6EDF               	movwf	indf2,c
  6559   000E2C                     
  6560                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  6561   000E2C  6A1A               	clrf	dtoa@p^0,c
  6562   000E2E                     
  6563                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
  6564   000E2E  061B               	decf	dtoa@w^0,f,c
  6565   000E30  A0D8               	btfss	status,0,c
  6566   000E32  061C               	decf	(dtoa@w+1)^0,f,c
  6567   000E34                     
  6568                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6569   000E34  C016  F001         	movff	dtoa@d,___awdiv@dividend
  6570   000E38  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6571   000E3C  0E00               	movlw	0
  6572   000E3E  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6573   000E40  0E0A               	movlw	10
  6574   000E42  6E03               	movwf	___awdiv@divisor^0,c
  6575   000E44  EC8D  F00B         	call	___awdiv	;wreg free
  6576   000E48  C001  F016         	movff	?___awdiv,dtoa@d
  6577   000E4C  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  6578   000E50                     l2321:
  6579                           
  6580                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6581   000E50  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  6582   000E52  EF33  F007         	goto	u1671
  6583   000E56  501F               	movf	(dtoa@i+1)^0,w,c
  6584   000E58  E108               	bnz	u1670
  6585   000E5A  041E               	decf	dtoa@i^0,w,c
  6586   000E5C  A0D8               	btfss	status,0,c
  6587   000E5E  EF33  F007         	goto	u1671
  6588   000E62  EF35  F007         	goto	u1670
  6589   000E66                     u1671:
  6590   000E66  EF5A  F007         	goto	l2331
  6591   000E6A                     u1670:
  6592   000E6A  5016               	movf	dtoa@d^0,w,c
  6593   000E6C  1017               	iorwf	(dtoa@d+1)^0,w,c
  6594   000E6E  A4D8               	btfss	status,2,c
  6595   000E70  EF3C  F007         	goto	u1681
  6596   000E74  EF3E  F007         	goto	u1680
  6597   000E78                     u1681:
  6598   000E78  EFFC  F006         	goto	l2311
  6599   000E7C                     u1680:
  6600   000E7C  501A               	movf	dtoa@p^0,w,c
  6601   000E7E  A4D8               	btfss	status,2,c
  6602   000E80  EF44  F007         	goto	u1691
  6603   000E84  EF46  F007         	goto	u1690
  6604   000E88                     u1691:
  6605   000E88  EFFC  F006         	goto	l2311
  6606   000E8C                     u1690:
  6607   000E8C  BE1C               	btfsc	(dtoa@w+1)^0,7,c
  6608   000E8E  EF51  F007         	goto	u1701
  6609   000E92  501C               	movf	(dtoa@w+1)^0,w,c
  6610   000E94  E108               	bnz	u1700
  6611   000E96  041B               	decf	dtoa@w^0,w,c
  6612   000E98  A0D8               	btfss	status,0,c
  6613   000E9A  EF51  F007         	goto	u1701
  6614   000E9E  EF53  F007         	goto	u1700
  6615   000EA2                     u1701:
  6616   000EA2  EF5A  F007         	goto	l2331
  6617   000EA6                     u1700:
  6618   000EA6  B254               	btfsc	_flags^0,1,c
  6619   000EA8  EF58  F007         	goto	u1711
  6620   000EAC  EF5A  F007         	goto	u1710
  6621   000EB0                     u1711:
  6622   000EB0  EFFC  F006         	goto	l2311
  6623   000EB4                     u1710:
  6624   000EB4                     l2331:
  6625                           
  6626                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6627   000EB4  501D               	movf	dtoa@s^0,w,c
  6628   000EB6  B4D8               	btfsc	status,2,c
  6629   000EB8  EF60  F007         	goto	u1721
  6630   000EBC  EF62  F007         	goto	u1720
  6631   000EC0                     u1721:
  6632   000EC0  EF6B  F007         	goto	l2337
  6633   000EC4                     u1720:
  6634   000EC4                     
  6635                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
  6636   000EC4  061E               	decf	dtoa@i^0,f,c
  6637   000EC6  A0D8               	btfss	status,0,c
  6638   000EC8  061F               	decf	(dtoa@i+1)^0,f,c
  6639   000ECA                     
  6640                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6641   000ECA  501E               	movf	dtoa@i^0,w,c
  6642   000ECC  0FC8               	addlw	low _dbuf
  6643   000ECE  6ED9               	movwf	fsr2l,c
  6644   000ED0  6ADA               	clrf	fsr2h,c
  6645   000ED2  C01D  FFDF         	movff	dtoa@s,indf2
  6646   000ED6                     l2337:
  6647                           
  6648                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6649   000ED6  C015  F00E         	movff	dtoa@fp,pad@fp
  6650   000EDA  501E               	movf	dtoa@i^0,w,c
  6651   000EDC  0FC8               	addlw	low _dbuf
  6652   000EDE  6E0F               	movwf	pad@buf^0,c
  6653   000EE0  C01B  F010         	movff	dtoa@w,pad@p
  6654   000EE4  C01C  F011         	movff	dtoa@w+1,pad@p+1
  6655   000EE8  ECA0  F00E         	call	_pad	;wreg free
  6656   000EEC  0012               	return		;funcret
  6657   000EEE                     __end_of_dtoa:
  6658                           	callstack 0
  6659                           
  6660 ;; *************** function _pad *****************
  6661 ;; Defined at:
  6662 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  6663 ;; Parameters:    Size  Location     Type
  6664 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  6665 ;;		 -> sprintf@f(11), 
  6666 ;;  buf             1   14[COMRAM] PTR unsigned char 
  6667 ;;		 -> dbuf(32), 
  6668 ;;  p               2   15[COMRAM] int 
  6669 ;; Auto vars:     Size  Location     Type
  6670 ;;  i               2   18[COMRAM] int 
  6671 ;; Return value:  Size  Location     Type
  6672 ;;                  1    wreg      void 
  6673 ;; Registers used:
  6674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6675 ;; Tracked objects:
  6676 ;;		On entry : 0/0
  6677 ;;		On exit  : 0/0
  6678 ;;		Unchanged: 0/0
  6679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6680 ;;      Params:         4       0       0       0       0       0       0       0       0
  6681 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6682 ;;      Temps:          1       0       0       0       0       0       0       0       0
  6683 ;;      Totals:         7       0       0       0       0       0       0       0       0
  6684 ;;Total ram usage:        7 bytes
  6685 ;; Hardware stack levels used: 1
  6686 ;; Hardware stack levels required when called: 3
  6687 ;; This function calls:
  6688 ;;		_fputc
  6689 ;;		_fputs
  6690 ;; This function is called by:
  6691 ;;		_dtoa
  6692 ;; This function uses a non-reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text35
  6696   001D40                     __ptext35:
  6697                           	callstack 0
  6698   001D40                     _pad:
  6699                           	callstack 22
  6700   001D40                     
  6701                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  6702   001D40  A054               	btfss	_flags^0,0,c
  6703   001D42  EFA5  F00E         	goto	u1581
  6704   001D46  EFA7  F00E         	goto	u1580
  6705   001D4A                     u1581:
  6706   001D4A  EFAD  F00E         	goto	l2255
  6707   001D4E                     u1580:
  6708   001D4E                     
  6709                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  6710   001D4E  C00F  F009         	movff	pad@buf,fputs@s
  6711   001D52  C00E  F00A         	movff	pad@fp,fputs@fp
  6712   001D56  EC41  F011         	call	_fputs	;wreg free
  6713   001D5A                     l2255:
  6714                           
  6715                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  6716   001D5A  BE11               	btfsc	(pad@p+1)^0,7,c
  6717   001D5C  EFB4  F00E         	goto	u1590
  6718   001D60  EFB2  F00E         	goto	u1591
  6719   001D64                     u1591:
  6720   001D64  EFB8  F00E         	goto	l999
  6721   001D68                     u1590:
  6722   001D68                     
  6723                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6724   001D68  0E00               	movlw	0
  6725   001D6A  6E11               	movwf	(pad@p+1)^0,c
  6726   001D6C  0E00               	movlw	0
  6727   001D6E  6E10               	movwf	pad@p^0,c
  6728   001D70                     l999:
  6729                           
  6730                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6731   001D70  0E00               	movlw	0
  6732   001D72  6E14               	movwf	(pad@i+1)^0,c
  6733   001D74  0E00               	movlw	0
  6734   001D76  6E13               	movwf	pad@i^0,c
  6735                           
  6736                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6737   001D78  EFC8  F00E         	goto	l2263
  6738   001D7C                     l2259:
  6739                           
  6740                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6741   001D7C  0E00               	movlw	0
  6742   001D7E  6E02               	movwf	(fputc@c+1)^0,c
  6743   001D80  0E20               	movlw	32
  6744   001D82  6E01               	movwf	fputc@c^0,c
  6745   001D84  C00E  F003         	movff	pad@fp,fputc@fp
  6746   001D88  EC4F  F00C         	call	_fputc	;wreg free
  6747   001D8C                     
  6748                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6749   001D8C  4A13               	infsnz	pad@i^0,f,c
  6750   001D8E  2A14               	incf	(pad@i+1)^0,f,c
  6751   001D90                     l2263:
  6752                           
  6753                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6754   001D90  5010               	movf	pad@p^0,w,c
  6755   001D92  5C13               	subwf	pad@i^0,w,c
  6756   001D94  5014               	movf	(pad@i+1)^0,w,c
  6757   001D96  0A80               	xorlw	128
  6758   001D98  6E12               	movwf	??_pad^0,c
  6759   001D9A  5011               	movf	(pad@p+1)^0,w,c
  6760   001D9C  0A80               	xorlw	128
  6761   001D9E  5812               	subwfb	??_pad^0,w,c
  6762   001DA0  A0D8               	btfss	status,0,c
  6763   001DA2  EFD5  F00E         	goto	u1601
  6764   001DA6  EFD7  F00E         	goto	u1600
  6765   001DAA                     u1601:
  6766   001DAA  EFBE  F00E         	goto	l2259
  6767   001DAE                     u1600:
  6768   001DAE                     
  6769                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  6770   001DAE  B054               	btfsc	_flags^0,0,c
  6771   001DB0  EFDC  F00E         	goto	u1611
  6772   001DB4  EFDE  F00E         	goto	u1610
  6773   001DB8                     u1611:
  6774   001DB8  EFE4  F00E         	goto	l1004
  6775   001DBC                     u1610:
  6776   001DBC                     
  6777                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6778   001DBC  C00F  F009         	movff	pad@buf,fputs@s
  6779   001DC0  C00E  F00A         	movff	pad@fp,fputs@fp
  6780   001DC4  EC41  F011         	call	_fputs	;wreg free
  6781   001DC8                     l1004:
  6782   001DC8  0012               	return		;funcret
  6783   001DCA                     __end_of_pad:
  6784                           	callstack 0
  6785                           
  6786 ;; *************** function _fputs *****************
  6787 ;; Defined at:
  6788 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  6789 ;; Parameters:    Size  Location     Type
  6790 ;;  s               1    8[COMRAM] PTR const unsigned char 
  6791 ;;		 -> dbuf(32), 
  6792 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  6793 ;;		 -> sprintf@f(11), 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  i               2   11[COMRAM] int 
  6796 ;;  c               1   10[COMRAM] unsigned char 
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  2    8[COMRAM] int 
  6799 ;; Registers used:
  6800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6806 ;;      Params:         2       0       0       0       0       0       0       0       0
  6807 ;;      Locals:         3       0       0       0       0       0       0       0       0
  6808 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6809 ;;      Totals:         5       0       0       0       0       0       0       0       0
  6810 ;;Total ram usage:        5 bytes
  6811 ;; Hardware stack levels used: 1
  6812 ;; Hardware stack levels required when called: 2
  6813 ;; This function calls:
  6814 ;;		_fputc
  6815 ;; This function is called by:
  6816 ;;		_pad
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text36
  6821   002282                     __ptext36:
  6822                           	callstack 0
  6823   002282                     _fputs:
  6824                           	callstack 22
  6825   002282  0E00               	movlw	0
  6826   002284  6E0D               	movwf	(fputs@i+1)^0,c
  6827   002286  0E00               	movlw	0
  6828   002288  6E0C               	movwf	fputs@i^0,c
  6829   00228A  EF50  F011         	goto	l2169
  6830   00228E                     l2165:
  6831   00228E  C00B  F001         	movff	fputs@c,fputc@c
  6832   002292  6A02               	clrf	(fputc@c+1)^0,c
  6833   002294  C00A  F003         	movff	fputs@fp,fputc@fp
  6834   002298  EC4F  F00C         	call	_fputc	;wreg free
  6835   00229C  4A0C               	infsnz	fputs@i^0,f,c
  6836   00229E  2A0D               	incf	(fputs@i+1)^0,f,c
  6837   0022A0                     l2169:
  6838   0022A0  5009               	movf	fputs@s^0,w,c
  6839   0022A2  240C               	addwf	fputs@i^0,w,c
  6840   0022A4  6ED9               	movwf	fsr2l,c
  6841   0022A6  6ADA               	clrf	fsr2h,c
  6842   0022A8  50DF               	movf	indf2,w,c
  6843   0022AA  6E0B               	movwf	fputs@c^0,c
  6844   0022AC  500B               	movf	fputs@c^0,w,c
  6845   0022AE  A4D8               	btfss	status,2,c
  6846   0022B0  EF5C  F011         	goto	u1451
  6847   0022B4  EF5E  F011         	goto	u1450
  6848   0022B8                     u1451:
  6849   0022B8  EF47  F011         	goto	l2165
  6850   0022BC                     u1450:
  6851   0022BC  0012               	return		;funcret
  6852   0022BE                     __end_of_fputs:
  6853                           	callstack 0
  6854                           
  6855 ;; *************** function _fputc *****************
  6856 ;; Defined at:
  6857 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  6858 ;; Parameters:    Size  Location     Type
  6859 ;;  c               2    0[COMRAM] int 
  6860 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6861 ;;		 -> sprintf@f(11), 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;		None
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  2    0[COMRAM] int 
  6866 ;; Registers used:
  6867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6873 ;;      Params:         3       0       0       0       0       0       0       0       0
  6874 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6875 ;;      Temps:          5       0       0       0       0       0       0       0       0
  6876 ;;      Totals:         8       0       0       0       0       0       0       0       0
  6877 ;;Total ram usage:        8 bytes
  6878 ;; Hardware stack levels used: 1
  6879 ;; Hardware stack levels required when called: 1
  6880 ;; This function calls:
  6881 ;;		_putch
  6882 ;; This function is called by:
  6883 ;;		_pad
  6884 ;;		_stoa
  6885 ;;		_vfpfcnvrt
  6886 ;;		_fputs
  6887 ;; This function uses a non-reentrant model
  6888 ;;
  6889                           
  6890                           	psect	text37
  6891   00189E                     __ptext37:
  6892                           	callstack 0
  6893   00189E                     _fputc:
  6894                           	callstack 24
  6895   00189E  5003               	movf	fputc@fp^0,w,c
  6896   0018A0  B4D8               	btfsc	status,2,c
  6897   0018A2  EF55  F00C         	goto	u1411
  6898   0018A6  EF57  F00C         	goto	u1410
  6899   0018AA                     u1411:
  6900   0018AA  EF5F  F00C         	goto	l2153
  6901   0018AE                     u1410:
  6902   0018AE  5003               	movf	fputc@fp^0,w,c
  6903   0018B0  A4D8               	btfss	status,2,c
  6904   0018B2  EF5D  F00C         	goto	u1421
  6905   0018B6  EF5F  F00C         	goto	u1420
  6906   0018BA                     u1421:
  6907   0018BA  EF64  F00C         	goto	l2155
  6908   0018BE                     u1420:
  6909   0018BE                     l2153:
  6910   0018BE  5001               	movf	fputc@c^0,w,c
  6911   0018C0  EC36  F012         	call	_putch
  6912   0018C4  EFAB  F00C         	goto	l1092
  6913   0018C8                     l2155:
  6914   0018C8  5003               	movf	fputc@fp^0,w,c
  6915   0018CA  6ED9               	movwf	fsr2l,c
  6916   0018CC  6ADA               	clrf	fsr2h,c
  6917   0018CE  0E09               	movlw	9
  6918   0018D0  26D9               	addwf	fsr2l,f,c
  6919   0018D2  50DE               	movf	postinc2,w,c
  6920   0018D4  10DE               	iorwf	postinc2,w,c
  6921   0018D6  B4D8               	btfsc	status,2,c
  6922   0018D8  EF70  F00C         	goto	u1431
  6923   0018DC  EF72  F00C         	goto	u1430
  6924   0018E0                     u1431:
  6925   0018E0  EF8B  F00C         	goto	l2159
  6926   0018E4                     u1430:
  6927   0018E4  5003               	movf	fputc@fp^0,w,c
  6928   0018E6  6ED9               	movwf	fsr2l,c
  6929   0018E8  6ADA               	clrf	fsr2h,c
  6930   0018EA  0E09               	movlw	9
  6931   0018EC  26D9               	addwf	fsr2l,f,c
  6932   0018EE  5003               	movf	fputc@fp^0,w,c
  6933   0018F0  6EE1               	movwf	fsr1l,c
  6934   0018F2  6AE2               	clrf	fsr1h,c
  6935   0018F4  0E02               	movlw	2
  6936   0018F6  26E1               	addwf	fsr1l,f,c
  6937   0018F8  50DE               	movf	postinc2,w,c
  6938   0018FA  5CE6               	subwf	postinc1,w,c
  6939   0018FC  50E6               	movf	postinc1,w,c
  6940   0018FE  0A80               	xorlw	128
  6941   001900  6E08               	movwf	(??_fputc+4)^0,c
  6942   001902  50DE               	movf	postinc2,w,c
  6943   001904  0A80               	xorlw	128
  6944   001906  5808               	subwfb	(??_fputc+4)^0,w,c
  6945   001908  B0D8               	btfsc	status,0,c
  6946   00190A  EF89  F00C         	goto	u1441
  6947   00190E  EF8B  F00C         	goto	u1440
  6948   001912                     u1441:
  6949   001912  EFAB  F00C         	goto	l1092
  6950   001916                     u1440:
  6951   001916                     l2159:
  6952   001916  5003               	movf	fputc@fp^0,w,c
  6953   001918  6ED9               	movwf	fsr2l,c
  6954   00191A  6ADA               	clrf	fsr2h,c
  6955   00191C  0E02               	movlw	2
  6956   00191E  26D9               	addwf	fsr2l,f,c
  6957   001920  CFDE F004          	movff	postinc2,??_fputc
  6958   001924  CFDD F005          	movff	postdec2,??_fputc+1
  6959   001928  5003               	movf	fputc@fp^0,w,c
  6960   00192A  6ED9               	movwf	fsr2l,c
  6961   00192C  6ADA               	clrf	fsr2h,c
  6962   00192E  CFDE F006          	movff	postinc2,??_fputc+2
  6963   001932  CFDD F007          	movff	postdec2,??_fputc+3
  6964   001936  5004               	movf	??_fputc^0,w,c
  6965   001938  2406               	addwf	(??_fputc+2)^0,w,c
  6966   00193A  6ED9               	movwf	fsr2l,c
  6967   00193C  5005               	movf	(??_fputc+1)^0,w,c
  6968   00193E  2007               	addwfc	(??_fputc+3)^0,w,c
  6969   001940  6EDA               	movwf	fsr2h,c
  6970   001942  C001  FFDF         	movff	fputc@c,indf2
  6971   001946  5003               	movf	fputc@fp^0,w,c
  6972   001948  6ED9               	movwf	fsr2l,c
  6973   00194A  6ADA               	clrf	fsr2h,c
  6974   00194C  0E02               	movlw	2
  6975   00194E  26D9               	addwf	fsr2l,f,c
  6976   001950  2ADE               	incf	postinc2,f,c
  6977   001952  0E00               	movlw	0
  6978   001954  22DD               	addwfc	postdec2,f,c
  6979   001956                     l1092:
  6980   001956  0012               	return		;funcret
  6981   001958                     __end_of_fputc:
  6982                           	callstack 0
  6983                           
  6984 ;; *************** function _putch *****************
  6985 ;; Defined at:
  6986 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  6987 ;; Parameters:    Size  Location     Type
  6988 ;;  c               1    wreg     unsigned char 
  6989 ;; Auto vars:     Size  Location     Type
  6990 ;;  c               1    0[COMRAM] unsigned char 
  6991 ;; Return value:  Size  Location     Type
  6992 ;;                  1    wreg      void 
  6993 ;; Registers used:
  6994 ;;		wreg
  6995 ;; Tracked objects:
  6996 ;;		On entry : 0/0
  6997 ;;		On exit  : 0/0
  6998 ;;		Unchanged: 0/0
  6999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7000 ;;      Params:         0       0       0       0       0       0       0       0       0
  7001 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7003 ;;      Totals:         0       0       0       0       0       0       0       0       0
  7004 ;;Total ram usage:        0 bytes
  7005 ;; Hardware stack levels used: 1
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_fputc
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           	psect	text38
  7014   00246C                     __ptext38:
  7015                           	callstack 0
  7016   00246C                     _putch:
  7017                           	callstack 24
  7018   00246C  0012               	return		;funcret
  7019   00246E                     __end_of_putch:
  7020                           	callstack 0
  7021                           
  7022 ;; *************** function _abs *****************
  7023 ;; Defined at:
  7024 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  7025 ;; Parameters:    Size  Location     Type
  7026 ;;  a               2    6[COMRAM] int 
  7027 ;; Auto vars:     Size  Location     Type
  7028 ;;		None
  7029 ;; Return value:  Size  Location     Type
  7030 ;;                  2    6[COMRAM] int 
  7031 ;; Registers used:
  7032 ;;		wreg, status,2, status,0
  7033 ;; Tracked objects:
  7034 ;;		On entry : 0/0
  7035 ;;		On exit  : 0/0
  7036 ;;		Unchanged: 0/0
  7037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7038 ;;      Params:         2       0       0       0       0       0       0       0       0
  7039 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7040 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7041 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7042 ;;Total ram usage:        4 bytes
  7043 ;; Hardware stack levels used: 1
  7044 ;; This function calls:
  7045 ;;		Nothing
  7046 ;; This function is called by:
  7047 ;;		_dtoa
  7048 ;; This function uses a non-reentrant model
  7049 ;;
  7050                           
  7051                           	psect	text39
  7052   002328                     __ptext39:
  7053                           	callstack 0
  7054   002328                     _abs:
  7055                           	callstack 25
  7056   002328  BE08               	btfsc	(abs@a+1)^0,7,c
  7057   00232A  EF99  F011         	goto	u1621
  7058   00232E  EF9B  F011         	goto	u1620
  7059   002332                     u1621:
  7060   002332  EFA1  F011         	goto	l1077
  7061   002336                     u1620:
  7062   002336  C007  F007         	movff	abs@a,?_abs
  7063   00233A  C008  F008         	movff	abs@a+1,?_abs+1
  7064   00233E  EFAD  F011         	goto	l1080
  7065   002342                     l1077:
  7066   002342  C007  F009         	movff	abs@a,??_abs
  7067   002346  C008  F00A         	movff	abs@a+1,??_abs+1
  7068   00234A  1E09               	comf	??_abs^0,f,c
  7069   00234C  1E0A               	comf	(??_abs+1)^0,f,c
  7070   00234E  4A09               	infsnz	??_abs^0,f,c
  7071   002350  2A0A               	incf	(??_abs+1)^0,f,c
  7072   002352  C009  F007         	movff	??_abs,?_abs
  7073   002356  C00A  F008         	movff	??_abs+1,?_abs+1
  7074   00235A                     l1080:
  7075   00235A  0012               	return		;funcret
  7076   00235C                     __end_of_abs:
  7077                           	callstack 0
  7078                           
  7079 ;; *************** function ___awmod *****************
  7080 ;; Defined at:
  7081 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  7082 ;; Parameters:    Size  Location     Type
  7083 ;;  dividend        2    0[COMRAM] int 
  7084 ;;  divisor         2    2[COMRAM] int 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  sign            1    5[COMRAM] unsigned char 
  7087 ;;  counter         1    4[COMRAM] unsigned char 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  2    0[COMRAM] int 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7097 ;;      Params:         4       0       0       0       0       0       0       0       0
  7098 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7100 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7101 ;;Total ram usage:        6 bytes
  7102 ;; Hardware stack levels used: 1
  7103 ;; This function calls:
  7104 ;;		Nothing
  7105 ;; This function is called by:
  7106 ;;		_dtoa
  7107 ;;		_DEC2BCD
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           
  7111                           	psect	text40
  7112   001A0A                     __ptext40:
  7113                           	callstack 0
  7114   001A0A                     ___awmod:
  7115                           	callstack 25
  7116   001A0A  6A06               	clrf	___awmod@sign^0,c
  7117   001A0C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7118   001A0E  EF0D  F00D         	goto	u1520
  7119   001A12  EF0B  F00D         	goto	u1521
  7120   001A16                     u1521:
  7121   001A16  EF13  F00D         	goto	l2223
  7122   001A1A                     u1520:
  7123   001A1A  6C01               	negf	___awmod@dividend^0,c
  7124   001A1C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7125   001A1E  B0D8               	btfsc	status,0,c
  7126   001A20  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7127   001A22  0E01               	movlw	1
  7128   001A24  6E06               	movwf	___awmod@sign^0,c
  7129   001A26                     l2223:
  7130   001A26  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7131   001A28  EF1A  F00D         	goto	u1530
  7132   001A2C  EF18  F00D         	goto	u1531
  7133   001A30                     u1531:
  7134   001A30  EF1E  F00D         	goto	l2227
  7135   001A34                     u1530:
  7136   001A34  6C03               	negf	___awmod@divisor^0,c
  7137   001A36  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7138   001A38  B0D8               	btfsc	status,0,c
  7139   001A3A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7140   001A3C                     l2227:
  7141   001A3C  5003               	movf	___awmod@divisor^0,w,c
  7142   001A3E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7143   001A40  B4D8               	btfsc	status,2,c
  7144   001A42  EF25  F00D         	goto	u1541
  7145   001A46  EF27  F00D         	goto	u1540
  7146   001A4A                     u1541:
  7147   001A4A  EF4B  F00D         	goto	l2243
  7148   001A4E                     u1540:
  7149   001A4E  0E01               	movlw	1
  7150   001A50  6E05               	movwf	___awmod@counter^0,c
  7151   001A52  EF2F  F00D         	goto	l2233
  7152   001A56                     l2231:
  7153   001A56  90D8               	bcf	status,0,c
  7154   001A58  3603               	rlcf	___awmod@divisor^0,f,c
  7155   001A5A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7156   001A5C  2A05               	incf	___awmod@counter^0,f,c
  7157   001A5E                     l2233:
  7158   001A5E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7159   001A60  EF34  F00D         	goto	u1551
  7160   001A64  EF36  F00D         	goto	u1550
  7161   001A68                     u1551:
  7162   001A68  EF2B  F00D         	goto	l2231
  7163   001A6C                     u1550:
  7164   001A6C                     l2235:
  7165   001A6C  5003               	movf	___awmod@divisor^0,w,c
  7166   001A6E  5C01               	subwf	___awmod@dividend^0,w,c
  7167   001A70  5004               	movf	(___awmod@divisor+1)^0,w,c
  7168   001A72  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7169   001A74  A0D8               	btfss	status,0,c
  7170   001A76  EF3F  F00D         	goto	u1561
  7171   001A7A  EF41  F00D         	goto	u1560
  7172   001A7E                     u1561:
  7173   001A7E  EF45  F00D         	goto	l2239
  7174   001A82                     u1560:
  7175   001A82  5003               	movf	___awmod@divisor^0,w,c
  7176   001A84  5E01               	subwf	___awmod@dividend^0,f,c
  7177   001A86  5004               	movf	(___awmod@divisor+1)^0,w,c
  7178   001A88  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7179   001A8A                     l2239:
  7180   001A8A  90D8               	bcf	status,0,c
  7181   001A8C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7182   001A8E  3203               	rrcf	___awmod@divisor^0,f,c
  7183   001A90  2E05               	decfsz	___awmod@counter^0,f,c
  7184   001A92  EF36  F00D         	goto	l2235
  7185   001A96                     l2243:
  7186   001A96  5006               	movf	___awmod@sign^0,w,c
  7187   001A98  B4D8               	btfsc	status,2,c
  7188   001A9A  EF51  F00D         	goto	u1571
  7189   001A9E  EF53  F00D         	goto	u1570
  7190   001AA2                     u1571:
  7191   001AA2  EF57  F00D         	goto	l2247
  7192   001AA6                     u1570:
  7193   001AA6  6C01               	negf	___awmod@dividend^0,c
  7194   001AA8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7195   001AAA  B0D8               	btfsc	status,0,c
  7196   001AAC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7197   001AAE                     l2247:
  7198   001AAE  C001  F001         	movff	___awmod@dividend,?___awmod
  7199   001AB2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7200   001AB6  0012               	return		;funcret
  7201   001AB8                     __end_of___awmod:
  7202                           	callstack 0
  7203                           
  7204 ;; *************** function ___awdiv *****************
  7205 ;; Defined at:
  7206 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  7207 ;; Parameters:    Size  Location     Type
  7208 ;;  dividend        2    0[COMRAM] int 
  7209 ;;  divisor         2    2[COMRAM] int 
  7210 ;; Auto vars:     Size  Location     Type
  7211 ;;  quotient        2    6[COMRAM] int 
  7212 ;;  sign            1    5[COMRAM] unsigned char 
  7213 ;;  counter         1    4[COMRAM] unsigned char 
  7214 ;; Return value:  Size  Location     Type
  7215 ;;                  2    0[COMRAM] int 
  7216 ;; Registers used:
  7217 ;;		wreg, status,2, status,0
  7218 ;; Tracked objects:
  7219 ;;		On entry : 0/0
  7220 ;;		On exit  : 0/0
  7221 ;;		Unchanged: 0/0
  7222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7223 ;;      Params:         4       0       0       0       0       0       0       0       0
  7224 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7226 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7227 ;;Total ram usage:        8 bytes
  7228 ;; Hardware stack levels used: 1
  7229 ;; This function calls:
  7230 ;;		Nothing
  7231 ;; This function is called by:
  7232 ;;		_dtoa
  7233 ;;		_DEC2BCD
  7234 ;; This function uses a non-reentrant model
  7235 ;;
  7236                           
  7237                           	psect	text41
  7238   00171A                     __ptext41:
  7239                           	callstack 0
  7240   00171A                     ___awdiv:
  7241                           	callstack 25
  7242   00171A  6A06               	clrf	___awdiv@sign^0,c
  7243   00171C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7244   00171E  EF95  F00B         	goto	u1460
  7245   001722  EF93  F00B         	goto	u1461
  7246   001726                     u1461:
  7247   001726  EF9B  F00B         	goto	l2179
  7248   00172A                     u1460:
  7249   00172A  6C03               	negf	___awdiv@divisor^0,c
  7250   00172C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7251   00172E  B0D8               	btfsc	status,0,c
  7252   001730  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7253   001732  0E01               	movlw	1
  7254   001734  6E06               	movwf	___awdiv@sign^0,c
  7255   001736                     l2179:
  7256   001736  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7257   001738  EFA2  F00B         	goto	u1470
  7258   00173C  EFA0  F00B         	goto	u1471
  7259   001740                     u1471:
  7260   001740  EFA8  F00B         	goto	l2185
  7261   001744                     u1470:
  7262   001744  6C01               	negf	___awdiv@dividend^0,c
  7263   001746  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7264   001748  B0D8               	btfsc	status,0,c
  7265   00174A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7266   00174C  0E01               	movlw	1
  7267   00174E  1A06               	xorwf	___awdiv@sign^0,f,c
  7268   001750                     l2185:
  7269   001750  0E00               	movlw	0
  7270   001752  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7271   001754  0E00               	movlw	0
  7272   001756  6E07               	movwf	___awdiv@quotient^0,c
  7273   001758  5003               	movf	___awdiv@divisor^0,w,c
  7274   00175A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7275   00175C  B4D8               	btfsc	status,2,c
  7276   00175E  EFB3  F00B         	goto	u1481
  7277   001762  EFB5  F00B         	goto	u1480
  7278   001766                     u1481:
  7279   001766  EFDD  F00B         	goto	l2207
  7280   00176A                     u1480:
  7281   00176A  0E01               	movlw	1
  7282   00176C  6E05               	movwf	___awdiv@counter^0,c
  7283   00176E  EFBD  F00B         	goto	l2193
  7284   001772                     l2191:
  7285   001772  90D8               	bcf	status,0,c
  7286   001774  3603               	rlcf	___awdiv@divisor^0,f,c
  7287   001776  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7288   001778  2A05               	incf	___awdiv@counter^0,f,c
  7289   00177A                     l2193:
  7290   00177A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7291   00177C  EFC2  F00B         	goto	u1491
  7292   001780  EFC4  F00B         	goto	u1490
  7293   001784                     u1491:
  7294   001784  EFB9  F00B         	goto	l2191
  7295   001788                     u1490:
  7296   001788                     l2195:
  7297   001788  90D8               	bcf	status,0,c
  7298   00178A  3607               	rlcf	___awdiv@quotient^0,f,c
  7299   00178C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7300   00178E  5003               	movf	___awdiv@divisor^0,w,c
  7301   001790  5C01               	subwf	___awdiv@dividend^0,w,c
  7302   001792  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7303   001794  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7304   001796  A0D8               	btfss	status,0,c
  7305   001798  EFD0  F00B         	goto	u1501
  7306   00179C  EFD2  F00B         	goto	u1500
  7307   0017A0                     u1501:
  7308   0017A0  EFD7  F00B         	goto	l2203
  7309   0017A4                     u1500:
  7310   0017A4  5003               	movf	___awdiv@divisor^0,w,c
  7311   0017A6  5E01               	subwf	___awdiv@dividend^0,f,c
  7312   0017A8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7313   0017AA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7314   0017AC  8007               	bsf	___awdiv@quotient^0,0,c
  7315   0017AE                     l2203:
  7316   0017AE  90D8               	bcf	status,0,c
  7317   0017B0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7318   0017B2  3203               	rrcf	___awdiv@divisor^0,f,c
  7319   0017B4  2E05               	decfsz	___awdiv@counter^0,f,c
  7320   0017B6  EFC4  F00B         	goto	l2195
  7321   0017BA                     l2207:
  7322   0017BA  5006               	movf	___awdiv@sign^0,w,c
  7323   0017BC  B4D8               	btfsc	status,2,c
  7324   0017BE  EFE3  F00B         	goto	u1511
  7325   0017C2  EFE5  F00B         	goto	u1510
  7326   0017C6                     u1511:
  7327   0017C6  EFE9  F00B         	goto	l2211
  7328   0017CA                     u1510:
  7329   0017CA  6C07               	negf	___awdiv@quotient^0,c
  7330   0017CC  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7331   0017CE  B0D8               	btfsc	status,0,c
  7332   0017D0  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7333   0017D2                     l2211:
  7334   0017D2  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7335   0017D6  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7336   0017DA  0012               	return		;funcret
  7337   0017DC                     __end_of___awdiv:
  7338                           	callstack 0
  7339                           
  7340 ;; *************** function _DHT11_Read *****************
  7341 ;; Defined at:
  7342 ;;		line 16 in file "DHT11.c"
  7343 ;; Parameters:    Size  Location     Type
  7344 ;;  humidity        1    2[COMRAM] PTR unsigned char 
  7345 ;;		 -> Display_DHT11@hum(1), 
  7346 ;;  temperature     1    3[COMRAM] PTR unsigned char 
  7347 ;;		 -> Display_DHT11@temp(1), 
  7348 ;; Auto vars:     Size  Location     Type
  7349 ;;  i               1   13[COMRAM] unsigned char 
  7350 ;;  data            5    8[COMRAM] unsigned char [5]
  7351 ;; Return value:  Size  Location     Type
  7352 ;;                  1    wreg      unsigned char 
  7353 ;; Registers used:
  7354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7355 ;; Tracked objects:
  7356 ;;		On entry : 0/0
  7357 ;;		On exit  : 0/0
  7358 ;;		Unchanged: 0/0
  7359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7360 ;;      Params:         2       0       0       0       0       0       0       0       0
  7361 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7362 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7363 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7364 ;;Total ram usage:       12 bytes
  7365 ;; Hardware stack levels used: 1
  7366 ;; Hardware stack levels required when called: 1
  7367 ;; This function calls:
  7368 ;;		_DHT11_ReadByte
  7369 ;; This function is called by:
  7370 ;;		_Display_DHT11
  7371 ;; This function uses a non-reentrant model
  7372 ;;
  7373                           
  7374                           	psect	text42
  7375   0017DC                     __ptext42:
  7376                           	callstack 0
  7377   0017DC                     _DHT11_Read:
  7378                           	callstack 28
  7379   0017DC                     
  7380                           ;DHT11.c: 17:     TRISAbits.TRISA0 = 0;
  7381   0017DC  9092               	bcf	146,0,c	;volatile
  7382                           
  7383                           ;DHT11.c: 18:     PORTAbits.RA0 = 0;
  7384   0017DE  9080               	bcf	128,0,c	;volatile
  7385   0017E0                     
  7386                           ;DHT11.c: 19:     _delay((unsigned long)((18)*(8000000/4000.0)));
  7387   0017E0  0E2F               	movlw	47
  7388   0017E2  6E05               	movwf	??_DHT11_Read^0,c
  7389   0017E4  0EC0               	movlw	192
  7390   0017E6                     u2867:
  7391   0017E6  2EE8               	decfsz	wreg,f,c
  7392   0017E8  D7FE               	bra	u2867
  7393   0017EA  2E05               	decfsz	??_DHT11_Read^0,f,c
  7394   0017EC  D7FC               	bra	u2867
  7395   0017EE                     
  7396                           ;DHT11.c: 20:     PORTAbits.RA0 = 1;
  7397   0017EE  8080               	bsf	128,0,c	;volatile
  7398                           
  7399                           ;DHT11.c: 21:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  7400   0017F0  0E14               	movlw	20
  7401   0017F2                     u2877:
  7402   0017F2  2EE8               	decfsz	wreg,f,c
  7403   0017F4  D7FE               	bra	u2877
  7404   0017F6                     
  7405                           ;DHT11.c: 22:     TRISAbits.TRISA0 = 1;
  7406   0017F6  8092               	bsf	146,0,c	;volatile
  7407   0017F8                     
  7408                           ;DHT11.c: 24:     if (PORTAbits.RA0 == 0) {
  7409   0017F8  B080               	btfsc	128,0,c	;volatile
  7410   0017FA  EF01  F00C         	goto	u2371
  7411   0017FE  EF03  F00C         	goto	u2370
  7412   001802                     u2371:
  7413   001802  EF4D  F00C         	goto	l2743
  7414   001806                     u2370:
  7415   001806                     l91:
  7416   001806  A080               	btfss	128,0,c	;volatile
  7417   001808  EF08  F00C         	goto	u2381
  7418   00180C  EF0A  F00C         	goto	u2380
  7419   001810                     u2381:
  7420   001810  EF03  F00C         	goto	l91
  7421   001814                     u2380:
  7422   001814                     l94:
  7423   001814  B080               	btfsc	128,0,c	;volatile
  7424   001816  EF0F  F00C         	goto	u2391
  7425   00181A  EF11  F00C         	goto	u2390
  7426   00181E                     u2391:
  7427   00181E  EF0A  F00C         	goto	l94
  7428   001822                     u2390:
  7429   001822                     
  7430                           ;DHT11.c: 29:         uint8_t data[5];;DHT11.c: 30:         for (uint8_t i = 0; i < 5; i
      +                          ++) {
  7431   001822  6A0E               	clrf	DHT11_Read@i^0,c
  7432   001824                     l2729:
  7433                           
  7434                           ;DHT11.c: 31:             data[i] = DHT11_ReadByte();
  7435   001824  500E               	movf	DHT11_Read@i^0,w,c
  7436   001826  0F09               	addlw	low DHT11_Read@data
  7437   001828  6ED9               	movwf	fsr2l,c
  7438   00182A  6ADA               	clrf	fsr2h,c
  7439   00182C  ECDA  F010         	call	_DHT11_ReadByte	;wreg free
  7440   001830  6EDF               	movwf	indf2,c
  7441   001832                     
  7442                           ;DHT11.c: 32:         }
  7443   001832  2A0E               	incf	DHT11_Read@i^0,f,c
  7444   001834  0E04               	movlw	4
  7445   001836  640E               	cpfsgt	DHT11_Read@i^0,c
  7446   001838  EF20  F00C         	goto	u2401
  7447   00183C  EF22  F00C         	goto	u2400
  7448   001840                     u2401:
  7449   001840  EF12  F00C         	goto	l2729
  7450   001844                     u2400:
  7451   001844                     
  7452                           ;DHT11.c: 35:         if ((data[0] + data[1] + data[2] + data[3]) == data[4]) {
  7453   001844  500D               	movf	(DHT11_Read@data+4)^0,w,c
  7454   001846  6E05               	movwf	??_DHT11_Read^0,c
  7455   001848  6A06               	clrf	(??_DHT11_Read+1)^0,c
  7456   00184A  500A               	movf	(DHT11_Read@data+1)^0,w,c
  7457   00184C  C009  F007         	movff	DHT11_Read@data,??_DHT11_Read+2
  7458   001850  6A08               	clrf	(??_DHT11_Read+3)^0,c
  7459   001852  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  7460   001854  0E00               	movlw	0
  7461   001856  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  7462   001858  500B               	movf	(DHT11_Read@data+2)^0,w,c
  7463   00185A  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  7464   00185C  0E00               	movlw	0
  7465   00185E  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  7466   001860  500C               	movf	(DHT11_Read@data+3)^0,w,c
  7467   001862  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  7468   001864  0E00               	movlw	0
  7469   001866  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  7470   001868  5005               	movf	??_DHT11_Read^0,w,c
  7471   00186A  1807               	xorwf	(??_DHT11_Read+2)^0,w,c
  7472   00186C  E107               	bnz	u2411
  7473   00186E  5006               	movf	(??_DHT11_Read+1)^0,w,c
  7474   001870  1808               	xorwf	(??_DHT11_Read+3)^0,w,c
  7475   001872  A4D8               	btfss	status,2,c
  7476   001874  EF3E  F00C         	goto	u2411
  7477   001878  EF40  F00C         	goto	u2410
  7478   00187C                     u2411:
  7479   00187C  EF4D  F00C         	goto	l2743
  7480   001880                     u2410:
  7481   001880                     
  7482                           ;DHT11.c: 36:             *humidity = data[0];
  7483   001880  5003               	movf	DHT11_Read@humidity^0,w,c
  7484   001882  6ED9               	movwf	fsr2l,c
  7485   001884  6ADA               	clrf	fsr2h,c
  7486   001886  C009  FFDF         	movff	DHT11_Read@data,indf2
  7487                           
  7488                           ;DHT11.c: 37:             *temperature = data[2];
  7489   00188A  5004               	movf	DHT11_Read@temperature^0,w,c
  7490   00188C  6ED9               	movwf	fsr2l,c
  7491   00188E  6ADA               	clrf	fsr2h,c
  7492   001890  C00B  FFDF         	movff	DHT11_Read@data+2,indf2
  7493   001894                     
  7494                           ;DHT11.c: 38:             return 1;
  7495   001894  0E01               	movlw	1
  7496   001896  EF4E  F00C         	goto	l100
  7497   00189A                     l2743:
  7498                           
  7499                           ;DHT11.c: 41:     return 0;
  7500   00189A  0E00               	movlw	0
  7501   00189C                     l100:
  7502   00189C  0012               	return		;funcret
  7503   00189E                     __end_of_DHT11_Read:
  7504                           	callstack 0
  7505                           
  7506 ;; *************** function _DHT11_ReadByte *****************
  7507 ;; Defined at:
  7508 ;;		line 4 in file "DHT11.c"
  7509 ;; Parameters:    Size  Location     Type
  7510 ;;		None
  7511 ;; Auto vars:     Size  Location     Type
  7512 ;;  i               1    1[COMRAM] unsigned char 
  7513 ;;  data            1    0[COMRAM] unsigned char 
  7514 ;; Return value:  Size  Location     Type
  7515 ;;                  1    wreg      unsigned char 
  7516 ;; Registers used:
  7517 ;;		wreg, status,2, status,0
  7518 ;; Tracked objects:
  7519 ;;		On entry : 0/0
  7520 ;;		On exit  : 0/0
  7521 ;;		Unchanged: 0/0
  7522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7523 ;;      Params:         0       0       0       0       0       0       0       0       0
  7524 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7526 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7527 ;;Total ram usage:        2 bytes
  7528 ;; Hardware stack levels used: 1
  7529 ;; This function calls:
  7530 ;;		Nothing
  7531 ;; This function is called by:
  7532 ;;		_DHT11_Read
  7533 ;; This function uses a non-reentrant model
  7534 ;;
  7535                           
  7536                           	psect	text43
  7537   0021B4                     __ptext43:
  7538                           	callstack 0
  7539   0021B4                     _DHT11_ReadByte:
  7540                           	callstack 28
  7541   0021B4                     
  7542                           ;DHT11.c: 5:     uint8_t data = 0;
  7543   0021B4  6A01               	clrf	DHT11_ReadByte@data^0,c
  7544                           
  7545                           ;DHT11.c: 6:     for (uint8_t i = 0; i < 8; i++) {
  7546   0021B6  6A02               	clrf	DHT11_ReadByte@i^0,c
  7547   0021B8                     l80:
  7548   0021B8  A080               	btfss	128,0,c	;volatile
  7549   0021BA  EFE1  F010         	goto	u2231
  7550   0021BE  EFE3  F010         	goto	u2230
  7551   0021C2                     u2231:
  7552   0021C2  EFDC  F010         	goto	l80
  7553   0021C6                     u2230:
  7554   0021C6                     
  7555                           ;DHT11.c: 8:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  7556   0021C6  0E21               	movlw	33
  7557   0021C8                     u2887:
  7558   0021C8  2EE8               	decfsz	wreg,f,c
  7559   0021CA  D7FE               	bra	u2887
  7560   0021CC  0000               	nop	
  7561   0021CE                     
  7562                           ;DHT11.c: 9:         data <<= 1;
  7563   0021CE  90D8               	bcf	status,0,c
  7564   0021D0  3601               	rlcf	DHT11_ReadByte@data^0,f,c
  7565   0021D2                     
  7566                           ;DHT11.c: 10:         if (PORTAbits.RA0) data |= 1;
  7567   0021D2  A080               	btfss	128,0,c	;volatile
  7568   0021D4  EFEE  F010         	goto	u2241
  7569   0021D8  EFF0  F010         	goto	u2240
  7570   0021DC                     u2241:
  7571   0021DC  EFF1  F010         	goto	l84
  7572   0021E0                     u2240:
  7573   0021E0  8001               	bsf	DHT11_ReadByte@data^0,0,c
  7574   0021E2                     l84:
  7575   0021E2  B080               	btfsc	128,0,c	;volatile
  7576   0021E4  EFF6  F010         	goto	u2251
  7577   0021E8  EFF8  F010         	goto	u2250
  7578   0021EC                     u2251:
  7579   0021EC  EFF1  F010         	goto	l84
  7580   0021F0                     u2250:
  7581   0021F0                     
  7582                           ;DHT11.c: 12:     }
  7583   0021F0  2A02               	incf	DHT11_ReadByte@i^0,f,c
  7584   0021F2  0E07               	movlw	7
  7585   0021F4  6402               	cpfsgt	DHT11_ReadByte@i^0,c
  7586   0021F6  EFFF  F010         	goto	u2261
  7587   0021FA  EF01  F011         	goto	u2260
  7588   0021FE                     u2261:
  7589   0021FE  EFDC  F010         	goto	l80
  7590   002202                     u2260:
  7591   002202                     
  7592                           ;DHT11.c: 13:     return data;
  7593   002202  5001               	movf	DHT11_ReadByte@data^0,w,c
  7594   002204  0012               	return		;funcret
  7595   002206                     __end_of_DHT11_ReadByte:
  7596                           	callstack 0
  7597                           
  7598 ;; *************** function _Clear_Line *****************
  7599 ;; Defined at:
  7600 ;;		line 32 in file "main.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;  line            1    wreg     unsigned char 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  line            1   11[COMRAM] unsigned char 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      void 
  7607 ;; Registers used:
  7608 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7614 ;;      Params:         0       0       0       0       0       0       0       0       0
  7615 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7616 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7617 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7618 ;;Total ram usage:        1 bytes
  7619 ;; Hardware stack levels used: 1
  7620 ;; Hardware stack levels required when called: 3
  7621 ;; This function calls:
  7622 ;;		_LCD_String_xy
  7623 ;; This function is called by:
  7624 ;;		_Display_DHT11
  7625 ;;		_Display_GPS
  7626 ;;		_Display_RTC
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           	psect	text44
  7631   00240E                     __ptext44:
  7632                           	callstack 0
  7633   00240E                     _Clear_Line:
  7634                           	callstack 26
  7635                           
  7636                           ;incstack = 0
  7637                           ;Clear_Line@line stored from wreg
  7638   00240E  6E0C               	movwf	Clear_Line@line^0,c
  7639   002410                     
  7640                           ;main.c: 33:     LCD_String_xy(line, 0, "                ");
  7641   002410  0E00               	movlw	0
  7642   002412  6E05               	movwf	LCD_String_xy@pos^0,c
  7643   002414  0E2D               	movlw	low STR_1
  7644   002416  6E06               	movwf	LCD_String_xy@msg^0,c
  7645   002418  5006               	movf	LCD_String_xy@msg^0,w,c
  7646   00241A  A4D8               	btfss	status,2,c
  7647   00241C  0E08               	movlw	high __smallconst
  7648   00241E  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  7649   002420  500C               	movf	Clear_Line@line^0,w,c
  7650   002422  EC2C  F010         	call	_LCD_String_xy
  7651   002426  0012               	return		;funcret
  7652   002428                     __end_of_Clear_Line:
  7653                           	callstack 0
  7654                           
  7655 ;; *************** function _LCD_String_xy *****************
  7656 ;; Defined at:
  7657 ;;		line 50 in file "LCD.c"
  7658 ;; Parameters:    Size  Location     Type
  7659 ;;  row             1    wreg     unsigned char 
  7660 ;;  pos             1    4[COMRAM] unsigned char 
  7661 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  7662 ;;		 -> STR_19(13), STR_15(13), STR_14(13), STR_11(12), 
  7663 ;;		 -> STR_10(15), STR_5(16), STR_4(13), lcd_buffer(17), 
  7664 ;;		 -> STR_1(17), 
  7665 ;; Auto vars:     Size  Location     Type
  7666 ;;  row             1    7[COMRAM] unsigned char 
  7667 ;;  location        1   10[COMRAM] unsigned char 
  7668 ;; Return value:  Size  Location     Type
  7669 ;;                  1    wreg      void 
  7670 ;; Registers used:
  7671 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7672 ;; Tracked objects:
  7673 ;;		On entry : 0/0
  7674 ;;		On exit  : 0/0
  7675 ;;		Unchanged: 0/0
  7676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7677 ;;      Params:         3       0       0       0       0       0       0       0       0
  7678 ;;      Locals:         4       0       0       0       0       0       0       0       0
  7679 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7680 ;;      Totals:         7       0       0       0       0       0       0       0       0
  7681 ;;Total ram usage:        7 bytes
  7682 ;; Hardware stack levels used: 1
  7683 ;; Hardware stack levels required when called: 2
  7684 ;; This function calls:
  7685 ;;		_LCD_Command
  7686 ;;		_LCD_String
  7687 ;; This function is called by:
  7688 ;;		_Clear_Line
  7689 ;;		_Display_DHT11
  7690 ;;		_Display_GPS
  7691 ;;		_Display_RTC
  7692 ;;		_main
  7693 ;;		_RTC_Init
  7694 ;; This function uses a non-reentrant model
  7695 ;;
  7696                           
  7697                           	psect	text45
  7698   002058                     __ptext45:
  7699                           	callstack 0
  7700   002058                     _LCD_String_xy:
  7701                           	callstack 27
  7702                           
  7703                           ;incstack = 0
  7704                           ;LCD_String_xy@row stored from wreg
  7705   002058  6E08               	movwf	LCD_String_xy@row^0,c
  7706   00205A                     
  7707                           ;LCD.c: 51:     uint8_t location;;LCD.c: 52:     pos = (pos > 15) ? 15 : pos;
  7708   00205A  0E10               	movlw	16
  7709   00205C  6005               	cpfslt	LCD_String_xy@pos^0,c
  7710   00205E  EF33  F010         	goto	u2161
  7711   002062  EF35  F010         	goto	u2160
  7712   002066                     u2161:
  7713   002066  EF3A  F010         	goto	l2565
  7714   00206A                     u2160:
  7715   00206A  C005  F009         	movff	LCD_String_xy@pos,_LCD_String_xy$458
  7716   00206E  6A0A               	clrf	(_LCD_String_xy$458+1)^0,c
  7717   002070  EF3E  F010         	goto	l2567
  7718   002074                     l2565:
  7719   002074  0E00               	movlw	0
  7720   002076  6E0A               	movwf	(_LCD_String_xy$458+1)^0,c
  7721   002078  0E0F               	movlw	15
  7722   00207A  6E09               	movwf	_LCD_String_xy$458^0,c
  7723   00207C                     l2567:
  7724   00207C  C009  F005         	movff	_LCD_String_xy$458,LCD_String_xy@pos
  7725                           
  7726                           ;LCD.c: 54:     if(row == 0) {
  7727   002080  5008               	movf	LCD_String_xy@row^0,w,c
  7728   002082  A4D8               	btfss	status,2,c
  7729   002084  EF46  F010         	goto	u2171
  7730   002088  EF48  F010         	goto	u2170
  7731   00208C                     u2171:
  7732   00208C  EF4D  F010         	goto	l2571
  7733   002090                     u2170:
  7734   002090                     
  7735                           ;LCD.c: 55:         location = 0x80 + pos;
  7736   002090  5005               	movf	LCD_String_xy@pos^0,w,c
  7737   002092  0F80               	addlw	128
  7738   002094  6E0B               	movwf	LCD_String_xy@location^0,c
  7739                           
  7740                           ;LCD.c: 56:     } else {
  7741   002096  EF50  F010         	goto	l2573
  7742   00209A                     l2571:
  7743                           
  7744                           ;LCD.c: 57:         location = 0xC0 + pos;
  7745   00209A  5005               	movf	LCD_String_xy@pos^0,w,c
  7746   00209C  0FC0               	addlw	192
  7747   00209E  6E0B               	movwf	LCD_String_xy@location^0,c
  7748   0020A0                     l2573:
  7749                           
  7750                           ;LCD.c: 60:     LCD_Command(location);
  7751   0020A0  500B               	movf	LCD_String_xy@location^0,w,c
  7752   0020A2  ECB0  F010         	call	_LCD_Command
  7753   0020A6                     
  7754                           ;LCD.c: 61:     LCD_String(msg);
  7755   0020A6  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  7756   0020AA  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  7757   0020AE  ECFD  F00F         	call	_LCD_String	;wreg free
  7758   0020B2  0012               	return		;funcret
  7759   0020B4                     __end_of_LCD_String_xy:
  7760                           	callstack 0
  7761                           
  7762 ;; *************** function _LCD_String *****************
  7763 ;; Defined at:
  7764 ;;		line 43 in file "LCD.c"
  7765 ;; Parameters:    Size  Location     Type
  7766 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  7767 ;;		 -> STR_19(13), STR_15(13), STR_14(13), STR_11(12), 
  7768 ;;		 -> STR_10(15), STR_5(16), STR_4(13), lcd_buffer(17), 
  7769 ;;		 -> STR_1(17), 
  7770 ;; Auto vars:     Size  Location     Type
  7771 ;;		None
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  1    wreg      void 
  7774 ;; Registers used:
  7775 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7781 ;;      Params:         2       0       0       0       0       0       0       0       0
  7782 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7784 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7785 ;;Total ram usage:        2 bytes
  7786 ;; Hardware stack levels used: 1
  7787 ;; Hardware stack levels required when called: 1
  7788 ;; This function calls:
  7789 ;;		_LCD_Char
  7790 ;; This function is called by:
  7791 ;;		_LCD_String_xy
  7792 ;; This function uses a non-reentrant model
  7793 ;;
  7794                           
  7795                           	psect	text46
  7796   001FFA                     __ptext46:
  7797                           	callstack 0
  7798   001FFA                     _LCD_String:
  7799                           	callstack 27
  7800   001FFA                     
  7801                           ;LCD.c: 44:     while(*msg != 0) {
  7802   001FFA  EF13  F010         	goto	l2425
  7803   001FFE                     l2421:
  7804                           
  7805                           ;LCD.c: 45:         LCD_Char(*msg);
  7806   001FFE  C003  FFF6         	movff	LCD_String@msg,tblptrl
  7807   002002  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  7808   002006  6AF8               	clrf	tblptru,c
  7809   002008  0E07               	movlw	(high __ramtop+-1)
  7810   00200A  64F7               	cpfsgt	tblptrh,c
  7811   00200C  D003               	bra	u1887
  7812   00200E  0008               	tblrd		*
  7813   002010  50F5               	movf	tablat,w,c
  7814   002012  D005               	bra	u1880
  7815   002014                     u1887:
  7816   002014  CFF6 FFE1          	movff	tblptrl,fsr1l
  7817   002018  CFF7 FFE2          	movff	tblptrh,fsr1h
  7818   00201C  50E7               	movf	indf1,w,c
  7819   00201E                     u1880:
  7820   00201E  EC86  F010         	call	_LCD_Char
  7821   002022                     
  7822                           ;LCD.c: 46:         msg++;
  7823   002022  4A03               	infsnz	LCD_String@msg^0,f,c
  7824   002024  2A04               	incf	(LCD_String@msg+1)^0,f,c
  7825   002026                     l2425:
  7826                           
  7827                           ;LCD.c: 44:     while(*msg != 0) {
  7828   002026  C003  FFF6         	movff	LCD_String@msg,tblptrl
  7829   00202A  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  7830   00202E  6AF8               	clrf	tblptru,c
  7831   002030  0E07               	movlw	(high __ramtop+-1)
  7832   002032  64F7               	cpfsgt	tblptrh,c
  7833   002034  D003               	bra	u1897
  7834   002036  0008               	tblrd		*
  7835   002038  50F5               	movf	tablat,w,c
  7836   00203A  D005               	bra	u1890
  7837   00203C                     u1897:
  7838   00203C  CFF6 FFE1          	movff	tblptrl,fsr1l
  7839   002040  CFF7 FFE2          	movff	tblptrh,fsr1h
  7840   002044  50E7               	movf	indf1,w,c
  7841   002046                     u1890:
  7842   002046  0900               	iorlw	0
  7843   002048  A4D8               	btfss	status,2,c
  7844   00204A  EF29  F010         	goto	u1901
  7845   00204E  EF2B  F010         	goto	u1900
  7846   002052                     u1901:
  7847   002052  EFFF  F00F         	goto	l2421
  7848   002056                     u1900:
  7849   002056  0012               	return		;funcret
  7850   002058                     __end_of_LCD_String:
  7851                           	callstack 0
  7852                           
  7853 ;; *************** function _LCD_Char *****************
  7854 ;; Defined at:
  7855 ;;		line 28 in file "LCD.c"
  7856 ;; Parameters:    Size  Location     Type
  7857 ;;  dat             1    wreg     unsigned char 
  7858 ;; Auto vars:     Size  Location     Type
  7859 ;;  dat             1    1[COMRAM] unsigned char 
  7860 ;; Return value:  Size  Location     Type
  7861 ;;                  1    wreg      void 
  7862 ;; Registers used:
  7863 ;;		wreg, status,2, status,0
  7864 ;; Tracked objects:
  7865 ;;		On entry : 0/0
  7866 ;;		On exit  : 0/0
  7867 ;;		Unchanged: 0/0
  7868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7869 ;;      Params:         0       0       0       0       0       0       0       0       0
  7870 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7871 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7872 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7873 ;;Total ram usage:        2 bytes
  7874 ;; Hardware stack levels used: 1
  7875 ;; This function calls:
  7876 ;;		Nothing
  7877 ;; This function is called by:
  7878 ;;		_LCD_String
  7879 ;; This function uses a non-reentrant model
  7880 ;;
  7881                           
  7882                           	psect	text47
  7883   00210C                     __ptext47:
  7884                           	callstack 0
  7885   00210C                     _LCD_Char:
  7886                           	callstack 27
  7887                           
  7888                           ;incstack = 0
  7889                           ;LCD_Char@dat stored from wreg
  7890   00210C  6E02               	movwf	LCD_Char@dat^0,c
  7891   00210E                     
  7892                           ;LCD.c: 29:     LATD = (LATD & 0x0F) | (dat & 0xF0);
  7893   00210E  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  7894   002112  0EF0               	movlw	240
  7895   002114  1601               	andwf	??_LCD_Char^0,f,c
  7896   002116  508C               	movf	140,w,c	;volatile
  7897   002118  0B0F               	andlw	15
  7898   00211A  1001               	iorwf	??_LCD_Char^0,w,c
  7899   00211C  6E8C               	movwf	140,c	;volatile
  7900   00211E                     
  7901                           ;LCD.c: 30:     LATD0 = 1;
  7902   00211E  808C               	bsf	3980,0,c	;volatile
  7903   002120                     
  7904                           ;LCD.c: 31:     LATD1 = 1;
  7905   002120  828C               	bsf	3980,1,c	;volatile
  7906   002122                     
  7907                           ;LCD.c: 32:     __nop();
  7908   002122  0000               	nop	
  7909   002124                     
  7910                           ;LCD.c: 33:     LATD1 = 0;
  7911   002124  928C               	bcf	3980,1,c	;volatile
  7912   002126                     
  7913                           ;LCD.c: 34:     _delay((unsigned long)((1)*(8000000/4000.0)));
  7914   002126  0E03               	movlw	3
  7915   002128  6E01               	movwf	??_LCD_Char^0,c
  7916   00212A  0E98               	movlw	152
  7917   00212C                     u2897:
  7918   00212C  2EE8               	decfsz	wreg,f,c
  7919   00212E  D7FE               	bra	u2897
  7920   002130  2E01               	decfsz	??_LCD_Char^0,f,c
  7921   002132  D7FC               	bra	u2897
  7922   002134                     
  7923                           ;LCD.c: 36:     LATD = (LATD & 0x0F) | ((dat << 4) & 0xF0);
  7924   002134  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  7925   002138  3A01               	swapf	??_LCD_Char^0,f,c
  7926   00213A  0EF0               	movlw	240
  7927   00213C  1601               	andwf	??_LCD_Char^0,f,c
  7928   00213E  0EF0               	movlw	240
  7929   002140  1601               	andwf	??_LCD_Char^0,f,c
  7930   002142  508C               	movf	140,w,c	;volatile
  7931   002144  0B0F               	andlw	15
  7932   002146  1001               	iorwf	??_LCD_Char^0,w,c
  7933   002148  6E8C               	movwf	140,c	;volatile
  7934   00214A                     
  7935                           ;LCD.c: 37:     LATD1 = 1;
  7936   00214A  828C               	bsf	3980,1,c	;volatile
  7937   00214C                     
  7938                           ;LCD.c: 38:     __nop();
  7939   00214C  0000               	nop	
  7940   00214E                     
  7941                           ;LCD.c: 39:     LATD1 = 0;
  7942   00214E  928C               	bcf	3980,1,c	;volatile
  7943                           
  7944                           ;LCD.c: 40:     _delay((unsigned long)((3)*(8000000/4000.0)));
  7945   002150  0E08               	movlw	8
  7946   002152  6E01               	movwf	??_LCD_Char^0,c
  7947   002154  0ECA               	movlw	202
  7948   002156                     u2907:
  7949   002156  2EE8               	decfsz	wreg,f,c
  7950   002158  D7FE               	bra	u2907
  7951   00215A  2E01               	decfsz	??_LCD_Char^0,f,c
  7952   00215C  D7FC               	bra	u2907
  7953   00215E  0012               	return		;funcret
  7954   002160                     __end_of_LCD_Char:
  7955                           	callstack 0
  7956                           
  7957 ;; *************** function _LCD_Command *****************
  7958 ;; Defined at:
  7959 ;;		line 13 in file "LCD.c"
  7960 ;; Parameters:    Size  Location     Type
  7961 ;;  cmd             1    wreg     unsigned char 
  7962 ;; Auto vars:     Size  Location     Type
  7963 ;;  cmd             1    1[COMRAM] unsigned char 
  7964 ;; Return value:  Size  Location     Type
  7965 ;;                  1    wreg      void 
  7966 ;; Registers used:
  7967 ;;		wreg, status,2, status,0
  7968 ;; Tracked objects:
  7969 ;;		On entry : 0/0
  7970 ;;		On exit  : 0/0
  7971 ;;		Unchanged: 0/0
  7972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7973 ;;      Params:         0       0       0       0       0       0       0       0       0
  7974 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7975 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7976 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7977 ;;Total ram usage:        2 bytes
  7978 ;; Hardware stack levels used: 1
  7979 ;; This function calls:
  7980 ;;		Nothing
  7981 ;; This function is called by:
  7982 ;;		_LCD_Init
  7983 ;;		_LCD_String_xy
  7984 ;;		_LCD_Clear
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           	psect	text48
  7989   002160                     __ptext48:
  7990                           	callstack 0
  7991   002160                     _LCD_Command:
  7992                           	callstack 28
  7993                           
  7994                           ;incstack = 0
  7995                           ;LCD_Command@cmd stored from wreg
  7996   002160  6E02               	movwf	LCD_Command@cmd^0,c
  7997   002162                     
  7998                           ;LCD.c: 14:     LATD = (LATD & 0x0F) | (cmd & 0xF0);
  7999   002162  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  8000   002166  0EF0               	movlw	240
  8001   002168  1601               	andwf	??_LCD_Command^0,f,c
  8002   00216A  508C               	movf	140,w,c	;volatile
  8003   00216C  0B0F               	andlw	15
  8004   00216E  1001               	iorwf	??_LCD_Command^0,w,c
  8005   002170  6E8C               	movwf	140,c	;volatile
  8006   002172                     
  8007                           ;LCD.c: 15:     LATD0 = 0;
  8008   002172  908C               	bcf	3980,0,c	;volatile
  8009   002174                     
  8010                           ;LCD.c: 16:     LATD1 = 1;
  8011   002174  828C               	bsf	3980,1,c	;volatile
  8012   002176                     
  8013                           ;LCD.c: 17:     __nop();
  8014   002176  0000               	nop	
  8015   002178                     
  8016                           ;LCD.c: 18:     LATD1 = 0;
  8017   002178  928C               	bcf	3980,1,c	;volatile
  8018   00217A                     
  8019                           ;LCD.c: 19:     _delay((unsigned long)((1)*(8000000/4000.0)));
  8020   00217A  0E03               	movlw	3
  8021   00217C  6E01               	movwf	??_LCD_Command^0,c
  8022   00217E  0E98               	movlw	152
  8023   002180                     u2917:
  8024   002180  2EE8               	decfsz	wreg,f,c
  8025   002182  D7FE               	bra	u2917
  8026   002184  2E01               	decfsz	??_LCD_Command^0,f,c
  8027   002186  D7FC               	bra	u2917
  8028   002188                     
  8029                           ;LCD.c: 21:     LATD = (LATD & 0x0F) | ((cmd << 4) & 0xF0);
  8030   002188  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  8031   00218C  3A01               	swapf	??_LCD_Command^0,f,c
  8032   00218E  0EF0               	movlw	240
  8033   002190  1601               	andwf	??_LCD_Command^0,f,c
  8034   002192  0EF0               	movlw	240
  8035   002194  1601               	andwf	??_LCD_Command^0,f,c
  8036   002196  508C               	movf	140,w,c	;volatile
  8037   002198  0B0F               	andlw	15
  8038   00219A  1001               	iorwf	??_LCD_Command^0,w,c
  8039   00219C  6E8C               	movwf	140,c	;volatile
  8040   00219E                     
  8041                           ;LCD.c: 22:     LATD1 = 1;
  8042   00219E  828C               	bsf	3980,1,c	;volatile
  8043   0021A0                     
  8044                           ;LCD.c: 23:     __nop();
  8045   0021A0  0000               	nop	
  8046   0021A2                     
  8047                           ;LCD.c: 24:     LATD1 = 0;
  8048   0021A2  928C               	bcf	3980,1,c	;volatile
  8049                           
  8050                           ;LCD.c: 25:     _delay((unsigned long)((3)*(8000000/4000.0)));
  8051   0021A4  0E08               	movlw	8
  8052   0021A6  6E01               	movwf	??_LCD_Command^0,c
  8053   0021A8  0ECA               	movlw	202
  8054   0021AA                     u2927:
  8055   0021AA  2EE8               	decfsz	wreg,f,c
  8056   0021AC  D7FE               	bra	u2927
  8057   0021AE  2E01               	decfsz	??_LCD_Command^0,f,c
  8058   0021B0  D7FC               	bra	u2927
  8059   0021B2  0012               	return		;funcret
  8060   0021B4                     __end_of_LCD_Command:
  8061                           	callstack 0
  8062                           
  8063                           	psect	rparam
  8064   000001                     ___rparam_used  equ	1
  8065   000000                     ___param_bank   equ	0
  8066   000000                     __Lparam        equ	__Lrparam
  8067   000000                     __Hparam        equ	__Hrparam
  8068                           
  8069                           	psect	idloc
  8070                           
  8071                           ;Config register IDLOC0 @ 0x200000
  8072                           ;	unspecified, using default values
  8073   200000                     	org	2097152
  8074   200000  FF                 	db	255
  8075                           
  8076                           ;Config register IDLOC1 @ 0x200001
  8077                           ;	unspecified, using default values
  8078   200001                     	org	2097153
  8079   200001  FF                 	db	255
  8080                           
  8081                           ;Config register IDLOC2 @ 0x200002
  8082                           ;	unspecified, using default values
  8083   200002                     	org	2097154
  8084   200002  FF                 	db	255
  8085                           
  8086                           ;Config register IDLOC3 @ 0x200003
  8087                           ;	unspecified, using default values
  8088   200003                     	org	2097155
  8089   200003  FF                 	db	255
  8090                           
  8091                           ;Config register IDLOC4 @ 0x200004
  8092                           ;	unspecified, using default values
  8093   200004                     	org	2097156
  8094   200004  FF                 	db	255
  8095                           
  8096                           ;Config register IDLOC5 @ 0x200005
  8097                           ;	unspecified, using default values
  8098   200005                     	org	2097157
  8099   200005  FF                 	db	255
  8100                           
  8101                           ;Config register IDLOC6 @ 0x200006
  8102                           ;	unspecified, using default values
  8103   200006                     	org	2097158
  8104   200006  FF                 	db	255
  8105                           
  8106                           ;Config register IDLOC7 @ 0x200007
  8107                           ;	unspecified, using default values
  8108   200007                     	org	2097159
  8109   200007  FF                 	db	255
  8110                           
  8111                           	psect	config
  8112                           
  8113                           ;Config register CONFIG1L @ 0x300000
  8114                           ;	PLL Prescaler Selection bits
  8115                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  8116                           ;	System Clock Postscaler Selection bits
  8117                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8118                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8119                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8120   300000                     	org	3145728
  8121   300000  00                 	db	0
  8122                           
  8123                           ;Config register CONFIG1H @ 0x300001
  8124                           ;	Oscillator Selection bits
  8125                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  8126                           ;	Fail-Safe Clock Monitor Enable bit
  8127                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8128                           ;	Internal/External Oscillator Switchover bit
  8129                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8130   300001                     	org	3145729
  8131   300001  09                 	db	9
  8132                           
  8133                           ;Config register CONFIG2L @ 0x300002
  8134                           ;	Power-up Timer Enable bit
  8135                           ;	PWRT = OFF, PWRT disabled
  8136                           ;	Brown-out Reset Enable bits
  8137                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8138                           ;	Brown-out Reset Voltage bits
  8139                           ;	BORV = 3, Minimum setting 2.05V
  8140                           ;	USB Voltage Regulator Enable bit
  8141                           ;	VREGEN = OFF, USB voltage regulator disabled
  8142   300002                     	org	3145730
  8143   300002  1F                 	db	31
  8144                           
  8145                           ;Config register CONFIG2H @ 0x300003
  8146                           ;	Watchdog Timer Enable bit
  8147                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8148                           ;	Watchdog Timer Postscale Select bits
  8149                           ;	WDTPS = 32768, 1:32768
  8150   300003                     	org	3145731
  8151   300003  1E                 	db	30
  8152                           
  8153                           ; Padding undefined space
  8154   300004                     	org	3145732
  8155   300004  FF                 	db	255
  8156                           
  8157                           ;Config register CONFIG3H @ 0x300005
  8158                           ;	CCP2 MUX bit
  8159                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  8160                           ;	PORTB A/D Enable bit
  8161                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8162                           ;	Low-Power Timer 1 Oscillator Enable bit
  8163                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8164                           ;	MCLR Pin Enable bit
  8165                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  8166   300005                     	org	3145733
  8167   300005  01                 	db	1
  8168                           
  8169                           ;Config register CONFIG4L @ 0x300006
  8170                           ;	Stack Full/Underflow Reset Enable bit
  8171                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8172                           ;	Single-Supply ICSP Enable bit
  8173                           ;	LVP = OFF, Single-Supply ICSP disabled
  8174                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8175                           ;	ICPRT = OFF, ICPORT disabled
  8176                           ;	Extended Instruction Set Enable bit
  8177                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8178                           ;	Background Debugger Enable bit
  8179                           ;	DEBUG = 0x1, unprogrammed default
  8180   300006                     	org	3145734
  8181   300006  81                 	db	129
  8182                           
  8183                           ; Padding undefined space
  8184   300007                     	org	3145735
  8185   300007  FF                 	db	255
  8186                           
  8187                           ;Config register CONFIG5L @ 0x300008
  8188                           ;	Code Protection bit
  8189                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8190                           ;	Code Protection bit
  8191                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8192                           ;	Code Protection bit
  8193                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8194                           ;	Code Protection bit
  8195                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8196   300008                     	org	3145736
  8197   300008  0F                 	db	15
  8198                           
  8199                           ;Config register CONFIG5H @ 0x300009
  8200                           ;	Boot Block Code Protection bit
  8201                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8202                           ;	Data EEPROM Code Protection bit
  8203                           ;	CPD = OFF, Data EEPROM is not code-protected
  8204   300009                     	org	3145737
  8205   300009  C0                 	db	192
  8206                           
  8207                           ;Config register CONFIG6L @ 0x30000A
  8208                           ;	Write Protection bit
  8209                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8210                           ;	Write Protection bit
  8211                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8212                           ;	Write Protection bit
  8213                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8214                           ;	Write Protection bit
  8215                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8216   30000A                     	org	3145738
  8217   30000A  0F                 	db	15
  8218                           
  8219                           ;Config register CONFIG6H @ 0x30000B
  8220                           ;	Configuration Register Write Protection bit
  8221                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8222                           ;	Boot Block Write Protection bit
  8223                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8224                           ;	Data EEPROM Write Protection bit
  8225                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8226   30000B                     	org	3145739
  8227   30000B  E0                 	db	224
  8228                           
  8229                           ;Config register CONFIG7L @ 0x30000C
  8230                           ;	Table Read Protection bit
  8231                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8232                           ;	Table Read Protection bit
  8233                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8234                           ;	Table Read Protection bit
  8235                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8236                           ;	Table Read Protection bit
  8237                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8238   30000C                     	org	3145740
  8239   30000C  0F                 	db	15
  8240                           
  8241                           ;Config register CONFIG7H @ 0x30000D
  8242                           ;	Boot Block Table Read Protection bit
  8243                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8244   30000D                     	org	3145741
  8245   30000D  40                 	db	64
  8246                           tosu	equ	0xFFF
  8247                           tosh	equ	0xFFE
  8248                           tosl	equ	0xFFD
  8249                           stkptr	equ	0xFFC
  8250                           pclatu	equ	0xFFB
  8251                           pclath	equ	0xFFA
  8252                           pcl	equ	0xFF9
  8253                           tblptru	equ	0xFF8
  8254                           tblptrh	equ	0xFF7
  8255                           tblptrl	equ	0xFF6
  8256                           tablat	equ	0xFF5
  8257                           prodh	equ	0xFF4
  8258                           prodl	equ	0xFF3
  8259                           indf0	equ	0xFEF
  8260                           postinc0	equ	0xFEE
  8261                           postdec0	equ	0xFED
  8262                           preinc0	equ	0xFEC
  8263                           plusw0	equ	0xFEB
  8264                           fsr0h	equ	0xFEA
  8265                           fsr0l	equ	0xFE9
  8266                           wreg	equ	0xFE8
  8267                           indf1	equ	0xFE7
  8268                           postinc1	equ	0xFE6
  8269                           postdec1	equ	0xFE5
  8270                           preinc1	equ	0xFE4
  8271                           plusw1	equ	0xFE3
  8272                           fsr1h	equ	0xFE2
  8273                           fsr1l	equ	0xFE1
  8274                           bsr	equ	0xFE0
  8275                           indf2	equ	0xFDF
  8276                           postinc2	equ	0xFDE
  8277                           postdec2	equ	0xFDD
  8278                           preinc2	equ	0xFDC
  8279                           plusw2	equ	0xFDB
  8280                           fsr2h	equ	0xFDA
  8281                           fsr2l	equ	0xFD9
  8282                           status	equ	0xFD8

Data Sizes:
    Strings     206
    Constant    0
    Data        0
    BSS         56
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     78      85
    BANK0           160    104     136
    BANK1           256    125     142
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DHT11_Read@humidity	PTR unsigned char  size(1) Largest target is 1
		 -> Display_DHT11@hum(COMRAM[1]), 

    DHT11_Read@temperature	PTR unsigned char  size(1) Largest target is 1
		 -> Display_DHT11@temp(COMRAM[1]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    GPS_ParseGPRMC@ew	PTR unsigned char  size(2) Largest target is 2
		 -> Display_GPS@ew(BANK1[2]), 

    GPS_ParseGPRMC@lat	PTR unsigned char  size(2) Largest target is 10
		 -> Display_GPS@lat(BANK1[10]), 

    GPS_ParseGPRMC@lon	PTR unsigned char  size(2) Largest target is 11
		 -> Display_GPS@lon(BANK1[11]), 

    GPS_ParseGPRMC@msg	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), 

    GPS_ParseGPRMC@ns	PTR unsigned char  size(2) Largest target is 2
		 -> Display_GPS@ns(BANK1[2]), 

    GPS_ParseGPRMC@token	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    GPS_ReadSentence@buffer	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), STR_1(CODE[17]), STR_10(CODE[15]), STR_11(CODE[12]), 
		 -> STR_14(CODE[13]), STR_15(CODE[13]), STR_19(CODE[13]), STR_4(CODE[13]), 
		 -> STR_5(CODE[16]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), STR_1(CODE[17]), STR_10(CODE[15]), STR_11(CODE[12]), 
		 -> STR_14(CODE[13]), STR_15(CODE[13]), STR_19(CODE[13]), STR_4(CODE[13]), 
		 -> STR_5(CODE[16]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    RTC_GetDateTime@day	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@day(COMRAM[1]), 

    RTC_GetDateTime@hour	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@h(COMRAM[1]), 

    RTC_GetDateTime@min	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@m(COMRAM[1]), 

    RTC_GetDateTime@month	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@mon(COMRAM[1]), 

    RTC_GetDateTime@sec	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@s(COMRAM[1]), 

    RTC_GetDateTime@year	PTR unsigned char  size(1) Largest target is 1
		 -> Display_RTC@year(COMRAM[1]), 

    S974$buffer	PTR unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), 

    S974$source	PTR const unsigned char  size(2) Largest target is 0

    sp__strchr	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_17(CODE[2]), STR_18(CODE[2]), NULL(NULL[0]), 

    sp__strncpy	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), GPS_ParseGPRMC@buf(BANK0[100]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_17(CODE[2]), STR_18(CODE[2]), NULL(NULL[0]), 

    sp__strtok	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_12(CODE[23]), STR_13(CODE[21]), STR_2(CODE[8]), STR_3(CODE[8]), 
		 -> STR_8(CODE[9]), STR_9(CODE[9]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 17
		 -> lcd_buffer(BANK1[17]), 

    stoa@cp	PTR unsigned char  size(2) Largest target is 11
		 -> Display_GPS@ew(BANK1[2]), Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), Display_GPS@ns(BANK1[2]), 
		 -> ?_sprintf(COMRAM[2]), STR_20(CODE[7]), 

    stoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    stoa@s	PTR unsigned char  size(2) Largest target is 11
		 -> Display_GPS@ew(BANK1[2]), Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), Display_GPS@ns(BANK1[2]), 
		 -> ?_sprintf(COMRAM[2]), 

    strchr@s	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_17(CODE[2]), STR_18(CODE[2]), NULL(NULL[0]), 

    strcspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_17(CODE[2]), STR_18(CODE[2]), 

    strcspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strlen@a	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_16(CODE[7]), STR_7(CODE[7]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_16(CODE[7]), STR_7(CODE[7]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_17(CODE[2]), STR_18(CODE[2]), NULL(NULL[0]), 

    strncmp@r	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_16(CODE[7]), STR_7(CODE[7]), 

    strncpy@cp	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), GPS_ParseGPRMC@buf(BANK0[100]), 

    strncpy@d	PTR unsigned char  size(2) Largest target is 100
		 -> Display_GPS@lat(BANK1[10]), Display_GPS@lon(BANK1[11]), GPS_ParseGPRMC@buf(BANK0[100]), 

    strncpy@s	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strspn@c	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_17(CODE[2]), STR_18(CODE[2]), 

    strspn@s	PTR const unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 100
		 -> Display_GPS@buffer(BANK1[100]), STR_17(CODE[2]), STR_18(CODE[2]), NULL(NULL[0]), 

    strstr@n	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_16(CODE[7]), STR_7(CODE[7]), 

    strtok@p	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strtok@s	PTR unsigned char  size(1) Largest target is 100
		 -> GPS_ParseGPRMC@buf(BANK0[100]), NULL(NULL[0]), 

    strtok@sep	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_17(CODE[2]), STR_18(CODE[2]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 23
		 -> STR_12(CODE[23]), STR_13(CODE[21]), STR_2(CODE[8]), STR_3(CODE[8]), 
		 -> STR_8(CODE[9]), STR_9(CODE[9]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_12(CODE[23]), STR_13(CODE[21]), STR_2(CODE[8]), STR_3(CODE[8]), 
		 -> STR_8(CODE[9]), STR_9(CODE[9]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_12(CODE[23]), STR_13(CODE[21]), STR_2(CODE[8]), STR_3(CODE[8]), 
		 -> STR_8(CODE[9]), STR_9(CODE[9]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_Display_RTC
    _RTC_Init->_LCD_String_xy
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command
    _I2C_Master_Init->___lldiv
    _Display_RTC->_sprintf
    _RTC_GetDateTime->_I2C_Master_Read
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _Display_GPS->_sprintf
    _GPS_ParseGPRMC->_strtok
    _strtok->_strcspn
    _strtok->_strspn
    _strspn->_strchr
    _strcspn->_strchr
    _strstr->_strchr
    _strstr->_strncmp
    _Display_DHT11->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _stoa->_fputc
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _DHT11_Read->_DHT11_ReadByte
    _Clear_Line->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char

Critical Paths under _main in BANK0

    _Display_GPS->_GPS_ParseGPRMC

Critical Paths under _main in BANK1

    _main->_Display_GPS

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   19750
                                             76 COMRAM     2     2      0
                      _Display_DHT11
                        _Display_GPS
                        _Display_RTC
                           _GPS_Init
                    _I2C_Master_Init
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                           _RTC_Init
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4     161
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             3     3      0     574
                                             11 COMRAM     3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      58
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      58
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     187
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     164
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _GPS_Init                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Display_RTC                                          9     9      0    5252
                                             67 COMRAM     9     9      0
                         _Clear_Line
                      _LCD_String_xy
                    _RTC_GetDateTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _RTC_GetDateTime                                      6     0      6     289
                                              5 COMRAM     6     0      6
                            _BCD2DEC
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2      40
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      4     2      2      53
                                              1 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _BCD2DEC                                              2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Display_GPS                                        125   125      0    7959
                                              0 BANK1    125   125      0
                         _Clear_Line
                     _GPS_ParseGPRMC
                   _GPS_ReadSentence
                      _LCD_String_xy
                            _sprintf
                             _strstr
 ---------------------------------------------------------------------------------
 (2) _GPS_ReadSentence                                    15     9      6     386
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) _GPS_ParseGPRMC                                     115   105     10    2034
                                             13 COMRAM    11     1     10
                                              0 BANK0    104   104      0
                            _strncpy
                             _strstr
                             _strtok
 ---------------------------------------------------------------------------------
 (3) _strtok                                               2     0      2     556
                                             11 COMRAM     2     0      2
                            _strcspn
                             _strspn
 ---------------------------------------------------------------------------------
 (4) _strspn                                               5     3      2     187
                                              6 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (4) _strcspn                                              5     3      2     187
                                              6 COMRAM     5     3      2
                             _strchr
 ---------------------------------------------------------------------------------
 (2) _strstr                                               5     2      3     593
                                              6 COMRAM     5     2      3
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              6     1      5     182
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (3) _strlen                                               3     1      2      91
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (3) _strchr                                               6     2      4      94
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _strncpy                                              8     2      6     150
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _Display_DHT11                                        2     2      0    5123
                                             67 COMRAM     2     2      0
                         _Clear_Line
                         _DHT11_Read
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             23    14      9    3878
                                             46 COMRAM    21    12      9
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3    3663
                                             42 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           12     8      4    3518
                                             31 COMRAM    11     7      4
                               _dtoa
                              _fputc
                 _read_prec_or_width
                               _stoa
 ---------------------------------------------------------------------------------
 (5) _stoa                                                13    10      3     559
                                              8 COMRAM    13    10      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                11     8      3    1845
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                  7     3      4     763
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                5     3      2     341
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     240
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     300
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     304
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read                                          12    10      2     368
                                              2 COMRAM    12    10      2
                     _DHT11_ReadByte
 ---------------------------------------------------------------------------------
 (3) _DHT11_ReadByte                                       2     2      0      71
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Clear_Line                                           1     1      0     407
                                             11 COMRAM     1     1      0
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        7     4      3     378
                                              4 COMRAM     7     4      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     104
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_DHT11
     _Clear_Line
       _LCD_String_xy
         _LCD_Command
         _LCD_String
           _LCD_Char
     _DHT11_Read
       _DHT11_ReadByte
     _LCD_String_xy
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
           _fputc
           _read_prec_or_width
           _stoa
             _fputc
   _Display_GPS
     _Clear_Line
     _GPS_ParseGPRMC
       _strncpy
       _strstr
         _strchr
         _strlen
         _strncmp
       _strtok
         _strcspn
           _strchr
         _strspn
           _strchr
     _GPS_ReadSentence
     _LCD_String_xy
     _sprintf
     _strstr
   _Display_RTC
     _Clear_Line
     _LCD_String_xy
     _RTC_GetDateTime
       _BCD2DEC
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_RepeatedStart
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
     _sprintf
   _GPS_Init
   _I2C_Master_Init
     ___lldiv
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
   _RTC_Init
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _LCD_Clear
     _LCD_String_xy
   ___lwmod

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256    125     142     55.5%
BITBANK0           160      0       0      0.0%
BANK0              160    104     136     85.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     78      85     89.5%
BITBIGSFRh          58      0       0      0.0%
BITBIGSFRlh         49      0       0      0.0%
BITBIGSFRlll        32      0       0      0.0%
BITBIGSFRllh        18      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     362      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon May 05 18:28:24 2025

               _LCD_String_xy$458 0009                      ?_LCD_Command 0001                                l44 1B60  
                              l39 2426                                l55 1718                                l80 21B8  
                              l49 1176                                l66 143C                                l91 1806  
                              l84 21E2                                l94 1814                                l87 2204  
                              l96 1822                      ___awdiv@sign 0006                       ?_LCD_String 0003  
                 __end_of_BCD2DEC 243E                               l100 189C                               l202 2056  
                             l130 23D2                               l211 20B2                               l131 23E4  
                             l132 23E6                               l214 2452                               l135 1190  
                             l144 127E                               l136 118C                               l240 1A08  
                             l233 243C                               l129 23D6                               l171 0D60  
                             l155 0D88                               l139 11AA                               l173 0D86  
                             l149 12A2                               l246 1586                               l190 238C  
                             l335 1C04                               l328 1BF4                               l193 21B2  
                             l283 240C                               l196 215E                               l532 17DA  
                             l292 245A                               l277 210A                               l286 2462  
                             l295 244A                               l545 1AB6                               l289 246A  
                             l298 22F2                               l802 1F28                               l809 1F30  
                             l979 2280                               l999 1D70                               _PEN 7E2A  
                             _SEN 7E28                               _abs 2328                               _pad 1D40  
                    ___awmod@sign 0006                               wreg 0FE8                       LCD_Char@dat 0002  
                            l1002 1DAE                              l1100 22BC                              l1004 1DC8  
                            l1020 0EEC                              l1103 246C                              l1007 0DE8  
                            l1113 1ECC                              l1034 1006                              l1043 1CA0  
                            l1027 0F60                              ?_abs 0007                              l1132 1DCA  
                            l1141 2326                              l1062 0B54                              l1134 1E4A  
                            l1126 1654                              l1047 1CA8                              l1039 104A  
                            l1080 235A                              l1160 1D3E                              l2201 17AC  
                            l1073 2244                              l1145 13AA                              l3001 19D6  
                            l1162 1D3A                              l2211 17D2                              l2203 17AE  
                            l1059 09FA                              l3003 19DA                              l1092 1956  
                            l1172 1FF0                              l2205 17B4                              l2221 1A22  
                            l1077 2342                              l2301 0DC0                              l1173 1FF8  
                            l3005 19E6                              l3021 1EF0                              l1182 1F8C  
                            l2207 17BA                              l2231 1A56                              l2223 1A26  
                            l2215 1A0A                              l2151 18AE                              l2311 0DF8  
                            l2303 0DD0                              l1183 1F94                              l2047 23BC  
                            l3007 19F2                              l3023 1EFE                              l3015 1ECE  
                            l3031 13AC                              l2401 2172                              l2209 17CA  
                            l2241 1A90                              l2233 1A5E                              l2225 1A34  
                            l2217 1A0C                              l2153 18BE                              l2313 0DFE  
                            l2321 0E50                              l2305 0DDC                              l2049 23BE  
                            l3009 1A04                              l3025 1F14                              l3017 1EE0  
                            l3041 13D8                              l3033 13B8                              l2411 2188  
                            l2403 2174                              l2171 171A                              l2235 1A6C  
                            l2243 1A96                              l2227 1A3C                              l2219 1A1A  
                            l2155 18C8                              l2163 2282                              l2251 1D40  
                            l2323 0E6A                              l2331 0EB4                              l2315 0E2C  
                            l2307 0DE4                              l3027 1F1C                              l3019 1EE8  
                            l3051 142C                              l3043 13DC                              l3035 13BC  
                            l2413 219E                              l2405 2176                              l2421 1FFE  
                            l2181 1744                              l2173 171C                              l2245 1AA6  
                            l2237 1A82                              l2229 1A4E                              l2157 18E4  
                            l2149 189E                              l2165 228E                              l2261 1D8C  
                            l2253 1D4E                              l2333 0EC4                              l2325 0E7C  
                            l2317 0E2E                              l2309 0DF0                              l2341 0EEE  
                            l2501 0B12                              l3029 1F22                              l3109 1456  
                            l3053 1434                              l3045 13F2                              l3037 13D0  
                            l2415 21A0                              l2407 2178                              l2271 210E  
                            l2423 2022                              l2191 1772                              l2183 174C  
                            l2175 172A                              l2247 1AAE                              l2239 1A8A  
                            l2159 1916                              l2167 229C                              l2263 1D90  
                            l2255 1D5A                              l2335 0ECA                              l2327 0E8C  
                            l2319 0E34                              l2343 0F08                              l2431 23FE  
                            l3055 1442                              l3047 1408                              l3039 13D4  
                            l2417 21A2                              l2409 217A                              l2281 2126  
                            l2273 211E                              l2425 2026                              l2193 177A  
                            l2185 1750                              l2177 1732                              l2169 22A0  
                            l2265 1DBC                              l2257 1D68                              l2337 0ED6  
                            l2329 0EA6                              l2361 0FE8                              l2353 0F82  
                            l2345 0F14                              l2505 0B26                              l2441 090A  
                            l2433 08D0                              l2521 231A                              l3057 1474  
                            l3049 1424                              l2283 2134                              l2275 2120  
                            l2419 1FFA                              l2611 21F0                              l2603 21C6  
                            l2195 1788                              l2187 1758                              l2179 1736  
                            l2267 2328                              l2259 1D7C                              l2291 0D8A  
                            l2371 102C                              l2355 0F92                              l2363 0FEC  
                            l2347 0F20                              l2451 0926                              l2443 0910  
                            l2435 08F2                              l2515 22F4                              l2531 12CA  
                            l2427 23E8                              l3059 1490                              l2285 214A  
                            l2277 2122                              l2613 21F2                              l2605 21CE  
                            l2197 178E                              l2189 176A                              l2269 2336  
                            l2293 0D8E                              l2381 1C54                              l2373 1C06  
                            l2357 0F96                              l2349 0F24                              l2461 0980  
                            l2445 0912                              l2453 0944                              l2437 08FA  
                            l2509 0B32                              l2701 2206                              l2621 1E58  
                            l2517 22FC                              l2541 1372                              l2533 12D6  
                            l2525 12A4                              l2429 23E8                              l2287 214C  
                            l2279 2124                              l2711 2410                              l2615 2202  
                            l2607 21D2                              l2199 17A4                              l2295 0DA2  
                            l2383 1C72                              l2375 1C0E                              l2367 1018  
                            l2359 0FB8                              l2471 09E6                              l2463 098A  
                            l2455 0954                              l2447 091E                              l2439 0906  
                            l2703 220E                              l2631 1EAE                              l2623 1E5E  
                            l2519 22FE                              l2535 1306                              l2527 12BE  
                            l2551 1F5A                              l2289 214E                              l2561 205A  
                            l2609 21E0                              l2721 17F8                              l2713 17DC  
                            l2297 0DAA                              l2377 1C30                              l2385 1C7A  
                            l2369 1028                              l2481 0A2E                              l2465 09A6  
                            l2457 0968                              l2705 2220                              l2633 1EB2  
                            l2393 1E06                              l2537 1322                              l2553 1F96  
                            l2545 1F32                              l2571 209A                              l2563 206A  
                            l2731 1832                              l2715 17E0                              l2299 0DBA  
                            l2379 1C38                              l2483 0A50                              l2491 0AB2  
                            l2475 09FC                              l2467 09C2                              l2459 0976  
                            l2707 223C                              l2627 1E8E                              l2619 1E4C  
                            l2395 1E42                              l2387 1DCA                              l2539 1334  
                            l2555 1FA2                              l2547 1F3E                              l2651 1D04  
                            l2643 1CD4                              l2635 1CAA                              l2803 127E  
                            l2573 20A0                              l2565 2074                              l2733 1834  
                            l2717 17EE                              l2493 0AC2                              l2485 0A7A  
                            l2477 0A1E                              l2469 09DC                              l2629 1EA4  
                            l2389 1DFA                              l2581 15AC                              l2557 1FA8  
                            l2549 1F44                              l2653 1D16                              l2645 1CE4  
                            l2637 1CBA                              l2821 0B84                              l2813 0B56  
                            l2805 1286                              l2901 1B90                              l2399 2162  
                            l2575 20A6                              l2567 207C                              l2735 1844  
                            l2743 189A                              l2719 17F6                              l2487 0AA4  
                            l2479 0A26                              l2751 225A                              l2591 161C  
                            l2583 15D6                              l2559 1FBE                              l2655 1D2C  
                            l2647 1CFA                              l2639 1CCE                              l2831 0BEA  
                            l2823 0B9E                              l2815 0B5C                              l2807 128A  
                            l2663 242A                              l2671 243E                              l2911 1BE2  
                            l2903 1B9C                              l2569 2090                              l2737 1880  
                            l2729 1824                              l2497 0AE8                              l2753 2262  
                            l2921 1AE0                              l2593 164C                              l2577 1588  
                            l2657 1D34                              l2841 0C48                              l2833 0BFA  
                            l2825 0BA2                              l2817 0B7E                              l2809 12A0  
                            l2761 1180                              l2681 2468                              l2673 2442  
                            l2913 1BE4                              l2905 1BAA                              l2739 1894  
                            l2499 0B0A                              l2755 2272                              l2747 2246  
                            l2923 1AF6                              l2587 15E2                              l2579 1598  
                            l2659 1D3C                              l2851 0CA8                              l2843 0C5A  
                            l2835 0C14                              l2827 0BB6                              l2771 11B8  
                            l2763 1182                              l2931 1058                              l2691 22E8  
                            l2683 22BE                              l2667 245C                              l2675 244A  
                            l2915 1BEE                              l2907 1BB4                              l2597 21B4  
                            l2749 2252                              l2925 1B08                              l2917 1AB8  
                            l2589 160A                              l2853 0CBA                              l2845 0C6C  
                            l2837 0C26                              l2829 0BD8                              l2781 11F8  
                            l2773 11CA                              l2765 1184                              l2941 1114  
                            l2933 1084                              l2693 22EA                              l2685 22C2  
                            l2669 2460                              l2909 1BD2                              ?_pad 000E  
                            l2927 1B34                              l2919 1AC4                              l2871 0D50  
                            l2863 0D00                              l2855 0CCC                              l2847 0C7E  
                            l2839 0C38                              l2791 1254                              l2783 1208  
                            l2775 11D2                              l2767 1186                              l2759 1178  
                            l2935 10A6                              l2943 114A                              l2687 22C8  
                            l2679 2464                              l2951 167E                              l2873 0D62  
                            l2857 0CDC                              l2849 0C8E                              l2865 0D2E  
                            l2793 1262                              l2777 11E2                              l2785 1210  
                            l2769 119E                              l2937 10E2                              l2929 104C  
                            l2689 22D2                              l2697 2454                              l2881 14AE  
                            l2961 16EC                              l2953 16A0                              l2945 1656  
                            l2875 0D72                              l2867 0D3E                              l2859 0CEE  
                            l2787 1220                              l2779 11F4                              l2939 1102  
                            l2699 2458                              l2891 1582                              l2883 14DA  
                            l2963 1702                              l2955 16B2                              l2947 165C  
                            l2971 236E                              l2877 0D82                              l2869 0D40  
                            l2797 1268                              l2789 1232                              l2885 14F4  
                            l2957 16B8                              l2949 1678                              l2965 1704  
                            l2981 20B4                              l2973 2374                              l2893 244C  
                            l2887 150E                              l2959 16DA                              l2895 1B62  
                            l2983 20B8                              l2975 237A                              l2967 235C  
                            l2991 1958                              l2889 1528                              l2897 1B72  
                            l2985 20BC                              l2977 2380                              l2969 235E  
                            l2993 1998                              l2899 1B88                              l2987 20BE  
                            l2979 2386                              l2995 19A6                              l2989 2108  
                            l2997 19AA                              l2999 19C0                              STR_1 082D  
                            STR_2 08AF                              STR_3 08B7                              STR_4 0877  
                            STR_5 083E                              STR_6 08C6                              STR_7 08C6  
                            STR_8 08A6                              STR_9 089D                              u2000 0A7A  
                            u2001 0A76                              u2010 0AA4                              u2011 0AA0  
                            u2020 0AC2                              u2100 1372                              u2021 0ABE  
                            u2101 136E                              u2030 0B0A                              u2110 1392  
                            u2031 0B06                              u2040 231A                              u2200 161C  
                            u2120 1F5A                              u2041 2316                              u2105 1362  
                            u2201 1618                              u2121 1F56                              u1410 18AE  
                            u2050 12BE                              u2210 163C                              u2130 1F8C  
                            u1411 18AA                              u2107 1358                              u2051 12BA  
                            u2131 1F88                              u1500 17A4                              u1420 18BE  
                            u2060 12F6                              u2220 164C                              u2140 1FBE  
                            u2300 1CBA                              u1501 17A0                              u1421 18BA  
                            u2117 1388                              u2221 1648                              u2141 1FBA  
                            u2301 1CB6                              u2230 21C6                              u1510 17CA  
                            u1430 18E4                              u2070 1306                              u2150 1FF0  
                            u2310 1CCE                              u2231 21C2                              u1511 17C6  
                            u1431 18E0                              u2071 1302                              u2151 1FEC  
                            u2311 1CCA                              u2160 206A                              u2240 21E0  
                            u2400 1844                              u1520 1A1A                              u1440 1916  
                            u1600 1DAE                              u2080 1322                              u2320 1CFA  
                            _LATD 0F8C                              u2161 2066                              u2241 21DC  
                            u2401 1840                              u1521 1A16                              u1441 1912  
                            u1601 1DAA                              u2081 131E                              u2217 1632  
                            u2321 1CF6                              u2170 2090                              u2250 21F0  
                            u2410 1880                              u1530 1A34                              u1450 22BC  
                            u1610 1DBC                              u2090 1334                              u2330 1D2C  
                            u1370 23E4                              u2171 208C                              u2251 21EC  
                            u2411 187C                              u1531 1A30                              u1451 22B8  
                            u1611 1DB8                              u2091 1330                              u2067 12EC  
                            u2331 1D28                              u1371 23E0                              u2260 2202  
                            u1460 172A                              u1540 1A4E                              u1620 2336  
                            u1700 0EA6                              u2180 1598                              u2500 127A  
                            u2420 119E                              u2340 22E6                              u2261 21FE  
                            u1461 1726                              u1541 1A4A                              u1621 2332  
                            u1701 0EA2                              u2181 1594                              u2501 1276  
                            u2421 119A                              u2341 22E0                              u1470 1744  
                            u1550 1A6C                              u1710 0EB4                              u1630 0D9E  
                            u2270 1E8A                              u2190 15D6                              u2510 12A0  
                            u2430 11B8                              u1471 1740                              u1551 1A68  
                            u1711 0EB0                              u1631 0D98                              u2271 1E86  
                            u2191 15D2                              u2511 129C                              u2431 11B4  
                            u1480 176A                              u1560 1A82                              u1720 0EC4  
                            u1640 0DA0                              u1800 1014                              u2360 223C  
                            u2280 1EA0                              u2600 0C8E                              u2520 0B7E  
                            u2440 11CA                              u1481 1766                              u1561 1A7E  
                            u1721 0EC0                              u1801 1010                              u2361 2238  
                            u2281 1E9C                              u2601 0C8A                              u2521 0B7A  
                            u2441 11C6                              u2370 1806                              u1490 1788  
                            u1570 1AA6                              u1650 0DBA                              u1810 104A  
                            u1730 0F08                              u2290 1ECC                              u2610 0CCC  
                            u2530 0BD0                              u2450 11E2                              u2371 1802  
                            u1491 1784                              u1571 1AA2                              u1651 0DB6  
                            u1811 1046                              u1731 0F04                              u2291 1EC8  
                            u2611 0CC8                              u2531 0BCA                              u2451 11DE  
                            u2355 22E8                              u1900 2056                              u2380 1814  
                            u1580 1D4E                              u1660 0DD0                              u1820 1C30  
                            u1740 0F50                              u2700 1AE0                              u2620 0CDC  
                            u2540 0BD2                              u2460 11F4                              u1901 2052  
                            u2381 1810                              u1581 1D4A                              u1661 0DCC  
                            u1821 1C2C                              u2701 1ADC                              u2621 0CD8  
                            u2461 11F0                              u2390 1822                              u1590 1D68  
                            u1670 0E6A                              u1830 1CA0                              u1750 0F60  
                            u2630 0D50                              u2550 0BEA                              u2470 1220  
                            u2710 1084                              u1910 23FE                              u2391 181E  
                            u1591 1D64                              u1671 0E66                              u1831 1C9C  
                            u1751 0F5C                              u2631 0D4C                              u2551 0BE6  
                            u2471 121C                              u2711 1080                              u1911 23FA  
                            u1680 0E7C                              u1760 0F7E                              u1840 1DEA  
                            u2640 0D60                              u2560 0BFA                              u2480 1232  
                            u2720 10A6                              u1920 240C                              u1681 0E78  
                            u1761 0F7A                              u2641 0D5C                              u2561 0BF6  
                            u2481 122E                              u2721 10A2                              u1921 2408  
                            u1690 0E8C                              u1770 0FB4                              u1930 08F2  
                            u1850 1DFA                              u2650 0D72                              u2570 0C38  
                            u2490 1254                              u2730 10E2                              u1691 0E88  
                            u1771 0FB0                              u1747 0F46                              u1931 08EE  
                            u1851 1DF6                              u2651 0D6E                              u2571 0C34  
                            u2491 1250                              u2731 10DE                              u1780 0FD8  
                            u1940 0954                              u1860 1E32                              u2660 0D82  
                            u2580 0C48                              u2740 1718                              u1941 0950  
                            u2661 0D7E                              u2581 0C44                              u2741 1714  
                            u1790 1006                              u1950 0976                              u1870 1E42  
                            u2590 0C7E                              u2670 1B88                              u1791 1002  
                            u1951 0972                              u1871 1E3E                              u1847 1DE0  
                            u2591 0C7A                              u2671 1B84                              u2807 1412  
                            u1880 201E                              u1960 09A6                              u2680 1BAA  
                            u2760 19A6                              u1961 09A2                              u2681 1BA6  
                            u2761 19A2                              u2817 149A                              u1890 2046  
                            u1970 09C2                              u2690 1BD2                              u2770 1EE0  
                            u2907 2156                              u1787 0FCE                              u1971 09BE  
                            u1867 1E28                              u2691 1BCE                              u2755 20E0  
                            u2827 19CA                              u2771 1EDC                              u1980 0A1E  
                            u2780 1EFE                              u2917 2180                              u1981 0A1A  
                            u2837 2364                              u2781 1EFA                              u1990 0A50  
                            u2790 1F14                              u2927 21AA                              u1887 2014  
                            u1991 0A4C                              u2847 16F6                              u2791 1F10  
                            u1897 203C                              u2857 1280                              u2867 17E6  
                            _RCEN 7E2B                              u2877 17F2                              u2887 21C8  
                            u2897 212C                              _RSEN 7E29                              abs@a 0007  
                            _dbuf 00C8  __end_of_I2C_Master_RepeatedStart 246C                              _main 13AC  
                            _dtoa 0D8A                              _prec 0051                              pad@i 0013  
                            pad@p 0010                              fsr1h 0FE2                              fsr2h 0FDA  
                            indf1 0FE7                              indf2 0FDF                              fsr1l 0FE1  
                            fsr2l 0FD9                              _stoa 0EEE                        _Clear_Line 240E  
                            prodh 0FF4                              prodl 0FF3                              start 0000  
                ??_DHT11_ReadByte 0001                     _LCD_String_xy 2058                      ___param_bank 0000  
                           ??_abs 0009                             ??_pad 0012                  __end_of_LCD_Char 2160  
                __end_of_LCD_Init 238E                  ?_I2C_Master_Init 000E                  ?_I2C_Master_Read 0002  
                ?_I2C_Master_Wait 0001          __end_of_GPS_ReadSentence 12A4                  ?_I2C_Master_Stop 0001  
             __end_of_Display_GPS 1178               __end_of_Display_RTC 171A                             ?_main 0001  
                           ?_dtoa 0015                             _ACKEN 7E2C                             _ACKDT 7E2D  
                 __end_of___awdiv 17DC                             STR_10 084E                             STR_11 0891  
                           STR_20 08BF                             STR_12 0801                             STR_13 0818  
                           STR_14 0884                             STR_15 086A                             STR_16 08C6  
                           STR_17 08CD                             STR_18 08CD                             STR_19 085D  
                 __end_of___awmod 1AB8                             _CMCON 0FB4                             ?_stoa 0009  
                 __end_of___lldiv 1C06                   ___awdiv@divisor 0003                             _LATD0 7C60  
                           _LATD1 7C61                  __end_of_GPS_Init 23E8                   __end_of___lwmod 1F32  
                 ___awdiv@counter 0005                             _RCREG 0FAE                             _RCSTA 0FAB  
                    vfpfcnvrt@fmt 0021                             _SPBRG 0FAF                             _TRISD 0F95  
                           _TXSTA 0FAC                  ??_GPS_ParseGPRMC 0018                             _flags 0054  
             read_prec_or_width@c 0005               read_prec_or_width@n 0006                             _fputc 189E  
                           _fputs 2282                  __end_of_RTC_Init 1A0A                             pad@fp 000E  
                           _width 004F                             _putch 246C                             dtoa@d 0016  
                           dtoa@i 001E                             dtoa@p 001A                             dtoa@s 001D  
                           dtoa@w 001B                             tablat 0FF5                             stoa@l 0014  
                           stoa@p 000E                             stoa@s 000A                             stoa@w 0010  
                           status 0FD8                   __end_of_sprintf 2282                   __end_of_strcspn 1FFA  
                 __end_of_strncmp 13AC                   __end_of_strncpy 1ECE                    ?_LCD_String_xy 0005  
                 __initialization 238E                      __end_of_main 14AE                      __end_of_dtoa 0EEE  
                    __end_of_stoa 104C                         ??_BCD2DEC 0001                            ??_main 004D  
                          ??_dtoa 0018                            ??_stoa 000C                 __end_of_LCD_Clear 2454  
                   __activetblptr 0002        __end_of_read_prec_or_width 1CAA                 ?_I2C_Master_Start 0001  
               ?_I2C_Master_Write 0002                ??_I2C_Master_Start 0002                            _ADCON1 0FC1  
              ??_I2C_Master_Write 0004                            ?_fputc 0001                            ?_fputs 0009  
                ___awdiv@dividend 0001                            ?_putch 0001                  LCD_String_xy@msg 0006  
                LCD_String_xy@pos 0005                  LCD_String_xy@row 0008                            _OSCCON 0FD3  
                   vfpfcnvrt@done 002A                            _SSPADD 0FC8                            _TRISB0 7C98  
                          _TRISB1 7C99                            _TRISC7 7CA7                            _SSPBUF 0FC9  
                     ?_Clear_Line 0001                      ??_DHT11_Read 0005          _I2C_Master_RepeatedStart 2464  
                     _Display_GPS 104C                       _Display_RTC 1656                      vfprintf@cfmt 002E  
                       ??___awdiv 0005                         ??___awmod 0005                         ??___lldiv 0009  
                       ??___lwmod 0005              read_prec_or_width@ap 0002                            clear_0 2394  
                          clear_1 23A0                            clear_2 23AC                  ___awdiv@quotient 0007  
                 ___awmod@divisor 0003                            isa$std 0001                   ___awmod@counter 0005  
                          pad@buf 000F                            dtoa@fp 0015                            _strchr 1DCA  
                          _strlen 22F4                            _strtok 1CAA                            _strspn 1F32  
                          _strstr 1588                            fputc@c 0001                            fputs@c 000B  
                          fputs@i 000C                            fputs@s 0009                        BCD2DEC@val 0002  
                    __mediumconst 0000                            tblptrh 0FF7                            tblptrl 0FF6  
                          tblptru 0FF8                __end_of_DHT11_Read 189E                            stoa@cp 0012  
                          stoa@fp 0009                            putch@c 0001                  __end_of_vfprintf 2246  
                       ??_sprintf 0038                         ??_strcspn 0009                         ??_strncmp 0006  
                       ??_strncpy 0007                   _current_display 0055                         ?_LCD_Char 0001  
                      __accesstop 0060           __end_of__initialization 23B2                         ?_LCD_Init 0001  
                 ??_LCD_String_xy 0008                     ___rparam_used 0001                         ?_GPS_Init 0001  
                  __pcstackCOMRAM 0001                     __end_of_fputc 1958                     __end_of_fputs 22BE  
                   __end_of_putch 246E                      ??_LCD_String 0005                         ?_RTC_Init 0001  
                         ??_fputc 0004                           ??_fputs 000B                           ??_putch 0001  
                      __pbssBANK0 00C8                        __pbssBANK1 017D                        ??_LCD_Char 0001  
                      ??_LCD_Init 0003                __end_of_LCD_String 2058             __end_of_Display_DHT11 1B62  
                      ??_GPS_Init 0001                           _BCD2DEC 2428                           _BAUDCON 0FB8  
                         _ACKSTAT 7E2E                        ??_RTC_Init 000C                 ?_GPS_ReadSentence 0001  
                         ?_strchr 0001                           ?_strlen 0001                           ?_strtok 000C  
                         ?_strspn 0007                           ?_strstr 0007             GPS_ReadSentence@dummy 000B  
              ??_GPS_ReadSentence 0007                        _lcd_buffer 017D                           _SSPCON1 0FC6  
                         _SSPCON2 0FC5                           _SSPSTAT 0FC7                    Clear_Line@line 000C  
                   LCD_String@msg 0003                           __Hparam 0000                           __Lparam 0000  
                         ___awdiv 171A                           ___awmod 1A0A                           ___lldiv 1B62  
                         ___lwmod 1ECE                         ?_vfprintf 002B                      __psmallconst 0800  
                         __pcinit 238E                           __ramtop 0800                           __ptext0 13AC  
                         __ptext1 1ECE                           __ptext2 1958                           __ptext3 244C  
                         __ptext4 235C                           __ptext5 20B4                           __ptext6 1B62  
                         __ptext7 23BC                           __ptext8 1656                           __ptext9 14AE  
           read_prec_or_width@fmt 0001                  ___awmod@dividend 0001           GPS_ReadSentence@max_len 0003  
                       _LCD_Clear 244C                           _sprintf 2246                           _strcspn 1F96  
                         _strncmp 12A4                           _strncpy 1E4C              end_of_initialization 23B2  
         GPS_ReadSentence@started 000C        ??_I2C_Master_RepeatedStart 0002                           fputc@fp 0003  
                  LCD_Command@cmd 0002                     __Lmediumconst 0000                           fputs@fp 000A  
              _read_prec_or_width 1C06                      ??_Clear_Line 000C                 ??_RTC_GetDateTime 000C  
                 ___lldiv@divisor 0005                   ___lldiv@counter 000D                      ?_Display_GPS 0001  
                    ?_Display_RTC 0001                 __end_of_vfpfcnvrt 0B56                         _RCSTAbits 0FAB  
                I2C_Master_Init@c 000E                  I2C_Master_Read@a 0002                           postdec2 0FDD  
             ?_read_prec_or_width 0001                           postinc0 0FEE                           postinc1 0FE6  
                         postinc2 0FDE                  vfpfcnvrt@convarg 0025             DHT11_Read@temperature 0004  
                      ??_vfprintf 002E                           strchr@c 0003                           strchr@s 0001  
                         strlen@a 0003                           strlen@s 0001                           strspn@c 0008  
                         strspn@i 000A                           strtok@p 0053                           strtok@s 000C  
                         strspn@s 0007                           strstr@h 0007                           strstr@n 0009  
                       _PORTAbits 0F80                   Display_RTC@year 004C                         _TRISAbits 0F92  
              __end_of_Clear_Line 2428                        ?_LCD_Clear 0001              ??_read_prec_or_width 0003  
                   ??_LCD_Command 0001                       vfpfcnvrt@ap 0022                       vfpfcnvrt@cp 0029  
                     vfpfcnvrt@fp 0020                       RTC_Init@sec 000E                DHT11_Read@humidity 0003  
                  __end_of_strchr 1E4C                    __end_of_strlen 2328                    __end_of_strtok 1D40  
                  __end_of_strspn 1F96                    __end_of_strstr 1656               start_initialization 238E  
              _GPS_ParseGPRMC$432 00C4                       __end_of_abs 235C                       __end_of_pad 1DCA  
              DHT11_ReadByte@data 0001                 ??_I2C_Master_Init 0012                 ??_I2C_Master_Read 0004  
             GPS_ParseGPRMC@field 00C5                 ??_I2C_Master_Wait 0001                 ??_I2C_Master_Stop 0002  
             GPS_ParseGPRMC@token 00C7             __end_of_LCD_String_xy 20B4                       vfprintf@fmt 002C  
                        ?_BCD2DEC 0001                          ??_strchr 0005                          ??_strlen 0003  
                        ??_strtok 000E                          ??_strspn 0009              RTC_GetDateTime@month 000A  
                        ??_strstr 000A               __end_of_LCD_Command 21B4                       __pbssCOMRAM 004F  
                   __pcstackBANK0 0060                     __pcstackBANK1 0100                       ??_LCD_Clear 0003  
                _I2C_Master_Start 245C                  _I2C_Master_Write 243E                         _dtoa$1053 0018  
                        ?___awdiv 0001                          ?___awmod 0001                          ?___lldiv 0001  
                        ?___lwmod 0001          GPS_ParseGPRMC@data_valid 00C6                    _DHT11_ReadByte 21B4  
                     __smallconst 0800                   _RTC_GetDateTime 14AE             LCD_String_xy@location 000B  
                        ?_sprintf 002F                          ?_strcspn 0007                          ?_strncmp 0001  
                        ?_strncpy 0001                 GPS_ReadSentence@c 000F                 GPS_ReadSentence@i 000D  
               GPS_ReadSentence@t 0009        GPS_ReadSentence@timeout_ms 0005            GPS_ReadSentence@buffer 0001  
                        _LCD_Char 210C                          _LCD_Init 235C                    _GPS_ParseGPRMC 0B56  
                        _GPS_Init 23BC                          _PIR1bits 0F9E                       DHT11_Read@i 000E  
                  Display_GPS@lat 016F                    Display_GPS@lon 0164            __end_of_DHT11_ReadByte 2206  
                     _LCD_Command 2160                         _vfpfcnvrt 08D0                    Display_RTC@day 004A  
                  Display_RTC@mon 004B                          _RTC_Init 1958               I2C_Master_Read@temp 0004  
          __end_of_GPS_ParseGPRMC 0D8A          Display_RTC@refresh_count 0046                        _DHT11_Read 17DC  
                        __Hrparam 0000                     _Display_DHT11 1AB8                 Display_DHT11@temp 0045  
                      vfprintf@ap 002D                          __Lrparam 0000                        vfprintf@fp 002B  
             RTC_GetDateTime@hour 0006               RTC_GetDateTime@year 000B                   ?_DHT11_ReadByte 0001  
       ?_I2C_Master_RepeatedStart 0001                        ?_vfpfcnvrt 0020           __end_of_RTC_GetDateTime 1588  
                 DHT11_ReadByte@i 0002                        sprintf@fmt 0031                   _I2C_Master_Init 20B4  
                 _I2C_Master_Read 22BE                   _I2C_Master_Wait 23E8                   _I2C_Master_Stop 2454  
                        __ptext10 243E                          __ptext11 2454                          __ptext20 1CAA  
                        __ptext12 245C                          __ptext21 1F32                          __ptext13 2464  
                        __ptext30 2206                          __ptext22 1F96                          __ptext14 22BE  
                        __ptext31 08D0                          __ptext23 1588                          __ptext15 23E8  
                        __ptext40 1A0A                          __ptext32 0EEE                          __ptext24 12A4  
                        __ptext16 2428                          __ptext41 171A                          __ptext33 1C06  
                        __ptext25 22F4                          __ptext17 104C                          __ptext42 17DC  
                        __ptext34 0D8A                          __ptext26 1DCA                          __ptext18 1178  
                        __ptext43 21B4                          __ptext35 1D40                          __ptext27 1E4C  
                        __ptext19 0B56                          __ptext44 240E                          __ptext36 2282  
                        __ptext28 1AB8                          __ptext45 2058                          __ptext37 189E  
                        __ptext29 2246                          __ptext46 1FFA                          __ptext38 246C  
                        __ptext47 210C                          __ptext39 2328                          __ptext48 2160  
                _GPS_ReadSentence 1178                   ?_GPS_ParseGPRMC 000E                    ?_Display_DHT11 0001  
                   Display_GPS@ew 017B                          isa$xinst 0000                     Display_GPS@ns 0179  
                        _vfprintf 2206                        _LCD_String 1FFA          __end_of_I2C_Master_Start 2464  
        __end_of_I2C_Master_Write 244C                 GPS_ParseGPRMC@buf 0060                 GPS_ParseGPRMC@lat 0010  
               GPS_ParseGPRMC@lon 0014                 GPS_ParseGPRMC@msg 000E                  Display_DHT11@hum 0044  
              RTC_GetDateTime@day 0009                RTC_GetDateTime@min 0007                RTC_GetDateTime@sec 0008  
                  DHT11_Read@data 0009                 Display_GPS@buffer 0100                         sprintf@ap 0038  
                ___lwmod@dividend 0001                  ___lldiv@dividend 0001                       ?_DHT11_Read 0003  
                       strncpy@cp 0007                      Display_RTC@h 0047                      Display_RTC@m 0048  
                    Display_RTC@s 0049                         strtok@sep 000D           __end_of_I2C_Master_Init 210C  
         __end_of_I2C_Master_Read 22F4           __end_of_I2C_Master_Wait 240E           __end_of_I2C_Master_Stop 245C  
                     ??_vfpfcnvrt 0024                  GPS_ParseGPRMC@ew 0016                  GPS_ParseGPRMC@ns 0012  
                ?_RTC_GetDateTime 0006                          sprintf@f 0039                          sprintf@s 002F  
                ___lldiv@quotient 0009                 I2C_Master_Write@d 0002                   ___lwmod@divisor 0003  
                 ___lwmod@counter 0005                          strcspn@c 0008                          strcspn@i 000A  
                        strcspn@s 0007                          strncmp@l 0001                          strncmp@n 0004  
                        strncmp@r 0003                          strncpy@d 0001                          strncpy@n 0005  
                        strncpy@s 0003                     GPS_Init@dummy 0001                          strstr@nl 000A  
                 ??_Display_DHT11 0044                     ??_Display_GPS 0044                     ??_Display_RTC 0044  
