

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Wed Apr 30 17:39:55 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=3
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=3
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=2
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    32   000000                     
    33                           ; Version 2.20
    34                           ; Generated 12/02/2020 GMT
    35                           ; 
    36                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC18F4550 Definitions
    65                           ; 
    66                           ; SFR Addresses
    67   000FE0                     bsr             equ	4064
    68   000FE9                     fsr0            equ	4073
    69   000FEA                     fsr0h           equ	4074
    70   000FE9                     fsr0l           equ	4073
    71   000FE1                     fsr1            equ	4065
    72   000FE2                     fsr1h           equ	4066
    73   000FE1                     fsr1l           equ	4065
    74   000FD9                     fsr2            equ	4057
    75   000FDA                     fsr2h           equ	4058
    76   000FD9                     fsr2l           equ	4057
    77   000FEF                     indf0           equ	4079
    78   000FE7                     indf1           equ	4071
    79   000FDF                     indf2           equ	4063
    80   000FF2                     intcon          equ	4082
    81   000000                     nvmcon          equ	0
    82   000FF9                     pcl             equ	4089
    83   000FFA                     pclath          equ	4090
    84   000FFB                     pclatu          equ	4091
    85   000FEB                     plusw0          equ	4075
    86   000FE3                     plusw1          equ	4067
    87   000FDB                     plusw2          equ	4059
    88   000FED                     postdec0        equ	4077
    89   000FE5                     postdec1        equ	4069
    90   000FDD                     postdec2        equ	4061
    91   000FEE                     postinc0        equ	4078
    92   000FE6                     postinc1        equ	4070
    93   000FDE                     postinc2        equ	4062
    94   000FEC                     preinc0         equ	4076
    95   000FE4                     preinc1         equ	4068
    96   000FDC                     preinc2         equ	4060
    97   000FF3                     prod            equ	4083
    98   000FF4                     prodh           equ	4084
    99   000FF3                     prodl           equ	4083
   100   000FD8                     status          equ	4056
   101   000FF5                     tablat          equ	4085
   102   000FF6                     tblptr          equ	4086
   103   000FF7                     tblptrh         equ	4087
   104   000FF6                     tblptrl         equ	4086
   105   000FF8                     tblptru         equ	4088
   106   000FFD                     tosl            equ	4093
   107   000FE8                     wreg            equ	4072
   108   000F62                     SPPDATA         equ	3938	;# 
   109   000F63                     SPPCFG          equ	3939	;# 
   110   000F64                     SPPEPS          equ	3940	;# 
   111   000F65                     SPPCON          equ	3941	;# 
   112   000F66                     UFRM            equ	3942	;# 
   113   000F66                     UFRML           equ	3942	;# 
   114   000F67                     UFRMH           equ	3943	;# 
   115   000F68                     UIR             equ	3944	;# 
   116   000F69                     UIE             equ	3945	;# 
   117   000F6A                     UEIR            equ	3946	;# 
   118   000F6B                     UEIE            equ	3947	;# 
   119   000F6C                     USTAT           equ	3948	;# 
   120   000F6D                     UCON            equ	3949	;# 
   121   000F6E                     UADDR           equ	3950	;# 
   122   000F6F                     UCFG            equ	3951	;# 
   123   000F70                     UEP0            equ	3952	;# 
   124   000F71                     UEP1            equ	3953	;# 
   125   000F72                     UEP2            equ	3954	;# 
   126   000F73                     UEP3            equ	3955	;# 
   127   000F74                     UEP4            equ	3956	;# 
   128   000F75                     UEP5            equ	3957	;# 
   129   000F76                     UEP6            equ	3958	;# 
   130   000F77                     UEP7            equ	3959	;# 
   131   000F78                     UEP8            equ	3960	;# 
   132   000F79                     UEP9            equ	3961	;# 
   133   000F7A                     UEP10           equ	3962	;# 
   134   000F7B                     UEP11           equ	3963	;# 
   135   000F7C                     UEP12           equ	3964	;# 
   136   000F7D                     UEP13           equ	3965	;# 
   137   000F7E                     UEP14           equ	3966	;# 
   138   000F7F                     UEP15           equ	3967	;# 
   139   000F80                     PORTA           equ	3968	;# 
   140   000F81                     PORTB           equ	3969	;# 
   141   000F82                     PORTC           equ	3970	;# 
   142   000F83                     PORTD           equ	3971	;# 
   143   000F84                     PORTE           equ	3972	;# 
   144   000F89                     LATA            equ	3977	;# 
   145   000F8A                     LATB            equ	3978	;# 
   146   000F8B                     LATC            equ	3979	;# 
   147   000F8C                     LATD            equ	3980	;# 
   148   000F8D                     LATE            equ	3981	;# 
   149   000F92                     TRISA           equ	3986	;# 
   150   000F92                     DDRA            equ	3986	;# 
   151   000F93                     TRISB           equ	3987	;# 
   152   000F93                     DDRB            equ	3987	;# 
   153   000F94                     TRISC           equ	3988	;# 
   154   000F94                     DDRC            equ	3988	;# 
   155   000F95                     TRISD           equ	3989	;# 
   156   000F95                     DDRD            equ	3989	;# 
   157   000F96                     TRISE           equ	3990	;# 
   158   000F96                     DDRE            equ	3990	;# 
   159   000F9B                     OSCTUNE         equ	3995	;# 
   160   000F9D                     PIE1            equ	3997	;# 
   161   000F9E                     PIR1            equ	3998	;# 
   162   000F9F                     IPR1            equ	3999	;# 
   163   000FA0                     PIE2            equ	4000	;# 
   164   000FA1                     PIR2            equ	4001	;# 
   165   000FA2                     IPR2            equ	4002	;# 
   166   000FA6                     EECON1          equ	4006	;# 
   167   000FA7                     EECON2          equ	4007	;# 
   168   000FA8                     EEDATA          equ	4008	;# 
   169   000FA9                     EEADR           equ	4009	;# 
   170   000FAB                     RCSTA           equ	4011	;# 
   171   000FAB                     RCSTA1          equ	4011	;# 
   172   000FAC                     TXSTA           equ	4012	;# 
   173   000FAC                     TXSTA1          equ	4012	;# 
   174   000FAD                     TXREG           equ	4013	;# 
   175   000FAD                     TXREG1          equ	4013	;# 
   176   000FAE                     RCREG           equ	4014	;# 
   177   000FAE                     RCREG1          equ	4014	;# 
   178   000FAF                     SPBRG           equ	4015	;# 
   179   000FAF                     SPBRG1          equ	4015	;# 
   180   000FB0                     SPBRGH          equ	4016	;# 
   181   000FB1                     T3CON           equ	4017	;# 
   182   000FB2                     TMR3            equ	4018	;# 
   183   000FB2                     TMR3L           equ	4018	;# 
   184   000FB3                     TMR3H           equ	4019	;# 
   185   000FB4                     CMCON           equ	4020	;# 
   186   000FB5                     CVRCON          equ	4021	;# 
   187   000FB6                     ECCP1AS         equ	4022	;# 
   188   000FB6                     CCP1AS          equ	4022	;# 
   189   000FB7                     ECCP1DEL        equ	4023	;# 
   190   000FB7                     CCP1DEL         equ	4023	;# 
   191   000FB8                     BAUDCON         equ	4024	;# 
   192   000FB8                     BAUDCTL         equ	4024	;# 
   193   000FBA                     CCP2CON         equ	4026	;# 
   194   000FBB                     CCPR2           equ	4027	;# 
   195   000FBB                     CCPR2L          equ	4027	;# 
   196   000FBC                     CCPR2H          equ	4028	;# 
   197   000FBD                     CCP1CON         equ	4029	;# 
   198   000FBD                     ECCP1CON        equ	4029	;# 
   199   000FBE                     CCPR1           equ	4030	;# 
   200   000FBE                     CCPR1L          equ	4030	;# 
   201   000FBF                     CCPR1H          equ	4031	;# 
   202   000FC0                     ADCON2          equ	4032	;# 
   203   000FC1                     ADCON1          equ	4033	;# 
   204   000FC2                     ADCON0          equ	4034	;# 
   205   000FC3                     ADRES           equ	4035	;# 
   206   000FC3                     ADRESL          equ	4035	;# 
   207   000FC4                     ADRESH          equ	4036	;# 
   208   000FC5                     SSPCON2         equ	4037	;# 
   209   000FC6                     SSPCON1         equ	4038	;# 
   210   000FC7                     SSPSTAT         equ	4039	;# 
   211   000FC8                     SSPADD          equ	4040	;# 
   212   000FC9                     SSPBUF          equ	4041	;# 
   213   000FCA                     T2CON           equ	4042	;# 
   214   000FCB                     PR2             equ	4043	;# 
   215   000FCB                     MEMCON          equ	4043	;# 
   216   000FCC                     TMR2            equ	4044	;# 
   217   000FCD                     T1CON           equ	4045	;# 
   218   000FCE                     TMR1            equ	4046	;# 
   219   000FCE                     TMR1L           equ	4046	;# 
   220   000FCF                     TMR1H           equ	4047	;# 
   221   000FD0                     RCON            equ	4048	;# 
   222   000FD1                     WDTCON          equ	4049	;# 
   223   000FD2                     HLVDCON         equ	4050	;# 
   224   000FD2                     LVDCON          equ	4050	;# 
   225   000FD3                     OSCCON          equ	4051	;# 
   226   000FD5                     T0CON           equ	4053	;# 
   227   000FD6                     TMR0            equ	4054	;# 
   228   000FD6                     TMR0L           equ	4054	;# 
   229   000FD7                     TMR0H           equ	4055	;# 
   230   000FD8                     STATUS          equ	4056	;# 
   231   000FD9                     FSR2            equ	4057	;# 
   232   000FD9                     FSR2L           equ	4057	;# 
   233   000FDA                     FSR2H           equ	4058	;# 
   234   000FDB                     PLUSW2          equ	4059	;# 
   235   000FDC                     PREINC2         equ	4060	;# 
   236   000FDD                     POSTDEC2        equ	4061	;# 
   237   000FDE                     POSTINC2        equ	4062	;# 
   238   000FDF                     INDF2           equ	4063	;# 
   239   000FE0                     BSR             equ	4064	;# 
   240   000FE1                     FSR1            equ	4065	;# 
   241   000FE1                     FSR1L           equ	4065	;# 
   242   000FE2                     FSR1H           equ	4066	;# 
   243   000FE3                     PLUSW1          equ	4067	;# 
   244   000FE4                     PREINC1         equ	4068	;# 
   245   000FE5                     POSTDEC1        equ	4069	;# 
   246   000FE6                     POSTINC1        equ	4070	;# 
   247   000FE7                     INDF1           equ	4071	;# 
   248   000FE8                     WREG            equ	4072	;# 
   249   000FE9                     FSR0            equ	4073	;# 
   250   000FE9                     FSR0L           equ	4073	;# 
   251   000FEA                     FSR0H           equ	4074	;# 
   252   000FEB                     PLUSW0          equ	4075	;# 
   253   000FEC                     PREINC0         equ	4076	;# 
   254   000FED                     POSTDEC0        equ	4077	;# 
   255   000FEE                     POSTINC0        equ	4078	;# 
   256   000FEF                     INDF0           equ	4079	;# 
   257   000FF0                     INTCON3         equ	4080	;# 
   258   000FF1                     INTCON2         equ	4081	;# 
   259   000FF2                     INTCON          equ	4082	;# 
   260   000FF3                     PROD            equ	4083	;# 
   261   000FF3                     PRODL           equ	4083	;# 
   262   000FF4                     PRODH           equ	4084	;# 
   263   000FF5                     TABLAT          equ	4085	;# 
   264   000FF6                     TBLPTR          equ	4086	;# 
   265   000FF6                     TBLPTRL         equ	4086	;# 
   266   000FF7                     TBLPTRH         equ	4087	;# 
   267   000FF8                     TBLPTRU         equ	4088	;# 
   268   000FF9                     PCLAT           equ	4089	;# 
   269   000FF9                     PC              equ	4089	;# 
   270   000FF9                     PCL             equ	4089	;# 
   271   000FFA                     PCLATH          equ	4090	;# 
   272   000FFB                     PCLATU          equ	4091	;# 
   273   000FFC                     STKPTR          equ	4092	;# 
   274   000FFD                     TOS             equ	4093	;# 
   275   000FFD                     TOSL            equ	4093	;# 
   276   000FFE                     TOSH            equ	4094	;# 
   277   000FFF                     TOSU            equ	4095	;# 
   278   000F62                     SPPDATA         equ	3938	;# 
   279   000F63                     SPPCFG          equ	3939	;# 
   280   000F64                     SPPEPS          equ	3940	;# 
   281   000F65                     SPPCON          equ	3941	;# 
   282   000F66                     UFRM            equ	3942	;# 
   283   000F66                     UFRML           equ	3942	;# 
   284   000F67                     UFRMH           equ	3943	;# 
   285   000F68                     UIR             equ	3944	;# 
   286   000F69                     UIE             equ	3945	;# 
   287   000F6A                     UEIR            equ	3946	;# 
   288   000F6B                     UEIE            equ	3947	;# 
   289   000F6C                     USTAT           equ	3948	;# 
   290   000F6D                     UCON            equ	3949	;# 
   291   000F6E                     UADDR           equ	3950	;# 
   292   000F6F                     UCFG            equ	3951	;# 
   293   000F70                     UEP0            equ	3952	;# 
   294   000F71                     UEP1            equ	3953	;# 
   295   000F72                     UEP2            equ	3954	;# 
   296   000F73                     UEP3            equ	3955	;# 
   297   000F74                     UEP4            equ	3956	;# 
   298   000F75                     UEP5            equ	3957	;# 
   299   000F76                     UEP6            equ	3958	;# 
   300   000F77                     UEP7            equ	3959	;# 
   301   000F78                     UEP8            equ	3960	;# 
   302   000F79                     UEP9            equ	3961	;# 
   303   000F7A                     UEP10           equ	3962	;# 
   304   000F7B                     UEP11           equ	3963	;# 
   305   000F7C                     UEP12           equ	3964	;# 
   306   000F7D                     UEP13           equ	3965	;# 
   307   000F7E                     UEP14           equ	3966	;# 
   308   000F7F                     UEP15           equ	3967	;# 
   309   000F80                     PORTA           equ	3968	;# 
   310   000F81                     PORTB           equ	3969	;# 
   311   000F82                     PORTC           equ	3970	;# 
   312   000F83                     PORTD           equ	3971	;# 
   313   000F84                     PORTE           equ	3972	;# 
   314   000F89                     LATA            equ	3977	;# 
   315   000F8A                     LATB            equ	3978	;# 
   316   000F8B                     LATC            equ	3979	;# 
   317   000F8C                     LATD            equ	3980	;# 
   318   000F8D                     LATE            equ	3981	;# 
   319   000F92                     TRISA           equ	3986	;# 
   320   000F92                     DDRA            equ	3986	;# 
   321   000F93                     TRISB           equ	3987	;# 
   322   000F93                     DDRB            equ	3987	;# 
   323   000F94                     TRISC           equ	3988	;# 
   324   000F94                     DDRC            equ	3988	;# 
   325   000F95                     TRISD           equ	3989	;# 
   326   000F95                     DDRD            equ	3989	;# 
   327   000F96                     TRISE           equ	3990	;# 
   328   000F96                     DDRE            equ	3990	;# 
   329   000F9B                     OSCTUNE         equ	3995	;# 
   330   000F9D                     PIE1            equ	3997	;# 
   331   000F9E                     PIR1            equ	3998	;# 
   332   000F9F                     IPR1            equ	3999	;# 
   333   000FA0                     PIE2            equ	4000	;# 
   334   000FA1                     PIR2            equ	4001	;# 
   335   000FA2                     IPR2            equ	4002	;# 
   336   000FA6                     EECON1          equ	4006	;# 
   337   000FA7                     EECON2          equ	4007	;# 
   338   000FA8                     EEDATA          equ	4008	;# 
   339   000FA9                     EEADR           equ	4009	;# 
   340   000FAB                     RCSTA           equ	4011	;# 
   341   000FAB                     RCSTA1          equ	4011	;# 
   342   000FAC                     TXSTA           equ	4012	;# 
   343   000FAC                     TXSTA1          equ	4012	;# 
   344   000FAD                     TXREG           equ	4013	;# 
   345   000FAD                     TXREG1          equ	4013	;# 
   346   000FAE                     RCREG           equ	4014	;# 
   347   000FAE                     RCREG1          equ	4014	;# 
   348   000FAF                     SPBRG           equ	4015	;# 
   349   000FAF                     SPBRG1          equ	4015	;# 
   350   000FB0                     SPBRGH          equ	4016	;# 
   351   000FB1                     T3CON           equ	4017	;# 
   352   000FB2                     TMR3            equ	4018	;# 
   353   000FB2                     TMR3L           equ	4018	;# 
   354   000FB3                     TMR3H           equ	4019	;# 
   355   000FB4                     CMCON           equ	4020	;# 
   356   000FB5                     CVRCON          equ	4021	;# 
   357   000FB6                     ECCP1AS         equ	4022	;# 
   358   000FB6                     CCP1AS          equ	4022	;# 
   359   000FB7                     ECCP1DEL        equ	4023	;# 
   360   000FB7                     CCP1DEL         equ	4023	;# 
   361   000FB8                     BAUDCON         equ	4024	;# 
   362   000FB8                     BAUDCTL         equ	4024	;# 
   363   000FBA                     CCP2CON         equ	4026	;# 
   364   000FBB                     CCPR2           equ	4027	;# 
   365   000FBB                     CCPR2L          equ	4027	;# 
   366   000FBC                     CCPR2H          equ	4028	;# 
   367   000FBD                     CCP1CON         equ	4029	;# 
   368   000FBD                     ECCP1CON        equ	4029	;# 
   369   000FBE                     CCPR1           equ	4030	;# 
   370   000FBE                     CCPR1L          equ	4030	;# 
   371   000FBF                     CCPR1H          equ	4031	;# 
   372   000FC0                     ADCON2          equ	4032	;# 
   373   000FC1                     ADCON1          equ	4033	;# 
   374   000FC2                     ADCON0          equ	4034	;# 
   375   000FC3                     ADRES           equ	4035	;# 
   376   000FC3                     ADRESL          equ	4035	;# 
   377   000FC4                     ADRESH          equ	4036	;# 
   378   000FC5                     SSPCON2         equ	4037	;# 
   379   000FC6                     SSPCON1         equ	4038	;# 
   380   000FC7                     SSPSTAT         equ	4039	;# 
   381   000FC8                     SSPADD          equ	4040	;# 
   382   000FC9                     SSPBUF          equ	4041	;# 
   383   000FCA                     T2CON           equ	4042	;# 
   384   000FCB                     PR2             equ	4043	;# 
   385   000FCB                     MEMCON          equ	4043	;# 
   386   000FCC                     TMR2            equ	4044	;# 
   387   000FCD                     T1CON           equ	4045	;# 
   388   000FCE                     TMR1            equ	4046	;# 
   389   000FCE                     TMR1L           equ	4046	;# 
   390   000FCF                     TMR1H           equ	4047	;# 
   391   000FD0                     RCON            equ	4048	;# 
   392   000FD1                     WDTCON          equ	4049	;# 
   393   000FD2                     HLVDCON         equ	4050	;# 
   394   000FD2                     LVDCON          equ	4050	;# 
   395   000FD3                     OSCCON          equ	4051	;# 
   396   000FD5                     T0CON           equ	4053	;# 
   397   000FD6                     TMR0            equ	4054	;# 
   398   000FD6                     TMR0L           equ	4054	;# 
   399   000FD7                     TMR0H           equ	4055	;# 
   400   000FD8                     STATUS          equ	4056	;# 
   401   000FD9                     FSR2            equ	4057	;# 
   402   000FD9                     FSR2L           equ	4057	;# 
   403   000FDA                     FSR2H           equ	4058	;# 
   404   000FDB                     PLUSW2          equ	4059	;# 
   405   000FDC                     PREINC2         equ	4060	;# 
   406   000FDD                     POSTDEC2        equ	4061	;# 
   407   000FDE                     POSTINC2        equ	4062	;# 
   408   000FDF                     INDF2           equ	4063	;# 
   409   000FE0                     BSR             equ	4064	;# 
   410   000FE1                     FSR1            equ	4065	;# 
   411   000FE1                     FSR1L           equ	4065	;# 
   412   000FE2                     FSR1H           equ	4066	;# 
   413   000FE3                     PLUSW1          equ	4067	;# 
   414   000FE4                     PREINC1         equ	4068	;# 
   415   000FE5                     POSTDEC1        equ	4069	;# 
   416   000FE6                     POSTINC1        equ	4070	;# 
   417   000FE7                     INDF1           equ	4071	;# 
   418   000FE8                     WREG            equ	4072	;# 
   419   000FE9                     FSR0            equ	4073	;# 
   420   000FE9                     FSR0L           equ	4073	;# 
   421   000FEA                     FSR0H           equ	4074	;# 
   422   000FEB                     PLUSW0          equ	4075	;# 
   423   000FEC                     PREINC0         equ	4076	;# 
   424   000FED                     POSTDEC0        equ	4077	;# 
   425   000FEE                     POSTINC0        equ	4078	;# 
   426   000FEF                     INDF0           equ	4079	;# 
   427   000FF0                     INTCON3         equ	4080	;# 
   428   000FF1                     INTCON2         equ	4081	;# 
   429   000FF2                     INTCON          equ	4082	;# 
   430   000FF3                     PROD            equ	4083	;# 
   431   000FF3                     PRODL           equ	4083	;# 
   432   000FF4                     PRODH           equ	4084	;# 
   433   000FF5                     TABLAT          equ	4085	;# 
   434   000FF6                     TBLPTR          equ	4086	;# 
   435   000FF6                     TBLPTRL         equ	4086	;# 
   436   000FF7                     TBLPTRH         equ	4087	;# 
   437   000FF8                     TBLPTRU         equ	4088	;# 
   438   000FF9                     PCLAT           equ	4089	;# 
   439   000FF9                     PC              equ	4089	;# 
   440   000FF9                     PCL             equ	4089	;# 
   441   000FFA                     PCLATH          equ	4090	;# 
   442   000FFB                     PCLATU          equ	4091	;# 
   443   000FFC                     STKPTR          equ	4092	;# 
   444   000FFD                     TOS             equ	4093	;# 
   445   000FFD                     TOSL            equ	4093	;# 
   446   000FFE                     TOSH            equ	4094	;# 
   447   000FFF                     TOSU            equ	4095	;# 
   448   000F62                     SPPDATA         equ	3938	;# 
   449   000F63                     SPPCFG          equ	3939	;# 
   450   000F64                     SPPEPS          equ	3940	;# 
   451   000F65                     SPPCON          equ	3941	;# 
   452   000F66                     UFRM            equ	3942	;# 
   453   000F66                     UFRML           equ	3942	;# 
   454   000F67                     UFRMH           equ	3943	;# 
   455   000F68                     UIR             equ	3944	;# 
   456   000F69                     UIE             equ	3945	;# 
   457   000F6A                     UEIR            equ	3946	;# 
   458   000F6B                     UEIE            equ	3947	;# 
   459   000F6C                     USTAT           equ	3948	;# 
   460   000F6D                     UCON            equ	3949	;# 
   461   000F6E                     UADDR           equ	3950	;# 
   462   000F6F                     UCFG            equ	3951	;# 
   463   000F70                     UEP0            equ	3952	;# 
   464   000F71                     UEP1            equ	3953	;# 
   465   000F72                     UEP2            equ	3954	;# 
   466   000F73                     UEP3            equ	3955	;# 
   467   000F74                     UEP4            equ	3956	;# 
   468   000F75                     UEP5            equ	3957	;# 
   469   000F76                     UEP6            equ	3958	;# 
   470   000F77                     UEP7            equ	3959	;# 
   471   000F78                     UEP8            equ	3960	;# 
   472   000F79                     UEP9            equ	3961	;# 
   473   000F7A                     UEP10           equ	3962	;# 
   474   000F7B                     UEP11           equ	3963	;# 
   475   000F7C                     UEP12           equ	3964	;# 
   476   000F7D                     UEP13           equ	3965	;# 
   477   000F7E                     UEP14           equ	3966	;# 
   478   000F7F                     UEP15           equ	3967	;# 
   479   000F80                     PORTA           equ	3968	;# 
   480   000F81                     PORTB           equ	3969	;# 
   481   000F82                     PORTC           equ	3970	;# 
   482   000F83                     PORTD           equ	3971	;# 
   483   000F84                     PORTE           equ	3972	;# 
   484   000F89                     LATA            equ	3977	;# 
   485   000F8A                     LATB            equ	3978	;# 
   486   000F8B                     LATC            equ	3979	;# 
   487   000F8C                     LATD            equ	3980	;# 
   488   000F8D                     LATE            equ	3981	;# 
   489   000F92                     TRISA           equ	3986	;# 
   490   000F92                     DDRA            equ	3986	;# 
   491   000F93                     TRISB           equ	3987	;# 
   492   000F93                     DDRB            equ	3987	;# 
   493   000F94                     TRISC           equ	3988	;# 
   494   000F94                     DDRC            equ	3988	;# 
   495   000F95                     TRISD           equ	3989	;# 
   496   000F95                     DDRD            equ	3989	;# 
   497   000F96                     TRISE           equ	3990	;# 
   498   000F96                     DDRE            equ	3990	;# 
   499   000F9B                     OSCTUNE         equ	3995	;# 
   500   000F9D                     PIE1            equ	3997	;# 
   501   000F9E                     PIR1            equ	3998	;# 
   502   000F9F                     IPR1            equ	3999	;# 
   503   000FA0                     PIE2            equ	4000	;# 
   504   000FA1                     PIR2            equ	4001	;# 
   505   000FA2                     IPR2            equ	4002	;# 
   506   000FA6                     EECON1          equ	4006	;# 
   507   000FA7                     EECON2          equ	4007	;# 
   508   000FA8                     EEDATA          equ	4008	;# 
   509   000FA9                     EEADR           equ	4009	;# 
   510   000FAB                     RCSTA           equ	4011	;# 
   511   000FAB                     RCSTA1          equ	4011	;# 
   512   000FAC                     TXSTA           equ	4012	;# 
   513   000FAC                     TXSTA1          equ	4012	;# 
   514   000FAD                     TXREG           equ	4013	;# 
   515   000FAD                     TXREG1          equ	4013	;# 
   516   000FAE                     RCREG           equ	4014	;# 
   517   000FAE                     RCREG1          equ	4014	;# 
   518   000FAF                     SPBRG           equ	4015	;# 
   519   000FAF                     SPBRG1          equ	4015	;# 
   520   000FB0                     SPBRGH          equ	4016	;# 
   521   000FB1                     T3CON           equ	4017	;# 
   522   000FB2                     TMR3            equ	4018	;# 
   523   000FB2                     TMR3L           equ	4018	;# 
   524   000FB3                     TMR3H           equ	4019	;# 
   525   000FB4                     CMCON           equ	4020	;# 
   526   000FB5                     CVRCON          equ	4021	;# 
   527   000FB6                     ECCP1AS         equ	4022	;# 
   528   000FB6                     CCP1AS          equ	4022	;# 
   529   000FB7                     ECCP1DEL        equ	4023	;# 
   530   000FB7                     CCP1DEL         equ	4023	;# 
   531   000FB8                     BAUDCON         equ	4024	;# 
   532   000FB8                     BAUDCTL         equ	4024	;# 
   533   000FBA                     CCP2CON         equ	4026	;# 
   534   000FBB                     CCPR2           equ	4027	;# 
   535   000FBB                     CCPR2L          equ	4027	;# 
   536   000FBC                     CCPR2H          equ	4028	;# 
   537   000FBD                     CCP1CON         equ	4029	;# 
   538   000FBD                     ECCP1CON        equ	4029	;# 
   539   000FBE                     CCPR1           equ	4030	;# 
   540   000FBE                     CCPR1L          equ	4030	;# 
   541   000FBF                     CCPR1H          equ	4031	;# 
   542   000FC0                     ADCON2          equ	4032	;# 
   543   000FC1                     ADCON1          equ	4033	;# 
   544   000FC2                     ADCON0          equ	4034	;# 
   545   000FC3                     ADRES           equ	4035	;# 
   546   000FC3                     ADRESL          equ	4035	;# 
   547   000FC4                     ADRESH          equ	4036	;# 
   548   000FC5                     SSPCON2         equ	4037	;# 
   549   000FC6                     SSPCON1         equ	4038	;# 
   550   000FC7                     SSPSTAT         equ	4039	;# 
   551   000FC8                     SSPADD          equ	4040	;# 
   552   000FC9                     SSPBUF          equ	4041	;# 
   553   000FCA                     T2CON           equ	4042	;# 
   554   000FCB                     PR2             equ	4043	;# 
   555   000FCB                     MEMCON          equ	4043	;# 
   556   000FCC                     TMR2            equ	4044	;# 
   557   000FCD                     T1CON           equ	4045	;# 
   558   000FCE                     TMR1            equ	4046	;# 
   559   000FCE                     TMR1L           equ	4046	;# 
   560   000FCF                     TMR1H           equ	4047	;# 
   561   000FD0                     RCON            equ	4048	;# 
   562   000FD1                     WDTCON          equ	4049	;# 
   563   000FD2                     HLVDCON         equ	4050	;# 
   564   000FD2                     LVDCON          equ	4050	;# 
   565   000FD3                     OSCCON          equ	4051	;# 
   566   000FD5                     T0CON           equ	4053	;# 
   567   000FD6                     TMR0            equ	4054	;# 
   568   000FD6                     TMR0L           equ	4054	;# 
   569   000FD7                     TMR0H           equ	4055	;# 
   570   000FD8                     STATUS          equ	4056	;# 
   571   000FD9                     FSR2            equ	4057	;# 
   572   000FD9                     FSR2L           equ	4057	;# 
   573   000FDA                     FSR2H           equ	4058	;# 
   574   000FDB                     PLUSW2          equ	4059	;# 
   575   000FDC                     PREINC2         equ	4060	;# 
   576   000FDD                     POSTDEC2        equ	4061	;# 
   577   000FDE                     POSTINC2        equ	4062	;# 
   578   000FDF                     INDF2           equ	4063	;# 
   579   000FE0                     BSR             equ	4064	;# 
   580   000FE1                     FSR1            equ	4065	;# 
   581   000FE1                     FSR1L           equ	4065	;# 
   582   000FE2                     FSR1H           equ	4066	;# 
   583   000FE3                     PLUSW1          equ	4067	;# 
   584   000FE4                     PREINC1         equ	4068	;# 
   585   000FE5                     POSTDEC1        equ	4069	;# 
   586   000FE6                     POSTINC1        equ	4070	;# 
   587   000FE7                     INDF1           equ	4071	;# 
   588   000FE8                     WREG            equ	4072	;# 
   589   000FE9                     FSR0            equ	4073	;# 
   590   000FE9                     FSR0L           equ	4073	;# 
   591   000FEA                     FSR0H           equ	4074	;# 
   592   000FEB                     PLUSW0          equ	4075	;# 
   593   000FEC                     PREINC0         equ	4076	;# 
   594   000FED                     POSTDEC0        equ	4077	;# 
   595   000FEE                     POSTINC0        equ	4078	;# 
   596   000FEF                     INDF0           equ	4079	;# 
   597   000FF0                     INTCON3         equ	4080	;# 
   598   000FF1                     INTCON2         equ	4081	;# 
   599   000FF2                     INTCON          equ	4082	;# 
   600   000FF3                     PROD            equ	4083	;# 
   601   000FF3                     PRODL           equ	4083	;# 
   602   000FF4                     PRODH           equ	4084	;# 
   603   000FF5                     TABLAT          equ	4085	;# 
   604   000FF6                     TBLPTR          equ	4086	;# 
   605   000FF6                     TBLPTRL         equ	4086	;# 
   606   000FF7                     TBLPTRH         equ	4087	;# 
   607   000FF8                     TBLPTRU         equ	4088	;# 
   608   000FF9                     PCLAT           equ	4089	;# 
   609   000FF9                     PC              equ	4089	;# 
   610   000FF9                     PCL             equ	4089	;# 
   611   000FFA                     PCLATH          equ	4090	;# 
   612   000FFB                     PCLATU          equ	4091	;# 
   613   000FFC                     STKPTR          equ	4092	;# 
   614   000FFD                     TOS             equ	4093	;# 
   615   000FFD                     TOSL            equ	4093	;# 
   616   000FFE                     TOSH            equ	4094	;# 
   617   000FFF                     TOSU            equ	4095	;# 
   618   007C61                     _LATD1          set	31841
   619   007C60                     _LATD0          set	31840
   620   000F8C                     _LATD           set	3980
   621   000F95                     _TRISD          set	3989
   622   000FB4                     _CMCON          set	4020
   623   000FC1                     _ADCON1         set	4033
   624   000FD3                     _OSCCON         set	4051
   625   000F92                     _TRISAbits      set	3986
   626   000F80                     _PORTAbits      set	3968
   627                           
   628                           	psect	smallconst
   629   000800                     __psmallconst:
   630                           	callstack 0
   631   000800  00                 	db	0
   632   000801                     STR_1:
   633   000801  20                 	db	32
   634   000802  20                 	db	32
   635   000803  20                 	db	32
   636   000804  20                 	db	32
   637   000805  20                 	db	32
   638   000806  20                 	db	32
   639   000807  20                 	db	32
   640   000808  20                 	db	32
   641   000809  20                 	db	32
   642   00080A  20                 	db	32
   643   00080B  20                 	db	32
   644   00080C  20                 	db	32
   645   00080D  20                 	db	32
   646   00080E  20                 	db	32
   647   00080F  20                 	db	32
   648   000810  20                 	db	32
   649   000811  00                 	db	0
   650   000812                     STR_5:
   651   000812  52                 	db	82	;'R'
   652   000813  65                 	db	101	;'e'
   653   000814  69                 	db	105	;'i'
   654   000815  6E                 	db	110	;'n'
   655   000816  74                 	db	116	;'t'
   656   000817  65                 	db	101	;'e'
   657   000818  6E                 	db	110	;'n'
   658   000819  74                 	db	116	;'t'
   659   00081A  61                 	db	97	;'a'
   660   00081B  6E                 	db	110	;'n'
   661   00081C  64                 	db	100	;'d'
   662   00081D  6F                 	db	111	;'o'
   663   00081E  2E                 	db	46
   664   00081F  2E                 	db	46
   665   000820  2E                 	db	46
   666   000821  00                 	db	0
   667   000822                     STR_4:
   668   000822  45                 	db	69	;'E'
   669   000823  72                 	db	114	;'r'
   670   000824  72                 	db	114	;'r'
   671   000825  6F                 	db	111	;'o'
   672   000826  72                 	db	114	;'r'
   673   000827  20                 	db	32
   674   000828  64                 	db	100	;'d'
   675   000829  65                 	db	101	;'e'
   676   00082A  20                 	db	32
   677   00082B  73                 	db	115	;'s'
   678   00082C  65                 	db	101	;'e'
   679   00082D  6E                 	db	110	;'n'
   680   00082E  73                 	db	115	;'s'
   681   00082F  6F                 	db	111	;'o'
   682   000830  72                 	db	114	;'r'
   683   000831  00                 	db	0
   684   000832                     STR_2:
   685   000832  48                 	db	72	;'H'
   686   000833  75                 	db	117	;'u'
   687   000834  6D                 	db	109	;'m'
   688   000835  65                 	db	101	;'e'
   689   000836  64                 	db	100	;'d'
   690   000837  61                 	db	97	;'a'
   691   000838  64                 	db	100	;'d'
   692   000839  3A                 	db	58	;':'
   693   00083A  20                 	db	32
   694   00083B  25                 	db	37
   695   00083C  64                 	db	100	;'d'
   696   00083D  25                 	db	37
   697   00083E  25                 	db	37
   698   00083F  00                 	db	0
   699   000840                     STR_3:
   700   000840  54                 	db	84	;'T'
   701   000841  65                 	db	101	;'e'
   702   000842  6D                 	db	109	;'m'
   703   000843  70                 	db	112	;'p'
   704   000844  3A                 	db	58	;':'
   705   000845  20                 	db	32
   706   000846  25                 	db	37
   707   000847  64                 	db	100	;'d'
   708   000848  DF                 	db	-33
   709   000849  43                 	db	67	;'C'
   710   00084A  00                 	db	0
   711   00084B  00                 	db	0	; dummy byte at the end
   712   000800                     __smallconst    set	__psmallconst
   713   000800                     __mediumconst   set	__psmallconst
   714   000002                     __activetblptr  equ	2
   715                           
   716                           ; #config settings
   717                           
   718                           	psect	cinit
   719   001066                     __pcinit:
   720                           	callstack 0
   721   001066                     start_initialization:
   722                           	callstack 0
   723   001066                     __initialization:
   724                           	callstack 0
   725                           
   726                           ; Clear objects allocated to BANK0 (32 bytes)
   727   001066  EE00  F060         	lfsr	0,__pbssBANK0
   728   00106A  0E20               	movlw	32
   729   00106C                     clear_0:
   730   00106C  6AEE               	clrf	postinc0,c
   731   00106E  06E8               	decf	wreg,f,c
   732   001070  E1FD               	bnz	clear_0
   733                           
   734                           ; Clear objects allocated to COMRAM (5 bytes)
   735   001072  6A43               	clrf	(__pbssCOMRAM+4)& (0+255),c
   736   001074  6A42               	clrf	(__pbssCOMRAM+3)& (0+255),c
   737   001076  6A41               	clrf	(__pbssCOMRAM+2)& (0+255),c
   738   001078  6A40               	clrf	(__pbssCOMRAM+1)& (0+255),c
   739   00107A  6A3F               	clrf	__pbssCOMRAM& (0+255),c
   740   00107C                     end_of_initialization:
   741                           	callstack 0
   742   00107C                     __end_of__initialization:
   743                           	callstack 0
   744   00107C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   745   00107E  6EF8               	movwf	tblptru,c
   746   001080  0100               	movlb	0
   747   001082  EF21  F005         	goto	_main	;jump to C main() function
   748                           
   749                           	psect	bssCOMRAM
   750   00003F                     __pbssCOMRAM:
   751                           	callstack 0
   752   00003F                     _width:
   753                           	callstack 0
   754   00003F                     	ds	2
   755   000041                     _prec:
   756                           	callstack 0
   757   000041                     	ds	2
   758   000043                     _flags:
   759                           	callstack 0
   760   000043                     	ds	1
   761                           
   762                           	psect	bssBANK0
   763   000060                     __pbssBANK0:
   764                           	callstack 0
   765   000060                     _dbuf:
   766                           	callstack 0
   767   000060                     	ds	32
   768                           
   769                           	psect	cstackCOMRAM
   770   000001                     __pcstackCOMRAM:
   771                           	callstack 0
   772   000001                     ?___awdiv:
   773                           	callstack 0
   774   000001                     ?___awmod:
   775                           	callstack 0
   776   000001                     DHT11_ReadByte@data:
   777                           	callstack 0
   778   000001                     ___awdiv@dividend:
   779                           	callstack 0
   780   000001                     ___awmod@dividend:
   781                           	callstack 0
   782   000001                     fputc@c:
   783                           	callstack 0
   784   000001                     ??_LCD_Command:
   785   000001                     ??_LCD_Char:
   786                           
   787                           ; 1 bytes @ 0x0
   788   000001                     	ds	1
   789   000002                     DHT11_ReadByte@i:
   790                           	callstack 0
   791   000002                     LCD_Command@cmd:
   792                           	callstack 0
   793   000002                     LCD_Char@dat:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x1
   797   000002                     	ds	1
   798   000003                     DHT11_Read@humidity:
   799                           	callstack 0
   800   000003                     fputc@fp:
   801                           	callstack 0
   802   000003                     LCD_String@msg:
   803                           	callstack 0
   804   000003                     ___awdiv@divisor:
   805                           	callstack 0
   806   000003                     ___awmod@divisor:
   807                           	callstack 0
   808   000003                     ??_LCD_Init:
   809   000003                     ??_LCD_Clear:
   810                           
   811                           ; 1 bytes @ 0x2
   812   000003                     	ds	1
   813   000004                     DHT11_Read@temperature:
   814                           	callstack 0
   815   000004                     ??_fputc:
   816                           
   817                           ; 1 bytes @ 0x3
   818   000004                     	ds	1
   819   000005                     LCD_String_xy@pos:
   820                           	callstack 0
   821   000005                     ___awdiv@counter:
   822                           	callstack 0
   823   000005                     ___awmod@counter:
   824                           	callstack 0
   825   000005                     ??_DHT11_Read:
   826   000005                     
   827                           ; 1 bytes @ 0x4
   828   000005                     	ds	1
   829   000006                     ___awdiv@sign:
   830                           	callstack 0
   831   000006                     ___awmod@sign:
   832                           	callstack 0
   833   000006                     LCD_String_xy@msg:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x5
   837   000006                     	ds	1
   838   000007                     ?_abs:
   839                           	callstack 0
   840   000007                     ___awdiv@quotient:
   841                           	callstack 0
   842   000007                     abs@a:
   843                           	callstack 0
   844                           
   845                           ; 2 bytes @ 0x6
   846   000007                     	ds	1
   847   000008                     LCD_String_xy@row:
   848                           	callstack 0
   849   000008                     
   850                           ; 1 bytes @ 0x7
   851   000008                     	ds	1
   852   000009                     LCD_String_xy@location:
   853                           	callstack 0
   854   000009                     DHT11_Read@data:
   855                           	callstack 0
   856   000009                     ??_abs:
   857                           
   858                           ; 1 bytes @ 0x8
   859   000009                     	ds	1
   860   00000A                     ClearLine@line:
   861                           	callstack 0
   862   00000A                     
   863                           ; 1 bytes @ 0x9
   864   00000A                     	ds	1
   865   00000B                     vfpfcnvrt@fp:
   866                           	callstack 0
   867                           
   868                           ; 1 bytes @ 0xA
   869   00000B                     	ds	1
   870   00000C                     vfpfcnvrt@fmt:
   871                           	callstack 0
   872                           
   873                           ; 1 bytes @ 0xB
   874   00000C                     	ds	1
   875   00000D                     vfpfcnvrt@ap:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0xC
   879   00000D                     	ds	1
   880   00000E                     DHT11_Read@i:
   881                           	callstack 0
   882   00000E                     ??_vfpfcnvrt:
   883                           
   884                           ; 1 bytes @ 0xD
   885   00000E                     	ds	1
   886   00000F                     vfpfcnvrt@done:
   887                           	callstack 0
   888                           
   889                           ; 1 bytes @ 0xE
   890   00000F                     	ds	1
   891   000010                     vfpfcnvrt@cp:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0xF
   895   000010                     	ds	1
   896   000011                     vfpfcnvrt@convarg:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x10
   900   000011                     	ds	4
   901   000015                     vfpfcnvrt@c:
   902                           	callstack 0
   903                           
   904                           ; 1 bytes @ 0x14
   905   000015                     	ds	1
   906   000016                     ?_vfprintf:
   907                           	callstack 0
   908   000016                     vfprintf@fp:
   909                           	callstack 0
   910                           
   911                           ; 1 bytes @ 0x15
   912   000016                     	ds	1
   913   000017                     vfprintf@fmt:
   914                           	callstack 0
   915                           
   916                           ; 1 bytes @ 0x16
   917   000017                     	ds	1
   918   000018                     vfprintf@ap:
   919                           	callstack 0
   920                           
   921                           ; 1 bytes @ 0x17
   922   000018                     	ds	1
   923   000019                     vfprintf@cfmt:
   924                           	callstack 0
   925   000019                     
   926                           ; 1 bytes @ 0x18
   927   000019                     	ds	1
   928   00001A                     ?_sprintf:
   929                           	callstack 0
   930   00001A                     sprintf@s:
   931                           	callstack 0
   932                           
   933                           ; 1 bytes @ 0x19
   934   00001A                     	ds	1
   935   00001B                     sprintf@fmt:
   936                           	callstack 0
   937                           
   938                           ; 1 bytes @ 0x1A
   939   00001B                     	ds	3
   940   00001E                     sprintf@ap:
   941                           	callstack 0
   942   00001E                     
   943                           ; 1 bytes @ 0x1D
   944   00001E                     	ds	1
   945   00001F                     sprintf@f:
   946                           	callstack 0
   947                           
   948                           ; 11 bytes @ 0x1E
   949   00001F                     	ds	11
   950   00002A                     ??_main:
   951                           
   952                           ; 1 bytes @ 0x29
   953   00002A                     	ds	2
   954   00002C                     main@buffer:
   955                           	callstack 0
   956                           
   957                           ; 17 bytes @ 0x2B
   958   00002C                     	ds	17
   959   00003D                     main@hum_int:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x3C
   963   00003D                     	ds	1
   964   00003E                     main@temp_int:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x3D
   968   00003E                     	ds	1
   969                           
   970 ;;
   971 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   972 ;;
   973 ;; *************** function _main *****************
   974 ;; Defined at:
   975 ;;		line 20 in file "main.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  buffer         17   43[COMRAM] unsigned char [17]
   980 ;;  temp_int        1   61[COMRAM] unsigned char 
   981 ;;  hum_int         1   60[COMRAM] unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   991 ;;      Params:         0       0       0       0       0       0       0       0       0
   992 ;;      Locals:        19       0       0       0       0       0       0       0       0
   993 ;;      Temps:          2       0       0       0       0       0       0       0       0
   994 ;;      Totals:        21       0       0       0       0       0       0       0       0
   995 ;;Total ram usage:       21 bytes
   996 ;; Hardware stack levels required when called: 5
   997 ;; This function calls:
   998 ;;		_ClearLine
   999 ;;		_DHT11_Read
  1000 ;;		_LCD_Clear
  1001 ;;		_LCD_Init
  1002 ;;		_LCD_String_xy
  1003 ;;		_sprintf
  1004 ;; This function is called by:
  1005 ;;		Startup code after reset
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text0
  1010   000A42                     __ptext0:
  1011                           	callstack 0
  1012   000A42                     _main:
  1013                           	callstack 26
  1014   000A42                     
  1015                           ;main.c: 22:     OSCCON = 0x72;
  1016   000A42  0E72               	movlw	114
  1017   000A44  6ED3               	movwf	211,c	;volatile
  1018   000A46                     
  1019                           ;main.c: 23:     TRISAbits.TRISA0 = 1;
  1020   000A46  8092               	bsf	146,0,c	;volatile
  1021                           
  1022                           ;main.c: 24:     ADCON1 = 0x0F;
  1023   000A48  0E0F               	movlw	15
  1024   000A4A  6EC1               	movwf	193,c	;volatile
  1025                           
  1026                           ;main.c: 25:     CMCON = 0x07;
  1027   000A4C  0E07               	movlw	7
  1028   000A4E  6EB4               	movwf	180,c	;volatile
  1029   000A50                     
  1030                           ;main.c: 27:     LCD_Init();
  1031   000A50  EC1A  F008         	call	_LCD_Init	;wreg free
  1032   000A54                     
  1033                           ;main.c: 28:     LCD_Clear();
  1034   000A54  EC50  F008         	call	_LCD_Clear	;wreg free
  1035   000A58                     l1437:
  1036                           
  1037                           ;main.c: 31:         uint8_t hum_int, temp_int;;main.c: 33:         if (DHT11_Read(&hum_
      +                          int, &temp_int)) {
  1038   000A58  0E3D               	movlw	low main@hum_int
  1039   000A5A  6E03               	movwf	DHT11_Read@humidity^0,c
  1040   000A5C  0E3E               	movlw	low main@temp_int
  1041   000A5E  6E04               	movwf	DHT11_Read@temperature^0,c
  1042   000A60  ECF1  F005         	call	_DHT11_Read	;wreg free
  1043   000A64  0900               	iorlw	0
  1044   000A66  B4D8               	btfsc	status,2,c
  1045   000A68  EF38  F005         	goto	u821
  1046   000A6C  EF3A  F005         	goto	u820
  1047   000A70                     u821:
  1048   000A70  EF64  F005         	goto	l1447
  1049   000A74                     u820:
  1050   000A74                     
  1051                           ;main.c: 34:             char buffer[17];;main.c: 37:             ClearLine(0);
  1052   000A74  0E00               	movlw	0
  1053   000A76  EC43  F008         	call	_ClearLine
  1054                           
  1055                           ;main.c: 38:             ClearLine(1);
  1056   000A7A  0E01               	movlw	1
  1057   000A7C  EC43  F008         	call	_ClearLine
  1058   000A80                     
  1059                           ;main.c: 41:             sprintf(buffer, "Humedad: %d%%", hum_int);
  1060   000A80  0E2C               	movlw	low main@buffer
  1061   000A82  6E1A               	movwf	sprintf@s^0,c
  1062   000A84  0E32               	movlw	low STR_2
  1063   000A86  6E1B               	movwf	sprintf@fmt^0,c
  1064   000A88  C03D  F01C         	movff	main@hum_int,?_sprintf+2
  1065   000A8C  6A1D               	clrf	(?_sprintf+3)^0,c
  1066   000A8E  ECE6  F007         	call	_sprintf	;wreg free
  1067   000A92                     
  1068                           ;main.c: 42:             LCD_String_xy(0, 0, buffer);
  1069   000A92  0E00               	movlw	0
  1070   000A94  6E05               	movwf	LCD_String_xy@pos^0,c
  1071   000A96  0E2C               	movlw	low main@buffer
  1072   000A98  6E06               	movwf	LCD_String_xy@msg^0,c
  1073   000A9A  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
  1074   000A9C  0E00               	movlw	0
  1075   000A9E  ECC9  F007         	call	_LCD_String_xy
  1076                           
  1077                           ;main.c: 45:             sprintf(buffer, "Temp: %d\xDF""C", temp_int);
  1078   000AA2  0E2C               	movlw	low main@buffer
  1079   000AA4  6E1A               	movwf	sprintf@s^0,c
  1080   000AA6  0E40               	movlw	low STR_3
  1081   000AA8  6E1B               	movwf	sprintf@fmt^0,c
  1082   000AAA  C03E  F01C         	movff	main@temp_int,?_sprintf+2
  1083   000AAE  6A1D               	clrf	(?_sprintf+3)^0,c
  1084   000AB0  ECE6  F007         	call	_sprintf	;wreg free
  1085   000AB4                     
  1086                           ;main.c: 46:             LCD_String_xy(1, 0, buffer);
  1087   000AB4  0E00               	movlw	0
  1088   000AB6  6E05               	movwf	LCD_String_xy@pos^0,c
  1089   000AB8  0E2C               	movlw	low main@buffer
  1090   000ABA  6E06               	movwf	LCD_String_xy@msg^0,c
  1091   000ABC  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
  1092   000ABE  0E01               	movlw	1
  1093   000AC0  ECC9  F007         	call	_LCD_String_xy
  1094                           
  1095                           ;main.c: 47:         } else {
  1096   000AC4  EF80  F005         	goto	l1449
  1097   000AC8                     l1447:
  1098                           
  1099                           ;main.c: 49:             ClearLine(0);
  1100   000AC8  0E00               	movlw	0
  1101   000ACA  EC43  F008         	call	_ClearLine
  1102                           
  1103                           ;main.c: 50:             ClearLine(1);
  1104   000ACE  0E01               	movlw	1
  1105   000AD0  EC43  F008         	call	_ClearLine
  1106                           
  1107                           ;main.c: 52:             LCD_String_xy(0, 0, "Error de sensor");
  1108   000AD4  0E00               	movlw	0
  1109   000AD6  6E05               	movwf	LCD_String_xy@pos^0,c
  1110   000AD8  0E22               	movlw	low STR_4
  1111   000ADA  6E06               	movwf	LCD_String_xy@msg^0,c
  1112   000ADC  5006               	movf	LCD_String_xy@msg^0,w,c
  1113   000ADE  A4D8               	btfss	status,2,c
  1114   000AE0  0E08               	movlw	high __smallconst
  1115   000AE2  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1116   000AE4  0E00               	movlw	0
  1117   000AE6  ECC9  F007         	call	_LCD_String_xy
  1118                           
  1119                           ;main.c: 53:             LCD_String_xy(1, 0, "Reintentando...");
  1120   000AEA  0E00               	movlw	0
  1121   000AEC  6E05               	movwf	LCD_String_xy@pos^0,c
  1122   000AEE  0E12               	movlw	low STR_5
  1123   000AF0  6E06               	movwf	LCD_String_xy@msg^0,c
  1124   000AF2  5006               	movf	LCD_String_xy@msg^0,w,c
  1125   000AF4  A4D8               	btfss	status,2,c
  1126   000AF6  0E08               	movlw	high __smallconst
  1127   000AF8  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1128   000AFA  0E01               	movlw	1
  1129   000AFC  ECC9  F007         	call	_LCD_String_xy
  1130   000B00                     l1449:
  1131                           
  1132                           ;main.c: 55:         _delay((unsigned long)((2000)*(8000000/4000.0)));
  1133   000B00  0E15               	movlw	21
  1134   000B02  6E2B               	movwf	(??_main+1)^0,c
  1135   000B04  0E4B               	movlw	75
  1136   000B06  6E2A               	movwf	??_main^0,c
  1137   000B08  0EBE               	movlw	190
  1138   000B0A                     u837:
  1139   000B0A  2EE8               	decfsz	wreg,f,c
  1140   000B0C  D7FE               	bra	u837
  1141   000B0E  2E2A               	decfsz	??_main^0,f,c
  1142   000B10  D7FC               	bra	u837
  1143   000B12  2E2B               	decfsz	(??_main+1)^0,f,c
  1144   000B14  D7FA               	bra	u837
  1145   000B16  D000               	nop2	
  1146   000B18  EF2C  F005         	goto	l1437
  1147   000B1C  EFFE  F03F         	goto	start
  1148   000B20                     __end_of_main:
  1149                           	callstack 0
  1150                           
  1151 ;; *************** function _sprintf *****************
  1152 ;; Defined at:
  1153 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1154 ;; Parameters:    Size  Location     Type
  1155 ;;  s               1   25[COMRAM] PTR unsigned char 
  1156 ;;		 -> main@buffer(17), 
  1157 ;;  fmt             1   26[COMRAM] PTR const unsigned char 
  1158 ;;		 -> STR_3(11), STR_2(14), 
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;  f              11   30[COMRAM] struct _IO_FILE
  1161 ;;  ret             2    0        int 
  1162 ;;  ap              1   29[COMRAM] PTR void [1]
  1163 ;;		 -> ?_sprintf(2), 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  2   25[COMRAM] int 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1173 ;;      Params:         4       0       0       0       0       0       0       0       0
  1174 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1176 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1177 ;;Total ram usage:       16 bytes
  1178 ;; Hardware stack levels used: 1
  1179 ;; Hardware stack levels required when called: 4
  1180 ;; This function calls:
  1181 ;;		_vfprintf
  1182 ;; This function is called by:
  1183 ;;		_main
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text1
  1188   000FCC                     __ptext1:
  1189                           	callstack 0
  1190   000FCC                     _sprintf:
  1191                           	callstack 26
  1192   000FCC  0E1C               	movlw	low (?_sprintf+2)
  1193   000FCE  6E1E               	movwf	sprintf@ap^0,c
  1194   000FD0  C01A  F01F         	movff	sprintf@s,sprintf@f
  1195   000FD4  0E00               	movlw	0
  1196   000FD6  6E22               	movwf	(sprintf@f+3)^0,c
  1197   000FD8  0E00               	movlw	0
  1198   000FDA  6E21               	movwf	(sprintf@f+2)^0,c
  1199   000FDC  0E00               	movlw	0
  1200   000FDE  6E29               	movwf	(sprintf@f+10)^0,c
  1201   000FE0  0E00               	movlw	0
  1202   000FE2  6E28               	movwf	(sprintf@f+9)^0,c
  1203   000FE4  0E1F               	movlw	low sprintf@f
  1204   000FE6  6E16               	movwf	vfprintf@fp^0,c
  1205   000FE8  C01B  F017         	movff	sprintf@fmt,vfprintf@fmt
  1206   000FEC  0E1E               	movlw	low sprintf@ap
  1207   000FEE  6E18               	movwf	vfprintf@ap^0,c
  1208   000FF0  ECAA  F007         	call	_vfprintf	;wreg free
  1209   000FF4  501A               	movf	sprintf@s^0,w,c
  1210   000FF6  2421               	addwf	(sprintf@f+2)^0,w,c
  1211   000FF8  6ED9               	movwf	fsr2l,c
  1212   000FFA  6ADA               	clrf	fsr2h,c
  1213   000FFC  6ADF               	clrf	indf2,c
  1214   000FFE  0012               	return		;funcret
  1215   001000                     __end_of_sprintf:
  1216                           	callstack 0
  1217                           
  1218 ;; *************** function _vfprintf *****************
  1219 ;; Defined at:
  1220 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;  fp              1   21[COMRAM] PTR struct _IO_FILE
  1223 ;;		 -> sprintf@f(11), 
  1224 ;;  fmt             1   22[COMRAM] PTR const unsigned char 
  1225 ;;		 -> STR_3(11), STR_2(14), 
  1226 ;;  ap              1   23[COMRAM] PTR PTR void 
  1227 ;;		 -> sprintf@ap(1), 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  cfmt            1   24[COMRAM] PTR unsigned char 
  1230 ;;		 -> STR_3(11), STR_2(14), 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  2   21[COMRAM] int 
  1233 ;; Registers used:
  1234 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1240 ;;      Params:         3       0       0       0       0       0       0       0       0
  1241 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1243 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1244 ;;Total ram usage:        4 bytes
  1245 ;; Hardware stack levels used: 1
  1246 ;; Hardware stack levels required when called: 3
  1247 ;; This function calls:
  1248 ;;		_vfpfcnvrt
  1249 ;; This function is called by:
  1250 ;;		_sprintf
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text2
  1255   000F54                     __ptext2:
  1256                           	callstack 0
  1257   000F54                     _vfprintf:
  1258                           	callstack 26
  1259   000F54                     
  1260                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1261   000F54  C017  F019         	movff	vfprintf@fmt,vfprintf@cfmt
  1262                           
  1263                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1264   000F58  EFB6  F007         	goto	l1375
  1265   000F5C                     l1373:
  1266                           
  1267                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1268   000F5C  C016  F00B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1269   000F60  0E19               	movlw	low vfprintf@cfmt
  1270   000F62  6E0C               	movwf	vfpfcnvrt@fmt^0,c
  1271   000F64  C018  F00D         	movff	vfprintf@ap,vfpfcnvrt@ap
  1272   000F68  EC26  F004         	call	_vfpfcnvrt	;wreg free
  1273   000F6C                     l1375:
  1274                           
  1275                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1276   000F6C  C019  FFF6         	movff	vfprintf@cfmt,tblptrl
  1277   000F70                     	if	1	;There is more than 1 active tblptr byte
  1278   000F70  0E08               	movlw	high __smallconst
  1279   000F72  6EF7               	movwf	tblptrh,c
  1280   000F74                     	endif
  1281   000F74                     	if	0	;tblptru may be non-zero
  1282   000F74                     	endif
  1283   000F74                     	if	0	;tblptru may be non-zero
  1284   000F74                     	endif
  1285   000F74  0008               	tblrd		*
  1286   000F76  50F5               	movf	tablat,w,c
  1287   000F78  0900               	iorlw	0
  1288   000F7A  A4D8               	btfss	status,2,c
  1289   000F7C  EFC2  F007         	goto	u761
  1290   000F80  EFC4  F007         	goto	u760
  1291   000F84                     u761:
  1292   000F84  EFAE  F007         	goto	l1373
  1293   000F88                     u760:
  1294   000F88                     
  1295                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1296   000F88  0E00               	movlw	0
  1297   000F8A  6E17               	movwf	(?_vfprintf+1)^0,c
  1298   000F8C  0E00               	movlw	0
  1299   000F8E  6E16               	movwf	?_vfprintf^0,c
  1300   000F90  0012               	return		;funcret
  1301   000F92                     __end_of_vfprintf:
  1302                           	callstack 0
  1303                           
  1304 ;; *************** function _vfpfcnvrt *****************
  1305 ;; Defined at:
  1306 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1307 ;; Parameters:    Size  Location     Type
  1308 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  1309 ;;		 -> sprintf@f(11), 
  1310 ;;  fmt             1   11[COMRAM] PTR PTR unsigned char 
  1311 ;;		 -> vfprintf@cfmt(1), 
  1312 ;;  ap              1   12[COMRAM] PTR PTR void 
  1313 ;;		 -> sprintf@ap(1), 
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;  convarg         4   16[COMRAM] struct .
  1316 ;;  c               1   20[COMRAM] unsigned char 
  1317 ;;  cp              1   15[COMRAM] PTR unsigned char 
  1318 ;;		 -> STR_3(11), STR_2(14), 
  1319 ;;  done            1   14[COMRAM] _Bool 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1329 ;;      Params:         3       0       0       0       0       0       0       0       0
  1330 ;;      Locals:         7       0       0       0       0       0       0       0       0
  1331 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1332 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1333 ;;Total ram usage:       11 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; Hardware stack levels required when called: 2
  1336 ;; This function calls:
  1337 ;;		___awdiv
  1338 ;;		___awmod
  1339 ;;		_abs
  1340 ;;		_fputc
  1341 ;; This function is called by:
  1342 ;;		_vfprintf
  1343 ;; This function uses a non-reentrant model
  1344 ;;
  1345                           
  1346                           	psect	text3
  1347   00084C                     __ptext3:
  1348                           	callstack 0
  1349   00084C                     _vfpfcnvrt:
  1350                           	callstack 26
  1351   00084C                     
  1352                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1353   00084C  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1354   00084E  6ED9               	movwf	fsr2l,c
  1355   000850  6ADA               	clrf	fsr2h,c
  1356   000852  CFDF FFF6          	movff	indf2,tblptrl
  1357   000856                     	if	1	;There is more than 1 active tblptr byte
  1358   000856  0E08               	movlw	high __smallconst
  1359   000858  6EF7               	movwf	tblptrh,c
  1360   00085A                     	endif
  1361   00085A                     	if	0	;tblptru may be non-zero
  1362   00085A                     	endif
  1363   00085A                     	if	0	;tblptru may be non-zero
  1364   00085A                     	endif
  1365   00085A  0008               	tblrd		*
  1366   00085C  50F5               	movf	tablat,w,c
  1367   00085E  0A25               	xorlw	37
  1368   000860  A4D8               	btfss	status,2,c
  1369   000862  EF35  F004         	goto	u641
  1370   000866  EF37  F004         	goto	u640
  1371   00086A                     u641:
  1372   00086A  EF0F  F005         	goto	l1353
  1373   00086E                     u640:
  1374   00086E                     
  1375                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1376   00086E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1377   000870  6ED9               	movwf	fsr2l,c
  1378   000872  6ADA               	clrf	fsr2h,c
  1379   000874  2ADF               	incf	indf2,f,c
  1380   000876                     
  1381                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1382   000876  0E00               	movlw	0
  1383   000878  6E40               	movwf	(_width+1)^0,c
  1384   00087A  0E00               	movlw	0
  1385   00087C  6E3F               	movwf	_width^0,c
  1386   00087E  C03F  F043         	movff	_width,_flags
  1387   000882                     
  1388                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1389   000882  6841               	setf	_prec^0,c
  1390   000884  6842               	setf	(_prec+1)^0,c
  1391   000886                     
  1392                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1393   000886  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1394   000888  6ED9               	movwf	fsr2l,c
  1395   00088A  6ADA               	clrf	fsr2h,c
  1396   00088C  50DF               	movf	indf2,w,c
  1397   00088E  6E10               	movwf	vfpfcnvrt@cp^0,c
  1398   000890                     
  1399                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1400   000890  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1401   000894                     	if	1	;There is more than 1 active tblptr byte
  1402   000894  0E08               	movlw	high __smallconst
  1403   000896  6EF7               	movwf	tblptrh,c
  1404   000898                     	endif
  1405   000898                     	if	0	;tblptru may be non-zero
  1406   000898                     	endif
  1407   000898                     	if	0	;tblptru may be non-zero
  1408   000898                     	endif
  1409   000898  0008               	tblrd		*
  1410   00089A  50F5               	movf	tablat,w,c
  1411   00089C  0A64               	xorlw	100
  1412   00089E  B4D8               	btfsc	status,2,c
  1413   0008A0  EF54  F004         	goto	u651
  1414   0008A4  EF56  F004         	goto	u650
  1415   0008A8                     u651:
  1416   0008A8  EF64  F004         	goto	l1315
  1417   0008AC                     u650:
  1418   0008AC  C010  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1419   0008B0                     	if	1	;There is more than 1 active tblptr byte
  1420   0008B0  0E08               	movlw	high __smallconst
  1421   0008B2  6EF7               	movwf	tblptrh,c
  1422   0008B4                     	endif
  1423   0008B4                     	if	0	;tblptru may be non-zero
  1424   0008B4                     	endif
  1425   0008B4                     	if	0	;tblptru may be non-zero
  1426   0008B4                     	endif
  1427   0008B4  0008               	tblrd		*
  1428   0008B6  50F5               	movf	tablat,w,c
  1429   0008B8  0A69               	xorlw	105
  1430   0008BA  A4D8               	btfss	status,2,c
  1431   0008BC  EF62  F004         	goto	u661
  1432   0008C0  EF64  F004         	goto	u660
  1433   0008C4                     u661:
  1434   0008C4  EFEA  F004         	goto	l1341
  1435   0008C8                     u660:
  1436   0008C8                     l1315:
  1437                           
  1438                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1439   0008C8  500D               	movf	vfpfcnvrt@ap^0,w,c
  1440   0008CA  6ED9               	movwf	fsr2l,c
  1441   0008CC  6ADA               	clrf	fsr2h,c
  1442   0008CE  0E02               	movlw	2
  1443   0008D0  26DF               	addwf	indf2,f,c
  1444   0008D2  5CDF               	subwf	indf2,w,c
  1445   0008D4  6ED9               	movwf	fsr2l,c
  1446   0008D6  6ADA               	clrf	fsr2h,c
  1447   0008D8  CFDE F011          	movff	postinc2,vfpfcnvrt@convarg
  1448   0008DC  CFDE F012          	movff	postinc2,vfpfcnvrt@convarg+1
  1449   0008E0                     
  1450                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1451   0008E0  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1452   0008E2  6ED9               	movwf	fsr2l,c
  1453   0008E4  6ADA               	clrf	fsr2h,c
  1454   0008E6  2810               	incf	vfpfcnvrt@cp^0,w,c
  1455   0008E8  6EDF               	movwf	indf2,c
  1456   0008EA                     
  1457                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  1458   0008EA  0E20               	movlw	32
  1459   0008EC  6E15               	movwf	vfpfcnvrt@c^0,c
  1460                           
  1461                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  1462   0008EE  BE12               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  1463   0008F0  EF7C  F004         	goto	u671
  1464   0008F4  EF7F  F004         	goto	u670
  1465   0008F8                     u671:
  1466   0008F8  0E01               	movlw	1
  1467   0008FA  EF80  F004         	goto	u680
  1468   0008FE                     u670:
  1469   0008FE  0E00               	movlw	0
  1470   000900                     u680:
  1471   000900  6E0F               	movwf	vfpfcnvrt@done^0,c
  1472   000902                     l1321:
  1473                           
  1474                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  1475   000902  0615               	decf	vfpfcnvrt@c^0,f,c
  1476   000904  5015               	movf	vfpfcnvrt@c^0,w,c
  1477   000906  0F60               	addlw	low _dbuf
  1478   000908  6ED9               	movwf	fsr2l,c
  1479   00090A  6ADA               	clrf	fsr2h,c
  1480   00090C  C011  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  1481   000910  C012  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  1482   000914  0E00               	movlw	0
  1483   000916  6E04               	movwf	(___awmod@divisor+1)^0,c
  1484   000918  0E0A               	movlw	10
  1485   00091A  6E03               	movwf	___awmod@divisor^0,c
  1486   00091C  EC52  F006         	call	___awmod	;wreg free
  1487   000920  C001  F007         	movff	?___awmod,abs@a
  1488   000924  C002  F008         	movff	?___awmod+1,abs@a+1
  1489   000928  EC00  F008         	call	_abs	;wreg free
  1490   00092C  5007               	movf	?_abs^0,w,c
  1491   00092E  0F30               	addlw	48
  1492   000930  6EDF               	movwf	indf2,c
  1493   000932                     
  1494                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  1495   000932  C011  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  1496   000936  C012  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  1497   00093A  0E00               	movlw	0
  1498   00093C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1499   00093E  0E0A               	movlw	10
  1500   000940  6E03               	movwf	___awdiv@divisor^0,c
  1501   000942  EC90  F005         	call	___awdiv	;wreg free
  1502   000946  C001  F011         	movff	?___awdiv,vfpfcnvrt@convarg
  1503   00094A  C002  F012         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  1504   00094E                     
  1505                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  1506   00094E  5011               	movf	vfpfcnvrt@convarg^0,w,c
  1507   000950  1012               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  1508   000952  B4D8               	btfsc	status,2,c
  1509   000954  EFAE  F004         	goto	u691
  1510   000958  EFB0  F004         	goto	u690
  1511   00095C                     u691:
  1512   00095C  EFB8  F004         	goto	l1329
  1513   000960                     u690:
  1514   000960  5015               	movf	vfpfcnvrt@c^0,w,c
  1515   000962  A4D8               	btfss	status,2,c
  1516   000964  EFB6  F004         	goto	u701
  1517   000968  EFB8  F004         	goto	u700
  1518   00096C                     u701:
  1519   00096C  EF81  F004         	goto	l1321
  1520   000970                     u700:
  1521   000970                     l1329:
  1522                           
  1523                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  1524   000970  5015               	movf	vfpfcnvrt@c^0,w,c
  1525   000972  B4D8               	btfsc	status,2,c
  1526   000974  EFBE  F004         	goto	u711
  1527   000978  EFC0  F004         	goto	u710
  1528   00097C                     u711:
  1529   00097C  EFDF  F004         	goto	l1339
  1530   000980                     u710:
  1531   000980  500F               	movf	vfpfcnvrt@done^0,w,c
  1532   000982  B4D8               	btfsc	status,2,c
  1533   000984  EFC6  F004         	goto	u721
  1534   000988  EFC8  F004         	goto	u720
  1535   00098C                     u721:
  1536   00098C  EFDF  F004         	goto	l1339
  1537   000990                     u720:
  1538   000990                     
  1539                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  1540   000990  0615               	decf	vfpfcnvrt@c^0,f,c
  1541   000992  5015               	movf	vfpfcnvrt@c^0,w,c
  1542   000994  0F60               	addlw	low _dbuf
  1543   000996  6ED9               	movwf	fsr2l,c
  1544   000998  6ADA               	clrf	fsr2h,c
  1545   00099A  0E2D               	movlw	45
  1546   00099C  6EDF               	movwf	indf2,c
  1547   00099E  EFDF  F004         	goto	l1339
  1548   0009A2                     l1335:
  1549                           
  1550                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  1551   0009A2  5015               	movf	vfpfcnvrt@c^0,w,c
  1552   0009A4  0F60               	addlw	low _dbuf
  1553   0009A6  6ED9               	movwf	fsr2l,c
  1554   0009A8  6ADA               	clrf	fsr2h,c
  1555   0009AA  50DF               	movf	indf2,w,c
  1556   0009AC  6E0E               	movwf	??_vfpfcnvrt^0,c
  1557   0009AE  500E               	movf	??_vfpfcnvrt^0,w,c
  1558   0009B0  6E01               	movwf	fputc@c^0,c
  1559   0009B2  6A02               	clrf	(fputc@c+1)^0,c
  1560   0009B4  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1561   0009B8  ECA9  F006         	call	_fputc	;wreg free
  1562   0009BC  2A15               	incf	vfpfcnvrt@c^0,f,c
  1563   0009BE                     l1339:
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  1566   0009BE  0E20               	movlw	32
  1567   0009C0  1815               	xorwf	vfpfcnvrt@c^0,w,c
  1568   0009C2  A4D8               	btfss	status,2,c
  1569   0009C4  EFE6  F004         	goto	u731
  1570   0009C8  EFE8  F004         	goto	u730
  1571   0009CC                     u731:
  1572   0009CC  EFD1  F004         	goto	l1335
  1573   0009D0                     u730:
  1574   0009D0  EF20  F005         	goto	l820
  1575   0009D4                     l1341:
  1576                           
  1577                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  1578   0009D4  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1579   0009D6  6ED9               	movwf	fsr2l,c
  1580   0009D8  6ADA               	clrf	fsr2h,c
  1581   0009DA  CFDF FFF6          	movff	indf2,tblptrl
  1582   0009DE                     	if	1	;There is more than 1 active tblptr byte
  1583   0009DE  0E08               	movlw	high __smallconst
  1584   0009E0  6EF7               	movwf	tblptrh,c
  1585   0009E2                     	endif
  1586   0009E2                     	if	0	;tblptru may be non-zero
  1587   0009E2                     	endif
  1588   0009E2                     	if	0	;tblptru may be non-zero
  1589   0009E2                     	endif
  1590   0009E2  0008               	tblrd		*
  1591   0009E4  50F5               	movf	tablat,w,c
  1592   0009E6  0A25               	xorlw	37
  1593   0009E8  A4D8               	btfss	status,2,c
  1594   0009EA  EFF9  F004         	goto	u741
  1595   0009EE  EFFB  F004         	goto	u740
  1596   0009F2                     u741:
  1597   0009F2  EF09  F005         	goto	l1349
  1598   0009F6                     u740:
  1599   0009F6                     
  1600                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  1601   0009F6  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1602   0009F8  6ED9               	movwf	fsr2l,c
  1603   0009FA  6ADA               	clrf	fsr2h,c
  1604   0009FC  2ADF               	incf	indf2,f,c
  1605   0009FE                     
  1606                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  1607   0009FE  0E00               	movlw	0
  1608   000A00  6E02               	movwf	(fputc@c+1)^0,c
  1609   000A02  0E25               	movlw	37
  1610   000A04  6E01               	movwf	fputc@c^0,c
  1611   000A06  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1612   000A0A  ECA9  F006         	call	_fputc	;wreg free
  1613   000A0E  EF20  F005         	goto	l820
  1614   000A12                     l1349:
  1615                           
  1616                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1617   000A12  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1618   000A14  6ED9               	movwf	fsr2l,c
  1619   000A16  6ADA               	clrf	fsr2h,c
  1620   000A18  2ADF               	incf	indf2,f,c
  1621   000A1A  EF20  F005         	goto	l820
  1622   000A1E                     l1353:
  1623                           
  1624                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1625   000A1E  500C               	movf	vfpfcnvrt@fmt^0,w,c
  1626   000A20  6ED9               	movwf	fsr2l,c
  1627   000A22  6ADA               	clrf	fsr2h,c
  1628   000A24  CFDF FFF6          	movff	indf2,tblptrl
  1629   000A28                     	if	1	;There is more than 1 active tblptr byte
  1630   000A28  0E08               	movlw	high __smallconst
  1631   000A2A  6EF7               	movwf	tblptrh,c
  1632   000A2C                     	endif
  1633   000A2C                     	if	0	;tblptru may be non-zero
  1634   000A2C                     	endif
  1635   000A2C                     	if	0	;tblptru may be non-zero
  1636   000A2C                     	endif
  1637   000A2C  0008               	tblrd		*
  1638   000A2E  50F5               	movf	tablat,w,c
  1639   000A30  6E01               	movwf	fputc@c^0,c
  1640   000A32  6A02               	clrf	(fputc@c+1)^0,c
  1641   000A34  C00B  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1642   000A38  ECA9  F006         	call	_fputc	;wreg free
  1643   000A3C  EF09  F005         	goto	l1349
  1644   000A40                     l820:
  1645   000A40  0012               	return		;funcret
  1646   000A42                     __end_of_vfpfcnvrt:
  1647                           	callstack 0
  1648                           
  1649 ;; *************** function _fputc *****************
  1650 ;; Defined at:
  1651 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  c               2    0[COMRAM] int 
  1654 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  1655 ;;		 -> sprintf@f(11), 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  2    0[COMRAM] int 
  1660 ;; Registers used:
  1661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1667 ;;      Params:         3       0       0       0       0       0       0       0       0
  1668 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1669 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1670 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1671 ;;Total ram usage:        8 bytes
  1672 ;; Hardware stack levels used: 1
  1673 ;; Hardware stack levels required when called: 1
  1674 ;; This function calls:
  1675 ;;		_putch
  1676 ;; This function is called by:
  1677 ;;		_vfpfcnvrt
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text4
  1682   000D52                     __ptext4:
  1683                           	callstack 0
  1684   000D52                     _fputc:
  1685                           	callstack 26
  1686   000D52  5003               	movf	fputc@fp^0,w,c
  1687   000D54  B4D8               	btfsc	status,2,c
  1688   000D56  EFAF  F006         	goto	u561
  1689   000D5A  EFB1  F006         	goto	u560
  1690   000D5E                     u561:
  1691   000D5E  EFB9  F006         	goto	l1279
  1692   000D62                     u560:
  1693   000D62  5003               	movf	fputc@fp^0,w,c
  1694   000D64  A4D8               	btfss	status,2,c
  1695   000D66  EFB7  F006         	goto	u571
  1696   000D6A  EFB9  F006         	goto	u570
  1697   000D6E                     u571:
  1698   000D6E  EFBE  F006         	goto	l1281
  1699   000D72                     u570:
  1700   000D72                     l1279:
  1701   000D72  5001               	movf	fputc@c^0,w,c
  1702   000D74  EC5C  F008         	call	_putch
  1703   000D78  EFFD  F006         	goto	l846
  1704   000D7C                     l1281:
  1705   000D7C  5003               	movf	fputc@fp^0,w,c
  1706   000D7E  6ED9               	movwf	fsr2l,c
  1707   000D80  6ADA               	clrf	fsr2h,c
  1708   000D82  0E09               	movlw	9
  1709   000D84  26D9               	addwf	fsr2l,f,c
  1710   000D86  50DE               	movf	postinc2,w,c
  1711   000D88  10DE               	iorwf	postinc2,w,c
  1712   000D8A  B4D8               	btfsc	status,2,c
  1713   000D8C  EFCA  F006         	goto	u581
  1714   000D90  EFCC  F006         	goto	u580
  1715   000D94                     u581:
  1716   000D94  EFE5  F006         	goto	l1285
  1717   000D98                     u580:
  1718   000D98  5003               	movf	fputc@fp^0,w,c
  1719   000D9A  6ED9               	movwf	fsr2l,c
  1720   000D9C  6ADA               	clrf	fsr2h,c
  1721   000D9E  0E09               	movlw	9
  1722   000DA0  26D9               	addwf	fsr2l,f,c
  1723   000DA2  5003               	movf	fputc@fp^0,w,c
  1724   000DA4  6EE1               	movwf	fsr1l,c
  1725   000DA6  6AE2               	clrf	fsr1h,c
  1726   000DA8  0E02               	movlw	2
  1727   000DAA  26E1               	addwf	fsr1l,f,c
  1728   000DAC  50DE               	movf	postinc2,w,c
  1729   000DAE  5CE6               	subwf	postinc1,w,c
  1730   000DB0  50E6               	movf	postinc1,w,c
  1731   000DB2  0A80               	xorlw	128
  1732   000DB4  6E08               	movwf	(??_fputc+4)^0,c
  1733   000DB6  50DE               	movf	postinc2,w,c
  1734   000DB8  0A80               	xorlw	128
  1735   000DBA  5808               	subwfb	(??_fputc+4)^0,w,c
  1736   000DBC  B0D8               	btfsc	status,0,c
  1737   000DBE  EFE3  F006         	goto	u591
  1738   000DC2  EFE5  F006         	goto	u590
  1739   000DC6                     u591:
  1740   000DC6  EFFD  F006         	goto	l846
  1741   000DCA                     u590:
  1742   000DCA                     l1285:
  1743   000DCA  5003               	movf	fputc@fp^0,w,c
  1744   000DCC  6ED9               	movwf	fsr2l,c
  1745   000DCE  6ADA               	clrf	fsr2h,c
  1746   000DD0  0E02               	movlw	2
  1747   000DD2  26D9               	addwf	fsr2l,f,c
  1748   000DD4  50DF               	movf	indf2,w,c
  1749   000DD6  6E04               	movwf	??_fputc^0,c
  1750   000DD8  5003               	movf	fputc@fp^0,w,c
  1751   000DDA  6ED9               	movwf	fsr2l,c
  1752   000DDC  6ADA               	clrf	fsr2h,c
  1753   000DDE  50DF               	movf	indf2,w,c
  1754   000DE0  2404               	addwf	??_fputc^0,w,c
  1755   000DE2  6ED9               	movwf	fsr2l,c
  1756   000DE4  6ADA               	clrf	fsr2h,c
  1757   000DE6  C001  FFDF         	movff	fputc@c,indf2
  1758   000DEA  5003               	movf	fputc@fp^0,w,c
  1759   000DEC  6ED9               	movwf	fsr2l,c
  1760   000DEE  6ADA               	clrf	fsr2h,c
  1761   000DF0  0E02               	movlw	2
  1762   000DF2  26D9               	addwf	fsr2l,f,c
  1763   000DF4  2ADE               	incf	postinc2,f,c
  1764   000DF6  0E00               	movlw	0
  1765   000DF8  22DD               	addwfc	postdec2,f,c
  1766   000DFA                     l846:
  1767   000DFA  0012               	return		;funcret
  1768   000DFC                     __end_of_fputc:
  1769                           	callstack 0
  1770                           
  1771 ;; *************** function _putch *****************
  1772 ;; Defined at:
  1773 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;  c               1    wreg     unsigned char 
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;  c               1    0[COMRAM] unsigned char 
  1778 ;; Return value:  Size  Location     Type
  1779 ;;                  1    wreg      void 
  1780 ;; Registers used:
  1781 ;;		wreg
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1787 ;;      Params:         0       0       0       0       0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1790 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used: 1
  1793 ;; This function calls:
  1794 ;;		Nothing
  1795 ;; This function is called by:
  1796 ;;		_fputc
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text5
  1801   0010B8                     __ptext5:
  1802                           	callstack 0
  1803   0010B8                     _putch:
  1804                           	callstack 26
  1805   0010B8  0012               	return		;funcret
  1806   0010BA                     __end_of_putch:
  1807                           	callstack 0
  1808                           
  1809 ;; *************** function _abs *****************
  1810 ;; Defined at:
  1811 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  a               2    6[COMRAM] int 
  1814 ;; Auto vars:     Size  Location     Type
  1815 ;;		None
  1816 ;; Return value:  Size  Location     Type
  1817 ;;                  2    6[COMRAM] int 
  1818 ;; Registers used:
  1819 ;;		wreg, status,2, status,0
  1820 ;; Tracked objects:
  1821 ;;		On entry : 0/0
  1822 ;;		On exit  : 0/0
  1823 ;;		Unchanged: 0/0
  1824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1825 ;;      Params:         2       0       0       0       0       0       0       0       0
  1826 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1827 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1828 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1829 ;;Total ram usage:        4 bytes
  1830 ;; Hardware stack levels used: 1
  1831 ;; This function calls:
  1832 ;;		Nothing
  1833 ;; This function is called by:
  1834 ;;		_vfpfcnvrt
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           	psect	text6
  1839   001000                     __ptext6:
  1840                           	callstack 0
  1841   001000                     _abs:
  1842                           	callstack 27
  1843   001000  BE08               	btfsc	(abs@a+1)^0,7,c
  1844   001002  EF05  F008         	goto	u601
  1845   001006  EF07  F008         	goto	u600
  1846   00100A                     u601:
  1847   00100A  EF0D  F008         	goto	l831
  1848   00100E                     u600:
  1849   00100E  C007  F007         	movff	abs@a,?_abs
  1850   001012  C008  F008         	movff	abs@a+1,?_abs+1
  1851   001016  EF19  F008         	goto	l834
  1852   00101A                     l831:
  1853   00101A  C007  F009         	movff	abs@a,??_abs
  1854   00101E  C008  F00A         	movff	abs@a+1,??_abs+1
  1855   001022  1E09               	comf	??_abs^0,f,c
  1856   001024  1E0A               	comf	(??_abs+1)^0,f,c
  1857   001026  4A09               	infsnz	??_abs^0,f,c
  1858   001028  2A0A               	incf	(??_abs+1)^0,f,c
  1859   00102A  C009  F007         	movff	??_abs,?_abs
  1860   00102E  C00A  F008         	movff	??_abs+1,?_abs+1
  1861   001032                     l834:
  1862   001032  0012               	return		;funcret
  1863   001034                     __end_of_abs:
  1864                           	callstack 0
  1865                           
  1866 ;; *************** function ___awmod *****************
  1867 ;; Defined at:
  1868 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  1869 ;; Parameters:    Size  Location     Type
  1870 ;;  dividend        2    0[COMRAM] int 
  1871 ;;  divisor         2    2[COMRAM] int 
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;  sign            1    5[COMRAM] unsigned char 
  1874 ;;  counter         1    4[COMRAM] unsigned char 
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  2    0[COMRAM] int 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2, status,0
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1884 ;;      Params:         4       0       0       0       0       0       0       0       0
  1885 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1886 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1887 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1888 ;;Total ram usage:        6 bytes
  1889 ;; Hardware stack levels used: 1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_vfpfcnvrt
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text7
  1898   000CA4                     __ptext7:
  1899                           	callstack 0
  1900   000CA4                     ___awmod:
  1901                           	callstack 27
  1902   000CA4  6A06               	clrf	___awmod@sign^0,c
  1903   000CA6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1904   000CA8  EF5A  F006         	goto	u500
  1905   000CAC  EF58  F006         	goto	u501
  1906   000CB0                     u501:
  1907   000CB0  EF60  F006         	goto	l1247
  1908   000CB4                     u500:
  1909   000CB4  6C01               	negf	___awmod@dividend^0,c
  1910   000CB6  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1911   000CB8  B0D8               	btfsc	status,0,c
  1912   000CBA  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1913   000CBC  0E01               	movlw	1
  1914   000CBE  6E06               	movwf	___awmod@sign^0,c
  1915   000CC0                     l1247:
  1916   000CC0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1917   000CC2  EF67  F006         	goto	u510
  1918   000CC6  EF65  F006         	goto	u511
  1919   000CCA                     u511:
  1920   000CCA  EF6B  F006         	goto	l1251
  1921   000CCE                     u510:
  1922   000CCE  6C03               	negf	___awmod@divisor^0,c
  1923   000CD0  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1924   000CD2  B0D8               	btfsc	status,0,c
  1925   000CD4  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1926   000CD6                     l1251:
  1927   000CD6  5003               	movf	___awmod@divisor^0,w,c
  1928   000CD8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1929   000CDA  B4D8               	btfsc	status,2,c
  1930   000CDC  EF72  F006         	goto	u521
  1931   000CE0  EF74  F006         	goto	u520
  1932   000CE4                     u521:
  1933   000CE4  EF98  F006         	goto	l1267
  1934   000CE8                     u520:
  1935   000CE8  0E01               	movlw	1
  1936   000CEA  6E05               	movwf	___awmod@counter^0,c
  1937   000CEC  EF7C  F006         	goto	l1257
  1938   000CF0                     l1255:
  1939   000CF0  90D8               	bcf	status,0,c
  1940   000CF2  3603               	rlcf	___awmod@divisor^0,f,c
  1941   000CF4  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1942   000CF6  2A05               	incf	___awmod@counter^0,f,c
  1943   000CF8                     l1257:
  1944   000CF8  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1945   000CFA  EF81  F006         	goto	u531
  1946   000CFE  EF83  F006         	goto	u530
  1947   000D02                     u531:
  1948   000D02  EF78  F006         	goto	l1255
  1949   000D06                     u530:
  1950   000D06                     l1259:
  1951   000D06  5003               	movf	___awmod@divisor^0,w,c
  1952   000D08  5C01               	subwf	___awmod@dividend^0,w,c
  1953   000D0A  5004               	movf	(___awmod@divisor+1)^0,w,c
  1954   000D0C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1955   000D0E  A0D8               	btfss	status,0,c
  1956   000D10  EF8C  F006         	goto	u541
  1957   000D14  EF8E  F006         	goto	u540
  1958   000D18                     u541:
  1959   000D18  EF92  F006         	goto	l1263
  1960   000D1C                     u540:
  1961   000D1C  5003               	movf	___awmod@divisor^0,w,c
  1962   000D1E  5E01               	subwf	___awmod@dividend^0,f,c
  1963   000D20  5004               	movf	(___awmod@divisor+1)^0,w,c
  1964   000D22  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1965   000D24                     l1263:
  1966   000D24  90D8               	bcf	status,0,c
  1967   000D26  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1968   000D28  3203               	rrcf	___awmod@divisor^0,f,c
  1969   000D2A  2E05               	decfsz	___awmod@counter^0,f,c
  1970   000D2C  EF83  F006         	goto	l1259
  1971   000D30                     l1267:
  1972   000D30  5006               	movf	___awmod@sign^0,w,c
  1973   000D32  B4D8               	btfsc	status,2,c
  1974   000D34  EF9E  F006         	goto	u551
  1975   000D38  EFA0  F006         	goto	u550
  1976   000D3C                     u551:
  1977   000D3C  EFA4  F006         	goto	l1271
  1978   000D40                     u550:
  1979   000D40  6C01               	negf	___awmod@dividend^0,c
  1980   000D42  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1981   000D44  B0D8               	btfsc	status,0,c
  1982   000D46  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1983   000D48                     l1271:
  1984   000D48  C001  F001         	movff	___awmod@dividend,?___awmod
  1985   000D4C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1986   000D50  0012               	return		;funcret
  1987   000D52                     __end_of___awmod:
  1988                           	callstack 0
  1989                           
  1990 ;; *************** function ___awdiv *****************
  1991 ;; Defined at:
  1992 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  dividend        2    0[COMRAM] int 
  1995 ;;  divisor         2    2[COMRAM] int 
  1996 ;; Auto vars:     Size  Location     Type
  1997 ;;  quotient        2    6[COMRAM] int 
  1998 ;;  sign            1    5[COMRAM] unsigned char 
  1999 ;;  counter         1    4[COMRAM] unsigned char 
  2000 ;; Return value:  Size  Location     Type
  2001 ;;                  2    0[COMRAM] int 
  2002 ;; Registers used:
  2003 ;;		wreg, status,2, status,0
  2004 ;; Tracked objects:
  2005 ;;		On entry : 0/0
  2006 ;;		On exit  : 0/0
  2007 ;;		Unchanged: 0/0
  2008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2009 ;;      Params:         4       0       0       0       0       0       0       0       0
  2010 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2011 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2012 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2013 ;;Total ram usage:        8 bytes
  2014 ;; Hardware stack levels used: 1
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_vfpfcnvrt
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text8
  2023   000B20                     __ptext8:
  2024                           	callstack 0
  2025   000B20                     ___awdiv:
  2026                           	callstack 27
  2027   000B20  6A06               	clrf	___awdiv@sign^0,c
  2028   000B22  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2029   000B24  EF98  F005         	goto	u440
  2030   000B28  EF96  F005         	goto	u441
  2031   000B2C                     u441:
  2032   000B2C  EF9E  F005         	goto	l1203
  2033   000B30                     u440:
  2034   000B30  6C03               	negf	___awdiv@divisor^0,c
  2035   000B32  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2036   000B34  B0D8               	btfsc	status,0,c
  2037   000B36  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2038   000B38  0E01               	movlw	1
  2039   000B3A  6E06               	movwf	___awdiv@sign^0,c
  2040   000B3C                     l1203:
  2041   000B3C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2042   000B3E  EFA5  F005         	goto	u450
  2043   000B42  EFA3  F005         	goto	u451
  2044   000B46                     u451:
  2045   000B46  EFAB  F005         	goto	l1209
  2046   000B4A                     u450:
  2047   000B4A  6C01               	negf	___awdiv@dividend^0,c
  2048   000B4C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2049   000B4E  B0D8               	btfsc	status,0,c
  2050   000B50  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2051   000B52  0E01               	movlw	1
  2052   000B54  1A06               	xorwf	___awdiv@sign^0,f,c
  2053   000B56                     l1209:
  2054   000B56  0E00               	movlw	0
  2055   000B58  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2056   000B5A  0E00               	movlw	0
  2057   000B5C  6E07               	movwf	___awdiv@quotient^0,c
  2058   000B5E  5003               	movf	___awdiv@divisor^0,w,c
  2059   000B60  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2060   000B62  B4D8               	btfsc	status,2,c
  2061   000B64  EFB6  F005         	goto	u461
  2062   000B68  EFB8  F005         	goto	u460
  2063   000B6C                     u461:
  2064   000B6C  EFE0  F005         	goto	l1231
  2065   000B70                     u460:
  2066   000B70  0E01               	movlw	1
  2067   000B72  6E05               	movwf	___awdiv@counter^0,c
  2068   000B74  EFC0  F005         	goto	l1217
  2069   000B78                     l1215:
  2070   000B78  90D8               	bcf	status,0,c
  2071   000B7A  3603               	rlcf	___awdiv@divisor^0,f,c
  2072   000B7C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2073   000B7E  2A05               	incf	___awdiv@counter^0,f,c
  2074   000B80                     l1217:
  2075   000B80  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2076   000B82  EFC5  F005         	goto	u471
  2077   000B86  EFC7  F005         	goto	u470
  2078   000B8A                     u471:
  2079   000B8A  EFBC  F005         	goto	l1215
  2080   000B8E                     u470:
  2081   000B8E                     l1219:
  2082   000B8E  90D8               	bcf	status,0,c
  2083   000B90  3607               	rlcf	___awdiv@quotient^0,f,c
  2084   000B92  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2085   000B94  5003               	movf	___awdiv@divisor^0,w,c
  2086   000B96  5C01               	subwf	___awdiv@dividend^0,w,c
  2087   000B98  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2088   000B9A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2089   000B9C  A0D8               	btfss	status,0,c
  2090   000B9E  EFD3  F005         	goto	u481
  2091   000BA2  EFD5  F005         	goto	u480
  2092   000BA6                     u481:
  2093   000BA6  EFDA  F005         	goto	l1227
  2094   000BAA                     u480:
  2095   000BAA  5003               	movf	___awdiv@divisor^0,w,c
  2096   000BAC  5E01               	subwf	___awdiv@dividend^0,f,c
  2097   000BAE  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2098   000BB0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2099   000BB2  8007               	bsf	___awdiv@quotient^0,0,c
  2100   000BB4                     l1227:
  2101   000BB4  90D8               	bcf	status,0,c
  2102   000BB6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2103   000BB8  3203               	rrcf	___awdiv@divisor^0,f,c
  2104   000BBA  2E05               	decfsz	___awdiv@counter^0,f,c
  2105   000BBC  EFC7  F005         	goto	l1219
  2106   000BC0                     l1231:
  2107   000BC0  5006               	movf	___awdiv@sign^0,w,c
  2108   000BC2  B4D8               	btfsc	status,2,c
  2109   000BC4  EFE6  F005         	goto	u491
  2110   000BC8  EFE8  F005         	goto	u490
  2111   000BCC                     u491:
  2112   000BCC  EFEC  F005         	goto	l1235
  2113   000BD0                     u490:
  2114   000BD0  6C07               	negf	___awdiv@quotient^0,c
  2115   000BD2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2116   000BD4  B0D8               	btfsc	status,0,c
  2117   000BD6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2118   000BD8                     l1235:
  2119   000BD8  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2120   000BDC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2121   000BE0  0012               	return		;funcret
  2122   000BE2                     __end_of___awdiv:
  2123                           	callstack 0
  2124                           
  2125 ;; *************** function _LCD_Init *****************
  2126 ;; Defined at:
  2127 ;;		line 4 in file "LCD.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;		None
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;		None
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2141 ;;      Params:         0       0       0       0       0       0       0       0       0
  2142 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2143 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2144 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2145 ;;Total ram usage:        1 bytes
  2146 ;; Hardware stack levels used: 1
  2147 ;; Hardware stack levels required when called: 1
  2148 ;; This function calls:
  2149 ;;		_LCD_Command
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text9
  2156   001034                     __ptext9:
  2157                           	callstack 0
  2158   001034                     _LCD_Init:
  2159                           	callstack 29
  2160   001034                     
  2161                           ;LCD.c: 6:     TRISD = 0;
  2162   001034  6A95               	clrf	149,c	;volatile
  2163   001036                     
  2164                           ;LCD.c: 7:     _delay((unsigned long)((15)*(8000000/4000.0)));
  2165   001036  0E27               	movlw	39
  2166   001038  6E03               	movwf	??_LCD_Init^0,c
  2167   00103A  0EF5               	movlw	245
  2168   00103C                     u847:
  2169   00103C  2EE8               	decfsz	wreg,f,c
  2170   00103E  D7FE               	bra	u847
  2171   001040  2E03               	decfsz	??_LCD_Init^0,f,c
  2172   001042  D7FC               	bra	u847
  2173   001044  0000               	nop	
  2174   001046                     
  2175                           ;LCD.c: 8:     LCD_Command(0x02);
  2176   001046  0E02               	movlw	2
  2177   001048  EC57  F007         	call	_LCD_Command
  2178   00104C                     
  2179                           ;LCD.c: 9:     LCD_Command(0x28);
  2180   00104C  0E28               	movlw	40
  2181   00104E  EC57  F007         	call	_LCD_Command
  2182   001052                     
  2183                           ;LCD.c: 10:     LCD_Command(0x01);
  2184   001052  0E01               	movlw	1
  2185   001054  EC57  F007         	call	_LCD_Command
  2186   001058                     
  2187                           ;LCD.c: 11:     LCD_Command(0x0c);
  2188   001058  0E0C               	movlw	12
  2189   00105A  EC57  F007         	call	_LCD_Command
  2190   00105E                     
  2191                           ;LCD.c: 12:     LCD_Command(0x06);
  2192   00105E  0E06               	movlw	6
  2193   001060  EC57  F007         	call	_LCD_Command
  2194   001064  0012               	return		;funcret
  2195   001066                     __end_of_LCD_Init:
  2196                           	callstack 0
  2197                           
  2198 ;; *************** function _LCD_Clear *****************
  2199 ;; Defined at:
  2200 ;;		line 64 in file "LCD.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;		None
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;		None
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2214 ;;      Params:         0       0       0       0       0       0       0       0       0
  2215 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2216 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2217 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2218 ;;Total ram usage:        1 bytes
  2219 ;; Hardware stack levels used: 1
  2220 ;; Hardware stack levels required when called: 1
  2221 ;; This function calls:
  2222 ;;		_LCD_Command
  2223 ;; This function is called by:
  2224 ;;		_main
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           	psect	text10
  2229   0010A0                     __ptext10:
  2230                           	callstack 0
  2231   0010A0                     _LCD_Clear:
  2232                           	callstack 29
  2233   0010A0                     
  2234                           ;LCD.c: 66:     LCD_Command(0x01);
  2235   0010A0  0E01               	movlw	1
  2236   0010A2  EC57  F007         	call	_LCD_Command
  2237   0010A6                     
  2238                           ;LCD.c: 67:     _delay((unsigned long)((2)*(8000000/4000.0)));
  2239   0010A6  0E06               	movlw	6
  2240   0010A8  6E03               	movwf	??_LCD_Clear^0,c
  2241   0010AA  0E30               	movlw	48
  2242   0010AC                     u857:
  2243   0010AC  2EE8               	decfsz	wreg,f,c
  2244   0010AE  D7FE               	bra	u857
  2245   0010B0  2E03               	decfsz	??_LCD_Clear^0,f,c
  2246   0010B2  D7FC               	bra	u857
  2247   0010B4  D000               	nop2	
  2248   0010B6  0012               	return		;funcret
  2249   0010B8                     __end_of_LCD_Clear:
  2250                           	callstack 0
  2251                           
  2252 ;; *************** function _DHT11_Read *****************
  2253 ;; Defined at:
  2254 ;;		line 16 in file "DHT11.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  humidity        1    2[COMRAM] PTR unsigned char 
  2257 ;;		 -> main@hum_int(1), 
  2258 ;;  temperature     1    3[COMRAM] PTR unsigned char 
  2259 ;;		 -> main@temp_int(1), 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  i               1   13[COMRAM] unsigned char 
  2262 ;;  data            5    8[COMRAM] unsigned char [5]
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      unsigned char 
  2265 ;; Registers used:
  2266 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2272 ;;      Params:         2       0       0       0       0       0       0       0       0
  2273 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2274 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2275 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2276 ;;Total ram usage:       12 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 1
  2279 ;; This function calls:
  2280 ;;		_DHT11_ReadByte
  2281 ;; This function is called by:
  2282 ;;		_main
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text11
  2287   000BE2                     __ptext11:
  2288                           	callstack 0
  2289   000BE2                     _DHT11_Read:
  2290                           	callstack 29
  2291   000BE2                     
  2292                           ;DHT11.c: 17:     TRISAbits.TRISA0 = 0;
  2293   000BE2  9092               	bcf	146,0,c	;volatile
  2294                           
  2295                           ;DHT11.c: 18:     PORTAbits.RA0 = 0;
  2296   000BE4  9080               	bcf	128,0,c	;volatile
  2297   000BE6                     
  2298                           ;DHT11.c: 19:     _delay((unsigned long)((18)*(8000000/4000.0)));
  2299   000BE6  0E2F               	movlw	47
  2300   000BE8  6E05               	movwf	??_DHT11_Read^0,c
  2301   000BEA  0EC0               	movlw	192
  2302   000BEC                     u867:
  2303   000BEC  2EE8               	decfsz	wreg,f,c
  2304   000BEE  D7FE               	bra	u867
  2305   000BF0  2E05               	decfsz	??_DHT11_Read^0,f,c
  2306   000BF2  D7FC               	bra	u867
  2307   000BF4                     
  2308                           ;DHT11.c: 20:     PORTAbits.RA0 = 1;
  2309   000BF4  8080               	bsf	128,0,c	;volatile
  2310                           
  2311                           ;DHT11.c: 21:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  2312   000BF6  0E14               	movlw	20
  2313   000BF8                     u877:
  2314   000BF8  2EE8               	decfsz	wreg,f,c
  2315   000BFA  D7FE               	bra	u877
  2316   000BFC                     
  2317                           ;DHT11.c: 22:     TRISAbits.TRISA0 = 1;
  2318   000BFC  8092               	bsf	146,0,c	;volatile
  2319   000BFE                     
  2320                           ;DHT11.c: 24:     if (PORTAbits.RA0 == 0) {
  2321   000BFE  B080               	btfsc	128,0,c	;volatile
  2322   000C00  EF04  F006         	goto	u771
  2323   000C04  EF06  F006         	goto	u770
  2324   000C08                     u771:
  2325   000C08  EF50  F006         	goto	l1411
  2326   000C0C                     u770:
  2327   000C0C                     l22:
  2328   000C0C  A080               	btfss	128,0,c	;volatile
  2329   000C0E  EF0B  F006         	goto	u781
  2330   000C12  EF0D  F006         	goto	u780
  2331   000C16                     u781:
  2332   000C16  EF06  F006         	goto	l22
  2333   000C1A                     u780:
  2334   000C1A                     l25:
  2335   000C1A  B080               	btfsc	128,0,c	;volatile
  2336   000C1C  EF12  F006         	goto	u791
  2337   000C20  EF14  F006         	goto	u790
  2338   000C24                     u791:
  2339   000C24  EF0D  F006         	goto	l25
  2340   000C28                     u790:
  2341   000C28                     
  2342                           ;DHT11.c: 29:         uint8_t data[5];;DHT11.c: 30:         for (uint8_t i = 0; i < 5; i
      +                          ++) {
  2343   000C28  6A0E               	clrf	DHT11_Read@i^0,c
  2344   000C2A                     l1397:
  2345                           
  2346                           ;DHT11.c: 31:             data[i] = DHT11_ReadByte();
  2347   000C2A  500E               	movf	DHT11_Read@i^0,w,c
  2348   000C2C  0F09               	addlw	low DHT11_Read@data
  2349   000C2E  6ED9               	movwf	fsr2l,c
  2350   000C30  6ADA               	clrf	fsr2h,c
  2351   000C32  EC81  F007         	call	_DHT11_ReadByte	;wreg free
  2352   000C36  6EDF               	movwf	indf2,c
  2353   000C38                     
  2354                           ;DHT11.c: 32:         }
  2355   000C38  2A0E               	incf	DHT11_Read@i^0,f,c
  2356   000C3A  0E04               	movlw	4
  2357   000C3C  640E               	cpfsgt	DHT11_Read@i^0,c
  2358   000C3E  EF23  F006         	goto	u801
  2359   000C42  EF25  F006         	goto	u800
  2360   000C46                     u801:
  2361   000C46  EF15  F006         	goto	l1397
  2362   000C4A                     u800:
  2363   000C4A                     
  2364                           ;DHT11.c: 35:         if ((data[0] + data[1] + data[2] + data[3]) == data[4]) {
  2365   000C4A  500D               	movf	(DHT11_Read@data+4)^0,w,c
  2366   000C4C  6E05               	movwf	??_DHT11_Read^0,c
  2367   000C4E  6A06               	clrf	(??_DHT11_Read+1)^0,c
  2368   000C50  500A               	movf	(DHT11_Read@data+1)^0,w,c
  2369   000C52  C009  F007         	movff	DHT11_Read@data,??_DHT11_Read+2
  2370   000C56  6A08               	clrf	(??_DHT11_Read+3)^0,c
  2371   000C58  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  2372   000C5A  0E00               	movlw	0
  2373   000C5C  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  2374   000C5E  500B               	movf	(DHT11_Read@data+2)^0,w,c
  2375   000C60  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  2376   000C62  0E00               	movlw	0
  2377   000C64  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  2378   000C66  500C               	movf	(DHT11_Read@data+3)^0,w,c
  2379   000C68  2607               	addwf	(??_DHT11_Read+2)^0,f,c
  2380   000C6A  0E00               	movlw	0
  2381   000C6C  2208               	addwfc	(??_DHT11_Read+3)^0,f,c
  2382   000C6E  5005               	movf	??_DHT11_Read^0,w,c
  2383   000C70  1807               	xorwf	(??_DHT11_Read+2)^0,w,c
  2384   000C72  E107               	bnz	u811
  2385   000C74  5006               	movf	(??_DHT11_Read+1)^0,w,c
  2386   000C76  1808               	xorwf	(??_DHT11_Read+3)^0,w,c
  2387   000C78  A4D8               	btfss	status,2,c
  2388   000C7A  EF41  F006         	goto	u811
  2389   000C7E  EF43  F006         	goto	u810
  2390   000C82                     u811:
  2391   000C82  EF50  F006         	goto	l1411
  2392   000C86                     u810:
  2393   000C86                     
  2394                           ;DHT11.c: 36:             *humidity = data[0];
  2395   000C86  5003               	movf	DHT11_Read@humidity^0,w,c
  2396   000C88  6ED9               	movwf	fsr2l,c
  2397   000C8A  6ADA               	clrf	fsr2h,c
  2398   000C8C  C009  FFDF         	movff	DHT11_Read@data,indf2
  2399                           
  2400                           ;DHT11.c: 37:             *temperature = data[2];
  2401   000C90  5004               	movf	DHT11_Read@temperature^0,w,c
  2402   000C92  6ED9               	movwf	fsr2l,c
  2403   000C94  6ADA               	clrf	fsr2h,c
  2404   000C96  C00B  FFDF         	movff	DHT11_Read@data+2,indf2
  2405   000C9A                     
  2406                           ;DHT11.c: 38:             return 1;
  2407   000C9A  0E01               	movlw	1
  2408   000C9C  EF51  F006         	goto	l31
  2409   000CA0                     l1411:
  2410                           
  2411                           ;DHT11.c: 41:     return 0;
  2412   000CA0  0E00               	movlw	0
  2413   000CA2                     l31:
  2414   000CA2  0012               	return		;funcret
  2415   000CA4                     __end_of_DHT11_Read:
  2416                           	callstack 0
  2417                           
  2418 ;; *************** function _DHT11_ReadByte *****************
  2419 ;; Defined at:
  2420 ;;		line 4 in file "DHT11.c"
  2421 ;; Parameters:    Size  Location     Type
  2422 ;;		None
  2423 ;; Auto vars:     Size  Location     Type
  2424 ;;  i               1    1[COMRAM] unsigned char 
  2425 ;;  data            1    0[COMRAM] unsigned char 
  2426 ;; Return value:  Size  Location     Type
  2427 ;;                  1    wreg      unsigned char 
  2428 ;; Registers used:
  2429 ;;		wreg, status,2, status,0
  2430 ;; Tracked objects:
  2431 ;;		On entry : 0/0
  2432 ;;		On exit  : 0/0
  2433 ;;		Unchanged: 0/0
  2434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2435 ;;      Params:         0       0       0       0       0       0       0       0       0
  2436 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2437 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2438 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2439 ;;Total ram usage:        2 bytes
  2440 ;; Hardware stack levels used: 1
  2441 ;; This function calls:
  2442 ;;		Nothing
  2443 ;; This function is called by:
  2444 ;;		_DHT11_Read
  2445 ;; This function uses a non-reentrant model
  2446 ;;
  2447                           
  2448                           	psect	text12
  2449   000F02                     __ptext12:
  2450                           	callstack 0
  2451   000F02                     _DHT11_ReadByte:
  2452                           	callstack 29
  2453   000F02                     
  2454                           ;DHT11.c: 5:     uint8_t data = 0;
  2455   000F02  6A01               	clrf	DHT11_ReadByte@data^0,c
  2456                           
  2457                           ;DHT11.c: 6:     for (uint8_t i = 0; i < 8; i++) {
  2458   000F04  6A02               	clrf	DHT11_ReadByte@i^0,c
  2459   000F06                     l11:
  2460   000F06  A080               	btfss	128,0,c	;volatile
  2461   000F08  EF88  F007         	goto	u321
  2462   000F0C  EF8A  F007         	goto	u320
  2463   000F10                     u321:
  2464   000F10  EF83  F007         	goto	l11
  2465   000F14                     u320:
  2466   000F14                     
  2467                           ;DHT11.c: 8:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  2468   000F14  0E21               	movlw	33
  2469   000F16                     u887:
  2470   000F16  2EE8               	decfsz	wreg,f,c
  2471   000F18  D7FE               	bra	u887
  2472   000F1A  0000               	nop	
  2473   000F1C                     
  2474                           ;DHT11.c: 9:         data <<= 1;
  2475   000F1C  90D8               	bcf	status,0,c
  2476   000F1E  3601               	rlcf	DHT11_ReadByte@data^0,f,c
  2477   000F20                     
  2478                           ;DHT11.c: 10:         if (PORTAbits.RA0) data |= 1;
  2479   000F20  A080               	btfss	128,0,c	;volatile
  2480   000F22  EF95  F007         	goto	u331
  2481   000F26  EF97  F007         	goto	u330
  2482   000F2A                     u331:
  2483   000F2A  EF98  F007         	goto	l15
  2484   000F2E                     u330:
  2485   000F2E  8001               	bsf	DHT11_ReadByte@data^0,0,c
  2486   000F30                     l15:
  2487   000F30  B080               	btfsc	128,0,c	;volatile
  2488   000F32  EF9D  F007         	goto	u341
  2489   000F36  EF9F  F007         	goto	u340
  2490   000F3A                     u341:
  2491   000F3A  EF98  F007         	goto	l15
  2492   000F3E                     u340:
  2493   000F3E                     
  2494                           ;DHT11.c: 12:     }
  2495   000F3E  2A02               	incf	DHT11_ReadByte@i^0,f,c
  2496   000F40  0E07               	movlw	7
  2497   000F42  6402               	cpfsgt	DHT11_ReadByte@i^0,c
  2498   000F44  EFA6  F007         	goto	u351
  2499   000F48  EFA8  F007         	goto	u350
  2500   000F4C                     u351:
  2501   000F4C  EF83  F007         	goto	l11
  2502   000F50                     u350:
  2503   000F50                     
  2504                           ;DHT11.c: 13:     return data;
  2505   000F50  5001               	movf	DHT11_ReadByte@data^0,w,c
  2506   000F52  0012               	return		;funcret
  2507   000F54                     __end_of_DHT11_ReadByte:
  2508                           	callstack 0
  2509                           
  2510 ;; *************** function _ClearLine *****************
  2511 ;; Defined at:
  2512 ;;		line 16 in file "main.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  line            1    wreg     unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  line            1    9[COMRAM] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  1    wreg      void 
  2519 ;; Registers used:
  2520 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2526 ;;      Params:         0       0       0       0       0       0       0       0       0
  2527 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2528 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2529 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2530 ;;Total ram usage:        1 bytes
  2531 ;; Hardware stack levels used: 1
  2532 ;; Hardware stack levels required when called: 3
  2533 ;; This function calls:
  2534 ;;		_LCD_String_xy
  2535 ;; This function is called by:
  2536 ;;		_main
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text13
  2541   001086                     __ptext13:
  2542                           	callstack 0
  2543   001086                     _ClearLine:
  2544                           	callstack 27
  2545                           
  2546                           ;incstack = 0
  2547                           ;ClearLine@line stored from wreg
  2548   001086  6E0A               	movwf	ClearLine@line^0,c
  2549   001088                     
  2550                           ;main.c: 17:     LCD_String_xy(line, 0, "                ");
  2551   001088  0E00               	movlw	0
  2552   00108A  6E05               	movwf	LCD_String_xy@pos^0,c
  2553   00108C  0E01               	movlw	low STR_1
  2554   00108E  6E06               	movwf	LCD_String_xy@msg^0,c
  2555   001090  5006               	movf	LCD_String_xy@msg^0,w,c
  2556   001092  A4D8               	btfss	status,2,c
  2557   001094  0E08               	movlw	high __smallconst
  2558   001096  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  2559   001098  500A               	movf	ClearLine@line^0,w,c
  2560   00109A  ECC9  F007         	call	_LCD_String_xy
  2561   00109E  0012               	return		;funcret
  2562   0010A0                     __end_of_ClearLine:
  2563                           	callstack 0
  2564                           
  2565 ;; *************** function _LCD_String_xy *****************
  2566 ;; Defined at:
  2567 ;;		line 53 in file "LCD.c"
  2568 ;; Parameters:    Size  Location     Type
  2569 ;;  row             1    wreg     unsigned char 
  2570 ;;  pos             1    4[COMRAM] unsigned char 
  2571 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  2572 ;;		 -> STR_5(16), STR_4(16), main@buffer(17), STR_1(17), 
  2573 ;; Auto vars:     Size  Location     Type
  2574 ;;  row             1    7[COMRAM] unsigned char 
  2575 ;;  location        1    8[COMRAM] unsigned char 
  2576 ;; Return value:  Size  Location     Type
  2577 ;;                  1    wreg      void 
  2578 ;; Registers used:
  2579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2580 ;; Tracked objects:
  2581 ;;		On entry : 0/0
  2582 ;;		On exit  : 0/0
  2583 ;;		Unchanged: 0/0
  2584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2585 ;;      Params:         3       0       0       0       0       0       0       0       0
  2586 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2587 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2588 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2589 ;;Total ram usage:        5 bytes
  2590 ;; Hardware stack levels used: 1
  2591 ;; Hardware stack levels required when called: 2
  2592 ;; This function calls:
  2593 ;;		_LCD_Command
  2594 ;;		_LCD_String
  2595 ;; This function is called by:
  2596 ;;		_ClearLine
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text14
  2602   000F92                     __ptext14:
  2603                           	callstack 0
  2604   000F92                     _LCD_String_xy:
  2605                           	callstack 28
  2606                           
  2607                           ;incstack = 0
  2608                           ;LCD_String_xy@row stored from wreg
  2609   000F92  6E08               	movwf	LCD_String_xy@row^0,c
  2610   000F94                     
  2611                           ;LCD.c: 55:     if (row == 0) {
  2612   000F94  5008               	movf	LCD_String_xy@row^0,w,c
  2613   000F96  A4D8               	btfss	status,2,c
  2614   000F98  EFD0  F007         	goto	u751
  2615   000F9C  EFD2  F007         	goto	u750
  2616   000FA0                     u751:
  2617   000FA0  EFD8  F007         	goto	l1365
  2618   000FA4                     u750:
  2619   000FA4                     
  2620                           ;LCD.c: 56:         location = 0x80 | (pos & 0x0F);
  2621   000FA4  5005               	movf	LCD_String_xy@pos^0,w,c
  2622   000FA6  0B0F               	andlw	15
  2623   000FA8  0980               	iorlw	128
  2624   000FAA  6E09               	movwf	LCD_String_xy@location^0,c
  2625                           
  2626                           ;LCD.c: 57:     } else {
  2627   000FAC  EFDC  F007         	goto	l1367
  2628   000FB0                     l1365:
  2629                           
  2630                           ;LCD.c: 58:         location = 0xC0 | (pos & 0x0F);
  2631   000FB0  5005               	movf	LCD_String_xy@pos^0,w,c
  2632   000FB2  0B0F               	andlw	15
  2633   000FB4  09C0               	iorlw	192
  2634   000FB6  6E09               	movwf	LCD_String_xy@location^0,c
  2635   000FB8                     l1367:
  2636                           
  2637                           ;LCD.c: 60:     LCD_Command(location);
  2638   000FB8  5009               	movf	LCD_String_xy@location^0,w,c
  2639   000FBA  EC57  F007         	call	_LCD_Command
  2640   000FBE                     
  2641                           ;LCD.c: 61:     LCD_String(msg);
  2642   000FBE  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  2643   000FC2  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  2644   000FC6  ECFE  F006         	call	_LCD_String	;wreg free
  2645   000FCA  0012               	return		;funcret
  2646   000FCC                     __end_of_LCD_String_xy:
  2647                           	callstack 0
  2648                           
  2649 ;; *************** function _LCD_String *****************
  2650 ;; Defined at:
  2651 ;;		line 45 in file "LCD.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  2654 ;;		 -> STR_5(16), STR_4(16), main@buffer(17), STR_1(17), 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;		None
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2666 ;;      Params:         2       0       0       0       0       0       0       0       0
  2667 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2669 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2670 ;;Total ram usage:        2 bytes
  2671 ;; Hardware stack levels used: 1
  2672 ;; Hardware stack levels required when called: 1
  2673 ;; This function calls:
  2674 ;;		_LCD_Char
  2675 ;; This function is called by:
  2676 ;;		_LCD_String_xy
  2677 ;; This function uses a non-reentrant model
  2678 ;;
  2679                           
  2680                           	psect	text15
  2681   000DFC                     __ptext15:
  2682                           	callstack 0
  2683   000DFC                     _LCD_String:
  2684                           	callstack 28
  2685   000DFC                     
  2686                           ;LCD.c: 45: void LCD_String(const char *msg);LCD.c: 46: {;LCD.c: 47:     while((*msg) !=
      +                           0) {
  2687   000DFC  EF14  F007         	goto	l1299
  2688   000E00                     l1295:
  2689                           
  2690                           ;LCD.c: 48:         LCD_Char(*msg);
  2691   000E00  C003  FFF6         	movff	LCD_String@msg,tblptrl
  2692   000E04  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  2693   000E08  6AF8               	clrf	tblptru,c
  2694   000E0A  0E07               	movlw	(high __ramtop+-1)
  2695   000E0C  64F7               	cpfsgt	tblptrh,c
  2696   000E0E  D003               	bra	u617
  2697   000E10  0008               	tblrd		*
  2698   000E12  50F5               	movf	tablat,w,c
  2699   000E14  D005               	bra	u610
  2700   000E16                     u617:
  2701   000E16  CFF6 FFE1          	movff	tblptrl,fsr1l
  2702   000E1A  CFF7 FFE2          	movff	tblptrh,fsr1h
  2703   000E1E  50E7               	movf	indf1,w,c
  2704   000E20                     u610:
  2705   000E20  EC2D  F007         	call	_LCD_Char
  2706   000E24                     
  2707                           ;LCD.c: 49:         msg++;
  2708   000E24  4A03               	infsnz	LCD_String@msg^0,f,c
  2709   000E26  2A04               	incf	(LCD_String@msg+1)^0,f,c
  2710   000E28                     l1299:
  2711                           
  2712                           ;LCD.c: 47:     while((*msg) != 0) {
  2713   000E28  C003  FFF6         	movff	LCD_String@msg,tblptrl
  2714   000E2C  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  2715   000E30  6AF8               	clrf	tblptru,c
  2716   000E32  0E07               	movlw	(high __ramtop+-1)
  2717   000E34  64F7               	cpfsgt	tblptrh,c
  2718   000E36  D003               	bra	u627
  2719   000E38  0008               	tblrd		*
  2720   000E3A  50F5               	movf	tablat,w,c
  2721   000E3C  D005               	bra	u620
  2722   000E3E                     u627:
  2723   000E3E  CFF6 FFE1          	movff	tblptrl,fsr1l
  2724   000E42  CFF7 FFE2          	movff	tblptrh,fsr1h
  2725   000E46  50E7               	movf	indf1,w,c
  2726   000E48                     u620:
  2727   000E48  0900               	iorlw	0
  2728   000E4A  A4D8               	btfss	status,2,c
  2729   000E4C  EF2A  F007         	goto	u631
  2730   000E50  EF2C  F007         	goto	u630
  2731   000E54                     u631:
  2732   000E54  EF00  F007         	goto	l1295
  2733   000E58                     u630:
  2734   000E58  0012               	return		;funcret
  2735   000E5A                     __end_of_LCD_String:
  2736                           	callstack 0
  2737                           
  2738 ;; *************** function _LCD_Char *****************
  2739 ;; Defined at:
  2740 ;;		line 30 in file "LCD.c"
  2741 ;; Parameters:    Size  Location     Type
  2742 ;;  dat             1    wreg     unsigned char 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  dat             1    1[COMRAM] unsigned char 
  2745 ;; Return value:  Size  Location     Type
  2746 ;;                  1    wreg      void 
  2747 ;; Registers used:
  2748 ;;		wreg, status,2, status,0
  2749 ;; Tracked objects:
  2750 ;;		On entry : 0/0
  2751 ;;		On exit  : 0/0
  2752 ;;		Unchanged: 0/0
  2753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2754 ;;      Params:         0       0       0       0       0       0       0       0       0
  2755 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2756 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2757 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2758 ;;Total ram usage:        2 bytes
  2759 ;; Hardware stack levels used: 1
  2760 ;; This function calls:
  2761 ;;		Nothing
  2762 ;; This function is called by:
  2763 ;;		_LCD_String
  2764 ;; This function uses a non-reentrant model
  2765 ;;
  2766                           
  2767                           	psect	text16
  2768   000E5A                     __ptext16:
  2769                           	callstack 0
  2770   000E5A                     _LCD_Char:
  2771                           	callstack 28
  2772                           
  2773                           ;incstack = 0
  2774                           ;LCD_Char@dat stored from wreg
  2775   000E5A  6E02               	movwf	LCD_Char@dat^0,c
  2776   000E5C                     
  2777                           ;LCD.c: 30: void LCD_Char(unsigned char dat);LCD.c: 31: {;LCD.c: 32:     LATD = (LATD & 
      +                          0x0f) | (0xF0 & dat);
  2778   000E5C  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  2779   000E60  0EF0               	movlw	240
  2780   000E62  1601               	andwf	??_LCD_Char^0,f,c
  2781   000E64  508C               	movf	140,w,c	;volatile
  2782   000E66  0B0F               	andlw	15
  2783   000E68  1001               	iorwf	??_LCD_Char^0,w,c
  2784   000E6A  6E8C               	movwf	140,c	;volatile
  2785   000E6C                     
  2786                           ;LCD.c: 33:     LATD0 = 1;
  2787   000E6C  808C               	bsf	3980,0,c	;volatile
  2788   000E6E                     
  2789                           ;LCD.c: 34:     LATD1 = 1;
  2790   000E6E  828C               	bsf	3980,1,c	;volatile
  2791   000E70                     
  2792                           ;LCD.c: 35:     __nop();
  2793   000E70  0000               	nop	
  2794   000E72                     
  2795                           ;LCD.c: 36:     LATD1 = 0;
  2796   000E72  928C               	bcf	3980,1,c	;volatile
  2797   000E74                     
  2798                           ;LCD.c: 37:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2799   000E74  0E03               	movlw	3
  2800   000E76  6E01               	movwf	??_LCD_Char^0,c
  2801   000E78  0E98               	movlw	152
  2802   000E7A                     u897:
  2803   000E7A  2EE8               	decfsz	wreg,f,c
  2804   000E7C  D7FE               	bra	u897
  2805   000E7E  2E01               	decfsz	??_LCD_Char^0,f,c
  2806   000E80  D7FC               	bra	u897
  2807   000E82                     
  2808                           ;LCD.c: 38:     LATD = (LATD & 0x0f) | ((dat << 4) & 0xF0);
  2809   000E82  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  2810   000E86  3A01               	swapf	??_LCD_Char^0,f,c
  2811   000E88  0EF0               	movlw	240
  2812   000E8A  1601               	andwf	??_LCD_Char^0,f,c
  2813   000E8C  0EF0               	movlw	240
  2814   000E8E  1601               	andwf	??_LCD_Char^0,f,c
  2815   000E90  508C               	movf	140,w,c	;volatile
  2816   000E92  0B0F               	andlw	15
  2817   000E94  1001               	iorwf	??_LCD_Char^0,w,c
  2818   000E96  6E8C               	movwf	140,c	;volatile
  2819   000E98                     
  2820                           ;LCD.c: 39:     LATD1 = 1;
  2821   000E98  828C               	bsf	3980,1,c	;volatile
  2822   000E9A                     
  2823                           ;LCD.c: 40:     __nop();
  2824   000E9A  0000               	nop	
  2825   000E9C                     
  2826                           ;LCD.c: 41:     LATD1 = 0;
  2827   000E9C  928C               	bcf	3980,1,c	;volatile
  2828                           
  2829                           ;LCD.c: 42:     _delay((unsigned long)((3)*(8000000/4000.0)));
  2830   000E9E  0E08               	movlw	8
  2831   000EA0  6E01               	movwf	??_LCD_Char^0,c
  2832   000EA2  0ECA               	movlw	202
  2833   000EA4                     u907:
  2834   000EA4  2EE8               	decfsz	wreg,f,c
  2835   000EA6  D7FE               	bra	u907
  2836   000EA8  2E01               	decfsz	??_LCD_Char^0,f,c
  2837   000EAA  D7FC               	bra	u907
  2838   000EAC  0012               	return		;funcret
  2839   000EAE                     __end_of_LCD_Char:
  2840                           	callstack 0
  2841                           
  2842 ;; *************** function _LCD_Command *****************
  2843 ;; Defined at:
  2844 ;;		line 15 in file "LCD.c"
  2845 ;; Parameters:    Size  Location     Type
  2846 ;;  cmd             1    wreg     unsigned char 
  2847 ;; Auto vars:     Size  Location     Type
  2848 ;;  cmd             1    1[COMRAM] unsigned char 
  2849 ;; Return value:  Size  Location     Type
  2850 ;;                  1    wreg      void 
  2851 ;; Registers used:
  2852 ;;		wreg, status,2, status,0
  2853 ;; Tracked objects:
  2854 ;;		On entry : 0/0
  2855 ;;		On exit  : 0/0
  2856 ;;		Unchanged: 0/0
  2857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2858 ;;      Params:         0       0       0       0       0       0       0       0       0
  2859 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2860 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2861 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2862 ;;Total ram usage:        2 bytes
  2863 ;; Hardware stack levels used: 1
  2864 ;; This function calls:
  2865 ;;		Nothing
  2866 ;; This function is called by:
  2867 ;;		_LCD_Init
  2868 ;;		_LCD_String_xy
  2869 ;;		_LCD_Clear
  2870 ;; This function uses a non-reentrant model
  2871 ;;
  2872                           
  2873                           	psect	text17
  2874   000EAE                     __ptext17:
  2875                           	callstack 0
  2876   000EAE                     _LCD_Command:
  2877                           	callstack 29
  2878                           
  2879                           ;incstack = 0
  2880                           ;LCD_Command@cmd stored from wreg
  2881   000EAE  6E02               	movwf	LCD_Command@cmd^0,c
  2882   000EB0                     
  2883                           ;LCD.c: 15: void LCD_Command(unsigned char cmd);LCD.c: 16: {;LCD.c: 17:     LATD = (LATD
      +                           & 0x0f) | (0xF0 & cmd);
  2884   000EB0  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  2885   000EB4  0EF0               	movlw	240
  2886   000EB6  1601               	andwf	??_LCD_Command^0,f,c
  2887   000EB8  508C               	movf	140,w,c	;volatile
  2888   000EBA  0B0F               	andlw	15
  2889   000EBC  1001               	iorwf	??_LCD_Command^0,w,c
  2890   000EBE  6E8C               	movwf	140,c	;volatile
  2891   000EC0                     
  2892                           ;LCD.c: 18:     LATD0 = 0;
  2893   000EC0  908C               	bcf	3980,0,c	;volatile
  2894   000EC2                     
  2895                           ;LCD.c: 19:     LATD1 = 1;
  2896   000EC2  828C               	bsf	3980,1,c	;volatile
  2897   000EC4                     
  2898                           ;LCD.c: 20:     __nop();
  2899   000EC4  0000               	nop	
  2900   000EC6                     
  2901                           ;LCD.c: 21:     LATD1 = 0;
  2902   000EC6  928C               	bcf	3980,1,c	;volatile
  2903   000EC8                     
  2904                           ;LCD.c: 22:     _delay((unsigned long)((1)*(8000000/4000.0)));
  2905   000EC8  0E03               	movlw	3
  2906   000ECA  6E01               	movwf	??_LCD_Command^0,c
  2907   000ECC  0E98               	movlw	152
  2908   000ECE                     u917:
  2909   000ECE  2EE8               	decfsz	wreg,f,c
  2910   000ED0  D7FE               	bra	u917
  2911   000ED2  2E01               	decfsz	??_LCD_Command^0,f,c
  2912   000ED4  D7FC               	bra	u917
  2913   000ED6                     
  2914                           ;LCD.c: 23:     LATD = (LATD & 0x0f) | ((cmd << 4) & 0xF0);
  2915   000ED6  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  2916   000EDA  3A01               	swapf	??_LCD_Command^0,f,c
  2917   000EDC  0EF0               	movlw	240
  2918   000EDE  1601               	andwf	??_LCD_Command^0,f,c
  2919   000EE0  0EF0               	movlw	240
  2920   000EE2  1601               	andwf	??_LCD_Command^0,f,c
  2921   000EE4  508C               	movf	140,w,c	;volatile
  2922   000EE6  0B0F               	andlw	15
  2923   000EE8  1001               	iorwf	??_LCD_Command^0,w,c
  2924   000EEA  6E8C               	movwf	140,c	;volatile
  2925   000EEC                     
  2926                           ;LCD.c: 24:     LATD1 = 1;
  2927   000EEC  828C               	bsf	3980,1,c	;volatile
  2928   000EEE                     
  2929                           ;LCD.c: 25:     __nop();
  2930   000EEE  0000               	nop	
  2931   000EF0                     
  2932                           ;LCD.c: 26:     LATD1 = 0;
  2933   000EF0  928C               	bcf	3980,1,c	;volatile
  2934                           
  2935                           ;LCD.c: 27:     _delay((unsigned long)((3)*(8000000/4000.0)));
  2936   000EF2  0E08               	movlw	8
  2937   000EF4  6E01               	movwf	??_LCD_Command^0,c
  2938   000EF6  0ECA               	movlw	202
  2939   000EF8                     u927:
  2940   000EF8  2EE8               	decfsz	wreg,f,c
  2941   000EFA  D7FE               	bra	u927
  2942   000EFC  2E01               	decfsz	??_LCD_Command^0,f,c
  2943   000EFE  D7FC               	bra	u927
  2944   000F00  0012               	return		;funcret
  2945   000F02                     __end_of_LCD_Command:
  2946                           	callstack 0
  2947                           
  2948                           	psect	rparam
  2949   000001                     ___rparam_used  equ	1
  2950   000000                     ___param_bank   equ	0
  2951   000000                     __Lparam        equ	__Lrparam
  2952   000000                     __Hparam        equ	__Hrparam
  2953                           
  2954                           	psect	idloc
  2955                           
  2956                           ;Config register IDLOC0 @ 0x200000
  2957                           ;	unspecified, using default values
  2958   200000                     	org	2097152
  2959   200000  FF                 	db	255
  2960                           
  2961                           ;Config register IDLOC1 @ 0x200001
  2962                           ;	unspecified, using default values
  2963   200001                     	org	2097153
  2964   200001  FF                 	db	255
  2965                           
  2966                           ;Config register IDLOC2 @ 0x200002
  2967                           ;	unspecified, using default values
  2968   200002                     	org	2097154
  2969   200002  FF                 	db	255
  2970                           
  2971                           ;Config register IDLOC3 @ 0x200003
  2972                           ;	unspecified, using default values
  2973   200003                     	org	2097155
  2974   200003  FF                 	db	255
  2975                           
  2976                           ;Config register IDLOC4 @ 0x200004
  2977                           ;	unspecified, using default values
  2978   200004                     	org	2097156
  2979   200004  FF                 	db	255
  2980                           
  2981                           ;Config register IDLOC5 @ 0x200005
  2982                           ;	unspecified, using default values
  2983   200005                     	org	2097157
  2984   200005  FF                 	db	255
  2985                           
  2986                           ;Config register IDLOC6 @ 0x200006
  2987                           ;	unspecified, using default values
  2988   200006                     	org	2097158
  2989   200006  FF                 	db	255
  2990                           
  2991                           ;Config register IDLOC7 @ 0x200007
  2992                           ;	unspecified, using default values
  2993   200007                     	org	2097159
  2994   200007  FF                 	db	255
  2995                           
  2996                           	psect	config
  2997                           
  2998                           ;Config register CONFIG1L @ 0x300000
  2999                           ;	PLL Prescaler Selection bits
  3000                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  3001                           ;	System Clock Postscaler Selection bits
  3002                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  3003                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3004                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  3005   300000                     	org	3145728
  3006   300000  00                 	db	0
  3007                           
  3008                           ;Config register CONFIG1H @ 0x300001
  3009                           ;	Oscillator Selection bits
  3010                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  3011                           ;	Fail-Safe Clock Monitor Enable bit
  3012                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3013                           ;	Internal/External Oscillator Switchover bit
  3014                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3015   300001                     	org	3145729
  3016   300001  09                 	db	9
  3017                           
  3018                           ;Config register CONFIG2L @ 0x300002
  3019                           ;	Power-up Timer Enable bit
  3020                           ;	PWRT = OFF, PWRT disabled
  3021                           ;	Brown-out Reset Enable bits
  3022                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3023                           ;	Brown-out Reset Voltage bits
  3024                           ;	BORV = 3, Minimum setting 2.05V
  3025                           ;	USB Voltage Regulator Enable bit
  3026                           ;	VREGEN = OFF, USB voltage regulator disabled
  3027   300002                     	org	3145730
  3028   300002  1F                 	db	31
  3029                           
  3030                           ;Config register CONFIG2H @ 0x300003
  3031                           ;	Watchdog Timer Enable bit
  3032                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3033                           ;	Watchdog Timer Postscale Select bits
  3034                           ;	WDTPS = 32768, 1:32768
  3035   300003                     	org	3145731
  3036   300003  1E                 	db	30
  3037                           
  3038                           ; Padding undefined space
  3039   300004                     	org	3145732
  3040   300004  FF                 	db	255
  3041                           
  3042                           ;Config register CONFIG3H @ 0x300005
  3043                           ;	CCP2 MUX bit
  3044                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  3045                           ;	PORTB A/D Enable bit
  3046                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3047                           ;	Low-Power Timer 1 Oscillator Enable bit
  3048                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3049                           ;	MCLR Pin Enable bit
  3050                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  3051   300005                     	org	3145733
  3052   300005  01                 	db	1
  3053                           
  3054                           ;Config register CONFIG4L @ 0x300006
  3055                           ;	Stack Full/Underflow Reset Enable bit
  3056                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3057                           ;	Single-Supply ICSP Enable bit
  3058                           ;	LVP = OFF, Single-Supply ICSP disabled
  3059                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3060                           ;	ICPRT = OFF, ICPORT disabled
  3061                           ;	Extended Instruction Set Enable bit
  3062                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3063                           ;	Background Debugger Enable bit
  3064                           ;	DEBUG = 0x1, unprogrammed default
  3065   300006                     	org	3145734
  3066   300006  81                 	db	129
  3067                           
  3068                           ; Padding undefined space
  3069   300007                     	org	3145735
  3070   300007  FF                 	db	255
  3071                           
  3072                           ;Config register CONFIG5L @ 0x300008
  3073                           ;	Code Protection bit
  3074                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  3075                           ;	Code Protection bit
  3076                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  3077                           ;	Code Protection bit
  3078                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  3079                           ;	Code Protection bit
  3080                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  3081   300008                     	org	3145736
  3082   300008  0F                 	db	15
  3083                           
  3084                           ;Config register CONFIG5H @ 0x300009
  3085                           ;	Boot Block Code Protection bit
  3086                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  3087                           ;	Data EEPROM Code Protection bit
  3088                           ;	CPD = OFF, Data EEPROM is not code-protected
  3089   300009                     	org	3145737
  3090   300009  C0                 	db	192
  3091                           
  3092                           ;Config register CONFIG6L @ 0x30000A
  3093                           ;	Write Protection bit
  3094                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  3095                           ;	Write Protection bit
  3096                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  3097                           ;	Write Protection bit
  3098                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  3099                           ;	Write Protection bit
  3100                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  3101   30000A                     	org	3145738
  3102   30000A  0F                 	db	15
  3103                           
  3104                           ;Config register CONFIG6H @ 0x30000B
  3105                           ;	Configuration Register Write Protection bit
  3106                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3107                           ;	Boot Block Write Protection bit
  3108                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  3109                           ;	Data EEPROM Write Protection bit
  3110                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3111   30000B                     	org	3145739
  3112   30000B  E0                 	db	224
  3113                           
  3114                           ;Config register CONFIG7L @ 0x30000C
  3115                           ;	Table Read Protection bit
  3116                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3117                           ;	Table Read Protection bit
  3118                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3119                           ;	Table Read Protection bit
  3120                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3121                           ;	Table Read Protection bit
  3122                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  3123   30000C                     	org	3145740
  3124   30000C  0F                 	db	15
  3125                           
  3126                           ;Config register CONFIG7H @ 0x30000D
  3127                           ;	Boot Block Table Read Protection bit
  3128                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  3129   30000D                     	org	3145741
  3130   30000D  40                 	db	64
  3131                           tosu	equ	0xFFF
  3132                           tosh	equ	0xFFE
  3133                           tosl	equ	0xFFD
  3134                           stkptr	equ	0xFFC
  3135                           pclatu	equ	0xFFB
  3136                           pclath	equ	0xFFA
  3137                           pcl	equ	0xFF9
  3138                           tblptru	equ	0xFF8
  3139                           tblptrh	equ	0xFF7
  3140                           tblptrl	equ	0xFF6
  3141                           tablat	equ	0xFF5
  3142                           prodh	equ	0xFF4
  3143                           prodl	equ	0xFF3
  3144                           indf0	equ	0xFEF
  3145                           postinc0	equ	0xFEE
  3146                           postdec0	equ	0xFED
  3147                           preinc0	equ	0xFEC
  3148                           plusw0	equ	0xFEB
  3149                           fsr0h	equ	0xFEA
  3150                           fsr0l	equ	0xFE9
  3151                           wreg	equ	0xFE8
  3152                           indf1	equ	0xFE7
  3153                           postinc1	equ	0xFE6
  3154                           postdec1	equ	0xFE5
  3155                           preinc1	equ	0xFE4
  3156                           plusw1	equ	0xFE3
  3157                           fsr1h	equ	0xFE2
  3158                           fsr1l	equ	0xFE1
  3159                           bsr	equ	0xFE0
  3160                           indf2	equ	0xFDF
  3161                           postinc2	equ	0xFDE
  3162                           postdec2	equ	0xFDD
  3163                           preinc2	equ	0xFDC
  3164                           plusw2	equ	0xFDB
  3165                           fsr2h	equ	0xFDA
  3166                           fsr2l	equ	0xFD9
  3167                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     62      67
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    DHT11_Read@humidity	PTR unsigned char  size(1) Largest target is 1
		 -> main@hum_int(COMRAM[1]), 

    DHT11_Read@temperature	PTR unsigned char  size(1) Largest target is 1
		 -> main@temp_int(COMRAM[1]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer(COMRAM[17]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer(COMRAM[17]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> main@buffer(COMRAM[17]), STR_1(CODE[17]), STR_4(CODE[16]), STR_5(CODE[16]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> main@buffer(COMRAM[17]), STR_1(CODE[17]), STR_4(CODE[16]), STR_5(CODE[16]), 

    S681$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer(COMRAM[17]), 

    S681$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[14]), STR_3(CODE[11]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer(COMRAM[17]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[14]), STR_3(CODE[11]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[14]), STR_3(CODE[11]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_2(CODE[14]), STR_3(CODE[11]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_abs
    _abs->___awmod
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _DHT11_Read->_DHT11_ReadByte
    _ClearLine->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    2922
                                             41 COMRAM    21    21      0
                          _ClearLine
                         _DHT11_Read
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    1833
                                             25 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    1630
                                             21 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           11     8      3    1502
                                             10 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (4) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _DHT11_Read                                          12    10      2     342
                                              2 COMRAM    12    10      2
                     _DHT11_ReadByte
 ---------------------------------------------------------------------------------
 (2) _DHT11_ReadByte                                       2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ClearLine                                            1     1      0     265
                                              9 COMRAM     1     1      0
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     236
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2      76
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearLine
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
   _DHT11_Read
     _DHT11_ReadByte
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
   _sprintf
     _vfprintf
       _vfpfcnvrt
         ___awdiv
         ___awmod
         _abs
           ___awmod (ARG)
         _fputc
           _putch

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      32     20.0%
BITBIGSFRh         127      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     62      67     70.5%
BITBIGSFRl          32      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      99      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Wed Apr 30 17:39:55 2025

           ?_LCD_Command 0001                       l11 0F06                       l22 0C0C  
                     l15 0F30                       l31 0CA2                       l25 0C1A  
                     l18 0F52                       l27 0C28                       l54 109E  
                     l81 1064                       l84 0F00                       l93 0E58  
                     l87 0EAC                       l98 0FCA             ___awdiv@sign 0006  
            ?_LCD_String 0003                      l101 10B6                      l335 0BE0  
                    l348 0D50                      l820 0A40                      l831 101A  
                    l834 1032                      l827 0F90                      l861 0E6C  
                    l846 0DFA                      l782 0FFE                      l871 0E82  
                    l863 0E6E                      l873 0E98                      l865 0E70  
                    l857 10B8                      l875 0E9A                      l867 0E72  
                    l859 0E5C                      l981 0EC2                      l877 0E9C  
                    l869 0E74                      l991 0EEC                      l983 0EC4  
                    l993 0EEE                      l985 0EC6                      l977 0EB0  
                    l995 0EF0                      l987 0EC8                      l979 0EC0  
                    l989 0ED6                      u320 0F14                      u321 0F10  
                    u330 0F2E                      u331 0F2A                      u340 0F3E  
                    u500 0CB4                      u341 0F3A                      u501 0CB0  
                    u350 0F50                      u510 0CCE                      u351 0F4C  
                    u511 0CCA                      u440 0B30                      u520 0CE8  
                    u600 100E                      u441 0B2C                      u521 0CE4  
                    u601 100A                      u610 0E20                      u450 0B4A  
                    u530 0D06                      u451 0B46                      u531 0D02  
                    u620 0E48                      u460 0B70                      u540 0D1C  
                    u700 0970                      u461 0B6C                      u541 0D18  
                    u701 096C                      u630 0E58                      u470 0B8E  
                    u550 0D40                      u710 0980                      u631 0E54  
                    u471 0B8A                      u551 0D3C                      u711 097C  
                    u800 0C4A                      u480 0BAA                      u560 0D62  
                    u720 0990                      u640 086E                      u617 0E16  
                    u801 0C46                      u481 0BA6                      u561 0D5E  
                    u721 098C                      u641 086A                      u810 0C86  
                    u490 0BD0                      u570 0D72                      u730 09D0  
                    u650 08AC                      u627 0E3E                      u811 0C82  
                    u491 0BCC                      u571 0D6E                      u731 09CC  
                    u651 08A8                      u580 0D98                      u740 09F6  
                    u660 08C8                      u820 0A74                      u581 0D94  
                    u741 09F2                      u661 08C4                      u821 0A70  
                    u750 0FA4                      u590 0DCA                      u670 08FE  
                    u751 0FA0                      u591 0DC6                      u671 08F8  
                    u680 0900                      u760 0F88                      u761 0F84  
                    u770 0C0C                      u690 0960                      u907 0EA4  
                    u771 0C08                      u691 095C                      u780 0C1A  
                    u917 0ECE                      u781 0C16                      u837 0B0A  
                    u790 0C28                      u927 0EF8                      u791 0C24  
                    u847 103C                      u857 10AC                      u867 0BEC  
                    u877 0BF8                      u887 0F16                      u897 0E7A  
                    _abs 1000             ___awmod@sign 0006                      wreg 0FE8  
            LCD_Char@dat 0002                     l1201 0B38                     l1211 0B5E  
                   l1203 0B3C                     ?_abs 0007                     l1221 0B94  
                   l1213 0B70                     l1205 0B4A                     l1301 084C  
                   l1071 0F1C                     l1063 0F02                     l1151 1052  
                   l1143 1034                     l1223 0BAA                     l1215 0B78  
                   l1231 0BC0                     l1207 0B52                     l1311 0890  
                   l1303 086E                     l1081 0F50                     l1073 0F20  
                   l1401 0C3A                     l1153 1058                     l1145 1036  
                   l1233 0BD0                     l1225 0BB2                     l1217 0B80  
                   l1209 0B56                     l1241 0CA6                     l1321 0902  
                   l1313 08AC                     l1305 0876                     l1075 0F2E  
                   l1403 0C4A                     l1411 0CA0                     l1155 105E  
                   l1147 1046                     l1235 0BD8                     l1227 0BB4  
                   l1219 0B8E                     l1251 0CD6                     l1243 0CB4  
                   l1331 0980                     l1323 0932                     l1315 08C8  
                   l1307 0882                     l1077 0F3E                     l1069 0F14  
                   l1405 0C86                     l1157 10A0                     l1149 104C  
                   l1229 0BBA                     l1261 0D1C                     l1253 0CE8  
                   l1245 0CBC                     l1333 0990                     l1325 094E  
                   l1317 08E0                     l1341 09D4                     l1309 0886  
                   l1421 0FDC                     l1415 1088                     l1079 0F40  
                   l1407 0C9A                     l1159 10A6                     l1271 0D48  
                   l1263 0D24                     l1255 0CF0                     l1247 0CC0  
                   l1239 0CA4                     l1343 09F6                     l1335 09A2  
                   l1327 0960                     l1319 08EA                     l1423 0FE4  
                   l1431 0A46                     l1361 0F94                     l1265 0D2A  
                   l1257 0CF8                     l1249 0CCE                     l1281 0D7C  
                   l1345 09FE                     l1337 09BC                     l1329 0970  
                   l1353 0A1E                     l1425 0FF4                     l1417 0FCC  
                   l1441 0A80                     l1433 0A50                     l1363 0FA4  
                   l1195 0B20                     l1259 0D06                     l1267 0D30  
                   l1291 100E                     l1283 0D98                     l1275 0D52  
                   l1339 09BE                     l1371 0F54                     l1419 0FD4  
                   l1443 0A92                     l1435 0A54                     l1293 0DFC  
                   l1365 0FB0                     l1381 0BE2                     l1197 0B22  
                   l1269 0D40                     l1285 0DCA                     l1277 0D62  
                   l1349 0A12                     l1373 0F5C                     l1445 0AB4  
                   l1437 0A58                     l1429 0A42                     l1295 0E00  
                   l1367 0FB8                     l1359 0F94                     l1383 0BE6  
                   l1199 0B30                     l1279 0D72                     l1375 0F6C  
                   l1439 0A74                     l1447 0AC8                     l1297 0E24  
                   l1369 0FBE                     l1385 0BF4                     l1289 1000  
                   l1377 0F88                     l1449 0B00                     l1299 0E28  
                   l1387 0BFC                     l1397 0C2A                     l1389 0BFE  
                   l1399 0C38                     STR_1 0801                     STR_2 0832  
                   STR_3 0840                     STR_4 0822                     STR_5 0812  
                   _LATD 0F8C              main@hum_int 003D                     abs@a 0007  
                   _dbuf 0060                     _main 0A42                     _prec 0041  
                   fsr1h 0FE2                     fsr2h 0FDA                     indf1 0FE7  
                   indf2 0FDF                     fsr1l 0FE1                     fsr2l 0FD9  
                   start 7FFC         ??_DHT11_ReadByte 0001            _LCD_String_xy 0F92  
           ___param_bank 0000                    ??_abs 0009         __end_of_LCD_Char 0EAE  
       __end_of_LCD_Init 1066                    ?_main 0001          __end_of___awdiv 0BE2  
        __end_of___awmod 0D52                    _CMCON 0FB4          ___awdiv@divisor 0003  
                  _LATD0 7C60                    _LATD1 7C61          ___awdiv@counter 0005  
           vfpfcnvrt@fmt 000C                    _TRISD 0F95                    _flags 0043  
                  _fputc 0D52                    _width 003F                    _putch 10B8  
           main@temp_int 003E                    tablat 0FF5                    status 0FD8  
        __end_of_sprintf 1000           ?_LCD_String_xy 0005          __initialization 1066  
           __end_of_main 0B20                   ??_main 002A        __end_of_LCD_Clear 10B8  
          __activetblptr 0002            ClearLine@line 000A                   _ADCON1 0FC1  
                 ?_fputc 0001         ___awdiv@dividend 0001                   ?_putch 0001  
       LCD_String_xy@msg 0006         LCD_String_xy@pos 0005         LCD_String_xy@row 0008  
                 _OSCCON 0FD3            vfpfcnvrt@done 000F             ??_DHT11_Read 0005  
           vfprintf@cfmt 0019                ??___awdiv 0005                ??___awmod 0005  
                 clear_0 106C         ___awdiv@quotient 0007          ___awmod@divisor 0003  
                 isa$std 0001          ___awmod@counter 0005                   fputc@c 0001  
           __mediumconst 0800                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8       __end_of_DHT11_Read 0CA4                   putch@c 0001  
       __end_of_vfprintf 0F92                ??_sprintf 001E        __end_of_ClearLine 10A0  
              ?_LCD_Char 0001               __accesstop 0060  __end_of__initialization 107C  
              ?_LCD_Init 0001          ??_LCD_String_xy 0008            ___rparam_used 0001  
         __pcstackCOMRAM 0001            __end_of_fputc 0DFC            __end_of_putch 10BA  
           ??_LCD_String 0005                  ??_fputc 0004                  ??_putch 0001  
             __pbssBANK0 0060               ??_LCD_Char 0001               ??_LCD_Init 0003  
     __end_of_LCD_String 0E5A            LCD_String@msg 0003                  __Hparam 0000  
                __Lparam 0000                  ___awdiv 0B20                  ___awmod 0CA4  
              ?_vfprintf 0016             __psmallconst 0800                  __pcinit 1066  
                __ramtop 0800                  __ptext0 0A42                  __ptext1 0FCC  
                __ptext2 0F54                  __ptext3 084C                  __ptext4 0D52  
                __ptext5 10B8                  __ptext6 1000                  __ptext7 0CA4  
                __ptext8 0B20                  __ptext9 1034         ___awmod@dividend 0001  
              _LCD_Clear 10A0                  _sprintf 0FCC     end_of_initialization 107C  
                fputc@fp 0003           LCD_Command@cmd 0002            __Lmediumconst 0000  
      __end_of_vfpfcnvrt 0A42                  postdec2 0FDD                  postinc0 0FEE  
                postinc1 0FE6                  postinc2 0FDE         vfpfcnvrt@convarg 0011  
  DHT11_Read@temperature 0004               ??_vfprintf 0019                _PORTAbits 0F80  
              _TRISAbits 0F92               ?_LCD_Clear 0001               main@buffer 002C  
              _ClearLine 1086            ??_LCD_Command 0001              vfpfcnvrt@ap 000D  
            vfpfcnvrt@cp 0010              vfpfcnvrt@fp 000B       DHT11_Read@humidity 0003  
    start_initialization 1066              __end_of_abs 1034       DHT11_ReadByte@data 0001  
  __end_of_LCD_String_xy 0FCC               ?_ClearLine 0001              vfprintf@fmt 0017  
    __end_of_LCD_Command 0F02              __pbssCOMRAM 003F              ??_LCD_Clear 0003  
               ?___awdiv 0001                 ?___awmod 0001           _DHT11_ReadByte 0F02  
            __smallconst 0800    LCD_String_xy@location 0009                 ?_sprintf 001A  
               _LCD_Char 0E5A                 _LCD_Init 1034              ??_ClearLine 000A  
            DHT11_Read@i 000E   __end_of_DHT11_ReadByte 0F54              _LCD_Command 0EAE  
              _vfpfcnvrt 084C               vfpfcnvrt@c 0015               _DHT11_Read 0BE2  
               __Hrparam 0000               vfprintf@ap 0018                 __Lrparam 0000  
             vfprintf@fp 0016          ?_DHT11_ReadByte 0001               ?_vfpfcnvrt 000B  
        DHT11_ReadByte@i 0002               sprintf@fmt 001B                 __ptext10 10A0  
               __ptext11 0BE2                 __ptext12 0F02                 __ptext13 1086  
               __ptext14 0F92                 __ptext15 0DFC                 __ptext16 0E5A  
               __ptext17 0EAE                 isa$xinst 0000                 _vfprintf 0F54  
             _LCD_String 0DFC           DHT11_Read@data 0009                sprintf@ap 001E  
            ?_DHT11_Read 0003              ??_vfpfcnvrt 000E                 sprintf@f 001F  
               sprintf@s 001A  
