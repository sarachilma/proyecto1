

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Apr 07 20:50:33 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000FE0                     bsr             equ	4064
    58   000FE9                     fsr0            equ	4073
    59   000FEA                     fsr0h           equ	4074
    60   000FE9                     fsr0l           equ	4073
    61   000FE1                     fsr1            equ	4065
    62   000FE2                     fsr1h           equ	4066
    63   000FE1                     fsr1l           equ	4065
    64   000FD9                     fsr2            equ	4057
    65   000FDA                     fsr2h           equ	4058
    66   000FD9                     fsr2l           equ	4057
    67   000FEF                     indf0           equ	4079
    68   000FE7                     indf1           equ	4071
    69   000FDF                     indf2           equ	4063
    70   000FF2                     intcon          equ	4082
    71   000000                     nvmcon          equ	0
    72   000FF9                     pcl             equ	4089
    73   000FFA                     pclath          equ	4090
    74   000FFB                     pclatu          equ	4091
    75   000FEB                     plusw0          equ	4075
    76   000FE3                     plusw1          equ	4067
    77   000FDB                     plusw2          equ	4059
    78   000FED                     postdec0        equ	4077
    79   000FE5                     postdec1        equ	4069
    80   000FDD                     postdec2        equ	4061
    81   000FEE                     postinc0        equ	4078
    82   000FE6                     postinc1        equ	4070
    83   000FDE                     postinc2        equ	4062
    84   000FEC                     preinc0         equ	4076
    85   000FE4                     preinc1         equ	4068
    86   000FDC                     preinc2         equ	4060
    87   000FF3                     prod            equ	4083
    88   000FF4                     prodh           equ	4084
    89   000FF3                     prodl           equ	4083
    90   000FD8                     status          equ	4056
    91   000FF5                     tablat          equ	4085
    92   000FF6                     tblptr          equ	4086
    93   000FF7                     tblptrh         equ	4087
    94   000FF6                     tblptrl         equ	4086
    95   000FF8                     tblptru         equ	4088
    96   000FFD                     tosl            equ	4093
    97   000FE8                     wreg            equ	4072
    98   000F62                     SPPDATA         equ	3938	;# 
    99   000F63                     SPPCFG          equ	3939	;# 
   100   000F64                     SPPEPS          equ	3940	;# 
   101   000F65                     SPPCON          equ	3941	;# 
   102   000F66                     UFRM            equ	3942	;# 
   103   000F66                     UFRML           equ	3942	;# 
   104   000F67                     UFRMH           equ	3943	;# 
   105   000F68                     UIR             equ	3944	;# 
   106   000F69                     UIE             equ	3945	;# 
   107   000F6A                     UEIR            equ	3946	;# 
   108   000F6B                     UEIE            equ	3947	;# 
   109   000F6C                     USTAT           equ	3948	;# 
   110   000F6D                     UCON            equ	3949	;# 
   111   000F6E                     UADDR           equ	3950	;# 
   112   000F6F                     UCFG            equ	3951	;# 
   113   000F70                     UEP0            equ	3952	;# 
   114   000F71                     UEP1            equ	3953	;# 
   115   000F72                     UEP2            equ	3954	;# 
   116   000F73                     UEP3            equ	3955	;# 
   117   000F74                     UEP4            equ	3956	;# 
   118   000F75                     UEP5            equ	3957	;# 
   119   000F76                     UEP6            equ	3958	;# 
   120   000F77                     UEP7            equ	3959	;# 
   121   000F78                     UEP8            equ	3960	;# 
   122   000F79                     UEP9            equ	3961	;# 
   123   000F7A                     UEP10           equ	3962	;# 
   124   000F7B                     UEP11           equ	3963	;# 
   125   000F7C                     UEP12           equ	3964	;# 
   126   000F7D                     UEP13           equ	3965	;# 
   127   000F7E                     UEP14           equ	3966	;# 
   128   000F7F                     UEP15           equ	3967	;# 
   129   000F80                     PORTA           equ	3968	;# 
   130   000F81                     PORTB           equ	3969	;# 
   131   000F82                     PORTC           equ	3970	;# 
   132   000F83                     PORTD           equ	3971	;# 
   133   000F84                     PORTE           equ	3972	;# 
   134   000F89                     LATA            equ	3977	;# 
   135   000F8A                     LATB            equ	3978	;# 
   136   000F8B                     LATC            equ	3979	;# 
   137   000F8C                     LATD            equ	3980	;# 
   138   000F8D                     LATE            equ	3981	;# 
   139   000F92                     TRISA           equ	3986	;# 
   140   000F92                     DDRA            equ	3986	;# 
   141   000F93                     TRISB           equ	3987	;# 
   142   000F93                     DDRB            equ	3987	;# 
   143   000F94                     TRISC           equ	3988	;# 
   144   000F94                     DDRC            equ	3988	;# 
   145   000F95                     TRISD           equ	3989	;# 
   146   000F95                     DDRD            equ	3989	;# 
   147   000F96                     TRISE           equ	3990	;# 
   148   000F96                     DDRE            equ	3990	;# 
   149   000F9B                     OSCTUNE         equ	3995	;# 
   150   000F9D                     PIE1            equ	3997	;# 
   151   000F9E                     PIR1            equ	3998	;# 
   152   000F9F                     IPR1            equ	3999	;# 
   153   000FA0                     PIE2            equ	4000	;# 
   154   000FA1                     PIR2            equ	4001	;# 
   155   000FA2                     IPR2            equ	4002	;# 
   156   000FA6                     EECON1          equ	4006	;# 
   157   000FA7                     EECON2          equ	4007	;# 
   158   000FA8                     EEDATA          equ	4008	;# 
   159   000FA9                     EEADR           equ	4009	;# 
   160   000FAB                     RCSTA           equ	4011	;# 
   161   000FAB                     RCSTA1          equ	4011	;# 
   162   000FAC                     TXSTA           equ	4012	;# 
   163   000FAC                     TXSTA1          equ	4012	;# 
   164   000FAD                     TXREG           equ	4013	;# 
   165   000FAD                     TXREG1          equ	4013	;# 
   166   000FAE                     RCREG           equ	4014	;# 
   167   000FAE                     RCREG1          equ	4014	;# 
   168   000FAF                     SPBRG           equ	4015	;# 
   169   000FAF                     SPBRG1          equ	4015	;# 
   170   000FB0                     SPBRGH          equ	4016	;# 
   171   000FB1                     T3CON           equ	4017	;# 
   172   000FB2                     TMR3            equ	4018	;# 
   173   000FB2                     TMR3L           equ	4018	;# 
   174   000FB3                     TMR3H           equ	4019	;# 
   175   000FB4                     CMCON           equ	4020	;# 
   176   000FB5                     CVRCON          equ	4021	;# 
   177   000FB6                     ECCP1AS         equ	4022	;# 
   178   000FB6                     CCP1AS          equ	4022	;# 
   179   000FB7                     ECCP1DEL        equ	4023	;# 
   180   000FB7                     CCP1DEL         equ	4023	;# 
   181   000FB8                     BAUDCON         equ	4024	;# 
   182   000FB8                     BAUDCTL         equ	4024	;# 
   183   000FBA                     CCP2CON         equ	4026	;# 
   184   000FBB                     CCPR2           equ	4027	;# 
   185   000FBB                     CCPR2L          equ	4027	;# 
   186   000FBC                     CCPR2H          equ	4028	;# 
   187   000FBD                     CCP1CON         equ	4029	;# 
   188   000FBD                     ECCP1CON        equ	4029	;# 
   189   000FBE                     CCPR1           equ	4030	;# 
   190   000FBE                     CCPR1L          equ	4030	;# 
   191   000FBF                     CCPR1H          equ	4031	;# 
   192   000FC0                     ADCON2          equ	4032	;# 
   193   000FC1                     ADCON1          equ	4033	;# 
   194   000FC2                     ADCON0          equ	4034	;# 
   195   000FC3                     ADRES           equ	4035	;# 
   196   000FC3                     ADRESL          equ	4035	;# 
   197   000FC4                     ADRESH          equ	4036	;# 
   198   000FC5                     SSPCON2         equ	4037	;# 
   199   000FC6                     SSPCON1         equ	4038	;# 
   200   000FC7                     SSPSTAT         equ	4039	;# 
   201   000FC8                     SSPADD          equ	4040	;# 
   202   000FC9                     SSPBUF          equ	4041	;# 
   203   000FCA                     T2CON           equ	4042	;# 
   204   000FCB                     PR2             equ	4043	;# 
   205   000FCB                     MEMCON          equ	4043	;# 
   206   000FCC                     TMR2            equ	4044	;# 
   207   000FCD                     T1CON           equ	4045	;# 
   208   000FCE                     TMR1            equ	4046	;# 
   209   000FCE                     TMR1L           equ	4046	;# 
   210   000FCF                     TMR1H           equ	4047	;# 
   211   000FD0                     RCON            equ	4048	;# 
   212   000FD1                     WDTCON          equ	4049	;# 
   213   000FD2                     HLVDCON         equ	4050	;# 
   214   000FD2                     LVDCON          equ	4050	;# 
   215   000FD3                     OSCCON          equ	4051	;# 
   216   000FD5                     T0CON           equ	4053	;# 
   217   000FD6                     TMR0            equ	4054	;# 
   218   000FD6                     TMR0L           equ	4054	;# 
   219   000FD7                     TMR0H           equ	4055	;# 
   220   000FD8                     STATUS          equ	4056	;# 
   221   000FD9                     FSR2            equ	4057	;# 
   222   000FD9                     FSR2L           equ	4057	;# 
   223   000FDA                     FSR2H           equ	4058	;# 
   224   000FDB                     PLUSW2          equ	4059	;# 
   225   000FDC                     PREINC2         equ	4060	;# 
   226   000FDD                     POSTDEC2        equ	4061	;# 
   227   000FDE                     POSTINC2        equ	4062	;# 
   228   000FDF                     INDF2           equ	4063	;# 
   229   000FE0                     BSR             equ	4064	;# 
   230   000FE1                     FSR1            equ	4065	;# 
   231   000FE1                     FSR1L           equ	4065	;# 
   232   000FE2                     FSR1H           equ	4066	;# 
   233   000FE3                     PLUSW1          equ	4067	;# 
   234   000FE4                     PREINC1         equ	4068	;# 
   235   000FE5                     POSTDEC1        equ	4069	;# 
   236   000FE6                     POSTINC1        equ	4070	;# 
   237   000FE7                     INDF1           equ	4071	;# 
   238   000FE8                     WREG            equ	4072	;# 
   239   000FE9                     FSR0            equ	4073	;# 
   240   000FE9                     FSR0L           equ	4073	;# 
   241   000FEA                     FSR0H           equ	4074	;# 
   242   000FEB                     PLUSW0          equ	4075	;# 
   243   000FEC                     PREINC0         equ	4076	;# 
   244   000FED                     POSTDEC0        equ	4077	;# 
   245   000FEE                     POSTINC0        equ	4078	;# 
   246   000FEF                     INDF0           equ	4079	;# 
   247   000FF0                     INTCON3         equ	4080	;# 
   248   000FF1                     INTCON2         equ	4081	;# 
   249   000FF2                     INTCON          equ	4082	;# 
   250   000FF3                     PROD            equ	4083	;# 
   251   000FF3                     PRODL           equ	4083	;# 
   252   000FF4                     PRODH           equ	4084	;# 
   253   000FF5                     TABLAT          equ	4085	;# 
   254   000FF6                     TBLPTR          equ	4086	;# 
   255   000FF6                     TBLPTRL         equ	4086	;# 
   256   000FF7                     TBLPTRH         equ	4087	;# 
   257   000FF8                     TBLPTRU         equ	4088	;# 
   258   000FF9                     PCLAT           equ	4089	;# 
   259   000FF9                     PC              equ	4089	;# 
   260   000FF9                     PCL             equ	4089	;# 
   261   000FFA                     PCLATH          equ	4090	;# 
   262   000FFB                     PCLATU          equ	4091	;# 
   263   000FFC                     STKPTR          equ	4092	;# 
   264   000FFD                     TOS             equ	4093	;# 
   265   000FFD                     TOSL            equ	4093	;# 
   266   000FFE                     TOSH            equ	4094	;# 
   267   000FFF                     TOSU            equ	4095	;# 
   268   000F62                     SPPDATA         equ	3938	;# 
   269   000F63                     SPPCFG          equ	3939	;# 
   270   000F64                     SPPEPS          equ	3940	;# 
   271   000F65                     SPPCON          equ	3941	;# 
   272   000F66                     UFRM            equ	3942	;# 
   273   000F66                     UFRML           equ	3942	;# 
   274   000F67                     UFRMH           equ	3943	;# 
   275   000F68                     UIR             equ	3944	;# 
   276   000F69                     UIE             equ	3945	;# 
   277   000F6A                     UEIR            equ	3946	;# 
   278   000F6B                     UEIE            equ	3947	;# 
   279   000F6C                     USTAT           equ	3948	;# 
   280   000F6D                     UCON            equ	3949	;# 
   281   000F6E                     UADDR           equ	3950	;# 
   282   000F6F                     UCFG            equ	3951	;# 
   283   000F70                     UEP0            equ	3952	;# 
   284   000F71                     UEP1            equ	3953	;# 
   285   000F72                     UEP2            equ	3954	;# 
   286   000F73                     UEP3            equ	3955	;# 
   287   000F74                     UEP4            equ	3956	;# 
   288   000F75                     UEP5            equ	3957	;# 
   289   000F76                     UEP6            equ	3958	;# 
   290   000F77                     UEP7            equ	3959	;# 
   291   000F78                     UEP8            equ	3960	;# 
   292   000F79                     UEP9            equ	3961	;# 
   293   000F7A                     UEP10           equ	3962	;# 
   294   000F7B                     UEP11           equ	3963	;# 
   295   000F7C                     UEP12           equ	3964	;# 
   296   000F7D                     UEP13           equ	3965	;# 
   297   000F7E                     UEP14           equ	3966	;# 
   298   000F7F                     UEP15           equ	3967	;# 
   299   000F80                     PORTA           equ	3968	;# 
   300   000F81                     PORTB           equ	3969	;# 
   301   000F82                     PORTC           equ	3970	;# 
   302   000F83                     PORTD           equ	3971	;# 
   303   000F84                     PORTE           equ	3972	;# 
   304   000F89                     LATA            equ	3977	;# 
   305   000F8A                     LATB            equ	3978	;# 
   306   000F8B                     LATC            equ	3979	;# 
   307   000F8C                     LATD            equ	3980	;# 
   308   000F8D                     LATE            equ	3981	;# 
   309   000F92                     TRISA           equ	3986	;# 
   310   000F92                     DDRA            equ	3986	;# 
   311   000F93                     TRISB           equ	3987	;# 
   312   000F93                     DDRB            equ	3987	;# 
   313   000F94                     TRISC           equ	3988	;# 
   314   000F94                     DDRC            equ	3988	;# 
   315   000F95                     TRISD           equ	3989	;# 
   316   000F95                     DDRD            equ	3989	;# 
   317   000F96                     TRISE           equ	3990	;# 
   318   000F96                     DDRE            equ	3990	;# 
   319   000F9B                     OSCTUNE         equ	3995	;# 
   320   000F9D                     PIE1            equ	3997	;# 
   321   000F9E                     PIR1            equ	3998	;# 
   322   000F9F                     IPR1            equ	3999	;# 
   323   000FA0                     PIE2            equ	4000	;# 
   324   000FA1                     PIR2            equ	4001	;# 
   325   000FA2                     IPR2            equ	4002	;# 
   326   000FA6                     EECON1          equ	4006	;# 
   327   000FA7                     EECON2          equ	4007	;# 
   328   000FA8                     EEDATA          equ	4008	;# 
   329   000FA9                     EEADR           equ	4009	;# 
   330   000FAB                     RCSTA           equ	4011	;# 
   331   000FAB                     RCSTA1          equ	4011	;# 
   332   000FAC                     TXSTA           equ	4012	;# 
   333   000FAC                     TXSTA1          equ	4012	;# 
   334   000FAD                     TXREG           equ	4013	;# 
   335   000FAD                     TXREG1          equ	4013	;# 
   336   000FAE                     RCREG           equ	4014	;# 
   337   000FAE                     RCREG1          equ	4014	;# 
   338   000FAF                     SPBRG           equ	4015	;# 
   339   000FAF                     SPBRG1          equ	4015	;# 
   340   000FB0                     SPBRGH          equ	4016	;# 
   341   000FB1                     T3CON           equ	4017	;# 
   342   000FB2                     TMR3            equ	4018	;# 
   343   000FB2                     TMR3L           equ	4018	;# 
   344   000FB3                     TMR3H           equ	4019	;# 
   345   000FB4                     CMCON           equ	4020	;# 
   346   000FB5                     CVRCON          equ	4021	;# 
   347   000FB6                     ECCP1AS         equ	4022	;# 
   348   000FB6                     CCP1AS          equ	4022	;# 
   349   000FB7                     ECCP1DEL        equ	4023	;# 
   350   000FB7                     CCP1DEL         equ	4023	;# 
   351   000FB8                     BAUDCON         equ	4024	;# 
   352   000FB8                     BAUDCTL         equ	4024	;# 
   353   000FBA                     CCP2CON         equ	4026	;# 
   354   000FBB                     CCPR2           equ	4027	;# 
   355   000FBB                     CCPR2L          equ	4027	;# 
   356   000FBC                     CCPR2H          equ	4028	;# 
   357   000FBD                     CCP1CON         equ	4029	;# 
   358   000FBD                     ECCP1CON        equ	4029	;# 
   359   000FBE                     CCPR1           equ	4030	;# 
   360   000FBE                     CCPR1L          equ	4030	;# 
   361   000FBF                     CCPR1H          equ	4031	;# 
   362   000FC0                     ADCON2          equ	4032	;# 
   363   000FC1                     ADCON1          equ	4033	;# 
   364   000FC2                     ADCON0          equ	4034	;# 
   365   000FC3                     ADRES           equ	4035	;# 
   366   000FC3                     ADRESL          equ	4035	;# 
   367   000FC4                     ADRESH          equ	4036	;# 
   368   000FC5                     SSPCON2         equ	4037	;# 
   369   000FC6                     SSPCON1         equ	4038	;# 
   370   000FC7                     SSPSTAT         equ	4039	;# 
   371   000FC8                     SSPADD          equ	4040	;# 
   372   000FC9                     SSPBUF          equ	4041	;# 
   373   000FCA                     T2CON           equ	4042	;# 
   374   000FCB                     PR2             equ	4043	;# 
   375   000FCB                     MEMCON          equ	4043	;# 
   376   000FCC                     TMR2            equ	4044	;# 
   377   000FCD                     T1CON           equ	4045	;# 
   378   000FCE                     TMR1            equ	4046	;# 
   379   000FCE                     TMR1L           equ	4046	;# 
   380   000FCF                     TMR1H           equ	4047	;# 
   381   000FD0                     RCON            equ	4048	;# 
   382   000FD1                     WDTCON          equ	4049	;# 
   383   000FD2                     HLVDCON         equ	4050	;# 
   384   000FD2                     LVDCON          equ	4050	;# 
   385   000FD3                     OSCCON          equ	4051	;# 
   386   000FD5                     T0CON           equ	4053	;# 
   387   000FD6                     TMR0            equ	4054	;# 
   388   000FD6                     TMR0L           equ	4054	;# 
   389   000FD7                     TMR0H           equ	4055	;# 
   390   000FD8                     STATUS          equ	4056	;# 
   391   000FD9                     FSR2            equ	4057	;# 
   392   000FD9                     FSR2L           equ	4057	;# 
   393   000FDA                     FSR2H           equ	4058	;# 
   394   000FDB                     PLUSW2          equ	4059	;# 
   395   000FDC                     PREINC2         equ	4060	;# 
   396   000FDD                     POSTDEC2        equ	4061	;# 
   397   000FDE                     POSTINC2        equ	4062	;# 
   398   000FDF                     INDF2           equ	4063	;# 
   399   000FE0                     BSR             equ	4064	;# 
   400   000FE1                     FSR1            equ	4065	;# 
   401   000FE1                     FSR1L           equ	4065	;# 
   402   000FE2                     FSR1H           equ	4066	;# 
   403   000FE3                     PLUSW1          equ	4067	;# 
   404   000FE4                     PREINC1         equ	4068	;# 
   405   000FE5                     POSTDEC1        equ	4069	;# 
   406   000FE6                     POSTINC1        equ	4070	;# 
   407   000FE7                     INDF1           equ	4071	;# 
   408   000FE8                     WREG            equ	4072	;# 
   409   000FE9                     FSR0            equ	4073	;# 
   410   000FE9                     FSR0L           equ	4073	;# 
   411   000FEA                     FSR0H           equ	4074	;# 
   412   000FEB                     PLUSW0          equ	4075	;# 
   413   000FEC                     PREINC0         equ	4076	;# 
   414   000FED                     POSTDEC0        equ	4077	;# 
   415   000FEE                     POSTINC0        equ	4078	;# 
   416   000FEF                     INDF0           equ	4079	;# 
   417   000FF0                     INTCON3         equ	4080	;# 
   418   000FF1                     INTCON2         equ	4081	;# 
   419   000FF2                     INTCON          equ	4082	;# 
   420   000FF3                     PROD            equ	4083	;# 
   421   000FF3                     PRODL           equ	4083	;# 
   422   000FF4                     PRODH           equ	4084	;# 
   423   000FF5                     TABLAT          equ	4085	;# 
   424   000FF6                     TBLPTR          equ	4086	;# 
   425   000FF6                     TBLPTRL         equ	4086	;# 
   426   000FF7                     TBLPTRH         equ	4087	;# 
   427   000FF8                     TBLPTRU         equ	4088	;# 
   428   000FF9                     PCLAT           equ	4089	;# 
   429   000FF9                     PC              equ	4089	;# 
   430   000FF9                     PCL             equ	4089	;# 
   431   000FFA                     PCLATH          equ	4090	;# 
   432   000FFB                     PCLATU          equ	4091	;# 
   433   000FFC                     STKPTR          equ	4092	;# 
   434   000FFD                     TOS             equ	4093	;# 
   435   000FFD                     TOSL            equ	4093	;# 
   436   000FFE                     TOSH            equ	4094	;# 
   437   000FFF                     TOSU            equ	4095	;# 
   438   000F62                     SPPDATA         equ	3938	;# 
   439   000F63                     SPPCFG          equ	3939	;# 
   440   000F64                     SPPEPS          equ	3940	;# 
   441   000F65                     SPPCON          equ	3941	;# 
   442   000F66                     UFRM            equ	3942	;# 
   443   000F66                     UFRML           equ	3942	;# 
   444   000F67                     UFRMH           equ	3943	;# 
   445   000F68                     UIR             equ	3944	;# 
   446   000F69                     UIE             equ	3945	;# 
   447   000F6A                     UEIR            equ	3946	;# 
   448   000F6B                     UEIE            equ	3947	;# 
   449   000F6C                     USTAT           equ	3948	;# 
   450   000F6D                     UCON            equ	3949	;# 
   451   000F6E                     UADDR           equ	3950	;# 
   452   000F6F                     UCFG            equ	3951	;# 
   453   000F70                     UEP0            equ	3952	;# 
   454   000F71                     UEP1            equ	3953	;# 
   455   000F72                     UEP2            equ	3954	;# 
   456   000F73                     UEP3            equ	3955	;# 
   457   000F74                     UEP4            equ	3956	;# 
   458   000F75                     UEP5            equ	3957	;# 
   459   000F76                     UEP6            equ	3958	;# 
   460   000F77                     UEP7            equ	3959	;# 
   461   000F78                     UEP8            equ	3960	;# 
   462   000F79                     UEP9            equ	3961	;# 
   463   000F7A                     UEP10           equ	3962	;# 
   464   000F7B                     UEP11           equ	3963	;# 
   465   000F7C                     UEP12           equ	3964	;# 
   466   000F7D                     UEP13           equ	3965	;# 
   467   000F7E                     UEP14           equ	3966	;# 
   468   000F7F                     UEP15           equ	3967	;# 
   469   000F80                     PORTA           equ	3968	;# 
   470   000F81                     PORTB           equ	3969	;# 
   471   000F82                     PORTC           equ	3970	;# 
   472   000F83                     PORTD           equ	3971	;# 
   473   000F84                     PORTE           equ	3972	;# 
   474   000F89                     LATA            equ	3977	;# 
   475   000F8A                     LATB            equ	3978	;# 
   476   000F8B                     LATC            equ	3979	;# 
   477   000F8C                     LATD            equ	3980	;# 
   478   000F8D                     LATE            equ	3981	;# 
   479   000F92                     TRISA           equ	3986	;# 
   480   000F92                     DDRA            equ	3986	;# 
   481   000F93                     TRISB           equ	3987	;# 
   482   000F93                     DDRB            equ	3987	;# 
   483   000F94                     TRISC           equ	3988	;# 
   484   000F94                     DDRC            equ	3988	;# 
   485   000F95                     TRISD           equ	3989	;# 
   486   000F95                     DDRD            equ	3989	;# 
   487   000F96                     TRISE           equ	3990	;# 
   488   000F96                     DDRE            equ	3990	;# 
   489   000F9B                     OSCTUNE         equ	3995	;# 
   490   000F9D                     PIE1            equ	3997	;# 
   491   000F9E                     PIR1            equ	3998	;# 
   492   000F9F                     IPR1            equ	3999	;# 
   493   000FA0                     PIE2            equ	4000	;# 
   494   000FA1                     PIR2            equ	4001	;# 
   495   000FA2                     IPR2            equ	4002	;# 
   496   000FA6                     EECON1          equ	4006	;# 
   497   000FA7                     EECON2          equ	4007	;# 
   498   000FA8                     EEDATA          equ	4008	;# 
   499   000FA9                     EEADR           equ	4009	;# 
   500   000FAB                     RCSTA           equ	4011	;# 
   501   000FAB                     RCSTA1          equ	4011	;# 
   502   000FAC                     TXSTA           equ	4012	;# 
   503   000FAC                     TXSTA1          equ	4012	;# 
   504   000FAD                     TXREG           equ	4013	;# 
   505   000FAD                     TXREG1          equ	4013	;# 
   506   000FAE                     RCREG           equ	4014	;# 
   507   000FAE                     RCREG1          equ	4014	;# 
   508   000FAF                     SPBRG           equ	4015	;# 
   509   000FAF                     SPBRG1          equ	4015	;# 
   510   000FB0                     SPBRGH          equ	4016	;# 
   511   000FB1                     T3CON           equ	4017	;# 
   512   000FB2                     TMR3            equ	4018	;# 
   513   000FB2                     TMR3L           equ	4018	;# 
   514   000FB3                     TMR3H           equ	4019	;# 
   515   000FB4                     CMCON           equ	4020	;# 
   516   000FB5                     CVRCON          equ	4021	;# 
   517   000FB6                     ECCP1AS         equ	4022	;# 
   518   000FB6                     CCP1AS          equ	4022	;# 
   519   000FB7                     ECCP1DEL        equ	4023	;# 
   520   000FB7                     CCP1DEL         equ	4023	;# 
   521   000FB8                     BAUDCON         equ	4024	;# 
   522   000FB8                     BAUDCTL         equ	4024	;# 
   523   000FBA                     CCP2CON         equ	4026	;# 
   524   000FBB                     CCPR2           equ	4027	;# 
   525   000FBB                     CCPR2L          equ	4027	;# 
   526   000FBC                     CCPR2H          equ	4028	;# 
   527   000FBD                     CCP1CON         equ	4029	;# 
   528   000FBD                     ECCP1CON        equ	4029	;# 
   529   000FBE                     CCPR1           equ	4030	;# 
   530   000FBE                     CCPR1L          equ	4030	;# 
   531   000FBF                     CCPR1H          equ	4031	;# 
   532   000FC0                     ADCON2          equ	4032	;# 
   533   000FC1                     ADCON1          equ	4033	;# 
   534   000FC2                     ADCON0          equ	4034	;# 
   535   000FC3                     ADRES           equ	4035	;# 
   536   000FC3                     ADRESL          equ	4035	;# 
   537   000FC4                     ADRESH          equ	4036	;# 
   538   000FC5                     SSPCON2         equ	4037	;# 
   539   000FC6                     SSPCON1         equ	4038	;# 
   540   000FC7                     SSPSTAT         equ	4039	;# 
   541   000FC8                     SSPADD          equ	4040	;# 
   542   000FC9                     SSPBUF          equ	4041	;# 
   543   000FCA                     T2CON           equ	4042	;# 
   544   000FCB                     PR2             equ	4043	;# 
   545   000FCB                     MEMCON          equ	4043	;# 
   546   000FCC                     TMR2            equ	4044	;# 
   547   000FCD                     T1CON           equ	4045	;# 
   548   000FCE                     TMR1            equ	4046	;# 
   549   000FCE                     TMR1L           equ	4046	;# 
   550   000FCF                     TMR1H           equ	4047	;# 
   551   000FD0                     RCON            equ	4048	;# 
   552   000FD1                     WDTCON          equ	4049	;# 
   553   000FD2                     HLVDCON         equ	4050	;# 
   554   000FD2                     LVDCON          equ	4050	;# 
   555   000FD3                     OSCCON          equ	4051	;# 
   556   000FD5                     T0CON           equ	4053	;# 
   557   000FD6                     TMR0            equ	4054	;# 
   558   000FD6                     TMR0L           equ	4054	;# 
   559   000FD7                     TMR0H           equ	4055	;# 
   560   000FD8                     STATUS          equ	4056	;# 
   561   000FD9                     FSR2            equ	4057	;# 
   562   000FD9                     FSR2L           equ	4057	;# 
   563   000FDA                     FSR2H           equ	4058	;# 
   564   000FDB                     PLUSW2          equ	4059	;# 
   565   000FDC                     PREINC2         equ	4060	;# 
   566   000FDD                     POSTDEC2        equ	4061	;# 
   567   000FDE                     POSTINC2        equ	4062	;# 
   568   000FDF                     INDF2           equ	4063	;# 
   569   000FE0                     BSR             equ	4064	;# 
   570   000FE1                     FSR1            equ	4065	;# 
   571   000FE1                     FSR1L           equ	4065	;# 
   572   000FE2                     FSR1H           equ	4066	;# 
   573   000FE3                     PLUSW1          equ	4067	;# 
   574   000FE4                     PREINC1         equ	4068	;# 
   575   000FE5                     POSTDEC1        equ	4069	;# 
   576   000FE6                     POSTINC1        equ	4070	;# 
   577   000FE7                     INDF1           equ	4071	;# 
   578   000FE8                     WREG            equ	4072	;# 
   579   000FE9                     FSR0            equ	4073	;# 
   580   000FE9                     FSR0L           equ	4073	;# 
   581   000FEA                     FSR0H           equ	4074	;# 
   582   000FEB                     PLUSW0          equ	4075	;# 
   583   000FEC                     PREINC0         equ	4076	;# 
   584   000FED                     POSTDEC0        equ	4077	;# 
   585   000FEE                     POSTINC0        equ	4078	;# 
   586   000FEF                     INDF0           equ	4079	;# 
   587   000FF0                     INTCON3         equ	4080	;# 
   588   000FF1                     INTCON2         equ	4081	;# 
   589   000FF2                     INTCON          equ	4082	;# 
   590   000FF3                     PROD            equ	4083	;# 
   591   000FF3                     PRODL           equ	4083	;# 
   592   000FF4                     PRODH           equ	4084	;# 
   593   000FF5                     TABLAT          equ	4085	;# 
   594   000FF6                     TBLPTR          equ	4086	;# 
   595   000FF6                     TBLPTRL         equ	4086	;# 
   596   000FF7                     TBLPTRH         equ	4087	;# 
   597   000FF8                     TBLPTRU         equ	4088	;# 
   598   000FF9                     PCLAT           equ	4089	;# 
   599   000FF9                     PC              equ	4089	;# 
   600   000FF9                     PCL             equ	4089	;# 
   601   000FFA                     PCLATH          equ	4090	;# 
   602   000FFB                     PCLATU          equ	4091	;# 
   603   000FFC                     STKPTR          equ	4092	;# 
   604   000FFD                     TOS             equ	4093	;# 
   605   000FFD                     TOSL            equ	4093	;# 
   606   000FFE                     TOSH            equ	4094	;# 
   607   000FFF                     TOSU            equ	4095	;# 
   608   007C61                     _LATD1          set	31841
   609   007C60                     _LATD0          set	31840
   610   000F8C                     _LATD           set	3980
   611   000F95                     _TRISD          set	3989
   612   000FB4                     _CMCON          set	4020
   613   000FC1                     _ADCON1         set	4033
   614   000FD3                     _OSCCON         set	4051
   615   000F92                     _TRISAbits      set	3986
   616   000F80                     _PORTAbits      set	3968
   617                           
   618                           	psect	smallconst
   619   000800                     __psmallconst:
   620                           	callstack 0
   621   000800  00                 	db	0
   622   000801                     STR_1:
   623   000801  54                 	db	84	;'T'
   624   000802  65                 	db	101	;'e'
   625   000803  6D                 	db	109	;'m'
   626   000804  70                 	db	112	;'p'
   627   000805  65                 	db	101	;'e'
   628   000806  72                 	db	114	;'r'
   629   000807  61                 	db	97	;'a'
   630   000808  74                 	db	116	;'t'
   631   000809  75                 	db	117	;'u'
   632   00080A  72                 	db	114	;'r'
   633   00080B  61                 	db	97	;'a'
   634   00080C  3A                 	db	58	;':'
   635   00080D  00                 	db	0
   636   00080E                     STR_2:
   637   00080E  45                 	db	69	;'E'
   638   00080F  72                 	db	114	;'r'
   639   000810  72                 	db	114	;'r'
   640   000811  6F                 	db	111	;'o'
   641   000812  72                 	db	114	;'r'
   642   000813  00                 	db	0
   643   000814  00                 	db	0	; dummy byte at the end
   644   000800                     __smallconst    set	__psmallconst
   645   000800                     __mediumconst   set	__psmallconst
   646   000002                     __activetblptr  equ	2
   647                           
   648                           ; #config settings
   649                           
   650                           	psect	cinit
   651   000C96                     __pcinit:
   652                           	callstack 0
   653   000C96                     start_initialization:
   654                           	callstack 0
   655   000C96                     __initialization:
   656                           	callstack 0
   657   000C96                     end_of_initialization:
   658                           	callstack 0
   659   000C96                     __end_of__initialization:
   660                           	callstack 0
   661   000C96  0E00               	movlw	low (__Lmediumconst shr (0+16))
   662   000C98  6EF8               	movwf	tblptru,c
   663   000C9A  0100               	movlb	0
   664   000C9C  EF0B  F004         	goto	_main	;jump to C main() function
   665                           
   666                           	psect	cstackCOMRAM
   667   000001                     __pcstackCOMRAM:
   668                           	callstack 0
   669   000001                     ?___awdiv:
   670                           	callstack 0
   671   000001                     ?___awmod:
   672                           	callstack 0
   673   000001                     DHT11_Read@data:
   674                           	callstack 0
   675   000001                     ___awdiv@dividend:
   676                           	callstack 0
   677   000001                     ___awmod@dividend:
   678                           	callstack 0
   679   000001                     ??_LCD_Command:
   680   000001                     ??_LCD_Char:
   681                           
   682                           ; 1 bytes @ 0x0
   683   000001                     	ds	1
   684   000002                     DHT11_Read@i:
   685                           	callstack 0
   686   000002                     LCD_Command@cmd:
   687                           	callstack 0
   688   000002                     LCD_Char@dat:
   689                           	callstack 0
   690                           
   691                           ; 1 bytes @ 0x1
   692   000002                     	ds	1
   693   000003                     LCD_String@msg:
   694                           	callstack 0
   695   000003                     ___awdiv@divisor:
   696                           	callstack 0
   697   000003                     ___awmod@divisor:
   698                           	callstack 0
   699   000003                     ??_LCD_Init:
   700   000003                     ??_DHT11_GetTemperature:
   701                           
   702                           ; 1 bytes @ 0x2
   703   000003                     	ds	2
   704   000005                     LCD_String_xy@pos:
   705                           	callstack 0
   706   000005                     ___awdiv@counter:
   707                           	callstack 0
   708   000005                     ___awmod@counter:
   709                           	callstack 0
   710   000005                     
   711                           ; 1 bytes @ 0x4
   712   000005                     	ds	1
   713   000006                     DHT11_GetTemperature@checksum:
   714                           	callstack 0
   715   000006                     ___awdiv@sign:
   716                           	callstack 0
   717   000006                     ___awmod@sign:
   718                           	callstack 0
   719   000006                     LCD_String_xy@msg:
   720                           	callstack 0
   721                           
   722                           ; 2 bytes @ 0x5
   723   000006                     	ds	1
   724   000007                     ___awdiv@quotient:
   725                           	callstack 0
   726                           
   727                           ; 2 bytes @ 0x6
   728   000007                     	ds	1
   729   000008                     LCD_String_xy@row:
   730                           	callstack 0
   731   000008                     
   732                           ; 1 bytes @ 0x7
   733   000008                     	ds	1
   734   000009                     LCD_String_xy@location:
   735                           	callstack 0
   736                           
   737                           ; 1 bytes @ 0x8
   738   000009                     	ds	1
   739   00000A                     ??_main:
   740                           
   741                           ; 1 bytes @ 0x9
   742   00000A                     	ds	2
   743   00000C                     main@buffer:
   744                           	callstack 0
   745                           
   746                           ; 5 bytes @ 0xB
   747   00000C                     	ds	5
   748   000011                     main@temp:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0x10
   752   000011                     	ds	1
   753                           
   754 ;;
   755 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   756 ;;
   757 ;; *************** function _main *****************
   758 ;; Defined at:
   759 ;;		line 15 in file "main.c"
   760 ;; Parameters:    Size  Location     Type
   761 ;;		None
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  buffer          5   11[COMRAM] unsigned char [5]
   764 ;;  temp            1   16[COMRAM] unsigned char 
   765 ;; Return value:  Size  Location     Type
   766 ;;                  1    wreg      void 
   767 ;; Registers used:
   768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   769 ;; Tracked objects:
   770 ;;		On entry : 0/0
   771 ;;		On exit  : 0/0
   772 ;;		Unchanged: 0/0
   773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   774 ;;      Params:         0       0       0       0       0       0       0       0       0
   775 ;;      Locals:         6       0       0       0       0       0       0       0       0
   776 ;;      Temps:          2       0       0       0       0       0       0       0       0
   777 ;;      Totals:         8       0       0       0       0       0       0       0       0
   778 ;;Total ram usage:        8 bytes
   779 ;; Hardware stack levels required when called: 3
   780 ;; This function calls:
   781 ;;		_DHT11_GetTemperature
   782 ;;		_LCD_Init
   783 ;;		_LCD_String_xy
   784 ;;		___awdiv
   785 ;;		___awmod
   786 ;; This function is called by:
   787 ;;		Startup code after reset
   788 ;; This function uses a non-reentrant model
   789 ;;
   790                           
   791                           	psect	text0
   792   000816                     __ptext0:
   793                           	callstack 0
   794   000816                     _main:
   795                           	callstack 28
   796   000816                     
   797                           ;main.c: 16:     OSCCON = 0x72;
   798   000816  0E72               	movlw	114
   799   000818  6ED3               	movwf	211,c	;volatile
   800   00081A                     
   801                           ;main.c: 17:     TRISAbits.TRISA0 = 1;
   802   00081A  8092               	bsf	146,0,c	;volatile
   803                           
   804                           ;main.c: 18:     ADCON1 = 0x0F;
   805   00081C  0E0F               	movlw	15
   806   00081E  6EC1               	movwf	193,c	;volatile
   807                           
   808                           ;main.c: 19:     CMCON = 0x07;
   809   000820  0E07               	movlw	7
   810   000822  6EB4               	movwf	180,c	;volatile
   811   000824                     
   812                           ;main.c: 21:     LCD_Init();
   813   000824  EC32  F006         	call	_LCD_Init	;wreg free
   814   000828                     
   815                           ;main.c: 22:     LCD_String_xy(0, 0, "Temperatura:");
   816   000828  0E00               	movlw	0
   817   00082A  6E05               	movwf	LCD_String_xy@pos^0,c
   818   00082C  0E01               	movlw	low STR_1
   819   00082E  6E06               	movwf	LCD_String_xy@msg^0,c
   820   000830  5006               	movf	LCD_String_xy@msg^0,w,c
   821   000832  A4D8               	btfss	status,2,c
   822   000834  0E08               	movlw	high __smallconst
   823   000836  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   824   000838  0E00               	movlw	0
   825   00083A  EC12  F006         	call	_LCD_String_xy
   826   00083E                     l1106:
   827                           
   828                           ;main.c: 25:         uint8_t temp = DHT11_GetTemperature();
   829   00083E  EC24  F005         	call	_DHT11_GetTemperature	;wreg free
   830   000842  6E11               	movwf	main@temp^0,c
   831   000844                     
   832                           ;main.c: 26:         char buffer[5];;main.c: 28:         if (temp != 255) {
   833   000844  2811               	incf	main@temp^0,w,c
   834   000846  B4D8               	btfsc	status,2,c
   835   000848  EF28  F004         	goto	u421
   836   00084C  EF2A  F004         	goto	u420
   837   000850                     u421:
   838   000850  EF51  F004         	goto	l1120
   839   000854                     u420:
   840   000854                     
   841                           ;main.c: 29:             buffer[0] = (temp/10) + '0';
   842   000854  C011  F001         	movff	main@temp,___awdiv@dividend
   843   000858  6A02               	clrf	(___awdiv@dividend+1)^0,c
   844   00085A  0E00               	movlw	0
   845   00085C  6E04               	movwf	(___awdiv@divisor+1)^0,c
   846   00085E  0E0A               	movlw	10
   847   000860  6E03               	movwf	___awdiv@divisor^0,c
   848   000862  EC6C  F004         	call	___awdiv	;wreg free
   849   000866  5001               	movf	?___awdiv^0,w,c
   850   000868  0F30               	addlw	48
   851   00086A  6E0C               	movwf	main@buffer^0,c
   852                           
   853                           ;main.c: 30:             buffer[1] = (temp%10) + '0';
   854   00086C  C011  F001         	movff	main@temp,___awmod@dividend
   855   000870  6A02               	clrf	(___awmod@dividend+1)^0,c
   856   000872  0E00               	movlw	0
   857   000874  6E04               	movwf	(___awmod@divisor+1)^0,c
   858   000876  0E0A               	movlw	10
   859   000878  6E03               	movwf	___awmod@divisor^0,c
   860   00087A  ECCD  F004         	call	___awmod	;wreg free
   861   00087E  5001               	movf	?___awmod^0,w,c
   862   000880  0F30               	addlw	48
   863   000882  6E0D               	movwf	(main@buffer+1)^0,c
   864   000884                     
   865                           ;main.c: 31:             buffer[2] = ' ';
   866   000884  0E20               	movlw	32
   867   000886  6E0E               	movwf	(main@buffer+2)^0,c
   868   000888                     
   869                           ;main.c: 32:             buffer[3] = 'C';
   870   000888  0E43               	movlw	67
   871   00088A  6E0F               	movwf	(main@buffer+3)^0,c
   872   00088C                     
   873                           ;main.c: 33:             buffer[4] = '\0';
   874   00088C  6A10               	clrf	(main@buffer+4)^0,c
   875   00088E                     
   876                           ;main.c: 34:             LCD_String_xy(1, 0, buffer);
   877   00088E  0E00               	movlw	0
   878   000890  6E05               	movwf	LCD_String_xy@pos^0,c
   879   000892  0E0C               	movlw	low main@buffer
   880   000894  6E06               	movwf	LCD_String_xy@msg^0,c
   881   000896  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
   882   000898  0E01               	movlw	1
   883   00089A  EC12  F006         	call	_LCD_String_xy
   884                           
   885                           ;main.c: 35:         } else {
   886   00089E  EF5C  F004         	goto	l1122
   887   0008A2                     l1120:
   888                           
   889                           ;main.c: 36:             LCD_String_xy(1, 0, "Error");
   890   0008A2  0E00               	movlw	0
   891   0008A4  6E05               	movwf	LCD_String_xy@pos^0,c
   892   0008A6  0E0E               	movlw	low STR_2
   893   0008A8  6E06               	movwf	LCD_String_xy@msg^0,c
   894   0008AA  5006               	movf	LCD_String_xy@msg^0,w,c
   895   0008AC  A4D8               	btfss	status,2,c
   896   0008AE  0E08               	movlw	high __smallconst
   897   0008B0  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   898   0008B2  0E01               	movlw	1
   899   0008B4  EC12  F006         	call	_LCD_String_xy
   900   0008B8                     l1122:
   901                           
   902                           ;main.c: 38:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   903   0008B8  0E15               	movlw	21
   904   0008BA  6E0B               	movwf	(??_main+1)^0,c
   905   0008BC  0E4B               	movlw	75
   906   0008BE  6E0A               	movwf	??_main^0,c
   907   0008C0  0EBE               	movlw	190
   908   0008C2                     u437:
   909   0008C2  2EE8               	decfsz	wreg,f,c
   910   0008C4  D7FE               	bra	u437
   911   0008C6  2E0A               	decfsz	??_main^0,f,c
   912   0008C8  D7FC               	bra	u437
   913   0008CA  2E0B               	decfsz	(??_main+1)^0,f,c
   914   0008CC  D7FA               	bra	u437
   915   0008CE  D000               	nop2	
   916   0008D0  EF1F  F004         	goto	l1106
   917   0008D4  EFFE  F03F         	goto	start
   918   0008D8                     __end_of_main:
   919                           	callstack 0
   920                           
   921 ;; *************** function ___awmod *****************
   922 ;; Defined at:
   923 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;  dividend        2    0[COMRAM] int 
   926 ;;  divisor         2    2[COMRAM] int 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  sign            1    5[COMRAM] unsigned char 
   929 ;;  counter         1    4[COMRAM] unsigned char 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  2    0[COMRAM] int 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   939 ;;      Params:         4       0       0       0       0       0       0       0       0
   940 ;;      Locals:         2       0       0       0       0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0       0       0       0       0
   942 ;;      Totals:         6       0       0       0       0       0       0       0       0
   943 ;;Total ram usage:        6 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; This function calls:
   946 ;;		Nothing
   947 ;; This function is called by:
   948 ;;		_main
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           	psect	text1
   953   00099A                     __ptext1:
   954                           	callstack 0
   955   00099A                     ___awmod:
   956                           	callstack 30
   957   00099A  6A06               	clrf	___awmod@sign^0,c
   958   00099C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   959   00099E  EFD5  F004         	goto	u360
   960   0009A2  EFD3  F004         	goto	u361
   961   0009A6                     u361:
   962   0009A6  EFDB  F004         	goto	l1070
   963   0009AA                     u360:
   964   0009AA  6C01               	negf	___awmod@dividend^0,c
   965   0009AC  1E02               	comf	(___awmod@dividend+1)^0,f,c
   966   0009AE  B0D8               	btfsc	status,0,c
   967   0009B0  2A02               	incf	(___awmod@dividend+1)^0,f,c
   968   0009B2  0E01               	movlw	1
   969   0009B4  6E06               	movwf	___awmod@sign^0,c
   970   0009B6                     l1070:
   971   0009B6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   972   0009B8  EFE2  F004         	goto	u370
   973   0009BC  EFE0  F004         	goto	u371
   974   0009C0                     u371:
   975   0009C0  EFE6  F004         	goto	l1074
   976   0009C4                     u370:
   977   0009C4  6C03               	negf	___awmod@divisor^0,c
   978   0009C6  1E04               	comf	(___awmod@divisor+1)^0,f,c
   979   0009C8  B0D8               	btfsc	status,0,c
   980   0009CA  2A04               	incf	(___awmod@divisor+1)^0,f,c
   981   0009CC                     l1074:
   982   0009CC  5003               	movf	___awmod@divisor^0,w,c
   983   0009CE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
   984   0009D0  B4D8               	btfsc	status,2,c
   985   0009D2  EFED  F004         	goto	u381
   986   0009D6  EFEF  F004         	goto	u380
   987   0009DA                     u381:
   988   0009DA  EF13  F005         	goto	l1090
   989   0009DE                     u380:
   990   0009DE  0E01               	movlw	1
   991   0009E0  6E05               	movwf	___awmod@counter^0,c
   992   0009E2  EFF7  F004         	goto	l1080
   993   0009E6                     l1078:
   994   0009E6  90D8               	bcf	status,0,c
   995   0009E8  3603               	rlcf	___awmod@divisor^0,f,c
   996   0009EA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
   997   0009EC  2A05               	incf	___awmod@counter^0,f,c
   998   0009EE                     l1080:
   999   0009EE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1000   0009F0  EFFC  F004         	goto	u391
  1001   0009F4  EFFE  F004         	goto	u390
  1002   0009F8                     u391:
  1003   0009F8  EFF3  F004         	goto	l1078
  1004   0009FC                     u390:
  1005   0009FC                     l1082:
  1006   0009FC  5003               	movf	___awmod@divisor^0,w,c
  1007   0009FE  5C01               	subwf	___awmod@dividend^0,w,c
  1008   000A00  5004               	movf	(___awmod@divisor+1)^0,w,c
  1009   000A02  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1010   000A04  A0D8               	btfss	status,0,c
  1011   000A06  EF07  F005         	goto	u401
  1012   000A0A  EF09  F005         	goto	u400
  1013   000A0E                     u401:
  1014   000A0E  EF0D  F005         	goto	l1086
  1015   000A12                     u400:
  1016   000A12  5003               	movf	___awmod@divisor^0,w,c
  1017   000A14  5E01               	subwf	___awmod@dividend^0,f,c
  1018   000A16  5004               	movf	(___awmod@divisor+1)^0,w,c
  1019   000A18  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1020   000A1A                     l1086:
  1021   000A1A  90D8               	bcf	status,0,c
  1022   000A1C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1023   000A1E  3203               	rrcf	___awmod@divisor^0,f,c
  1024   000A20  2E05               	decfsz	___awmod@counter^0,f,c
  1025   000A22  EFFE  F004         	goto	l1082
  1026   000A26                     l1090:
  1027   000A26  5006               	movf	___awmod@sign^0,w,c
  1028   000A28  B4D8               	btfsc	status,2,c
  1029   000A2A  EF19  F005         	goto	u411
  1030   000A2E  EF1B  F005         	goto	u410
  1031   000A32                     u411:
  1032   000A32  EF1F  F005         	goto	l1094
  1033   000A36                     u410:
  1034   000A36  6C01               	negf	___awmod@dividend^0,c
  1035   000A38  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1036   000A3A  B0D8               	btfsc	status,0,c
  1037   000A3C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1038   000A3E                     l1094:
  1039   000A3E  C001  F001         	movff	___awmod@dividend,?___awmod
  1040   000A42  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1041   000A46  0012               	return		;funcret
  1042   000A48                     __end_of___awmod:
  1043                           	callstack 0
  1044                           
  1045 ;; *************** function ___awdiv *****************
  1046 ;; Defined at:
  1047 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;  dividend        2    0[COMRAM] int 
  1050 ;;  divisor         2    2[COMRAM] int 
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;  quotient        2    6[COMRAM] int 
  1053 ;;  sign            1    5[COMRAM] unsigned char 
  1054 ;;  counter         1    4[COMRAM] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  2    0[COMRAM] int 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1064 ;;      Params:         4       0       0       0       0       0       0       0       0
  1065 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1067 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1068 ;;Total ram usage:        8 bytes
  1069 ;; Hardware stack levels used: 1
  1070 ;; This function calls:
  1071 ;;		Nothing
  1072 ;; This function is called by:
  1073 ;;		_main
  1074 ;; This function uses a non-reentrant model
  1075 ;;
  1076                           
  1077                           	psect	text2
  1078   0008D8                     __ptext2:
  1079                           	callstack 0
  1080   0008D8                     ___awdiv:
  1081                           	callstack 30
  1082   0008D8  6A06               	clrf	___awdiv@sign^0,c
  1083   0008DA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1084   0008DC  EF74  F004         	goto	u300
  1085   0008E0  EF72  F004         	goto	u301
  1086   0008E4                     u301:
  1087   0008E4  EF7A  F004         	goto	l1026
  1088   0008E8                     u300:
  1089   0008E8  6C03               	negf	___awdiv@divisor^0,c
  1090   0008EA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1091   0008EC  B0D8               	btfsc	status,0,c
  1092   0008EE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1093   0008F0  0E01               	movlw	1
  1094   0008F2  6E06               	movwf	___awdiv@sign^0,c
  1095   0008F4                     l1026:
  1096   0008F4  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1097   0008F6  EF81  F004         	goto	u310
  1098   0008FA  EF7F  F004         	goto	u311
  1099   0008FE                     u311:
  1100   0008FE  EF87  F004         	goto	l1032
  1101   000902                     u310:
  1102   000902  6C01               	negf	___awdiv@dividend^0,c
  1103   000904  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1104   000906  B0D8               	btfsc	status,0,c
  1105   000908  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1106   00090A  0E01               	movlw	1
  1107   00090C  1A06               	xorwf	___awdiv@sign^0,f,c
  1108   00090E                     l1032:
  1109   00090E  0E00               	movlw	0
  1110   000910  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1111   000912  0E00               	movlw	0
  1112   000914  6E07               	movwf	___awdiv@quotient^0,c
  1113   000916  5003               	movf	___awdiv@divisor^0,w,c
  1114   000918  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1115   00091A  B4D8               	btfsc	status,2,c
  1116   00091C  EF92  F004         	goto	u321
  1117   000920  EF94  F004         	goto	u320
  1118   000924                     u321:
  1119   000924  EFBC  F004         	goto	l1054
  1120   000928                     u320:
  1121   000928  0E01               	movlw	1
  1122   00092A  6E05               	movwf	___awdiv@counter^0,c
  1123   00092C  EF9C  F004         	goto	l1040
  1124   000930                     l1038:
  1125   000930  90D8               	bcf	status,0,c
  1126   000932  3603               	rlcf	___awdiv@divisor^0,f,c
  1127   000934  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1128   000936  2A05               	incf	___awdiv@counter^0,f,c
  1129   000938                     l1040:
  1130   000938  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1131   00093A  EFA1  F004         	goto	u331
  1132   00093E  EFA3  F004         	goto	u330
  1133   000942                     u331:
  1134   000942  EF98  F004         	goto	l1038
  1135   000946                     u330:
  1136   000946                     l1042:
  1137   000946  90D8               	bcf	status,0,c
  1138   000948  3607               	rlcf	___awdiv@quotient^0,f,c
  1139   00094A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1140   00094C  5003               	movf	___awdiv@divisor^0,w,c
  1141   00094E  5C01               	subwf	___awdiv@dividend^0,w,c
  1142   000950  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1143   000952  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1144   000954  A0D8               	btfss	status,0,c
  1145   000956  EFAF  F004         	goto	u341
  1146   00095A  EFB1  F004         	goto	u340
  1147   00095E                     u341:
  1148   00095E  EFB6  F004         	goto	l1050
  1149   000962                     u340:
  1150   000962  5003               	movf	___awdiv@divisor^0,w,c
  1151   000964  5E01               	subwf	___awdiv@dividend^0,f,c
  1152   000966  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1153   000968  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1154   00096A  8007               	bsf	___awdiv@quotient^0,0,c
  1155   00096C                     l1050:
  1156   00096C  90D8               	bcf	status,0,c
  1157   00096E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1158   000970  3203               	rrcf	___awdiv@divisor^0,f,c
  1159   000972  2E05               	decfsz	___awdiv@counter^0,f,c
  1160   000974  EFA3  F004         	goto	l1042
  1161   000978                     l1054:
  1162   000978  5006               	movf	___awdiv@sign^0,w,c
  1163   00097A  B4D8               	btfsc	status,2,c
  1164   00097C  EFC2  F004         	goto	u351
  1165   000980  EFC4  F004         	goto	u350
  1166   000984                     u351:
  1167   000984  EFC8  F004         	goto	l1058
  1168   000988                     u350:
  1169   000988  6C07               	negf	___awdiv@quotient^0,c
  1170   00098A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1171   00098C  B0D8               	btfsc	status,0,c
  1172   00098E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1173   000990                     l1058:
  1174   000990  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1175   000994  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1176   000998  0012               	return		;funcret
  1177   00099A                     __end_of___awdiv:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _LCD_String_xy *****************
  1181 ;; Defined at:
  1182 ;;		line 55 in file "LCD.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  row             1    wreg     unsigned char 
  1185 ;;  pos             1    4[COMRAM] unsigned char 
  1186 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  1187 ;;		 -> STR_2(6), main@buffer(5), STR_1(13), 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  row             1    7[COMRAM] unsigned char 
  1190 ;;  location        1    8[COMRAM] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1200 ;;      Params:         3       0       0       0       0       0       0       0       0
  1201 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1203 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1204 ;;Total ram usage:        5 bytes
  1205 ;; Hardware stack levels used: 1
  1206 ;; Hardware stack levels required when called: 2
  1207 ;; This function calls:
  1208 ;;		_LCD_Command
  1209 ;;		_LCD_String
  1210 ;; This function is called by:
  1211 ;;		_main
  1212 ;; This function uses a non-reentrant model
  1213 ;;
  1214                           
  1215                           	psect	text3
  1216   000C24                     __ptext3:
  1217                           	callstack 0
  1218   000C24                     _LCD_String_xy:
  1219                           	callstack 28
  1220                           
  1221                           ;incstack = 0
  1222                           ;LCD_String_xy@row stored from wreg
  1223   000C24  6E08               	movwf	LCD_String_xy@row^0,c
  1224   000C26                     
  1225                           ;LCD.c: 58:     if(row<=1)
  1226   000C26  0E02               	movlw	2
  1227   000C28  6008               	cpfslt	LCD_String_xy@row^0,c
  1228   000C2A  EF19  F006         	goto	u291
  1229   000C2E  EF1B  F006         	goto	u290
  1230   000C32                     u291:
  1231   000C32  EF24  F006         	goto	l1012
  1232   000C36                     u290:
  1233   000C36                     
  1234                           ;LCD.c: 59:     {;LCD.c: 60:         location = (0x80) | ((pos) & 0x0f);
  1235   000C36  5005               	movf	LCD_String_xy@pos^0,w,c
  1236   000C38  0B0F               	andlw	15
  1237   000C3A  0980               	iorlw	128
  1238   000C3C  6E09               	movwf	LCD_String_xy@location^0,c
  1239   000C3E                     
  1240                           ;LCD.c: 61:         LCD_Command(location);
  1241   000C3E  5009               	movf	LCD_String_xy@location^0,w,c
  1242   000C40  ECBF  F005         	call	_LCD_Command
  1243                           
  1244                           ;LCD.c: 62:     }
  1245   000C44  EF2B  F006         	goto	l1016
  1246   000C48                     l1012:
  1247                           
  1248                           ;LCD.c: 64:     {;LCD.c: 65:         location = (0xC0) | ((pos) & 0x0f);
  1249   000C48  5005               	movf	LCD_String_xy@pos^0,w,c
  1250   000C4A  0B0F               	andlw	15
  1251   000C4C  09C0               	iorlw	192
  1252   000C4E  6E09               	movwf	LCD_String_xy@location^0,c
  1253   000C50                     
  1254                           ;LCD.c: 66:         LCD_Command(location);
  1255   000C50  5009               	movf	LCD_String_xy@location^0,w,c
  1256   000C52  ECBF  F005         	call	_LCD_Command
  1257   000C56                     l1016:
  1258                           
  1259                           ;LCD.c: 70:     LCD_String(msg);
  1260   000C56  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  1261   000C5A  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  1262   000C5E  EC66  F005         	call	_LCD_String	;wreg free
  1263   000C62  0012               	return		;funcret
  1264   000C64                     __end_of_LCD_String_xy:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _LCD_String *****************
  1268 ;; Defined at:
  1269 ;;		line 45 in file "LCD.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  1272 ;;		 -> STR_2(6), main@buffer(5), STR_1(13), 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;		None
  1275 ;; Return value:  Size  Location     Type
  1276 ;;                  1    wreg      void 
  1277 ;; Registers used:
  1278 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1279 ;; Tracked objects:
  1280 ;;		On entry : 0/0
  1281 ;;		On exit  : 0/0
  1282 ;;		Unchanged: 0/0
  1283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1284 ;;      Params:         2       0       0       0       0       0       0       0       0
  1285 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1286 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1287 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1288 ;;Total ram usage:        2 bytes
  1289 ;; Hardware stack levels used: 1
  1290 ;; Hardware stack levels required when called: 1
  1291 ;; This function calls:
  1292 ;;		_LCD_Char
  1293 ;; This function is called by:
  1294 ;;		_LCD_String_xy
  1295 ;; This function uses a non-reentrant model
  1296 ;;
  1297                           
  1298                           	psect	text4
  1299   000ACC                     __ptext4:
  1300                           	callstack 0
  1301   000ACC                     _LCD_String:
  1302                           	callstack 28
  1303   000ACC                     
  1304                           ;LCD.c: 45: void LCD_String(const char *msg);LCD.c: 46: {;LCD.c: 47:  while((*msg)!=0)
  1305   000ACC  EF7C  F005         	goto	l1002
  1306   000AD0                     l998:
  1307                           
  1308                           ;LCD.c: 48:  {;LCD.c: 49:    LCD_Char(*msg);
  1309   000AD0  C003  FFF6         	movff	LCD_String@msg,tblptrl
  1310   000AD4  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  1311   000AD8  6AF8               	clrf	tblptru,c
  1312   000ADA  0E07               	movlw	(high __ramtop+-1)
  1313   000ADC  64F7               	cpfsgt	tblptrh,c
  1314   000ADE  D003               	bra	u267
  1315   000AE0  0008               	tblrd		*
  1316   000AE2  50F5               	movf	tablat,w,c
  1317   000AE4  D005               	bra	u260
  1318   000AE6                     u267:
  1319   000AE6  CFF6 FFE9          	movff	tblptrl,fsr0l
  1320   000AEA  CFF7 FFEA          	movff	tblptrh,fsr0h
  1321   000AEE  50EF               	movf	indf0,w,c
  1322   000AF0                     u260:
  1323   000AF0  EC95  F005         	call	_LCD_Char
  1324   000AF4                     
  1325                           ;LCD.c: 50:    msg++;
  1326   000AF4  4A03               	infsnz	LCD_String@msg^0,f,c
  1327   000AF6  2A04               	incf	(LCD_String@msg+1)^0,f,c
  1328   000AF8                     l1002:
  1329                           
  1330                           ;LCD.c: 47:  while((*msg)!=0)
  1331   000AF8  C003  FFF6         	movff	LCD_String@msg,tblptrl
  1332   000AFC  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  1333   000B00  6AF8               	clrf	tblptru,c
  1334   000B02  0E07               	movlw	(high __ramtop+-1)
  1335   000B04  64F7               	cpfsgt	tblptrh,c
  1336   000B06  D003               	bra	u277
  1337   000B08  0008               	tblrd		*
  1338   000B0A  50F5               	movf	tablat,w,c
  1339   000B0C  D005               	bra	u270
  1340   000B0E                     u277:
  1341   000B0E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1342   000B12  CFF7 FFEA          	movff	tblptrh,fsr0h
  1343   000B16  50EF               	movf	indf0,w,c
  1344   000B18                     u270:
  1345   000B18  0900               	iorlw	0
  1346   000B1A  A4D8               	btfss	status,2,c
  1347   000B1C  EF92  F005         	goto	u281
  1348   000B20  EF94  F005         	goto	u280
  1349   000B24                     u281:
  1350   000B24  EF68  F005         	goto	l998
  1351   000B28                     u280:
  1352   000B28  0012               	return		;funcret
  1353   000B2A                     __end_of_LCD_String:
  1354                           	callstack 0
  1355                           
  1356 ;; *************** function _LCD_Char *****************
  1357 ;; Defined at:
  1358 ;;		line 30 in file "LCD.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  dat             1    wreg     unsigned char 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  dat             1    1[COMRAM] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;                  1    wreg      void 
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0
  1373 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1374 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1375 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1376 ;;Total ram usage:        2 bytes
  1377 ;; Hardware stack levels used: 1
  1378 ;; This function calls:
  1379 ;;		Nothing
  1380 ;; This function is called by:
  1381 ;;		_LCD_String
  1382 ;; This function uses a non-reentrant model
  1383 ;;
  1384                           
  1385                           	psect	text5
  1386   000B2A                     __ptext5:
  1387                           	callstack 0
  1388   000B2A                     _LCD_Char:
  1389                           	callstack 28
  1390                           
  1391                           ;incstack = 0
  1392                           ;LCD_Char@dat stored from wreg
  1393   000B2A  6E02               	movwf	LCD_Char@dat^0,c
  1394   000B2C                     
  1395                           ;LCD.c: 30: void LCD_Char(unsigned char dat);LCD.c: 31: {;LCD.c: 32:     LATD = (LATD & 
      +                          0x0f) | (0xF0 & dat);
  1396   000B2C  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  1397   000B30  0EF0               	movlw	240
  1398   000B32  1601               	andwf	??_LCD_Char^0,f,c
  1399   000B34  508C               	movf	140,w,c	;volatile
  1400   000B36  0B0F               	andlw	15
  1401   000B38  1001               	iorwf	??_LCD_Char^0,w,c
  1402   000B3A  6E8C               	movwf	140,c	;volatile
  1403   000B3C                     
  1404                           ;LCD.c: 33:     LATD0 = 1;
  1405   000B3C  808C               	bsf	3980,0,c	;volatile
  1406   000B3E                     
  1407                           ;LCD.c: 34:     LATD1 = 1;
  1408   000B3E  828C               	bsf	3980,1,c	;volatile
  1409   000B40                     
  1410                           ;LCD.c: 35:     __nop();
  1411   000B40  0000               	nop	
  1412   000B42                     
  1413                           ;LCD.c: 36:     LATD1 = 0;
  1414   000B42  928C               	bcf	3980,1,c	;volatile
  1415   000B44                     
  1416                           ;LCD.c: 37:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1417   000B44  0E03               	movlw	3
  1418   000B46  6E01               	movwf	??_LCD_Char^0,c
  1419   000B48  0E98               	movlw	152
  1420   000B4A                     u447:
  1421   000B4A  2EE8               	decfsz	wreg,f,c
  1422   000B4C  D7FE               	bra	u447
  1423   000B4E  2E01               	decfsz	??_LCD_Char^0,f,c
  1424   000B50  D7FC               	bra	u447
  1425   000B52                     
  1426                           ;LCD.c: 38:     LATD = (LATD & 0x0f) | ((dat << 4) & 0xF0);
  1427   000B52  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  1428   000B56  3A01               	swapf	??_LCD_Char^0,f,c
  1429   000B58  0EF0               	movlw	240
  1430   000B5A  1601               	andwf	??_LCD_Char^0,f,c
  1431   000B5C  0EF0               	movlw	240
  1432   000B5E  1601               	andwf	??_LCD_Char^0,f,c
  1433   000B60  508C               	movf	140,w,c	;volatile
  1434   000B62  0B0F               	andlw	15
  1435   000B64  1001               	iorwf	??_LCD_Char^0,w,c
  1436   000B66  6E8C               	movwf	140,c	;volatile
  1437   000B68                     
  1438                           ;LCD.c: 39:     LATD1 = 1;
  1439   000B68  828C               	bsf	3980,1,c	;volatile
  1440   000B6A                     
  1441                           ;LCD.c: 40:     __nop();
  1442   000B6A  0000               	nop	
  1443   000B6C                     
  1444                           ;LCD.c: 41:     LATD1 = 0;
  1445   000B6C  928C               	bcf	3980,1,c	;volatile
  1446                           
  1447                           ;LCD.c: 42:     _delay((unsigned long)((3)*(8000000/4000.0)));
  1448   000B6E  0E08               	movlw	8
  1449   000B70  6E01               	movwf	??_LCD_Char^0,c
  1450   000B72  0ECA               	movlw	202
  1451   000B74                     u457:
  1452   000B74  2EE8               	decfsz	wreg,f,c
  1453   000B76  D7FE               	bra	u457
  1454   000B78  2E01               	decfsz	??_LCD_Char^0,f,c
  1455   000B7A  D7FC               	bra	u457
  1456   000B7C  0012               	return		;funcret
  1457   000B7E                     __end_of_LCD_Char:
  1458                           	callstack 0
  1459                           
  1460 ;; *************** function _LCD_Init *****************
  1461 ;; Defined at:
  1462 ;;		line 4 in file "LCD.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, status,0, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1476 ;;      Params:         0       0       0       0       0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1478 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1479 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1480 ;;Total ram usage:        1 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 1
  1483 ;; This function calls:
  1484 ;;		_LCD_Command
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text6
  1491   000C64                     __ptext6:
  1492                           	callstack 0
  1493   000C64                     _LCD_Init:
  1494                           	callstack 29
  1495   000C64                     
  1496                           ;LCD.c: 6:     TRISD = 0;
  1497   000C64  6A95               	clrf	149,c	;volatile
  1498   000C66                     
  1499                           ;LCD.c: 7:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1500   000C66  0E27               	movlw	39
  1501   000C68  6E03               	movwf	??_LCD_Init^0,c
  1502   000C6A  0EF5               	movlw	245
  1503   000C6C                     u467:
  1504   000C6C  2EE8               	decfsz	wreg,f,c
  1505   000C6E  D7FE               	bra	u467
  1506   000C70  2E03               	decfsz	??_LCD_Init^0,f,c
  1507   000C72  D7FC               	bra	u467
  1508   000C74  0000               	nop	
  1509   000C76                     
  1510                           ;LCD.c: 8:     LCD_Command(0x02);
  1511   000C76  0E02               	movlw	2
  1512   000C78  ECBF  F005         	call	_LCD_Command
  1513   000C7C                     
  1514                           ;LCD.c: 9:     LCD_Command(0x28);
  1515   000C7C  0E28               	movlw	40
  1516   000C7E  ECBF  F005         	call	_LCD_Command
  1517   000C82                     
  1518                           ;LCD.c: 10:     LCD_Command(0x01);
  1519   000C82  0E01               	movlw	1
  1520   000C84  ECBF  F005         	call	_LCD_Command
  1521   000C88                     
  1522                           ;LCD.c: 11:     LCD_Command(0x0c);
  1523   000C88  0E0C               	movlw	12
  1524   000C8A  ECBF  F005         	call	_LCD_Command
  1525   000C8E                     
  1526                           ;LCD.c: 12:     LCD_Command(0x06);
  1527   000C8E  0E06               	movlw	6
  1528   000C90  ECBF  F005         	call	_LCD_Command
  1529   000C94  0012               	return		;funcret
  1530   000C96                     __end_of_LCD_Init:
  1531                           	callstack 0
  1532                           
  1533 ;; *************** function _LCD_Command *****************
  1534 ;; Defined at:
  1535 ;;		line 15 in file "LCD.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  cmd             1    wreg     unsigned char 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  cmd             1    1[COMRAM] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg, status,2, status,0
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1549 ;;      Params:         0       0       0       0       0       0       0       0       0
  1550 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1551 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1552 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1553 ;;Total ram usage:        2 bytes
  1554 ;; Hardware stack levels used: 1
  1555 ;; This function calls:
  1556 ;;		Nothing
  1557 ;; This function is called by:
  1558 ;;		_LCD_Init
  1559 ;;		_LCD_String_xy
  1560 ;;		_LCD_Clear
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           	psect	text7
  1565   000B7E                     __ptext7:
  1566                           	callstack 0
  1567   000B7E                     _LCD_Command:
  1568                           	callstack 29
  1569                           
  1570                           ;incstack = 0
  1571                           ;LCD_Command@cmd stored from wreg
  1572   000B7E  6E02               	movwf	LCD_Command@cmd^0,c
  1573   000B80                     
  1574                           ;LCD.c: 15: void LCD_Command(unsigned char cmd);LCD.c: 16: {;LCD.c: 17:     LATD = (LATD
      +                           & 0x0f) | (0xF0 & cmd);
  1575   000B80  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  1576   000B84  0EF0               	movlw	240
  1577   000B86  1601               	andwf	??_LCD_Command^0,f,c
  1578   000B88  508C               	movf	140,w,c	;volatile
  1579   000B8A  0B0F               	andlw	15
  1580   000B8C  1001               	iorwf	??_LCD_Command^0,w,c
  1581   000B8E  6E8C               	movwf	140,c	;volatile
  1582   000B90                     
  1583                           ;LCD.c: 18:     LATD0 = 0;
  1584   000B90  908C               	bcf	3980,0,c	;volatile
  1585   000B92                     
  1586                           ;LCD.c: 19:     LATD1 = 1;
  1587   000B92  828C               	bsf	3980,1,c	;volatile
  1588   000B94                     
  1589                           ;LCD.c: 20:     __nop();
  1590   000B94  0000               	nop	
  1591   000B96                     
  1592                           ;LCD.c: 21:     LATD1 = 0;
  1593   000B96  928C               	bcf	3980,1,c	;volatile
  1594   000B98                     
  1595                           ;LCD.c: 22:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1596   000B98  0E03               	movlw	3
  1597   000B9A  6E01               	movwf	??_LCD_Command^0,c
  1598   000B9C  0E98               	movlw	152
  1599   000B9E                     u477:
  1600   000B9E  2EE8               	decfsz	wreg,f,c
  1601   000BA0  D7FE               	bra	u477
  1602   000BA2  2E01               	decfsz	??_LCD_Command^0,f,c
  1603   000BA4  D7FC               	bra	u477
  1604   000BA6                     
  1605                           ;LCD.c: 23:     LATD = (LATD & 0x0f) | ((cmd << 4) & 0xF0);
  1606   000BA6  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  1607   000BAA  3A01               	swapf	??_LCD_Command^0,f,c
  1608   000BAC  0EF0               	movlw	240
  1609   000BAE  1601               	andwf	??_LCD_Command^0,f,c
  1610   000BB0  0EF0               	movlw	240
  1611   000BB2  1601               	andwf	??_LCD_Command^0,f,c
  1612   000BB4  508C               	movf	140,w,c	;volatile
  1613   000BB6  0B0F               	andlw	15
  1614   000BB8  1001               	iorwf	??_LCD_Command^0,w,c
  1615   000BBA  6E8C               	movwf	140,c	;volatile
  1616   000BBC                     
  1617                           ;LCD.c: 24:     LATD1 = 1;
  1618   000BBC  828C               	bsf	3980,1,c	;volatile
  1619   000BBE                     
  1620                           ;LCD.c: 25:     __nop();
  1621   000BBE  0000               	nop	
  1622   000BC0                     
  1623                           ;LCD.c: 26:     LATD1 = 0;
  1624   000BC0  928C               	bcf	3980,1,c	;volatile
  1625                           
  1626                           ;LCD.c: 27:     _delay((unsigned long)((3)*(8000000/4000.0)));
  1627   000BC2  0E08               	movlw	8
  1628   000BC4  6E01               	movwf	??_LCD_Command^0,c
  1629   000BC6  0ECA               	movlw	202
  1630   000BC8                     u487:
  1631   000BC8  2EE8               	decfsz	wreg,f,c
  1632   000BCA  D7FE               	bra	u487
  1633   000BCC  2E01               	decfsz	??_LCD_Command^0,f,c
  1634   000BCE  D7FC               	bra	u487
  1635   000BD0  0012               	return		;funcret
  1636   000BD2                     __end_of_LCD_Command:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _DHT11_GetTemperature *****************
  1640 ;; Defined at:
  1641 ;;		line 16 in file "DHT11.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;  checksum        1    5[COMRAM] unsigned char 
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      unsigned char 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2, status,0, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1655 ;;      Params:         0       0       0       0       0       0       0       0       0
  1656 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1657 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1658 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1659 ;;Total ram usage:        4 bytes
  1660 ;; Hardware stack levels used: 1
  1661 ;; Hardware stack levels required when called: 1
  1662 ;; This function calls:
  1663 ;;		_DHT11_Read
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text8
  1670   000A48                     __ptext8:
  1671                           	callstack 0
  1672   000A48                     _DHT11_GetTemperature:
  1673                           	callstack 29
  1674   000A48                     
  1675                           ;DHT11.c: 17:     TRISAbits.TRISA0 = 0;
  1676   000A48  9092               	bcf	146,0,c	;volatile
  1677                           
  1678                           ;DHT11.c: 18:     PORTAbits.RA0 = 0;
  1679   000A4A  9080               	bcf	128,0,c	;volatile
  1680   000A4C                     
  1681                           ;DHT11.c: 19:     _delay((unsigned long)((18)*(8000000/4000.0)));
  1682   000A4C  0E2F               	movlw	47
  1683   000A4E  6E03               	movwf	??_DHT11_GetTemperature^0,c
  1684   000A50  0EC0               	movlw	192
  1685   000A52                     u497:
  1686   000A52  2EE8               	decfsz	wreg,f,c
  1687   000A54  D7FE               	bra	u497
  1688   000A56  2E03               	decfsz	??_DHT11_GetTemperature^0,f,c
  1689   000A58  D7FC               	bra	u497
  1690   000A5A                     
  1691                           ;DHT11.c: 20:     PORTAbits.RA0 = 1;
  1692   000A5A  8080               	bsf	128,0,c	;volatile
  1693                           
  1694                           ;DHT11.c: 21:     _delay((unsigned long)((30)*(8000000/4000000.0)));
  1695   000A5C  0E14               	movlw	20
  1696   000A5E                     u507:
  1697   000A5E  2EE8               	decfsz	wreg,f,c
  1698   000A60  D7FE               	bra	u507
  1699   000A62                     
  1700                           ;DHT11.c: 22:     TRISAbits.TRISA0 = 1;
  1701   000A62  8092               	bsf	146,0,c	;volatile
  1702   000A64                     
  1703                           ;DHT11.c: 24:     if (PORTAbits.RA0 == 0) {
  1704   000A64  B080               	btfsc	128,0,c	;volatile
  1705   000A66  EF37  F005         	goto	u81
  1706   000A6A  EF39  F005         	goto	u80
  1707   000A6E                     u81:
  1708   000A6E  EF64  F005         	goto	l856
  1709   000A72                     u80:
  1710   000A72                     l22:
  1711   000A72  A080               	btfss	128,0,c	;volatile
  1712   000A74  EF3E  F005         	goto	u91
  1713   000A78  EF40  F005         	goto	u90
  1714   000A7C                     u91:
  1715   000A7C  EF39  F005         	goto	l22
  1716   000A80                     u90:
  1717   000A80                     l25:
  1718   000A80  B080               	btfsc	128,0,c	;volatile
  1719   000A82  EF45  F005         	goto	u101
  1720   000A86  EF47  F005         	goto	u100
  1721   000A8A                     u101:
  1722   000A8A  EF40  F005         	goto	l25
  1723   000A8E                     u100:
  1724   000A8E                     
  1725                           ;DHT11.c: 28:         uint8_t checksum = (
  1726   000A8E  ECE9  F005         	call	_DHT11_Read	;wreg free
  1727   000A92  6E03               	movwf	??_DHT11_GetTemperature^0,c
  1728   000A94  ECE9  F005         	call	_DHT11_Read	;wreg free
  1729   000A98  6E04               	movwf	(??_DHT11_GetTemperature+1)^0,c
  1730   000A9A  ECE9  F005         	call	_DHT11_Read	;wreg free
  1731   000A9E  6E05               	movwf	(??_DHT11_GetTemperature+2)^0,c
  1732   000AA0  ECE9  F005         	call	_DHT11_Read	;wreg free
  1733   000AA4  2405               	addwf	(??_DHT11_GetTemperature+2)^0,w,c
  1734   000AA6  2404               	addwf	(??_DHT11_GetTemperature+1)^0,w,c
  1735   000AA8  2403               	addwf	??_DHT11_GetTemperature^0,w,c
  1736   000AAA  6E06               	movwf	DHT11_GetTemperature@checksum^0,c
  1737                           
  1738                           ;DHT11.c: 35:         if (checksum == DHT11_Read()) {
  1739   000AAC  ECE9  F005         	call	_DHT11_Read	;wreg free
  1740   000AB0  1806               	xorwf	DHT11_GetTemperature@checksum^0,w,c
  1741   000AB2  A4D8               	btfss	status,2,c
  1742   000AB4  EF5E  F005         	goto	u111
  1743   000AB8  EF60  F005         	goto	u110
  1744   000ABC                     u111:
  1745   000ABC  EF64  F005         	goto	l856
  1746   000AC0                     u110:
  1747   000AC0                     
  1748                           ;DHT11.c: 36:             return DHT11_Read();
  1749   000AC0  ECE9  F005         	call	_DHT11_Read	;wreg free
  1750   000AC4  EF65  F005         	goto	l29
  1751   000AC8                     l856:
  1752                           
  1753                           ;DHT11.c: 39:     return 255;
  1754   000AC8  0EFF               	movlw	255
  1755   000ACA                     l29:
  1756   000ACA  0012               	return		;funcret
  1757   000ACC                     __end_of_DHT11_GetTemperature:
  1758                           	callstack 0
  1759                           
  1760 ;; *************** function _DHT11_Read *****************
  1761 ;; Defined at:
  1762 ;;		line 4 in file "DHT11.c"
  1763 ;; Parameters:    Size  Location     Type
  1764 ;;		None
  1765 ;; Auto vars:     Size  Location     Type
  1766 ;;  i               1    1[COMRAM] unsigned char 
  1767 ;;  data            1    0[COMRAM] unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      unsigned char 
  1770 ;; Registers used:
  1771 ;;		wreg, status,2, status,0
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1777 ;;      Params:         0       0       0       0       0       0       0       0       0
  1778 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1780 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1781 ;;Total ram usage:        2 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; This function calls:
  1784 ;;		Nothing
  1785 ;; This function is called by:
  1786 ;;		_DHT11_GetTemperature
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790                           	psect	text9
  1791   000BD2                     __ptext9:
  1792                           	callstack 0
  1793   000BD2                     _DHT11_Read:
  1794                           	callstack 29
  1795   000BD2                     
  1796                           ;DHT11.c: 5:     uint8_t data = 0;
  1797   000BD2  6A01               	clrf	DHT11_Read@data^0,c
  1798                           
  1799                           ;DHT11.c: 6:     for (uint8_t i = 0; i < 8; i++) {
  1800   000BD4  6A02               	clrf	DHT11_Read@i^0,c
  1801   000BD6                     l11:
  1802   000BD6  A080               	btfss	128,0,c	;volatile
  1803   000BD8  EFF0  F005         	goto	u11
  1804   000BDC  EFF2  F005         	goto	u10
  1805   000BE0                     u11:
  1806   000BE0  EFEB  F005         	goto	l11
  1807   000BE4                     u10:
  1808   000BE4                     
  1809                           ;DHT11.c: 8:         _delay((unsigned long)((35)*(8000000/4000000.0)));
  1810   000BE4  0E17               	movlw	23
  1811   000BE6                     u517:
  1812   000BE6  2EE8               	decfsz	wreg,f,c
  1813   000BE8  D7FE               	bra	u517
  1814   000BEA  0000               	nop	
  1815   000BEC                     
  1816                           ;DHT11.c: 9:         data <<= 1;
  1817   000BEC  90D8               	bcf	status,0,c
  1818   000BEE  3601               	rlcf	DHT11_Read@data^0,f,c
  1819   000BF0                     
  1820                           ;DHT11.c: 10:         if (PORTAbits.RA0) data |= 1;
  1821   000BF0  A080               	btfss	128,0,c	;volatile
  1822   000BF2  EFFD  F005         	goto	u21
  1823   000BF6  EFFF  F005         	goto	u20
  1824   000BFA                     u21:
  1825   000BFA  EF00  F006         	goto	l15
  1826   000BFE                     u20:
  1827   000BFE  8001               	bsf	DHT11_Read@data^0,0,c
  1828   000C00                     l15:
  1829   000C00  B080               	btfsc	128,0,c	;volatile
  1830   000C02  EF05  F006         	goto	u31
  1831   000C06  EF07  F006         	goto	u30
  1832   000C0A                     u31:
  1833   000C0A  EF00  F006         	goto	l15
  1834   000C0E                     u30:
  1835   000C0E                     
  1836                           ;DHT11.c: 12:     }
  1837   000C0E  2A02               	incf	DHT11_Read@i^0,f,c
  1838   000C10  0E07               	movlw	7
  1839   000C12  6402               	cpfsgt	DHT11_Read@i^0,c
  1840   000C14  EF0E  F006         	goto	u41
  1841   000C18  EF10  F006         	goto	u40
  1842   000C1C                     u41:
  1843   000C1C  EFEB  F005         	goto	l11
  1844   000C20                     u40:
  1845   000C20                     
  1846                           ;DHT11.c: 13:     return data;
  1847   000C20  5001               	movf	DHT11_Read@data^0,w,c
  1848   000C22  0012               	return		;funcret
  1849   000C24                     __end_of_DHT11_Read:
  1850                           	callstack 0
  1851                           
  1852                           	psect	rparam
  1853   000001                     ___rparam_used  equ	1
  1854   000000                     ___param_bank   equ	0
  1855   000000                     __Lparam        equ	__Lrparam
  1856   000000                     __Hparam        equ	__Hrparam
  1857                           
  1858                           	psect	idloc
  1859                           
  1860                           ;Config register IDLOC0 @ 0x200000
  1861                           ;	unspecified, using default values
  1862   200000                     	org	2097152
  1863   200000  FF                 	db	255
  1864                           
  1865                           ;Config register IDLOC1 @ 0x200001
  1866                           ;	unspecified, using default values
  1867   200001                     	org	2097153
  1868   200001  FF                 	db	255
  1869                           
  1870                           ;Config register IDLOC2 @ 0x200002
  1871                           ;	unspecified, using default values
  1872   200002                     	org	2097154
  1873   200002  FF                 	db	255
  1874                           
  1875                           ;Config register IDLOC3 @ 0x200003
  1876                           ;	unspecified, using default values
  1877   200003                     	org	2097155
  1878   200003  FF                 	db	255
  1879                           
  1880                           ;Config register IDLOC4 @ 0x200004
  1881                           ;	unspecified, using default values
  1882   200004                     	org	2097156
  1883   200004  FF                 	db	255
  1884                           
  1885                           ;Config register IDLOC5 @ 0x200005
  1886                           ;	unspecified, using default values
  1887   200005                     	org	2097157
  1888   200005  FF                 	db	255
  1889                           
  1890                           ;Config register IDLOC6 @ 0x200006
  1891                           ;	unspecified, using default values
  1892   200006                     	org	2097158
  1893   200006  FF                 	db	255
  1894                           
  1895                           ;Config register IDLOC7 @ 0x200007
  1896                           ;	unspecified, using default values
  1897   200007                     	org	2097159
  1898   200007  FF                 	db	255
  1899                           
  1900                           	psect	config
  1901                           
  1902                           ;Config register CONFIG1L @ 0x300000
  1903                           ;	PLL Prescaler Selection bits
  1904                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1905                           ;	System Clock Postscaler Selection bits
  1906                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1907                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1908                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1909   300000                     	org	3145728
  1910   300000  00                 	db	0
  1911                           
  1912                           ;Config register CONFIG1H @ 0x300001
  1913                           ;	Oscillator Selection bits
  1914                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1915                           ;	Fail-Safe Clock Monitor Enable bit
  1916                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1917                           ;	Internal/External Oscillator Switchover bit
  1918                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1919   300001                     	org	3145729
  1920   300001  09                 	db	9
  1921                           
  1922                           ;Config register CONFIG2L @ 0x300002
  1923                           ;	Power-up Timer Enable bit
  1924                           ;	PWRT = OFF, PWRT disabled
  1925                           ;	Brown-out Reset Enable bits
  1926                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1927                           ;	Brown-out Reset Voltage bits
  1928                           ;	BORV = 3, Minimum setting 2.05V
  1929                           ;	USB Voltage Regulator Enable bit
  1930                           ;	VREGEN = OFF, USB voltage regulator disabled
  1931   300002                     	org	3145730
  1932   300002  1F                 	db	31
  1933                           
  1934                           ;Config register CONFIG2H @ 0x300003
  1935                           ;	Watchdog Timer Enable bit
  1936                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1937                           ;	Watchdog Timer Postscale Select bits
  1938                           ;	WDTPS = 32768, 1:32768
  1939   300003                     	org	3145731
  1940   300003  1E                 	db	30
  1941                           
  1942                           ; Padding undefined space
  1943   300004                     	org	3145732
  1944   300004  FF                 	db	255
  1945                           
  1946                           ;Config register CONFIG3H @ 0x300005
  1947                           ;	CCP2 MUX bit
  1948                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1949                           ;	PORTB A/D Enable bit
  1950                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1951                           ;	Low-Power Timer 1 Oscillator Enable bit
  1952                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1953                           ;	MCLR Pin Enable bit
  1954                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  1955   300005                     	org	3145733
  1956   300005  01                 	db	1
  1957                           
  1958                           ;Config register CONFIG4L @ 0x300006
  1959                           ;	Stack Full/Underflow Reset Enable bit
  1960                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1961                           ;	Single-Supply ICSP Enable bit
  1962                           ;	LVP = OFF, Single-Supply ICSP disabled
  1963                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1964                           ;	ICPRT = OFF, ICPORT disabled
  1965                           ;	Extended Instruction Set Enable bit
  1966                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1967                           ;	Background Debugger Enable bit
  1968                           ;	DEBUG = 0x1, unprogrammed default
  1969   300006                     	org	3145734
  1970   300006  81                 	db	129
  1971                           
  1972                           ; Padding undefined space
  1973   300007                     	org	3145735
  1974   300007  FF                 	db	255
  1975                           
  1976                           ;Config register CONFIG5L @ 0x300008
  1977                           ;	Code Protection bit
  1978                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1979                           ;	Code Protection bit
  1980                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1981                           ;	Code Protection bit
  1982                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1983                           ;	Code Protection bit
  1984                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1985   300008                     	org	3145736
  1986   300008  0F                 	db	15
  1987                           
  1988                           ;Config register CONFIG5H @ 0x300009
  1989                           ;	Boot Block Code Protection bit
  1990                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1991                           ;	Data EEPROM Code Protection bit
  1992                           ;	CPD = OFF, Data EEPROM is not code-protected
  1993   300009                     	org	3145737
  1994   300009  C0                 	db	192
  1995                           
  1996                           ;Config register CONFIG6L @ 0x30000A
  1997                           ;	Write Protection bit
  1998                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1999                           ;	Write Protection bit
  2000                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2001                           ;	Write Protection bit
  2002                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2003                           ;	Write Protection bit
  2004                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2005   30000A                     	org	3145738
  2006   30000A  0F                 	db	15
  2007                           
  2008                           ;Config register CONFIG6H @ 0x30000B
  2009                           ;	Configuration Register Write Protection bit
  2010                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2011                           ;	Boot Block Write Protection bit
  2012                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2013                           ;	Data EEPROM Write Protection bit
  2014                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2015   30000B                     	org	3145739
  2016   30000B  E0                 	db	224
  2017                           
  2018                           ;Config register CONFIG7L @ 0x30000C
  2019                           ;	Table Read Protection bit
  2020                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2021                           ;	Table Read Protection bit
  2022                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2023                           ;	Table Read Protection bit
  2024                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2025                           ;	Table Read Protection bit
  2026                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2027   30000C                     	org	3145740
  2028   30000C  0F                 	db	15
  2029                           
  2030                           ;Config register CONFIG7H @ 0x30000D
  2031                           ;	Boot Block Table Read Protection bit
  2032                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2033   30000D                     	org	3145741
  2034   30000D  40                 	db	64
  2035                           tosu	equ	0xFFF
  2036                           tosh	equ	0xFFE
  2037                           tosl	equ	0xFFD
  2038                           stkptr	equ	0xFFC
  2039                           pclatu	equ	0xFFB
  2040                           pclath	equ	0xFFA
  2041                           pcl	equ	0xFF9
  2042                           tblptru	equ	0xFF8
  2043                           tblptrh	equ	0xFF7
  2044                           tblptrl	equ	0xFF6
  2045                           tablat	equ	0xFF5
  2046                           prodh	equ	0xFF4
  2047                           prodl	equ	0xFF3
  2048                           indf0	equ	0xFEF
  2049                           postinc0	equ	0xFEE
  2050                           postdec0	equ	0xFED
  2051                           preinc0	equ	0xFEC
  2052                           plusw0	equ	0xFEB
  2053                           fsr0h	equ	0xFEA
  2054                           fsr0l	equ	0xFE9
  2055                           wreg	equ	0xFE8
  2056                           indf1	equ	0xFE7
  2057                           postinc1	equ	0xFE6
  2058                           postdec1	equ	0xFE5
  2059                           preinc1	equ	0xFE4
  2060                           plusw1	equ	0xFE3
  2061                           fsr1h	equ	0xFE2
  2062                           fsr1l	equ	0xFE1
  2063                           bsr	equ	0xFE0
  2064                           indf2	equ	0xFDF
  2065                           postinc2	equ	0xFDE
  2066                           postdec2	equ	0xFDD
  2067                           preinc2	equ	0xFDC
  2068                           plusw2	equ	0xFDB
  2069                           fsr2h	equ	0xFDA
  2070                           fsr2l	equ	0xFD9
  2071                           status	equ	0xFD8

Data Sizes:
    Strings     19
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     17      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 13
		 -> main@buffer(COMRAM[5]), STR_1(CODE[13]), STR_2(CODE[6]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 13
		 -> main@buffer(COMRAM[5]), STR_1(CODE[13]), STR_2(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _DHT11_GetTemperature->_DHT11_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    1132
                                              9 COMRAM     8     8      0
               _DHT11_GetTemperature
                           _LCD_Init
                      _LCD_String_xy
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     254
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2      76
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_GetTemperature                                 4     4      0      60
                                              2 COMRAM     4     4      0
                         _DHT11_Read
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read                                           2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_GetTemperature
     _DHT11_Read
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   ___awdiv
   ___awmod

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK0           160      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBIGSFRh         127      0       0      0.0%
BITBIGSFRl          32      0       0      0.0%
COMRAM              95     17      17     17.9%
BANK0              160      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BIGRAM            2047      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      17      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Apr 07 20:50:33 2025

                ?_LCD_Command 0001                            l11 0BD6                            l22 0A72  
                          l15 0C00                            l25 0A80                            l18 0C22  
                          l29 0ACA                            l72 0C94                            l75 0BD0  
                          l84 0B28                            l78 0B7C                            l89 0C62  
                          u10 0BE4                            u11 0BE0                            u20 0BFE  
                          u21 0BFA                            u30 0C0E                            u31 0C0A  
                          u40 0C20                            u41 0C1C                            u80 0A72  
                          u81 0A6E                            u90 0A80                            u91 0A7C  
                ___awdiv@sign 0006                   ?_LCD_String 0003          _DHT11_GetTemperature 0A48  
                         l326 0998                           l339 0A46                           l800 0BFE  
                         l802 0C0E                           l810 0B80                           l804 0C10  
                         l820 0B98                           l812 0B90                           l806 0C20  
                         l822 0BA6                           l814 0B92                           l840 0A4C  
                         l824 0BBC                           l816 0B94                           l850 0A8E  
                         l842 0A5A                           l826 0BBE                           l818 0B96  
                         l770 0B3C                           l852 0AC0                           l844 0A62  
                         l828 0BC0                           l860 0C64                           l780 0B52  
                         l772 0B3E                           l846 0A64                           l838 0A48  
                         l870 0C88                           l862 0C66                           l782 0B68  
                         l774 0B40                           l856 0AC8                           l872 0C8E  
                         l864 0C76                           l784 0B6A                           l776 0B42  
                         l768 0B2C                           l794 0BE4                           l866 0C7C  
                         l786 0B6C                           l778 0B44                           l796 0BEC  
                         l788 0BD2                           l868 0C82                           l798 0BF0  
                         l996 0ACC                           l998 0AD0                           u100 0A8E  
                         u101 0A8A                           u110 0AC0                           u111 0ABC  
                         u300 08E8                           u301 08E4                           u310 0902  
                         u311 08FE                           u320 0928                           u400 0A12  
                         u321 0924                           u401 0A0E                           u330 0946  
                         u410 0A36                           u331 0942                           u411 0A32  
                         u260 0AF0                           u340 0962                           u420 0854  
                         u341 095E                           u421 0850                           u270 0B18  
                         u350 0988                           u351 0984                           u280 0B28  
                         u360 09AA                           u281 0B24                           u361 09A6  
                         u290 0C36                           u370 09C4                           u507 0A5E  
                         u267 0AE6                           u291 0C32                           u371 09C0  
                         u380 09DE                           u517 0BE6                           u277 0B0E  
                         u381 09DA                           u437 08C2                           u390 09FC  
                         u447 0B4A                           u391 09F8                           u457 0B74  
                         u467 0C6C                           u477 0B9E                           u487 0BC8  
                         u497 0A52                  ___awmod@sign 0006                           wreg 0FE8  
                 LCD_Char@dat 0002                          l1000 0AF4                          l1002 0AF8  
                        l1010 0C3E                          l1012 0C48                          l1004 0C26  
                        l1020 08DA                          l1100 081A                          l1014 0C50  
                        l1006 0C26                          l1030 090A                          l1022 08E8  
                        l1110 0854                          l1102 0824                          l1016 0C56  
                        l1008 0C36                          l1040 0938                          l1032 090E  
                        l1024 08F0                          l1112 0884                          l1120 08A2  
                        l1104 0828                          l1050 096C                          l1042 0946  
                        l1034 0916                          l1026 08F4                          l1018 08D8  
                        l1122 08B8                          l1114 0888                          l1106 083E  
                        l1052 0972                          l1044 094C                          l1036 0928  
                        l1028 0902                          l1116 088C                          l1108 0844  
                        l1046 0962                          l1038 0930                          l1054 0978  
                        l1070 09B6                          l1062 099A                          l1118 088E  
                        l1056 0988                          l1048 096A                          l1080 09EE  
                        l1072 09C4                          l1064 099C                          l1058 0990  
                        l1082 09FC                          l1090 0A26                          l1074 09CC  
                        l1066 09AA                          l1092 0A36                          l1084 0A12  
                        l1076 09DE                          l1068 09B2                          l1094 0A3E  
                        l1086 0A1A                          l1078 09E6                          l1088 0A20  
                        l1098 0816                          STR_1 0801                          STR_2 080E  
                        _LATD 0F8C                          _main 0816                          fsr0h 0FEA  
                        indf0 0FEF                          fsr0l 0FE9                          start 7FFC  
               _LCD_String_xy 0C24                  ___param_bank 0000              __end_of_LCD_Char 0B7E  
            __end_of_LCD_Init 0C96         ?_DHT11_GetTemperature 0001                         ?_main 0001  
             __end_of___awdiv 099A               __end_of___awmod 0A48                         _CMCON 0FB4  
             ___awdiv@divisor 0003                         _LATD0 7C60                         _LATD1 7C61  
             ___awdiv@counter 0005                         _TRISD 0F95                         tablat 0FF5  
                       status 0FD8                ?_LCD_String_xy 0005               __initialization 0C96  
                __end_of_main 08D8                        ??_main 000A                 __activetblptr 0002  
                      _ADCON1 0FC1              ___awdiv@dividend 0001              LCD_String_xy@msg 0006  
            LCD_String_xy@pos 0005              LCD_String_xy@row 0008                        _OSCCON 0FD3  
                ??_DHT11_Read 0001                     ??___awdiv 0005                     ??___awmod 0005  
      ??_DHT11_GetTemperature 0003              ___awdiv@quotient 0007               ___awmod@divisor 0003  
                      isa$std 0001               ___awmod@counter 0005                  __mediumconst 0800  
                      tblptrh 0FF7                        tblptrl 0FF6                        tblptru 0FF8  
          __end_of_DHT11_Read 0C24                     ?_LCD_Char 0001                    __accesstop 0060  
     __end_of__initialization 0C96                     ?_LCD_Init 0001               ??_LCD_String_xy 0008  
               ___rparam_used 0001                __pcstackCOMRAM 0001                  ??_LCD_String 0005  
                  ??_LCD_Char 0001                    ??_LCD_Init 0003            __end_of_LCD_String 0B2A  
               LCD_String@msg 0003                       __Hparam 0000                       __Lparam 0000  
                     ___awdiv 08D8                       ___awmod 099A                  __psmallconst 0800  
                     __pcinit 0C96                       __ramtop 0800                       __ptext0 0816  
                     __ptext1 099A                       __ptext2 08D8                       __ptext3 0C24  
                     __ptext4 0ACC                       __ptext5 0B2A                       __ptext6 0C64  
                     __ptext7 0B7E                       __ptext8 0A48                       __ptext9 0BD2  
            ___awmod@dividend 0001          end_of_initialization 0C96                LCD_Command@cmd 0002  
               __Lmediumconst 0000                     _PORTAbits 0F80                     _TRISAbits 0F92  
                  main@buffer 000C                 ??_LCD_Command 0001           start_initialization 0C96  
       __end_of_LCD_String_xy 0C64           __end_of_LCD_Command 0BD2                      ?___awdiv 0001  
                    ?___awmod 0001                   __smallconst 0800         LCD_String_xy@location 0009  
                    _LCD_Char 0B2A                      _LCD_Init 0C64  DHT11_GetTemperature@checksum 0006  
                 DHT11_Read@i 0002                   _LCD_Command 0B7E                    _DHT11_Read 0BD2  
                    __Hrparam 0000                      __Lrparam 0000  __end_of_DHT11_GetTemperature 0ACC  
                    isa$xinst 0000                      main@temp 0011                    _LCD_String 0ACC  
              DHT11_Read@data 0001                   ?_DHT11_Read 0001  
