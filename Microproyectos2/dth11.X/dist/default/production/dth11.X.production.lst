

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Tue Apr 08 15:37:22 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000FE0                     bsr             equ	4064
    59   000FE9                     fsr0            equ	4073
    60   000FEA                     fsr0h           equ	4074
    61   000FE9                     fsr0l           equ	4073
    62   000FE1                     fsr1            equ	4065
    63   000FE2                     fsr1h           equ	4066
    64   000FE1                     fsr1l           equ	4065
    65   000FD9                     fsr2            equ	4057
    66   000FDA                     fsr2h           equ	4058
    67   000FD9                     fsr2l           equ	4057
    68   000FEF                     indf0           equ	4079
    69   000FE7                     indf1           equ	4071
    70   000FDF                     indf2           equ	4063
    71   000FF2                     intcon          equ	4082
    72   000000                     nvmcon          equ	0
    73   000FF9                     pcl             equ	4089
    74   000FFA                     pclath          equ	4090
    75   000FFB                     pclatu          equ	4091
    76   000FEB                     plusw0          equ	4075
    77   000FE3                     plusw1          equ	4067
    78   000FDB                     plusw2          equ	4059
    79   000FED                     postdec0        equ	4077
    80   000FE5                     postdec1        equ	4069
    81   000FDD                     postdec2        equ	4061
    82   000FEE                     postinc0        equ	4078
    83   000FE6                     postinc1        equ	4070
    84   000FDE                     postinc2        equ	4062
    85   000FEC                     preinc0         equ	4076
    86   000FE4                     preinc1         equ	4068
    87   000FDC                     preinc2         equ	4060
    88   000FF3                     prod            equ	4083
    89   000FF4                     prodh           equ	4084
    90   000FF3                     prodl           equ	4083
    91   000FD8                     status          equ	4056
    92   000FF5                     tablat          equ	4085
    93   000FF6                     tblptr          equ	4086
    94   000FF7                     tblptrh         equ	4087
    95   000FF6                     tblptrl         equ	4086
    96   000FF8                     tblptru         equ	4088
    97   000FFD                     tosl            equ	4093
    98   000FE8                     wreg            equ	4072
    99   000F62                     SPPDATA         equ	3938	;# 
   100   000F63                     SPPCFG          equ	3939	;# 
   101   000F64                     SPPEPS          equ	3940	;# 
   102   000F65                     SPPCON          equ	3941	;# 
   103   000F66                     UFRM            equ	3942	;# 
   104   000F66                     UFRML           equ	3942	;# 
   105   000F67                     UFRMH           equ	3943	;# 
   106   000F68                     UIR             equ	3944	;# 
   107   000F69                     UIE             equ	3945	;# 
   108   000F6A                     UEIR            equ	3946	;# 
   109   000F6B                     UEIE            equ	3947	;# 
   110   000F6C                     USTAT           equ	3948	;# 
   111   000F6D                     UCON            equ	3949	;# 
   112   000F6E                     UADDR           equ	3950	;# 
   113   000F6F                     UCFG            equ	3951	;# 
   114   000F70                     UEP0            equ	3952	;# 
   115   000F71                     UEP1            equ	3953	;# 
   116   000F72                     UEP2            equ	3954	;# 
   117   000F73                     UEP3            equ	3955	;# 
   118   000F74                     UEP4            equ	3956	;# 
   119   000F75                     UEP5            equ	3957	;# 
   120   000F76                     UEP6            equ	3958	;# 
   121   000F77                     UEP7            equ	3959	;# 
   122   000F78                     UEP8            equ	3960	;# 
   123   000F79                     UEP9            equ	3961	;# 
   124   000F7A                     UEP10           equ	3962	;# 
   125   000F7B                     UEP11           equ	3963	;# 
   126   000F7C                     UEP12           equ	3964	;# 
   127   000F7D                     UEP13           equ	3965	;# 
   128   000F7E                     UEP14           equ	3966	;# 
   129   000F7F                     UEP15           equ	3967	;# 
   130   000F80                     PORTA           equ	3968	;# 
   131   000F81                     PORTB           equ	3969	;# 
   132   000F82                     PORTC           equ	3970	;# 
   133   000F83                     PORTD           equ	3971	;# 
   134   000F84                     PORTE           equ	3972	;# 
   135   000F89                     LATA            equ	3977	;# 
   136   000F8A                     LATB            equ	3978	;# 
   137   000F8B                     LATC            equ	3979	;# 
   138   000F8C                     LATD            equ	3980	;# 
   139   000F8D                     LATE            equ	3981	;# 
   140   000F92                     TRISA           equ	3986	;# 
   141   000F92                     DDRA            equ	3986	;# 
   142   000F93                     TRISB           equ	3987	;# 
   143   000F93                     DDRB            equ	3987	;# 
   144   000F94                     TRISC           equ	3988	;# 
   145   000F94                     DDRC            equ	3988	;# 
   146   000F95                     TRISD           equ	3989	;# 
   147   000F95                     DDRD            equ	3989	;# 
   148   000F96                     TRISE           equ	3990	;# 
   149   000F96                     DDRE            equ	3990	;# 
   150   000F9B                     OSCTUNE         equ	3995	;# 
   151   000F9D                     PIE1            equ	3997	;# 
   152   000F9E                     PIR1            equ	3998	;# 
   153   000F9F                     IPR1            equ	3999	;# 
   154   000FA0                     PIE2            equ	4000	;# 
   155   000FA1                     PIR2            equ	4001	;# 
   156   000FA2                     IPR2            equ	4002	;# 
   157   000FA6                     EECON1          equ	4006	;# 
   158   000FA7                     EECON2          equ	4007	;# 
   159   000FA8                     EEDATA          equ	4008	;# 
   160   000FA9                     EEADR           equ	4009	;# 
   161   000FAB                     RCSTA           equ	4011	;# 
   162   000FAB                     RCSTA1          equ	4011	;# 
   163   000FAC                     TXSTA           equ	4012	;# 
   164   000FAC                     TXSTA1          equ	4012	;# 
   165   000FAD                     TXREG           equ	4013	;# 
   166   000FAD                     TXREG1          equ	4013	;# 
   167   000FAE                     RCREG           equ	4014	;# 
   168   000FAE                     RCREG1          equ	4014	;# 
   169   000FAF                     SPBRG           equ	4015	;# 
   170   000FAF                     SPBRG1          equ	4015	;# 
   171   000FB0                     SPBRGH          equ	4016	;# 
   172   000FB1                     T3CON           equ	4017	;# 
   173   000FB2                     TMR3            equ	4018	;# 
   174   000FB2                     TMR3L           equ	4018	;# 
   175   000FB3                     TMR3H           equ	4019	;# 
   176   000FB4                     CMCON           equ	4020	;# 
   177   000FB5                     CVRCON          equ	4021	;# 
   178   000FB6                     ECCP1AS         equ	4022	;# 
   179   000FB6                     CCP1AS          equ	4022	;# 
   180   000FB7                     ECCP1DEL        equ	4023	;# 
   181   000FB7                     CCP1DEL         equ	4023	;# 
   182   000FB8                     BAUDCON         equ	4024	;# 
   183   000FB8                     BAUDCTL         equ	4024	;# 
   184   000FBA                     CCP2CON         equ	4026	;# 
   185   000FBB                     CCPR2           equ	4027	;# 
   186   000FBB                     CCPR2L          equ	4027	;# 
   187   000FBC                     CCPR2H          equ	4028	;# 
   188   000FBD                     CCP1CON         equ	4029	;# 
   189   000FBD                     ECCP1CON        equ	4029	;# 
   190   000FBE                     CCPR1           equ	4030	;# 
   191   000FBE                     CCPR1L          equ	4030	;# 
   192   000FBF                     CCPR1H          equ	4031	;# 
   193   000FC0                     ADCON2          equ	4032	;# 
   194   000FC1                     ADCON1          equ	4033	;# 
   195   000FC2                     ADCON0          equ	4034	;# 
   196   000FC3                     ADRES           equ	4035	;# 
   197   000FC3                     ADRESL          equ	4035	;# 
   198   000FC4                     ADRESH          equ	4036	;# 
   199   000FC5                     SSPCON2         equ	4037	;# 
   200   000FC6                     SSPCON1         equ	4038	;# 
   201   000FC7                     SSPSTAT         equ	4039	;# 
   202   000FC8                     SSPADD          equ	4040	;# 
   203   000FC9                     SSPBUF          equ	4041	;# 
   204   000FCA                     T2CON           equ	4042	;# 
   205   000FCB                     PR2             equ	4043	;# 
   206   000FCB                     MEMCON          equ	4043	;# 
   207   000FCC                     TMR2            equ	4044	;# 
   208   000FCD                     T1CON           equ	4045	;# 
   209   000FCE                     TMR1            equ	4046	;# 
   210   000FCE                     TMR1L           equ	4046	;# 
   211   000FCF                     TMR1H           equ	4047	;# 
   212   000FD0                     RCON            equ	4048	;# 
   213   000FD1                     WDTCON          equ	4049	;# 
   214   000FD2                     HLVDCON         equ	4050	;# 
   215   000FD2                     LVDCON          equ	4050	;# 
   216   000FD3                     OSCCON          equ	4051	;# 
   217   000FD5                     T0CON           equ	4053	;# 
   218   000FD6                     TMR0            equ	4054	;# 
   219   000FD6                     TMR0L           equ	4054	;# 
   220   000FD7                     TMR0H           equ	4055	;# 
   221   000FD8                     STATUS          equ	4056	;# 
   222   000FD9                     FSR2            equ	4057	;# 
   223   000FD9                     FSR2L           equ	4057	;# 
   224   000FDA                     FSR2H           equ	4058	;# 
   225   000FDB                     PLUSW2          equ	4059	;# 
   226   000FDC                     PREINC2         equ	4060	;# 
   227   000FDD                     POSTDEC2        equ	4061	;# 
   228   000FDE                     POSTINC2        equ	4062	;# 
   229   000FDF                     INDF2           equ	4063	;# 
   230   000FE0                     BSR             equ	4064	;# 
   231   000FE1                     FSR1            equ	4065	;# 
   232   000FE1                     FSR1L           equ	4065	;# 
   233   000FE2                     FSR1H           equ	4066	;# 
   234   000FE3                     PLUSW1          equ	4067	;# 
   235   000FE4                     PREINC1         equ	4068	;# 
   236   000FE5                     POSTDEC1        equ	4069	;# 
   237   000FE6                     POSTINC1        equ	4070	;# 
   238   000FE7                     INDF1           equ	4071	;# 
   239   000FE8                     WREG            equ	4072	;# 
   240   000FE9                     FSR0            equ	4073	;# 
   241   000FE9                     FSR0L           equ	4073	;# 
   242   000FEA                     FSR0H           equ	4074	;# 
   243   000FEB                     PLUSW0          equ	4075	;# 
   244   000FEC                     PREINC0         equ	4076	;# 
   245   000FED                     POSTDEC0        equ	4077	;# 
   246   000FEE                     POSTINC0        equ	4078	;# 
   247   000FEF                     INDF0           equ	4079	;# 
   248   000FF0                     INTCON3         equ	4080	;# 
   249   000FF1                     INTCON2         equ	4081	;# 
   250   000FF2                     INTCON          equ	4082	;# 
   251   000FF3                     PROD            equ	4083	;# 
   252   000FF3                     PRODL           equ	4083	;# 
   253   000FF4                     PRODH           equ	4084	;# 
   254   000FF5                     TABLAT          equ	4085	;# 
   255   000FF6                     TBLPTR          equ	4086	;# 
   256   000FF6                     TBLPTRL         equ	4086	;# 
   257   000FF7                     TBLPTRH         equ	4087	;# 
   258   000FF8                     TBLPTRU         equ	4088	;# 
   259   000FF9                     PCLAT           equ	4089	;# 
   260   000FF9                     PC              equ	4089	;# 
   261   000FF9                     PCL             equ	4089	;# 
   262   000FFA                     PCLATH          equ	4090	;# 
   263   000FFB                     PCLATU          equ	4091	;# 
   264   000FFC                     STKPTR          equ	4092	;# 
   265   000FFD                     TOS             equ	4093	;# 
   266   000FFD                     TOSL            equ	4093	;# 
   267   000FFE                     TOSH            equ	4094	;# 
   268   000FFF                     TOSU            equ	4095	;# 
   269   000F62                     SPPDATA         equ	3938	;# 
   270   000F63                     SPPCFG          equ	3939	;# 
   271   000F64                     SPPEPS          equ	3940	;# 
   272   000F65                     SPPCON          equ	3941	;# 
   273   000F66                     UFRM            equ	3942	;# 
   274   000F66                     UFRML           equ	3942	;# 
   275   000F67                     UFRMH           equ	3943	;# 
   276   000F68                     UIR             equ	3944	;# 
   277   000F69                     UIE             equ	3945	;# 
   278   000F6A                     UEIR            equ	3946	;# 
   279   000F6B                     UEIE            equ	3947	;# 
   280   000F6C                     USTAT           equ	3948	;# 
   281   000F6D                     UCON            equ	3949	;# 
   282   000F6E                     UADDR           equ	3950	;# 
   283   000F6F                     UCFG            equ	3951	;# 
   284   000F70                     UEP0            equ	3952	;# 
   285   000F71                     UEP1            equ	3953	;# 
   286   000F72                     UEP2            equ	3954	;# 
   287   000F73                     UEP3            equ	3955	;# 
   288   000F74                     UEP4            equ	3956	;# 
   289   000F75                     UEP5            equ	3957	;# 
   290   000F76                     UEP6            equ	3958	;# 
   291   000F77                     UEP7            equ	3959	;# 
   292   000F78                     UEP8            equ	3960	;# 
   293   000F79                     UEP9            equ	3961	;# 
   294   000F7A                     UEP10           equ	3962	;# 
   295   000F7B                     UEP11           equ	3963	;# 
   296   000F7C                     UEP12           equ	3964	;# 
   297   000F7D                     UEP13           equ	3965	;# 
   298   000F7E                     UEP14           equ	3966	;# 
   299   000F7F                     UEP15           equ	3967	;# 
   300   000F80                     PORTA           equ	3968	;# 
   301   000F81                     PORTB           equ	3969	;# 
   302   000F82                     PORTC           equ	3970	;# 
   303   000F83                     PORTD           equ	3971	;# 
   304   000F84                     PORTE           equ	3972	;# 
   305   000F89                     LATA            equ	3977	;# 
   306   000F8A                     LATB            equ	3978	;# 
   307   000F8B                     LATC            equ	3979	;# 
   308   000F8C                     LATD            equ	3980	;# 
   309   000F8D                     LATE            equ	3981	;# 
   310   000F92                     TRISA           equ	3986	;# 
   311   000F92                     DDRA            equ	3986	;# 
   312   000F93                     TRISB           equ	3987	;# 
   313   000F93                     DDRB            equ	3987	;# 
   314   000F94                     TRISC           equ	3988	;# 
   315   000F94                     DDRC            equ	3988	;# 
   316   000F95                     TRISD           equ	3989	;# 
   317   000F95                     DDRD            equ	3989	;# 
   318   000F96                     TRISE           equ	3990	;# 
   319   000F96                     DDRE            equ	3990	;# 
   320   000F9B                     OSCTUNE         equ	3995	;# 
   321   000F9D                     PIE1            equ	3997	;# 
   322   000F9E                     PIR1            equ	3998	;# 
   323   000F9F                     IPR1            equ	3999	;# 
   324   000FA0                     PIE2            equ	4000	;# 
   325   000FA1                     PIR2            equ	4001	;# 
   326   000FA2                     IPR2            equ	4002	;# 
   327   000FA6                     EECON1          equ	4006	;# 
   328   000FA7                     EECON2          equ	4007	;# 
   329   000FA8                     EEDATA          equ	4008	;# 
   330   000FA9                     EEADR           equ	4009	;# 
   331   000FAB                     RCSTA           equ	4011	;# 
   332   000FAB                     RCSTA1          equ	4011	;# 
   333   000FAC                     TXSTA           equ	4012	;# 
   334   000FAC                     TXSTA1          equ	4012	;# 
   335   000FAD                     TXREG           equ	4013	;# 
   336   000FAD                     TXREG1          equ	4013	;# 
   337   000FAE                     RCREG           equ	4014	;# 
   338   000FAE                     RCREG1          equ	4014	;# 
   339   000FAF                     SPBRG           equ	4015	;# 
   340   000FAF                     SPBRG1          equ	4015	;# 
   341   000FB0                     SPBRGH          equ	4016	;# 
   342   000FB1                     T3CON           equ	4017	;# 
   343   000FB2                     TMR3            equ	4018	;# 
   344   000FB2                     TMR3L           equ	4018	;# 
   345   000FB3                     TMR3H           equ	4019	;# 
   346   000FB4                     CMCON           equ	4020	;# 
   347   000FB5                     CVRCON          equ	4021	;# 
   348   000FB6                     ECCP1AS         equ	4022	;# 
   349   000FB6                     CCP1AS          equ	4022	;# 
   350   000FB7                     ECCP1DEL        equ	4023	;# 
   351   000FB7                     CCP1DEL         equ	4023	;# 
   352   000FB8                     BAUDCON         equ	4024	;# 
   353   000FB8                     BAUDCTL         equ	4024	;# 
   354   000FBA                     CCP2CON         equ	4026	;# 
   355   000FBB                     CCPR2           equ	4027	;# 
   356   000FBB                     CCPR2L          equ	4027	;# 
   357   000FBC                     CCPR2H          equ	4028	;# 
   358   000FBD                     CCP1CON         equ	4029	;# 
   359   000FBD                     ECCP1CON        equ	4029	;# 
   360   000FBE                     CCPR1           equ	4030	;# 
   361   000FBE                     CCPR1L          equ	4030	;# 
   362   000FBF                     CCPR1H          equ	4031	;# 
   363   000FC0                     ADCON2          equ	4032	;# 
   364   000FC1                     ADCON1          equ	4033	;# 
   365   000FC2                     ADCON0          equ	4034	;# 
   366   000FC3                     ADRES           equ	4035	;# 
   367   000FC3                     ADRESL          equ	4035	;# 
   368   000FC4                     ADRESH          equ	4036	;# 
   369   000FC5                     SSPCON2         equ	4037	;# 
   370   000FC6                     SSPCON1         equ	4038	;# 
   371   000FC7                     SSPSTAT         equ	4039	;# 
   372   000FC8                     SSPADD          equ	4040	;# 
   373   000FC9                     SSPBUF          equ	4041	;# 
   374   000FCA                     T2CON           equ	4042	;# 
   375   000FCB                     PR2             equ	4043	;# 
   376   000FCB                     MEMCON          equ	4043	;# 
   377   000FCC                     TMR2            equ	4044	;# 
   378   000FCD                     T1CON           equ	4045	;# 
   379   000FCE                     TMR1            equ	4046	;# 
   380   000FCE                     TMR1L           equ	4046	;# 
   381   000FCF                     TMR1H           equ	4047	;# 
   382   000FD0                     RCON            equ	4048	;# 
   383   000FD1                     WDTCON          equ	4049	;# 
   384   000FD2                     HLVDCON         equ	4050	;# 
   385   000FD2                     LVDCON          equ	4050	;# 
   386   000FD3                     OSCCON          equ	4051	;# 
   387   000FD5                     T0CON           equ	4053	;# 
   388   000FD6                     TMR0            equ	4054	;# 
   389   000FD6                     TMR0L           equ	4054	;# 
   390   000FD7                     TMR0H           equ	4055	;# 
   391   000FD8                     STATUS          equ	4056	;# 
   392   000FD9                     FSR2            equ	4057	;# 
   393   000FD9                     FSR2L           equ	4057	;# 
   394   000FDA                     FSR2H           equ	4058	;# 
   395   000FDB                     PLUSW2          equ	4059	;# 
   396   000FDC                     PREINC2         equ	4060	;# 
   397   000FDD                     POSTDEC2        equ	4061	;# 
   398   000FDE                     POSTINC2        equ	4062	;# 
   399   000FDF                     INDF2           equ	4063	;# 
   400   000FE0                     BSR             equ	4064	;# 
   401   000FE1                     FSR1            equ	4065	;# 
   402   000FE1                     FSR1L           equ	4065	;# 
   403   000FE2                     FSR1H           equ	4066	;# 
   404   000FE3                     PLUSW1          equ	4067	;# 
   405   000FE4                     PREINC1         equ	4068	;# 
   406   000FE5                     POSTDEC1        equ	4069	;# 
   407   000FE6                     POSTINC1        equ	4070	;# 
   408   000FE7                     INDF1           equ	4071	;# 
   409   000FE8                     WREG            equ	4072	;# 
   410   000FE9                     FSR0            equ	4073	;# 
   411   000FE9                     FSR0L           equ	4073	;# 
   412   000FEA                     FSR0H           equ	4074	;# 
   413   000FEB                     PLUSW0          equ	4075	;# 
   414   000FEC                     PREINC0         equ	4076	;# 
   415   000FED                     POSTDEC0        equ	4077	;# 
   416   000FEE                     POSTINC0        equ	4078	;# 
   417   000FEF                     INDF0           equ	4079	;# 
   418   000FF0                     INTCON3         equ	4080	;# 
   419   000FF1                     INTCON2         equ	4081	;# 
   420   000FF2                     INTCON          equ	4082	;# 
   421   000FF3                     PROD            equ	4083	;# 
   422   000FF3                     PRODL           equ	4083	;# 
   423   000FF4                     PRODH           equ	4084	;# 
   424   000FF5                     TABLAT          equ	4085	;# 
   425   000FF6                     TBLPTR          equ	4086	;# 
   426   000FF6                     TBLPTRL         equ	4086	;# 
   427   000FF7                     TBLPTRH         equ	4087	;# 
   428   000FF8                     TBLPTRU         equ	4088	;# 
   429   000FF9                     PCLAT           equ	4089	;# 
   430   000FF9                     PC              equ	4089	;# 
   431   000FF9                     PCL             equ	4089	;# 
   432   000FFA                     PCLATH          equ	4090	;# 
   433   000FFB                     PCLATU          equ	4091	;# 
   434   000FFC                     STKPTR          equ	4092	;# 
   435   000FFD                     TOS             equ	4093	;# 
   436   000FFD                     TOSL            equ	4093	;# 
   437   000FFE                     TOSH            equ	4094	;# 
   438   000FFF                     TOSU            equ	4095	;# 
   439   000F62                     SPPDATA         equ	3938	;# 
   440   000F63                     SPPCFG          equ	3939	;# 
   441   000F64                     SPPEPS          equ	3940	;# 
   442   000F65                     SPPCON          equ	3941	;# 
   443   000F66                     UFRM            equ	3942	;# 
   444   000F66                     UFRML           equ	3942	;# 
   445   000F67                     UFRMH           equ	3943	;# 
   446   000F68                     UIR             equ	3944	;# 
   447   000F69                     UIE             equ	3945	;# 
   448   000F6A                     UEIR            equ	3946	;# 
   449   000F6B                     UEIE            equ	3947	;# 
   450   000F6C                     USTAT           equ	3948	;# 
   451   000F6D                     UCON            equ	3949	;# 
   452   000F6E                     UADDR           equ	3950	;# 
   453   000F6F                     UCFG            equ	3951	;# 
   454   000F70                     UEP0            equ	3952	;# 
   455   000F71                     UEP1            equ	3953	;# 
   456   000F72                     UEP2            equ	3954	;# 
   457   000F73                     UEP3            equ	3955	;# 
   458   000F74                     UEP4            equ	3956	;# 
   459   000F75                     UEP5            equ	3957	;# 
   460   000F76                     UEP6            equ	3958	;# 
   461   000F77                     UEP7            equ	3959	;# 
   462   000F78                     UEP8            equ	3960	;# 
   463   000F79                     UEP9            equ	3961	;# 
   464   000F7A                     UEP10           equ	3962	;# 
   465   000F7B                     UEP11           equ	3963	;# 
   466   000F7C                     UEP12           equ	3964	;# 
   467   000F7D                     UEP13           equ	3965	;# 
   468   000F7E                     UEP14           equ	3966	;# 
   469   000F7F                     UEP15           equ	3967	;# 
   470   000F80                     PORTA           equ	3968	;# 
   471   000F81                     PORTB           equ	3969	;# 
   472   000F82                     PORTC           equ	3970	;# 
   473   000F83                     PORTD           equ	3971	;# 
   474   000F84                     PORTE           equ	3972	;# 
   475   000F89                     LATA            equ	3977	;# 
   476   000F8A                     LATB            equ	3978	;# 
   477   000F8B                     LATC            equ	3979	;# 
   478   000F8C                     LATD            equ	3980	;# 
   479   000F8D                     LATE            equ	3981	;# 
   480   000F92                     TRISA           equ	3986	;# 
   481   000F92                     DDRA            equ	3986	;# 
   482   000F93                     TRISB           equ	3987	;# 
   483   000F93                     DDRB            equ	3987	;# 
   484   000F94                     TRISC           equ	3988	;# 
   485   000F94                     DDRC            equ	3988	;# 
   486   000F95                     TRISD           equ	3989	;# 
   487   000F95                     DDRD            equ	3989	;# 
   488   000F96                     TRISE           equ	3990	;# 
   489   000F96                     DDRE            equ	3990	;# 
   490   000F9B                     OSCTUNE         equ	3995	;# 
   491   000F9D                     PIE1            equ	3997	;# 
   492   000F9E                     PIR1            equ	3998	;# 
   493   000F9F                     IPR1            equ	3999	;# 
   494   000FA0                     PIE2            equ	4000	;# 
   495   000FA1                     PIR2            equ	4001	;# 
   496   000FA2                     IPR2            equ	4002	;# 
   497   000FA6                     EECON1          equ	4006	;# 
   498   000FA7                     EECON2          equ	4007	;# 
   499   000FA8                     EEDATA          equ	4008	;# 
   500   000FA9                     EEADR           equ	4009	;# 
   501   000FAB                     RCSTA           equ	4011	;# 
   502   000FAB                     RCSTA1          equ	4011	;# 
   503   000FAC                     TXSTA           equ	4012	;# 
   504   000FAC                     TXSTA1          equ	4012	;# 
   505   000FAD                     TXREG           equ	4013	;# 
   506   000FAD                     TXREG1          equ	4013	;# 
   507   000FAE                     RCREG           equ	4014	;# 
   508   000FAE                     RCREG1          equ	4014	;# 
   509   000FAF                     SPBRG           equ	4015	;# 
   510   000FAF                     SPBRG1          equ	4015	;# 
   511   000FB0                     SPBRGH          equ	4016	;# 
   512   000FB1                     T3CON           equ	4017	;# 
   513   000FB2                     TMR3            equ	4018	;# 
   514   000FB2                     TMR3L           equ	4018	;# 
   515   000FB3                     TMR3H           equ	4019	;# 
   516   000FB4                     CMCON           equ	4020	;# 
   517   000FB5                     CVRCON          equ	4021	;# 
   518   000FB6                     ECCP1AS         equ	4022	;# 
   519   000FB6                     CCP1AS          equ	4022	;# 
   520   000FB7                     ECCP1DEL        equ	4023	;# 
   521   000FB7                     CCP1DEL         equ	4023	;# 
   522   000FB8                     BAUDCON         equ	4024	;# 
   523   000FB8                     BAUDCTL         equ	4024	;# 
   524   000FBA                     CCP2CON         equ	4026	;# 
   525   000FBB                     CCPR2           equ	4027	;# 
   526   000FBB                     CCPR2L          equ	4027	;# 
   527   000FBC                     CCPR2H          equ	4028	;# 
   528   000FBD                     CCP1CON         equ	4029	;# 
   529   000FBD                     ECCP1CON        equ	4029	;# 
   530   000FBE                     CCPR1           equ	4030	;# 
   531   000FBE                     CCPR1L          equ	4030	;# 
   532   000FBF                     CCPR1H          equ	4031	;# 
   533   000FC0                     ADCON2          equ	4032	;# 
   534   000FC1                     ADCON1          equ	4033	;# 
   535   000FC2                     ADCON0          equ	4034	;# 
   536   000FC3                     ADRES           equ	4035	;# 
   537   000FC3                     ADRESL          equ	4035	;# 
   538   000FC4                     ADRESH          equ	4036	;# 
   539   000FC5                     SSPCON2         equ	4037	;# 
   540   000FC6                     SSPCON1         equ	4038	;# 
   541   000FC7                     SSPSTAT         equ	4039	;# 
   542   000FC8                     SSPADD          equ	4040	;# 
   543   000FC9                     SSPBUF          equ	4041	;# 
   544   000FCA                     T2CON           equ	4042	;# 
   545   000FCB                     PR2             equ	4043	;# 
   546   000FCB                     MEMCON          equ	4043	;# 
   547   000FCC                     TMR2            equ	4044	;# 
   548   000FCD                     T1CON           equ	4045	;# 
   549   000FCE                     TMR1            equ	4046	;# 
   550   000FCE                     TMR1L           equ	4046	;# 
   551   000FCF                     TMR1H           equ	4047	;# 
   552   000FD0                     RCON            equ	4048	;# 
   553   000FD1                     WDTCON          equ	4049	;# 
   554   000FD2                     HLVDCON         equ	4050	;# 
   555   000FD2                     LVDCON          equ	4050	;# 
   556   000FD3                     OSCCON          equ	4051	;# 
   557   000FD5                     T0CON           equ	4053	;# 
   558   000FD6                     TMR0            equ	4054	;# 
   559   000FD6                     TMR0L           equ	4054	;# 
   560   000FD7                     TMR0H           equ	4055	;# 
   561   000FD8                     STATUS          equ	4056	;# 
   562   000FD9                     FSR2            equ	4057	;# 
   563   000FD9                     FSR2L           equ	4057	;# 
   564   000FDA                     FSR2H           equ	4058	;# 
   565   000FDB                     PLUSW2          equ	4059	;# 
   566   000FDC                     PREINC2         equ	4060	;# 
   567   000FDD                     POSTDEC2        equ	4061	;# 
   568   000FDE                     POSTINC2        equ	4062	;# 
   569   000FDF                     INDF2           equ	4063	;# 
   570   000FE0                     BSR             equ	4064	;# 
   571   000FE1                     FSR1            equ	4065	;# 
   572   000FE1                     FSR1L           equ	4065	;# 
   573   000FE2                     FSR1H           equ	4066	;# 
   574   000FE3                     PLUSW1          equ	4067	;# 
   575   000FE4                     PREINC1         equ	4068	;# 
   576   000FE5                     POSTDEC1        equ	4069	;# 
   577   000FE6                     POSTINC1        equ	4070	;# 
   578   000FE7                     INDF1           equ	4071	;# 
   579   000FE8                     WREG            equ	4072	;# 
   580   000FE9                     FSR0            equ	4073	;# 
   581   000FE9                     FSR0L           equ	4073	;# 
   582   000FEA                     FSR0H           equ	4074	;# 
   583   000FEB                     PLUSW0          equ	4075	;# 
   584   000FEC                     PREINC0         equ	4076	;# 
   585   000FED                     POSTDEC0        equ	4077	;# 
   586   000FEE                     POSTINC0        equ	4078	;# 
   587   000FEF                     INDF0           equ	4079	;# 
   588   000FF0                     INTCON3         equ	4080	;# 
   589   000FF1                     INTCON2         equ	4081	;# 
   590   000FF2                     INTCON          equ	4082	;# 
   591   000FF3                     PROD            equ	4083	;# 
   592   000FF3                     PRODL           equ	4083	;# 
   593   000FF4                     PRODH           equ	4084	;# 
   594   000FF5                     TABLAT          equ	4085	;# 
   595   000FF6                     TBLPTR          equ	4086	;# 
   596   000FF6                     TBLPTRL         equ	4086	;# 
   597   000FF7                     TBLPTRH         equ	4087	;# 
   598   000FF8                     TBLPTRU         equ	4088	;# 
   599   000FF9                     PCLAT           equ	4089	;# 
   600   000FF9                     PC              equ	4089	;# 
   601   000FF9                     PCL             equ	4089	;# 
   602   000FFA                     PCLATH          equ	4090	;# 
   603   000FFB                     PCLATU          equ	4091	;# 
   604   000FFC                     STKPTR          equ	4092	;# 
   605   000FFD                     TOS             equ	4093	;# 
   606   000FFD                     TOSL            equ	4093	;# 
   607   000FFE                     TOSH            equ	4094	;# 
   608   000FFF                     TOSU            equ	4095	;# 
   609   007C61                     _LATD1          set	31841
   610   007C60                     _LATD0          set	31840
   611   000F8C                     _LATD           set	3980
   612   000F95                     _TRISD          set	3989
   613   000FB4                     _CMCON          set	4020
   614   000FC1                     _ADCON1         set	4033
   615   000FD3                     _OSCCON         set	4051
   616   000F92                     _TRISAbits      set	3986
   617   000F80                     _PORTAbits      set	3968
   618                           
   619                           	psect	smallconst
   620   000800                     __psmallconst:
   621                           	callstack 0
   622   000800  00                 	db	0
   623   000801                     STR_1:
   624   000801  54                 	db	84	;'T'
   625   000802  65                 	db	101	;'e'
   626   000803  6D                 	db	109	;'m'
   627   000804  70                 	db	112	;'p'
   628   000805  65                 	db	101	;'e'
   629   000806  72                 	db	114	;'r'
   630   000807  61                 	db	97	;'a'
   631   000808  74                 	db	116	;'t'
   632   000809  75                 	db	117	;'u'
   633   00080A  72                 	db	114	;'r'
   634   00080B  61                 	db	97	;'a'
   635   00080C  3A                 	db	58	;':'
   636   00080D  00                 	db	0
   637   00080E                     STR_2:
   638   00080E  45                 	db	69	;'E'
   639   00080F  72                 	db	114	;'r'
   640   000810  72                 	db	114	;'r'
   641   000811  6F                 	db	111	;'o'
   642   000812  72                 	db	114	;'r'
   643   000813  20                 	db	32
   644   000814  00                 	db	0
   645   000815  00                 	db	0	; dummy byte at the end
   646   000800                     __smallconst    set	__psmallconst
   647   000800                     __mediumconst   set	__psmallconst
   648   000002                     __activetblptr  equ	2
   649                           
   650                           ; #config settings
   651                           
   652                           	psect	cinit
   653   000D28                     __pcinit:
   654                           	callstack 0
   655   000D28                     start_initialization:
   656                           	callstack 0
   657   000D28                     __initialization:
   658                           	callstack 0
   659   000D28                     end_of_initialization:
   660                           	callstack 0
   661   000D28                     __end_of__initialization:
   662                           	callstack 0
   663   000D28  0E00               	movlw	low (__Lmediumconst shr (0+16))
   664   000D2A  6EF8               	movwf	tblptru,c
   665   000D2C  0100               	movlb	0
   666   000D2E  EF8B  F004         	goto	_main	;jump to C main() function
   667                           
   668                           	psect	cstackCOMRAM
   669   000001                     __pcstackCOMRAM:
   670                           	callstack 0
   671   000001                     ?___awdiv:
   672                           	callstack 0
   673   000001                     ?___awmod:
   674                           	callstack 0
   675   000001                     DHT11_Read@data:
   676                           	callstack 0
   677   000001                     ___awdiv@dividend:
   678                           	callstack 0
   679   000001                     ___awmod@dividend:
   680                           	callstack 0
   681   000001                     ??_LCD_Command:
   682   000001                     ??_LCD_Char:
   683                           
   684                           ; 1 bytes @ 0x0
   685   000001                     	ds	1
   686   000002                     DHT11_Read@i:
   687                           	callstack 0
   688   000002                     LCD_Command@cmd:
   689                           	callstack 0
   690   000002                     LCD_Char@dat:
   691                           	callstack 0
   692                           
   693                           ; 1 bytes @ 0x1
   694   000002                     	ds	1
   695   000003                     LCD_String@msg:
   696                           	callstack 0
   697   000003                     ___awdiv@divisor:
   698                           	callstack 0
   699   000003                     ___awmod@divisor:
   700                           	callstack 0
   701   000003                     ??_LCD_Init:
   702   000003                     ??_LCD_Clear:
   703   000003                     ??_DHT11_GetTemperature:
   704                           
   705                           ; 1 bytes @ 0x2
   706   000003                     	ds	2
   707   000005                     LCD_String_xy@pos:
   708                           	callstack 0
   709   000005                     ___awdiv@counter:
   710                           	callstack 0
   711   000005                     ___awmod@counter:
   712                           	callstack 0
   713   000005                     
   714                           ; 1 bytes @ 0x4
   715   000005                     	ds	1
   716   000006                     ___awdiv@sign:
   717                           	callstack 0
   718   000006                     ___awmod@sign:
   719                           	callstack 0
   720   000006                     LCD_String_xy@msg:
   721                           	callstack 0
   722                           
   723                           ; 2 bytes @ 0x5
   724   000006                     	ds	1
   725   000007                     ___awdiv@quotient:
   726                           	callstack 0
   727   000007                     DHT11_GetTemperature@data:
   728                           	callstack 0
   729                           
   730                           ; 5 bytes @ 0x6
   731   000007                     	ds	1
   732   000008                     LCD_String_xy@row:
   733                           	callstack 0
   734   000008                     
   735                           ; 1 bytes @ 0x7
   736   000008                     	ds	1
   737   000009                     LCD_String_xy@location:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x8
   741   000009                     	ds	3
   742   00000C                     DHT11_GetTemperature@timeout:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0xB
   746   00000C                     	ds	2
   747   00000E                     DHT11_GetTemperature@i:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0xD
   751   00000E                     	ds	1
   752   00000F                     ??_main:
   753                           
   754                           ; 1 bytes @ 0xE
   755   00000F                     	ds	2
   756   000011                     main@buffer:
   757                           	callstack 0
   758                           
   759                           ; 6 bytes @ 0x10
   760   000011                     	ds	6
   761   000017                     main@temp:
   762                           	callstack 0
   763                           
   764                           ; 1 bytes @ 0x16
   765   000017                     	ds	1
   766                           
   767 ;;
   768 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   769 ;;
   770 ;; *************** function _main *****************
   771 ;; Defined at:
   772 ;;		line 15 in file "main.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  buffer          6   16[COMRAM] unsigned char [6]
   777 ;;  temp            1   22[COMRAM] unsigned char 
   778 ;; Return value:  Size  Location     Type
   779 ;;                  1    wreg      void 
   780 ;; Registers used:
   781 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   787 ;;      Params:         0       0       0       0       0       0       0       0       0
   788 ;;      Locals:         7       0       0       0       0       0       0       0       0
   789 ;;      Temps:          2       0       0       0       0       0       0       0       0
   790 ;;      Totals:         9       0       0       0       0       0       0       0       0
   791 ;;Total ram usage:        9 bytes
   792 ;; Hardware stack levels required when called: 3
   793 ;; This function calls:
   794 ;;		_DHT11_GetTemperature
   795 ;;		_LCD_Clear
   796 ;;		_LCD_Init
   797 ;;		_LCD_String_xy
   798 ;;		___awdiv
   799 ;;		___awmod
   800 ;; This function is called by:
   801 ;;		Startup code after reset
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text0
   806   000916                     __ptext0:
   807                           	callstack 0
   808   000916                     _main:
   809                           	callstack 28
   810   000916                     
   811                           ;main.c: 16:     OSCCON = 0x72;
   812   000916  0E72               	movlw	114
   813   000918  6ED3               	movwf	211,c	;volatile
   814   00091A                     
   815                           ;main.c: 17:     TRISAbits.TRISA0 = 1;
   816   00091A  8092               	bsf	146,0,c	;volatile
   817                           
   818                           ;main.c: 18:     ADCON1 = 0x0F;
   819   00091C  0E0F               	movlw	15
   820   00091E  6EC1               	movwf	193,c	;volatile
   821                           
   822                           ;main.c: 19:     CMCON = 0x07;
   823   000920  0E07               	movlw	7
   824   000922  6EB4               	movwf	180,c	;volatile
   825   000924                     
   826                           ;main.c: 21:     LCD_Init();
   827   000924  EC6F  F006         	call	_LCD_Init	;wreg free
   828   000928                     
   829                           ;main.c: 22:     LCD_Clear();
   830   000928  EC88  F006         	call	_LCD_Clear	;wreg free
   831   00092C                     
   832                           ;main.c: 23:     LCD_String_xy(0, 0, "Temperatura:");
   833   00092C  0E00               	movlw	0
   834   00092E  6E05               	movwf	LCD_String_xy@pos^0,c
   835   000930  0E01               	movlw	low STR_1
   836   000932  6E06               	movwf	LCD_String_xy@msg^0,c
   837   000934  5006               	movf	LCD_String_xy@msg^0,w,c
   838   000936  A4D8               	btfss	status,2,c
   839   000938  0E08               	movlw	high __smallconst
   840   00093A  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   841   00093C  0E00               	movlw	0
   842   00093E  EC52  F006         	call	_LCD_String_xy
   843   000942                     l1132:
   844                           
   845                           ;main.c: 26:         uint8_t temp = DHT11_GetTemperature();
   846   000942  EC0B  F004         	call	_DHT11_GetTemperature	;wreg free
   847   000946  6E17               	movwf	main@temp^0,c
   848   000948                     
   849                           ;main.c: 28:         if (temp != 255) {
   850   000948  2817               	incf	main@temp^0,w,c
   851   00094A  B4D8               	btfsc	status,2,c
   852   00094C  EFAA  F004         	goto	u451
   853   000950  EFAC  F004         	goto	u450
   854   000954                     u451:
   855   000954  EFD3  F004         	goto	l1146
   856   000958                     u450:
   857   000958                     
   858                           ;main.c: 29:             char buffer[6];;main.c: 31:             buffer[0] = (temp/10) +
      +                           '0';
   859   000958  C017  F001         	movff	main@temp,___awdiv@dividend
   860   00095C  6A02               	clrf	(___awdiv@dividend+1)^0,c
   861   00095E  0E00               	movlw	0
   862   000960  6E04               	movwf	(___awdiv@divisor+1)^0,c
   863   000962  0E0A               	movlw	10
   864   000964  6E03               	movwf	___awdiv@divisor^0,c
   865   000966  ECEE  F004         	call	___awdiv	;wreg free
   866   00096A  5001               	movf	?___awdiv^0,w,c
   867   00096C  0F30               	addlw	48
   868   00096E  6E11               	movwf	main@buffer^0,c
   869                           
   870                           ;main.c: 32:             buffer[1] = (temp%10) + '0';
   871   000970  C017  F001         	movff	main@temp,___awmod@dividend
   872   000974  6A02               	clrf	(___awmod@dividend+1)^0,c
   873   000976  0E00               	movlw	0
   874   000978  6E04               	movwf	(___awmod@divisor+1)^0,c
   875   00097A  0E0A               	movlw	10
   876   00097C  6E03               	movwf	___awmod@divisor^0,c
   877   00097E  EC4F  F005         	call	___awmod	;wreg free
   878   000982  5001               	movf	?___awmod^0,w,c
   879   000984  0F30               	addlw	48
   880   000986  6E12               	movwf	(main@buffer+1)^0,c
   881   000988                     
   882                           ;main.c: 33:             buffer[2] = ' ';
   883   000988  0E20               	movlw	32
   884   00098A  6E13               	movwf	(main@buffer+2)^0,c
   885   00098C                     
   886                           ;main.c: 34:             buffer[3] = 'C';
   887   00098C  0E43               	movlw	67
   888   00098E  6E14               	movwf	(main@buffer+3)^0,c
   889   000990                     
   890                           ;main.c: 35:             buffer[4] = '\0';
   891   000990  6A15               	clrf	(main@buffer+4)^0,c
   892   000992                     
   893                           ;main.c: 37:             LCD_String_xy(1, 0, buffer);
   894   000992  0E00               	movlw	0
   895   000994  6E05               	movwf	LCD_String_xy@pos^0,c
   896   000996  0E11               	movlw	low main@buffer
   897   000998  6E06               	movwf	LCD_String_xy@msg^0,c
   898   00099A  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
   899   00099C  0E01               	movlw	1
   900   00099E  EC52  F006         	call	_LCD_String_xy
   901                           
   902                           ;main.c: 38:         } else {
   903   0009A2  EFDE  F004         	goto	l1148
   904   0009A6                     l1146:
   905                           
   906                           ;main.c: 39:             LCD_String_xy(1, 0, "Error ");
   907   0009A6  0E00               	movlw	0
   908   0009A8  6E05               	movwf	LCD_String_xy@pos^0,c
   909   0009AA  0E0E               	movlw	low STR_2
   910   0009AC  6E06               	movwf	LCD_String_xy@msg^0,c
   911   0009AE  5006               	movf	LCD_String_xy@msg^0,w,c
   912   0009B0  A4D8               	btfss	status,2,c
   913   0009B2  0E08               	movlw	high __smallconst
   914   0009B4  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
   915   0009B6  0E01               	movlw	1
   916   0009B8  EC52  F006         	call	_LCD_String_xy
   917   0009BC                     l1148:
   918                           
   919                           ;main.c: 41:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   920   0009BC  0E15               	movlw	21
   921   0009BE  6E10               	movwf	(??_main+1)^0,c
   922   0009C0  0E4B               	movlw	75
   923   0009C2  6E0F               	movwf	??_main^0,c
   924   0009C4  0EBE               	movlw	190
   925   0009C6                     u467:
   926   0009C6  2EE8               	decfsz	wreg,f,c
   927   0009C8  D7FE               	bra	u467
   928   0009CA  2E0F               	decfsz	??_main^0,f,c
   929   0009CC  D7FC               	bra	u467
   930   0009CE  2E10               	decfsz	(??_main+1)^0,f,c
   931   0009D0  D7FA               	bra	u467
   932   0009D2  D000               	nop2	
   933   0009D4  EFA1  F004         	goto	l1132
   934   0009D8  EFFE  F03F         	goto	start
   935   0009DC                     __end_of_main:
   936                           	callstack 0
   937                           
   938 ;; *************** function ___awmod *****************
   939 ;; Defined at:
   940 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;  dividend        2    0[COMRAM] int 
   943 ;;  divisor         2    2[COMRAM] int 
   944 ;; Auto vars:     Size  Location     Type
   945 ;;  sign            1    5[COMRAM] unsigned char 
   946 ;;  counter         1    4[COMRAM] unsigned char 
   947 ;; Return value:  Size  Location     Type
   948 ;;                  2    0[COMRAM] int 
   949 ;; Registers used:
   950 ;;		wreg, status,2, status,0
   951 ;; Tracked objects:
   952 ;;		On entry : 0/0
   953 ;;		On exit  : 0/0
   954 ;;		Unchanged: 0/0
   955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   956 ;;      Params:         4       0       0       0       0       0       0       0       0
   957 ;;      Locals:         2       0       0       0       0       0       0       0       0
   958 ;;      Temps:          0       0       0       0       0       0       0       0       0
   959 ;;      Totals:         6       0       0       0       0       0       0       0       0
   960 ;;Total ram usage:        6 bytes
   961 ;; Hardware stack levels used: 1
   962 ;; This function calls:
   963 ;;		Nothing
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           	psect	text1
   970   000A9E                     __ptext1:
   971                           	callstack 0
   972   000A9E                     ___awmod:
   973                           	callstack 30
   974   000A9E  6A06               	clrf	___awmod@sign^0,c
   975   000AA0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
   976   000AA2  EF57  F005         	goto	u390
   977   000AA6  EF55  F005         	goto	u391
   978   000AAA                     u391:
   979   000AAA  EF5D  F005         	goto	l1094
   980   000AAE                     u390:
   981   000AAE  6C01               	negf	___awmod@dividend^0,c
   982   000AB0  1E02               	comf	(___awmod@dividend+1)^0,f,c
   983   000AB2  B0D8               	btfsc	status,0,c
   984   000AB4  2A02               	incf	(___awmod@dividend+1)^0,f,c
   985   000AB6  0E01               	movlw	1
   986   000AB8  6E06               	movwf	___awmod@sign^0,c
   987   000ABA                     l1094:
   988   000ABA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
   989   000ABC  EF64  F005         	goto	u400
   990   000AC0  EF62  F005         	goto	u401
   991   000AC4                     u401:
   992   000AC4  EF68  F005         	goto	l1098
   993   000AC8                     u400:
   994   000AC8  6C03               	negf	___awmod@divisor^0,c
   995   000ACA  1E04               	comf	(___awmod@divisor+1)^0,f,c
   996   000ACC  B0D8               	btfsc	status,0,c
   997   000ACE  2A04               	incf	(___awmod@divisor+1)^0,f,c
   998   000AD0                     l1098:
   999   000AD0  5003               	movf	___awmod@divisor^0,w,c
  1000   000AD2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1001   000AD4  B4D8               	btfsc	status,2,c
  1002   000AD6  EF6F  F005         	goto	u411
  1003   000ADA  EF71  F005         	goto	u410
  1004   000ADE                     u411:
  1005   000ADE  EF95  F005         	goto	l1114
  1006   000AE2                     u410:
  1007   000AE2  0E01               	movlw	1
  1008   000AE4  6E05               	movwf	___awmod@counter^0,c
  1009   000AE6  EF79  F005         	goto	l1104
  1010   000AEA                     l1102:
  1011   000AEA  90D8               	bcf	status,0,c
  1012   000AEC  3603               	rlcf	___awmod@divisor^0,f,c
  1013   000AEE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1014   000AF0  2A05               	incf	___awmod@counter^0,f,c
  1015   000AF2                     l1104:
  1016   000AF2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1017   000AF4  EF7E  F005         	goto	u421
  1018   000AF8  EF80  F005         	goto	u420
  1019   000AFC                     u421:
  1020   000AFC  EF75  F005         	goto	l1102
  1021   000B00                     u420:
  1022   000B00                     l1106:
  1023   000B00  5003               	movf	___awmod@divisor^0,w,c
  1024   000B02  5C01               	subwf	___awmod@dividend^0,w,c
  1025   000B04  5004               	movf	(___awmod@divisor+1)^0,w,c
  1026   000B06  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1027   000B08  A0D8               	btfss	status,0,c
  1028   000B0A  EF89  F005         	goto	u431
  1029   000B0E  EF8B  F005         	goto	u430
  1030   000B12                     u431:
  1031   000B12  EF8F  F005         	goto	l1110
  1032   000B16                     u430:
  1033   000B16  5003               	movf	___awmod@divisor^0,w,c
  1034   000B18  5E01               	subwf	___awmod@dividend^0,f,c
  1035   000B1A  5004               	movf	(___awmod@divisor+1)^0,w,c
  1036   000B1C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1037   000B1E                     l1110:
  1038   000B1E  90D8               	bcf	status,0,c
  1039   000B20  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1040   000B22  3203               	rrcf	___awmod@divisor^0,f,c
  1041   000B24  2E05               	decfsz	___awmod@counter^0,f,c
  1042   000B26  EF80  F005         	goto	l1106
  1043   000B2A                     l1114:
  1044   000B2A  5006               	movf	___awmod@sign^0,w,c
  1045   000B2C  B4D8               	btfsc	status,2,c
  1046   000B2E  EF9B  F005         	goto	u441
  1047   000B32  EF9D  F005         	goto	u440
  1048   000B36                     u441:
  1049   000B36  EFA1  F005         	goto	l1118
  1050   000B3A                     u440:
  1051   000B3A  6C01               	negf	___awmod@dividend^0,c
  1052   000B3C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1053   000B3E  B0D8               	btfsc	status,0,c
  1054   000B40  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1055   000B42                     l1118:
  1056   000B42  C001  F001         	movff	___awmod@dividend,?___awmod
  1057   000B46  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1058   000B4A  0012               	return		;funcret
  1059   000B4C                     __end_of___awmod:
  1060                           	callstack 0
  1061                           
  1062 ;; *************** function ___awdiv *****************
  1063 ;; Defined at:
  1064 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  dividend        2    0[COMRAM] int 
  1067 ;;  divisor         2    2[COMRAM] int 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  quotient        2    6[COMRAM] int 
  1070 ;;  sign            1    5[COMRAM] unsigned char 
  1071 ;;  counter         1    4[COMRAM] unsigned char 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  2    0[COMRAM] int 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         4       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        8 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_main
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text2
  1095   0009DC                     __ptext2:
  1096                           	callstack 0
  1097   0009DC                     ___awdiv:
  1098                           	callstack 30
  1099   0009DC  6A06               	clrf	___awdiv@sign^0,c
  1100   0009DE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1101   0009E0  EFF6  F004         	goto	u330
  1102   0009E4  EFF4  F004         	goto	u331
  1103   0009E8                     u331:
  1104   0009E8  EFFC  F004         	goto	l1050
  1105   0009EC                     u330:
  1106   0009EC  6C03               	negf	___awdiv@divisor^0,c
  1107   0009EE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1108   0009F0  B0D8               	btfsc	status,0,c
  1109   0009F2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1110   0009F4  0E01               	movlw	1
  1111   0009F6  6E06               	movwf	___awdiv@sign^0,c
  1112   0009F8                     l1050:
  1113   0009F8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1114   0009FA  EF03  F005         	goto	u340
  1115   0009FE  EF01  F005         	goto	u341
  1116   000A02                     u341:
  1117   000A02  EF09  F005         	goto	l1056
  1118   000A06                     u340:
  1119   000A06  6C01               	negf	___awdiv@dividend^0,c
  1120   000A08  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1121   000A0A  B0D8               	btfsc	status,0,c
  1122   000A0C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1123   000A0E  0E01               	movlw	1
  1124   000A10  1A06               	xorwf	___awdiv@sign^0,f,c
  1125   000A12                     l1056:
  1126   000A12  0E00               	movlw	0
  1127   000A14  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1128   000A16  0E00               	movlw	0
  1129   000A18  6E07               	movwf	___awdiv@quotient^0,c
  1130   000A1A  5003               	movf	___awdiv@divisor^0,w,c
  1131   000A1C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1132   000A1E  B4D8               	btfsc	status,2,c
  1133   000A20  EF14  F005         	goto	u351
  1134   000A24  EF16  F005         	goto	u350
  1135   000A28                     u351:
  1136   000A28  EF3E  F005         	goto	l1078
  1137   000A2C                     u350:
  1138   000A2C  0E01               	movlw	1
  1139   000A2E  6E05               	movwf	___awdiv@counter^0,c
  1140   000A30  EF1E  F005         	goto	l1064
  1141   000A34                     l1062:
  1142   000A34  90D8               	bcf	status,0,c
  1143   000A36  3603               	rlcf	___awdiv@divisor^0,f,c
  1144   000A38  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1145   000A3A  2A05               	incf	___awdiv@counter^0,f,c
  1146   000A3C                     l1064:
  1147   000A3C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1148   000A3E  EF23  F005         	goto	u361
  1149   000A42  EF25  F005         	goto	u360
  1150   000A46                     u361:
  1151   000A46  EF1A  F005         	goto	l1062
  1152   000A4A                     u360:
  1153   000A4A                     l1066:
  1154   000A4A  90D8               	bcf	status,0,c
  1155   000A4C  3607               	rlcf	___awdiv@quotient^0,f,c
  1156   000A4E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1157   000A50  5003               	movf	___awdiv@divisor^0,w,c
  1158   000A52  5C01               	subwf	___awdiv@dividend^0,w,c
  1159   000A54  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1160   000A56  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1161   000A58  A0D8               	btfss	status,0,c
  1162   000A5A  EF31  F005         	goto	u371
  1163   000A5E  EF33  F005         	goto	u370
  1164   000A62                     u371:
  1165   000A62  EF38  F005         	goto	l1074
  1166   000A66                     u370:
  1167   000A66  5003               	movf	___awdiv@divisor^0,w,c
  1168   000A68  5E01               	subwf	___awdiv@dividend^0,f,c
  1169   000A6A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1170   000A6C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1171   000A6E  8007               	bsf	___awdiv@quotient^0,0,c
  1172   000A70                     l1074:
  1173   000A70  90D8               	bcf	status,0,c
  1174   000A72  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1175   000A74  3203               	rrcf	___awdiv@divisor^0,f,c
  1176   000A76  2E05               	decfsz	___awdiv@counter^0,f,c
  1177   000A78  EF25  F005         	goto	l1066
  1178   000A7C                     l1078:
  1179   000A7C  5006               	movf	___awdiv@sign^0,w,c
  1180   000A7E  B4D8               	btfsc	status,2,c
  1181   000A80  EF44  F005         	goto	u381
  1182   000A84  EF46  F005         	goto	u380
  1183   000A88                     u381:
  1184   000A88  EF4A  F005         	goto	l1082
  1185   000A8C                     u380:
  1186   000A8C  6C07               	negf	___awdiv@quotient^0,c
  1187   000A8E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1188   000A90  B0D8               	btfsc	status,0,c
  1189   000A92  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1190   000A94                     l1082:
  1191   000A94  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1192   000A98  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1193   000A9C  0012               	return		;funcret
  1194   000A9E                     __end_of___awdiv:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _LCD_String_xy *****************
  1198 ;; Defined at:
  1199 ;;		line 53 in file "LCD.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  row             1    wreg     unsigned char 
  1202 ;;  pos             1    4[COMRAM] unsigned char 
  1203 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  1204 ;;		 -> STR_2(7), main@buffer(6), STR_1(13), 
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;  row             1    7[COMRAM] unsigned char 
  1207 ;;  location        1    8[COMRAM] unsigned char 
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1217 ;;      Params:         3       0       0       0       0       0       0       0       0
  1218 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1220 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1221 ;;Total ram usage:        5 bytes
  1222 ;; Hardware stack levels used: 1
  1223 ;; Hardware stack levels required when called: 2
  1224 ;; This function calls:
  1225 ;;		_LCD_Command
  1226 ;;		_LCD_String
  1227 ;; This function is called by:
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           	psect	text3
  1233   000CA4                     __ptext3:
  1234                           	callstack 0
  1235   000CA4                     _LCD_String_xy:
  1236                           	callstack 28
  1237                           
  1238                           ;incstack = 0
  1239                           ;LCD_String_xy@row stored from wreg
  1240   000CA4  6E08               	movwf	LCD_String_xy@row^0,c
  1241   000CA6                     
  1242                           ;LCD.c: 55:     if (row == 0) {
  1243   000CA6  5008               	movf	LCD_String_xy@row^0,w,c
  1244   000CA8  A4D8               	btfss	status,2,c
  1245   000CAA  EF59  F006         	goto	u321
  1246   000CAE  EF5B  F006         	goto	u320
  1247   000CB2                     u321:
  1248   000CB2  EF61  F006         	goto	l1036
  1249   000CB6                     u320:
  1250   000CB6                     
  1251                           ;LCD.c: 56:         location = 0x80 | (pos & 0x0F);
  1252   000CB6  5005               	movf	LCD_String_xy@pos^0,w,c
  1253   000CB8  0B0F               	andlw	15
  1254   000CBA  0980               	iorlw	128
  1255   000CBC  6E09               	movwf	LCD_String_xy@location^0,c
  1256                           
  1257                           ;LCD.c: 57:     } else {
  1258   000CBE  EF65  F006         	goto	l1038
  1259   000CC2                     l1036:
  1260                           
  1261                           ;LCD.c: 58:         location = 0xC0 | (pos & 0x0F);
  1262   000CC2  5005               	movf	LCD_String_xy@pos^0,w,c
  1263   000CC4  0B0F               	andlw	15
  1264   000CC6  09C0               	iorlw	192
  1265   000CC8  6E09               	movwf	LCD_String_xy@location^0,c
  1266   000CCA                     l1038:
  1267                           
  1268                           ;LCD.c: 60:     LCD_Command(location);
  1269   000CCA  5009               	movf	LCD_String_xy@location^0,w,c
  1270   000CCC  ECFF  F005         	call	_LCD_Command
  1271   000CD0                     
  1272                           ;LCD.c: 61:     LCD_String(msg);
  1273   000CD0  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  1274   000CD4  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  1275   000CD8  ECA6  F005         	call	_LCD_String	;wreg free
  1276   000CDC  0012               	return		;funcret
  1277   000CDE                     __end_of_LCD_String_xy:
  1278                           	callstack 0
  1279                           
  1280 ;; *************** function _LCD_String *****************
  1281 ;; Defined at:
  1282 ;;		line 45 in file "LCD.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  1285 ;;		 -> STR_2(7), main@buffer(6), STR_1(13), 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;		None
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1297 ;;      Params:         2       0       0       0       0       0       0       0       0
  1298 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1300 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1301 ;;Total ram usage:        2 bytes
  1302 ;; Hardware stack levels used: 1
  1303 ;; Hardware stack levels required when called: 1
  1304 ;; This function calls:
  1305 ;;		_LCD_Char
  1306 ;; This function is called by:
  1307 ;;		_LCD_String_xy
  1308 ;; This function uses a non-reentrant model
  1309 ;;
  1310                           
  1311                           	psect	text4
  1312   000B4C                     __ptext4:
  1313                           	callstack 0
  1314   000B4C                     _LCD_String:
  1315                           	callstack 28
  1316   000B4C                     
  1317                           ;LCD.c: 45: void LCD_String(const char *msg);LCD.c: 46: {;LCD.c: 47:     while((*msg) !=
      +                           0) {
  1318   000B4C  EFBC  F005         	goto	l1028
  1319   000B50                     l1024:
  1320                           
  1321                           ;LCD.c: 48:         LCD_Char(*msg);
  1322   000B50  C003  FFF6         	movff	LCD_String@msg,tblptrl
  1323   000B54  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  1324   000B58  6AF8               	clrf	tblptru,c
  1325   000B5A  0E07               	movlw	(high __ramtop+-1)
  1326   000B5C  64F7               	cpfsgt	tblptrh,c
  1327   000B5E  D003               	bra	u297
  1328   000B60  0008               	tblrd		*
  1329   000B62  50F5               	movf	tablat,w,c
  1330   000B64  D005               	bra	u290
  1331   000B66                     u297:
  1332   000B66  CFF6 FFE9          	movff	tblptrl,fsr0l
  1333   000B6A  CFF7 FFEA          	movff	tblptrh,fsr0h
  1334   000B6E  50EF               	movf	indf0,w,c
  1335   000B70                     u290:
  1336   000B70  ECD5  F005         	call	_LCD_Char
  1337   000B74                     
  1338                           ;LCD.c: 49:         msg++;
  1339   000B74  4A03               	infsnz	LCD_String@msg^0,f,c
  1340   000B76  2A04               	incf	(LCD_String@msg+1)^0,f,c
  1341   000B78                     l1028:
  1342                           
  1343                           ;LCD.c: 47:     while((*msg) != 0) {
  1344   000B78  C003  FFF6         	movff	LCD_String@msg,tblptrl
  1345   000B7C  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  1346   000B80  6AF8               	clrf	tblptru,c
  1347   000B82  0E07               	movlw	(high __ramtop+-1)
  1348   000B84  64F7               	cpfsgt	tblptrh,c
  1349   000B86  D003               	bra	u307
  1350   000B88  0008               	tblrd		*
  1351   000B8A  50F5               	movf	tablat,w,c
  1352   000B8C  D005               	bra	u300
  1353   000B8E                     u307:
  1354   000B8E  CFF6 FFE9          	movff	tblptrl,fsr0l
  1355   000B92  CFF7 FFEA          	movff	tblptrh,fsr0h
  1356   000B96  50EF               	movf	indf0,w,c
  1357   000B98                     u300:
  1358   000B98  0900               	iorlw	0
  1359   000B9A  A4D8               	btfss	status,2,c
  1360   000B9C  EFD2  F005         	goto	u311
  1361   000BA0  EFD4  F005         	goto	u310
  1362   000BA4                     u311:
  1363   000BA4  EFA8  F005         	goto	l1024
  1364   000BA8                     u310:
  1365   000BA8  0012               	return		;funcret
  1366   000BAA                     __end_of_LCD_String:
  1367                           	callstack 0
  1368                           
  1369 ;; *************** function _LCD_Char *****************
  1370 ;; Defined at:
  1371 ;;		line 30 in file "LCD.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  dat             1    wreg     unsigned char 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  dat             1    1[COMRAM] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1385 ;;      Params:         0       0       0       0       0       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1387 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1388 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1389 ;;Total ram usage:        2 bytes
  1390 ;; Hardware stack levels used: 1
  1391 ;; This function calls:
  1392 ;;		Nothing
  1393 ;; This function is called by:
  1394 ;;		_LCD_String
  1395 ;; This function uses a non-reentrant model
  1396 ;;
  1397                           
  1398                           	psect	text5
  1399   000BAA                     __ptext5:
  1400                           	callstack 0
  1401   000BAA                     _LCD_Char:
  1402                           	callstack 28
  1403                           
  1404                           ;incstack = 0
  1405                           ;LCD_Char@dat stored from wreg
  1406   000BAA  6E02               	movwf	LCD_Char@dat^0,c
  1407   000BAC                     
  1408                           ;LCD.c: 30: void LCD_Char(unsigned char dat);LCD.c: 31: {;LCD.c: 32:     LATD = (LATD & 
      +                          0x0f) | (0xF0 & dat);
  1409   000BAC  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  1410   000BB0  0EF0               	movlw	240
  1411   000BB2  1601               	andwf	??_LCD_Char^0,f,c
  1412   000BB4  508C               	movf	140,w,c	;volatile
  1413   000BB6  0B0F               	andlw	15
  1414   000BB8  1001               	iorwf	??_LCD_Char^0,w,c
  1415   000BBA  6E8C               	movwf	140,c	;volatile
  1416   000BBC                     
  1417                           ;LCD.c: 33:     LATD0 = 1;
  1418   000BBC  808C               	bsf	3980,0,c	;volatile
  1419   000BBE                     
  1420                           ;LCD.c: 34:     LATD1 = 1;
  1421   000BBE  828C               	bsf	3980,1,c	;volatile
  1422   000BC0                     
  1423                           ;LCD.c: 35:     __nop();
  1424   000BC0  0000               	nop	
  1425   000BC2                     
  1426                           ;LCD.c: 36:     LATD1 = 0;
  1427   000BC2  928C               	bcf	3980,1,c	;volatile
  1428   000BC4                     
  1429                           ;LCD.c: 37:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1430   000BC4  0E03               	movlw	3
  1431   000BC6  6E01               	movwf	??_LCD_Char^0,c
  1432   000BC8  0E98               	movlw	152
  1433   000BCA                     u477:
  1434   000BCA  2EE8               	decfsz	wreg,f,c
  1435   000BCC  D7FE               	bra	u477
  1436   000BCE  2E01               	decfsz	??_LCD_Char^0,f,c
  1437   000BD0  D7FC               	bra	u477
  1438   000BD2                     
  1439                           ;LCD.c: 38:     LATD = (LATD & 0x0f) | ((dat << 4) & 0xF0);
  1440   000BD2  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  1441   000BD6  3A01               	swapf	??_LCD_Char^0,f,c
  1442   000BD8  0EF0               	movlw	240
  1443   000BDA  1601               	andwf	??_LCD_Char^0,f,c
  1444   000BDC  0EF0               	movlw	240
  1445   000BDE  1601               	andwf	??_LCD_Char^0,f,c
  1446   000BE0  508C               	movf	140,w,c	;volatile
  1447   000BE2  0B0F               	andlw	15
  1448   000BE4  1001               	iorwf	??_LCD_Char^0,w,c
  1449   000BE6  6E8C               	movwf	140,c	;volatile
  1450   000BE8                     
  1451                           ;LCD.c: 39:     LATD1 = 1;
  1452   000BE8  828C               	bsf	3980,1,c	;volatile
  1453   000BEA                     
  1454                           ;LCD.c: 40:     __nop();
  1455   000BEA  0000               	nop	
  1456   000BEC                     
  1457                           ;LCD.c: 41:     LATD1 = 0;
  1458   000BEC  928C               	bcf	3980,1,c	;volatile
  1459                           
  1460                           ;LCD.c: 42:     _delay((unsigned long)((3)*(8000000/4000.0)));
  1461   000BEE  0E08               	movlw	8
  1462   000BF0  6E01               	movwf	??_LCD_Char^0,c
  1463   000BF2  0ECA               	movlw	202
  1464   000BF4                     u487:
  1465   000BF4  2EE8               	decfsz	wreg,f,c
  1466   000BF6  D7FE               	bra	u487
  1467   000BF8  2E01               	decfsz	??_LCD_Char^0,f,c
  1468   000BFA  D7FC               	bra	u487
  1469   000BFC  0012               	return		;funcret
  1470   000BFE                     __end_of_LCD_Char:
  1471                           	callstack 0
  1472                           
  1473 ;; *************** function _LCD_Init *****************
  1474 ;; Defined at:
  1475 ;;		line 4 in file "LCD.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		wreg, status,2, status,0, cstack
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1489 ;;      Params:         0       0       0       0       0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1491 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1492 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1493 ;;Total ram usage:        1 bytes
  1494 ;; Hardware stack levels used: 1
  1495 ;; Hardware stack levels required when called: 1
  1496 ;; This function calls:
  1497 ;;		_LCD_Command
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           	psect	text6
  1504   000CDE                     __ptext6:
  1505                           	callstack 0
  1506   000CDE                     _LCD_Init:
  1507                           	callstack 29
  1508   000CDE                     
  1509                           ;LCD.c: 6:     TRISD = 0;
  1510   000CDE  6A95               	clrf	149,c	;volatile
  1511   000CE0                     
  1512                           ;LCD.c: 7:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1513   000CE0  0E27               	movlw	39
  1514   000CE2  6E03               	movwf	??_LCD_Init^0,c
  1515   000CE4  0EF5               	movlw	245
  1516   000CE6                     u497:
  1517   000CE6  2EE8               	decfsz	wreg,f,c
  1518   000CE8  D7FE               	bra	u497
  1519   000CEA  2E03               	decfsz	??_LCD_Init^0,f,c
  1520   000CEC  D7FC               	bra	u497
  1521   000CEE  0000               	nop	
  1522   000CF0                     
  1523                           ;LCD.c: 8:     LCD_Command(0x02);
  1524   000CF0  0E02               	movlw	2
  1525   000CF2  ECFF  F005         	call	_LCD_Command
  1526   000CF6                     
  1527                           ;LCD.c: 9:     LCD_Command(0x28);
  1528   000CF6  0E28               	movlw	40
  1529   000CF8  ECFF  F005         	call	_LCD_Command
  1530   000CFC                     
  1531                           ;LCD.c: 10:     LCD_Command(0x01);
  1532   000CFC  0E01               	movlw	1
  1533   000CFE  ECFF  F005         	call	_LCD_Command
  1534   000D02                     
  1535                           ;LCD.c: 11:     LCD_Command(0x0c);
  1536   000D02  0E0C               	movlw	12
  1537   000D04  ECFF  F005         	call	_LCD_Command
  1538   000D08                     
  1539                           ;LCD.c: 12:     LCD_Command(0x06);
  1540   000D08  0E06               	movlw	6
  1541   000D0A  ECFF  F005         	call	_LCD_Command
  1542   000D0E  0012               	return		;funcret
  1543   000D10                     __end_of_LCD_Init:
  1544                           	callstack 0
  1545                           
  1546 ;; *************** function _LCD_Clear *****************
  1547 ;; Defined at:
  1548 ;;		line 64 in file "LCD.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1562 ;;      Params:         0       0       0       0       0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1564 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1565 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1566 ;;Total ram usage:        1 bytes
  1567 ;; Hardware stack levels used: 1
  1568 ;; Hardware stack levels required when called: 1
  1569 ;; This function calls:
  1570 ;;		_LCD_Command
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text7
  1577   000D10                     __ptext7:
  1578                           	callstack 0
  1579   000D10                     _LCD_Clear:
  1580                           	callstack 29
  1581   000D10                     
  1582                           ;LCD.c: 66:     LCD_Command(0x01);
  1583   000D10  0E01               	movlw	1
  1584   000D12  ECFF  F005         	call	_LCD_Command
  1585   000D16                     
  1586                           ;LCD.c: 67:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1587   000D16  0E06               	movlw	6
  1588   000D18  6E03               	movwf	??_LCD_Clear^0,c
  1589   000D1A  0E30               	movlw	48
  1590   000D1C                     u507:
  1591   000D1C  2EE8               	decfsz	wreg,f,c
  1592   000D1E  D7FE               	bra	u507
  1593   000D20  2E03               	decfsz	??_LCD_Clear^0,f,c
  1594   000D22  D7FC               	bra	u507
  1595   000D24  D000               	nop2	
  1596   000D26  0012               	return		;funcret
  1597   000D28                     __end_of_LCD_Clear:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _LCD_Command *****************
  1601 ;; Defined at:
  1602 ;;		line 15 in file "LCD.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  cmd             1    wreg     unsigned char 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  cmd             1    1[COMRAM] unsigned char 
  1607 ;; Return value:  Size  Location     Type
  1608 ;;                  1    wreg      void 
  1609 ;; Registers used:
  1610 ;;		wreg, status,2, status,0
  1611 ;; Tracked objects:
  1612 ;;		On entry : 0/0
  1613 ;;		On exit  : 0/0
  1614 ;;		Unchanged: 0/0
  1615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1616 ;;      Params:         0       0       0       0       0       0       0       0       0
  1617 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1618 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1619 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1620 ;;Total ram usage:        2 bytes
  1621 ;; Hardware stack levels used: 1
  1622 ;; This function calls:
  1623 ;;		Nothing
  1624 ;; This function is called by:
  1625 ;;		_LCD_Init
  1626 ;;		_LCD_String_xy
  1627 ;;		_LCD_Clear
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text8
  1632   000BFE                     __ptext8:
  1633                           	callstack 0
  1634   000BFE                     _LCD_Command:
  1635                           	callstack 29
  1636                           
  1637                           ;incstack = 0
  1638                           ;LCD_Command@cmd stored from wreg
  1639   000BFE  6E02               	movwf	LCD_Command@cmd^0,c
  1640   000C00                     
  1641                           ;LCD.c: 15: void LCD_Command(unsigned char cmd);LCD.c: 16: {;LCD.c: 17:     LATD = (LATD
      +                           & 0x0f) | (0xF0 & cmd);
  1642   000C00  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  1643   000C04  0EF0               	movlw	240
  1644   000C06  1601               	andwf	??_LCD_Command^0,f,c
  1645   000C08  508C               	movf	140,w,c	;volatile
  1646   000C0A  0B0F               	andlw	15
  1647   000C0C  1001               	iorwf	??_LCD_Command^0,w,c
  1648   000C0E  6E8C               	movwf	140,c	;volatile
  1649   000C10                     
  1650                           ;LCD.c: 18:     LATD0 = 0;
  1651   000C10  908C               	bcf	3980,0,c	;volatile
  1652   000C12                     
  1653                           ;LCD.c: 19:     LATD1 = 1;
  1654   000C12  828C               	bsf	3980,1,c	;volatile
  1655   000C14                     
  1656                           ;LCD.c: 20:     __nop();
  1657   000C14  0000               	nop	
  1658   000C16                     
  1659                           ;LCD.c: 21:     LATD1 = 0;
  1660   000C16  928C               	bcf	3980,1,c	;volatile
  1661   000C18                     
  1662                           ;LCD.c: 22:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1663   000C18  0E03               	movlw	3
  1664   000C1A  6E01               	movwf	??_LCD_Command^0,c
  1665   000C1C  0E98               	movlw	152
  1666   000C1E                     u517:
  1667   000C1E  2EE8               	decfsz	wreg,f,c
  1668   000C20  D7FE               	bra	u517
  1669   000C22  2E01               	decfsz	??_LCD_Command^0,f,c
  1670   000C24  D7FC               	bra	u517
  1671   000C26                     
  1672                           ;LCD.c: 23:     LATD = (LATD & 0x0f) | ((cmd << 4) & 0xF0);
  1673   000C26  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  1674   000C2A  3A01               	swapf	??_LCD_Command^0,f,c
  1675   000C2C  0EF0               	movlw	240
  1676   000C2E  1601               	andwf	??_LCD_Command^0,f,c
  1677   000C30  0EF0               	movlw	240
  1678   000C32  1601               	andwf	??_LCD_Command^0,f,c
  1679   000C34  508C               	movf	140,w,c	;volatile
  1680   000C36  0B0F               	andlw	15
  1681   000C38  1001               	iorwf	??_LCD_Command^0,w,c
  1682   000C3A  6E8C               	movwf	140,c	;volatile
  1683   000C3C                     
  1684                           ;LCD.c: 24:     LATD1 = 1;
  1685   000C3C  828C               	bsf	3980,1,c	;volatile
  1686   000C3E                     
  1687                           ;LCD.c: 25:     __nop();
  1688   000C3E  0000               	nop	
  1689   000C40                     
  1690                           ;LCD.c: 26:     LATD1 = 0;
  1691   000C40  928C               	bcf	3980,1,c	;volatile
  1692                           
  1693                           ;LCD.c: 27:     _delay((unsigned long)((3)*(8000000/4000.0)));
  1694   000C42  0E08               	movlw	8
  1695   000C44  6E01               	movwf	??_LCD_Command^0,c
  1696   000C46  0ECA               	movlw	202
  1697   000C48                     u527:
  1698   000C48  2EE8               	decfsz	wreg,f,c
  1699   000C4A  D7FE               	bra	u527
  1700   000C4C  2E01               	decfsz	??_LCD_Command^0,f,c
  1701   000C4E  D7FC               	bra	u527
  1702   000C50  0012               	return		;funcret
  1703   000C52                     __end_of_LCD_Command:
  1704                           	callstack 0
  1705                           
  1706 ;; *************** function _DHT11_GetTemperature *****************
  1707 ;; Defined at:
  1708 ;;		line 16 in file "DHT11.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;		None
  1711 ;; Auto vars:     Size  Location     Type
  1712 ;;  i               1   13[COMRAM] unsigned char 
  1713 ;;  data            5    6[COMRAM] unsigned char [5]
  1714 ;;  timeout         2   11[COMRAM] unsigned short 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  1    wreg      unsigned char 
  1717 ;; Registers used:
  1718 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1724 ;;      Params:         0       0       0       0       0       0       0       0       0
  1725 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1726 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1727 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1728 ;;Total ram usage:       12 bytes
  1729 ;; Hardware stack levels used: 1
  1730 ;; Hardware stack levels required when called: 1
  1731 ;; This function calls:
  1732 ;;		_DHT11_Read
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text9
  1739   000816                     __ptext9:
  1740                           	callstack 0
  1741   000816                     _DHT11_GetTemperature:
  1742                           	callstack 29
  1743   000816                     
  1744                           ;DHT11.c: 17:     TRISAbits.TRISA0 = 0;
  1745   000816  9092               	bcf	146,0,c	;volatile
  1746                           
  1747                           ;DHT11.c: 18:     PORTAbits.RA0 = 0;
  1748   000818  9080               	bcf	128,0,c	;volatile
  1749   00081A                     
  1750                           ;DHT11.c: 19:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1751   00081A  0E34               	movlw	52
  1752   00081C  6E03               	movwf	??_DHT11_GetTemperature^0,c
  1753   00081E  0EF2               	movlw	242
  1754   000820                     u537:
  1755   000820  2EE8               	decfsz	wreg,f,c
  1756   000822  D7FE               	bra	u537
  1757   000824  2E03               	decfsz	??_DHT11_GetTemperature^0,f,c
  1758   000826  D7FC               	bra	u537
  1759   000828                     
  1760                           ;DHT11.c: 20:     PORTAbits.RA0 = 1;
  1761   000828  8080               	bsf	128,0,c	;volatile
  1762                           
  1763                           ;DHT11.c: 21:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1764   00082A  0E1A               	movlw	26
  1765   00082C                     u547:
  1766   00082C  2EE8               	decfsz	wreg,f,c
  1767   00082E  D7FE               	bra	u547
  1768   000830  D000               	nop2	
  1769   000832                     
  1770                           ;DHT11.c: 22:     TRISAbits.TRISA0 = 1;
  1771   000832  8092               	bsf	146,0,c	;volatile
  1772   000834                     
  1773                           ;DHT11.c: 24:     if (PORTAbits.RA0 == 0) {
  1774   000834  B080               	btfsc	128,0,c	;volatile
  1775   000836  EF1F  F004         	goto	u81
  1776   00083A  EF21  F004         	goto	u80
  1777   00083E                     u81:
  1778   00083E  EF89  F004         	goto	l880
  1779   000842                     u80:
  1780   000842                     
  1781                           ;DHT11.c: 25:         uint16_t timeout = 1000;
  1782   000842  0E03               	movlw	3
  1783   000844  6E0D               	movwf	(DHT11_GetTemperature@timeout+1)^0,c
  1784   000846  0EE8               	movlw	232
  1785   000848  6E0C               	movwf	DHT11_GetTemperature@timeout^0,c
  1786                           
  1787                           ;DHT11.c: 26:         while (!PORTAbits.RA0 && timeout--) _delay((unsigned long)((1)*(80
      +                          00000/4000000.0)));
  1788   00084A  EF28  F004         	goto	l22
  1789   00084E                     l23:
  1790   00084E  D000               	nop2		;2 cycle nop
  1791   000850                     l22:
  1792   000850  B080               	btfsc	128,0,c	;volatile
  1793   000852  EF2D  F004         	goto	u91
  1794   000856  EF2F  F004         	goto	u90
  1795   00085A                     u91:
  1796   00085A  EF3C  F004         	goto	l860
  1797   00085E                     u90:
  1798   00085E  060C               	decf	DHT11_GetTemperature@timeout^0,f,c
  1799   000860  A0D8               	btfss	status,0,c
  1800   000862  060D               	decf	(DHT11_GetTemperature@timeout+1)^0,f,c
  1801   000864  280C               	incf	DHT11_GetTemperature@timeout^0,w,c
  1802   000866  E106               	bnz	u101
  1803   000868  280D               	incf	(DHT11_GetTemperature@timeout+1)^0,w,c
  1804   00086A  A4D8               	btfss	status,2,c
  1805   00086C  EF3A  F004         	goto	u101
  1806   000870  EF3C  F004         	goto	u100
  1807   000874                     u101:
  1808   000874  EF27  F004         	goto	l23
  1809   000878                     u100:
  1810   000878                     l860:
  1811                           
  1812                           ;DHT11.c: 27:         timeout = 1000;
  1813   000878  0E03               	movlw	3
  1814   00087A  6E0D               	movwf	(DHT11_GetTemperature@timeout+1)^0,c
  1815   00087C  0EE8               	movlw	232
  1816   00087E  6E0C               	movwf	DHT11_GetTemperature@timeout^0,c
  1817                           
  1818                           ;DHT11.c: 28:         while (PORTAbits.RA0 && timeout--) _delay((unsigned long)((1)*(800
      +                          0000/4000000.0)));
  1819   000880  EF43  F004         	goto	l27
  1820   000884                     l28:
  1821   000884  D000               	nop2		;2 cycle nop
  1822   000886                     l27:
  1823   000886  A080               	btfss	128,0,c	;volatile
  1824   000888  EF48  F004         	goto	u111
  1825   00088C  EF4A  F004         	goto	u110
  1826   000890                     u111:
  1827   000890  EF57  F004         	goto	l31
  1828   000894                     u110:
  1829   000894  060C               	decf	DHT11_GetTemperature@timeout^0,f,c
  1830   000896  A0D8               	btfss	status,0,c
  1831   000898  060D               	decf	(DHT11_GetTemperature@timeout+1)^0,f,c
  1832   00089A  280C               	incf	DHT11_GetTemperature@timeout^0,w,c
  1833   00089C  E106               	bnz	u121
  1834   00089E  280D               	incf	(DHT11_GetTemperature@timeout+1)^0,w,c
  1835   0008A0  A4D8               	btfss	status,2,c
  1836   0008A2  EF55  F004         	goto	u121
  1837   0008A6  EF57  F004         	goto	u120
  1838   0008AA                     u121:
  1839   0008AA  EF42  F004         	goto	l28
  1840   0008AE                     u120:
  1841   0008AE                     l31:
  1842                           
  1843                           ;DHT11.c: 30:         uint8_t data[5];;DHT11.c: 31:         for (uint8_t i = 0; i < 5; i
      +                          ++) {
  1844   0008AE  6A0E               	clrf	DHT11_GetTemperature@i^0,c
  1845   0008B0                     l868:
  1846                           
  1847                           ;DHT11.c: 32:             data[i] = DHT11_Read();
  1848   0008B0  500E               	movf	DHT11_GetTemperature@i^0,w,c
  1849   0008B2  0F07               	addlw	low DHT11_GetTemperature@data
  1850   0008B4  6ED9               	movwf	fsr2l,c
  1851   0008B6  6ADA               	clrf	fsr2h,c
  1852   0008B8  EC29  F006         	call	_DHT11_Read	;wreg free
  1853   0008BC  6EDF               	movwf	indf2,c
  1854   0008BE                     
  1855                           ;DHT11.c: 33:         }
  1856   0008BE  2A0E               	incf	DHT11_GetTemperature@i^0,f,c
  1857   0008C0  0E04               	movlw	4
  1858   0008C2  640E               	cpfsgt	DHT11_GetTemperature@i^0,c
  1859   0008C4  EF66  F004         	goto	u131
  1860   0008C8  EF68  F004         	goto	u130
  1861   0008CC                     u131:
  1862   0008CC  EF58  F004         	goto	l868
  1863   0008D0                     u130:
  1864   0008D0                     
  1865                           ;DHT11.c: 35:         if (data[0] + data[1] + data[2] + data[3] == data[4]) {
  1866   0008D0  500B               	movf	(DHT11_GetTemperature@data+4)^0,w,c
  1867   0008D2  6E03               	movwf	??_DHT11_GetTemperature^0,c
  1868   0008D4  6A04               	clrf	(??_DHT11_GetTemperature+1)^0,c
  1869   0008D6  5008               	movf	(DHT11_GetTemperature@data+1)^0,w,c
  1870   0008D8  C007  F005         	movff	DHT11_GetTemperature@data,??_DHT11_GetTemperature+2
  1871   0008DC  6A06               	clrf	(??_DHT11_GetTemperature+3)^0,c
  1872   0008DE  2605               	addwf	(??_DHT11_GetTemperature+2)^0,f,c
  1873   0008E0  0E00               	movlw	0
  1874   0008E2  2206               	addwfc	(??_DHT11_GetTemperature+3)^0,f,c
  1875   0008E4  5009               	movf	(DHT11_GetTemperature@data+2)^0,w,c
  1876   0008E6  2605               	addwf	(??_DHT11_GetTemperature+2)^0,f,c
  1877   0008E8  0E00               	movlw	0
  1878   0008EA  2206               	addwfc	(??_DHT11_GetTemperature+3)^0,f,c
  1879   0008EC  500A               	movf	(DHT11_GetTemperature@data+3)^0,w,c
  1880   0008EE  2605               	addwf	(??_DHT11_GetTemperature+2)^0,f,c
  1881   0008F0  0E00               	movlw	0
  1882   0008F2  2206               	addwfc	(??_DHT11_GetTemperature+3)^0,f,c
  1883   0008F4  5003               	movf	??_DHT11_GetTemperature^0,w,c
  1884   0008F6  1805               	xorwf	(??_DHT11_GetTemperature+2)^0,w,c
  1885   0008F8  E107               	bnz	u141
  1886   0008FA  5004               	movf	(??_DHT11_GetTemperature+1)^0,w,c
  1887   0008FC  1806               	xorwf	(??_DHT11_GetTemperature+3)^0,w,c
  1888   0008FE  A4D8               	btfss	status,2,c
  1889   000900  EF84  F004         	goto	u141
  1890   000904  EF86  F004         	goto	u140
  1891   000908                     u141:
  1892   000908  EF89  F004         	goto	l880
  1893   00090C                     u140:
  1894   00090C                     
  1895                           ;DHT11.c: 36:             return data[2];
  1896   00090C  5009               	movf	(DHT11_GetTemperature@data+2)^0,w,c
  1897   00090E  EF8A  F004         	goto	l35
  1898   000912                     l880:
  1899                           
  1900                           ;DHT11.c: 39:     return 255;
  1901   000912  0EFF               	movlw	255
  1902   000914                     l35:
  1903   000914  0012               	return		;funcret
  1904   000916                     __end_of_DHT11_GetTemperature:
  1905                           	callstack 0
  1906                           
  1907 ;; *************** function _DHT11_Read *****************
  1908 ;; Defined at:
  1909 ;;		line 4 in file "DHT11.c"
  1910 ;; Parameters:    Size  Location     Type
  1911 ;;		None
  1912 ;; Auto vars:     Size  Location     Type
  1913 ;;  i               1    1[COMRAM] unsigned char 
  1914 ;;  data            1    0[COMRAM] unsigned char 
  1915 ;; Return value:  Size  Location     Type
  1916 ;;                  1    wreg      unsigned char 
  1917 ;; Registers used:
  1918 ;;		wreg, status,2, status,0
  1919 ;; Tracked objects:
  1920 ;;		On entry : 0/0
  1921 ;;		On exit  : 0/0
  1922 ;;		Unchanged: 0/0
  1923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1924 ;;      Params:         0       0       0       0       0       0       0       0       0
  1925 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1926 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1927 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1928 ;;Total ram usage:        2 bytes
  1929 ;; Hardware stack levels used: 1
  1930 ;; This function calls:
  1931 ;;		Nothing
  1932 ;; This function is called by:
  1933 ;;		_DHT11_GetTemperature
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           	psect	text10
  1938   000C52                     __ptext10:
  1939                           	callstack 0
  1940   000C52                     _DHT11_Read:
  1941                           	callstack 29
  1942   000C52                     
  1943                           ;DHT11.c: 5:     uint8_t data = 0;
  1944   000C52  6A01               	clrf	DHT11_Read@data^0,c
  1945                           
  1946                           ;DHT11.c: 6:     for (uint8_t i = 0; i < 8; i++) {
  1947   000C54  6A02               	clrf	DHT11_Read@i^0,c
  1948   000C56                     l11:
  1949   000C56  A080               	btfss	128,0,c	;volatile
  1950   000C58  EF30  F006         	goto	u11
  1951   000C5C  EF32  F006         	goto	u10
  1952   000C60                     u11:
  1953   000C60  EF2B  F006         	goto	l11
  1954   000C64                     u10:
  1955   000C64                     
  1956                           ;DHT11.c: 8:         _delay((unsigned long)((50)*(8000000/4000000.0)));
  1957   000C64  0E21               	movlw	33
  1958   000C66                     u557:
  1959   000C66  2EE8               	decfsz	wreg,f,c
  1960   000C68  D7FE               	bra	u557
  1961   000C6A  0000               	nop	
  1962   000C6C                     
  1963                           ;DHT11.c: 9:         data <<= 1;
  1964   000C6C  90D8               	bcf	status,0,c
  1965   000C6E  3601               	rlcf	DHT11_Read@data^0,f,c
  1966   000C70                     
  1967                           ;DHT11.c: 10:         if (PORTAbits.RA0) data |= 1;
  1968   000C70  A080               	btfss	128,0,c	;volatile
  1969   000C72  EF3D  F006         	goto	u21
  1970   000C76  EF3F  F006         	goto	u20
  1971   000C7A                     u21:
  1972   000C7A  EF40  F006         	goto	l15
  1973   000C7E                     u20:
  1974   000C7E  8001               	bsf	DHT11_Read@data^0,0,c
  1975   000C80                     l15:
  1976   000C80  B080               	btfsc	128,0,c	;volatile
  1977   000C82  EF45  F006         	goto	u31
  1978   000C86  EF47  F006         	goto	u30
  1979   000C8A                     u31:
  1980   000C8A  EF40  F006         	goto	l15
  1981   000C8E                     u30:
  1982   000C8E                     
  1983                           ;DHT11.c: 12:     }
  1984   000C8E  2A02               	incf	DHT11_Read@i^0,f,c
  1985   000C90  0E07               	movlw	7
  1986   000C92  6402               	cpfsgt	DHT11_Read@i^0,c
  1987   000C94  EF4E  F006         	goto	u41
  1988   000C98  EF50  F006         	goto	u40
  1989   000C9C                     u41:
  1990   000C9C  EF2B  F006         	goto	l11
  1991   000CA0                     u40:
  1992   000CA0                     
  1993                           ;DHT11.c: 13:     return data;
  1994   000CA0  5001               	movf	DHT11_Read@data^0,w,c
  1995   000CA2  0012               	return		;funcret
  1996   000CA4                     __end_of_DHT11_Read:
  1997                           	callstack 0
  1998                           
  1999                           	psect	rparam
  2000   000001                     ___rparam_used  equ	1
  2001   000000                     ___param_bank   equ	0
  2002   000000                     __Lparam        equ	__Lrparam
  2003   000000                     __Hparam        equ	__Hrparam
  2004                           
  2005                           	psect	idloc
  2006                           
  2007                           ;Config register IDLOC0 @ 0x200000
  2008                           ;	unspecified, using default values
  2009   200000                     	org	2097152
  2010   200000  FF                 	db	255
  2011                           
  2012                           ;Config register IDLOC1 @ 0x200001
  2013                           ;	unspecified, using default values
  2014   200001                     	org	2097153
  2015   200001  FF                 	db	255
  2016                           
  2017                           ;Config register IDLOC2 @ 0x200002
  2018                           ;	unspecified, using default values
  2019   200002                     	org	2097154
  2020   200002  FF                 	db	255
  2021                           
  2022                           ;Config register IDLOC3 @ 0x200003
  2023                           ;	unspecified, using default values
  2024   200003                     	org	2097155
  2025   200003  FF                 	db	255
  2026                           
  2027                           ;Config register IDLOC4 @ 0x200004
  2028                           ;	unspecified, using default values
  2029   200004                     	org	2097156
  2030   200004  FF                 	db	255
  2031                           
  2032                           ;Config register IDLOC5 @ 0x200005
  2033                           ;	unspecified, using default values
  2034   200005                     	org	2097157
  2035   200005  FF                 	db	255
  2036                           
  2037                           ;Config register IDLOC6 @ 0x200006
  2038                           ;	unspecified, using default values
  2039   200006                     	org	2097158
  2040   200006  FF                 	db	255
  2041                           
  2042                           ;Config register IDLOC7 @ 0x200007
  2043                           ;	unspecified, using default values
  2044   200007                     	org	2097159
  2045   200007  FF                 	db	255
  2046                           
  2047                           	psect	config
  2048                           
  2049                           ;Config register CONFIG1L @ 0x300000
  2050                           ;	PLL Prescaler Selection bits
  2051                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2052                           ;	System Clock Postscaler Selection bits
  2053                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2054                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2055                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  2056   300000                     	org	3145728
  2057   300000  00                 	db	0
  2058                           
  2059                           ;Config register CONFIG1H @ 0x300001
  2060                           ;	Oscillator Selection bits
  2061                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  2062                           ;	Fail-Safe Clock Monitor Enable bit
  2063                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2064                           ;	Internal/External Oscillator Switchover bit
  2065                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2066   300001                     	org	3145729
  2067   300001  09                 	db	9
  2068                           
  2069                           ;Config register CONFIG2L @ 0x300002
  2070                           ;	Power-up Timer Enable bit
  2071                           ;	PWRT = OFF, PWRT disabled
  2072                           ;	Brown-out Reset Enable bits
  2073                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  2074                           ;	Brown-out Reset Voltage bits
  2075                           ;	BORV = 3, Minimum setting 2.05V
  2076                           ;	USB Voltage Regulator Enable bit
  2077                           ;	VREGEN = OFF, USB voltage regulator disabled
  2078   300002                     	org	3145730
  2079   300002  1F                 	db	31
  2080                           
  2081                           ;Config register CONFIG2H @ 0x300003
  2082                           ;	Watchdog Timer Enable bit
  2083                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2084                           ;	Watchdog Timer Postscale Select bits
  2085                           ;	WDTPS = 32768, 1:32768
  2086   300003                     	org	3145731
  2087   300003  1E                 	db	30
  2088                           
  2089                           ; Padding undefined space
  2090   300004                     	org	3145732
  2091   300004  FF                 	db	255
  2092                           
  2093                           ;Config register CONFIG3H @ 0x300005
  2094                           ;	CCP2 MUX bit
  2095                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2096                           ;	PORTB A/D Enable bit
  2097                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2098                           ;	Low-Power Timer 1 Oscillator Enable bit
  2099                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  2100                           ;	MCLR Pin Enable bit
  2101                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  2102   300005                     	org	3145733
  2103   300005  01                 	db	1
  2104                           
  2105                           ;Config register CONFIG4L @ 0x300006
  2106                           ;	Stack Full/Underflow Reset Enable bit
  2107                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2108                           ;	Single-Supply ICSP Enable bit
  2109                           ;	LVP = OFF, Single-Supply ICSP disabled
  2110                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2111                           ;	ICPRT = OFF, ICPORT disabled
  2112                           ;	Extended Instruction Set Enable bit
  2113                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  2114                           ;	Background Debugger Enable bit
  2115                           ;	DEBUG = 0x1, unprogrammed default
  2116   300006                     	org	3145734
  2117   300006  81                 	db	129
  2118                           
  2119                           ; Padding undefined space
  2120   300007                     	org	3145735
  2121   300007  FF                 	db	255
  2122                           
  2123                           ;Config register CONFIG5L @ 0x300008
  2124                           ;	Code Protection bit
  2125                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  2126                           ;	Code Protection bit
  2127                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  2128                           ;	Code Protection bit
  2129                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  2130                           ;	Code Protection bit
  2131                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  2132   300008                     	org	3145736
  2133   300008  0F                 	db	15
  2134                           
  2135                           ;Config register CONFIG5H @ 0x300009
  2136                           ;	Boot Block Code Protection bit
  2137                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  2138                           ;	Data EEPROM Code Protection bit
  2139                           ;	CPD = OFF, Data EEPROM is not code-protected
  2140   300009                     	org	3145737
  2141   300009  C0                 	db	192
  2142                           
  2143                           ;Config register CONFIG6L @ 0x30000A
  2144                           ;	Write Protection bit
  2145                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  2146                           ;	Write Protection bit
  2147                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  2148                           ;	Write Protection bit
  2149                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  2150                           ;	Write Protection bit
  2151                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  2152   30000A                     	org	3145738
  2153   30000A  0F                 	db	15
  2154                           
  2155                           ;Config register CONFIG6H @ 0x30000B
  2156                           ;	Configuration Register Write Protection bit
  2157                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2158                           ;	Boot Block Write Protection bit
  2159                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  2160                           ;	Data EEPROM Write Protection bit
  2161                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2162   30000B                     	org	3145739
  2163   30000B  E0                 	db	224
  2164                           
  2165                           ;Config register CONFIG7L @ 0x30000C
  2166                           ;	Table Read Protection bit
  2167                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2168                           ;	Table Read Protection bit
  2169                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2170                           ;	Table Read Protection bit
  2171                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2172                           ;	Table Read Protection bit
  2173                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  2174   30000C                     	org	3145740
  2175   30000C  0F                 	db	15
  2176                           
  2177                           ;Config register CONFIG7H @ 0x30000D
  2178                           ;	Boot Block Table Read Protection bit
  2179                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  2180   30000D                     	org	3145741
  2181   30000D  40                 	db	64
  2182                           tosu	equ	0xFFF
  2183                           tosh	equ	0xFFE
  2184                           tosl	equ	0xFFD
  2185                           stkptr	equ	0xFFC
  2186                           pclatu	equ	0xFFB
  2187                           pclath	equ	0xFFA
  2188                           pcl	equ	0xFF9
  2189                           tblptru	equ	0xFF8
  2190                           tblptrh	equ	0xFF7
  2191                           tblptrl	equ	0xFF6
  2192                           tablat	equ	0xFF5
  2193                           prodh	equ	0xFF4
  2194                           prodl	equ	0xFF3
  2195                           indf0	equ	0xFEF
  2196                           postinc0	equ	0xFEE
  2197                           postdec0	equ	0xFED
  2198                           preinc0	equ	0xFEC
  2199                           plusw0	equ	0xFEB
  2200                           fsr0h	equ	0xFEA
  2201                           fsr0l	equ	0xFE9
  2202                           wreg	equ	0xFE8
  2203                           indf1	equ	0xFE7
  2204                           postinc1	equ	0xFE6
  2205                           postdec1	equ	0xFE5
  2206                           preinc1	equ	0xFE4
  2207                           plusw1	equ	0xFE3
  2208                           fsr1h	equ	0xFE2
  2209                           fsr1l	equ	0xFE1
  2210                           bsr	equ	0xFE0
  2211                           indf2	equ	0xFDF
  2212                           postinc2	equ	0xFDE
  2213                           postdec2	equ	0xFDD
  2214                           preinc2	equ	0xFDC
  2215                           plusw2	equ	0xFDB
  2216                           fsr2h	equ	0xFDA
  2217                           fsr2l	equ	0xFD9
  2218                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     23      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 13
		 -> main@buffer(COMRAM[6]), STR_1(CODE[13]), STR_2(CODE[7]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 13
		 -> main@buffer(COMRAM[6]), STR_1(CODE[13]), STR_2(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_DHT11_GetTemperature
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command
    _DHT11_GetTemperature->_DHT11_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0    1305
                                             14 COMRAM     9     9      0
               _DHT11_GetTemperature
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        5     2      3     232
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           2     0      2      76
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _DHT11_GetTemperature                                12    12      0     225
                                              2 COMRAM    12    12      0
                         _DHT11_Read
 ---------------------------------------------------------------------------------
 (2) _DHT11_Read                                           2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DHT11_GetTemperature
     _DHT11_Read
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   ___awdiv
   ___awmod

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK0           160      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBIGSFRh         127      0       0      0.0%
BITBIGSFRl          32      0       0      0.0%
COMRAM              95     23      23     24.2%
BANK0              160      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BIGRAM            2047      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      23      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Tue Apr 08 15:37:22 2025

                ?_LCD_Command 0001                            l11 0C56                            l22 0850  
                          l15 0C80                            l31 08AE                            l23 084E  
                          l18 0CA2                            l35 0914                            l27 0886  
                          l28 0884                            l80 0D0E                            l83 0C50  
                          l92 0BA8                            l86 0BFC                            l97 0CDC  
                          u10 0C64                            u11 0C60                            u20 0C7E  
                          u21 0C7A                            u30 0C8E                            u31 0C8A  
                          u40 0CA0                            u41 0C9C                            u80 0842  
                          u81 083E                            u90 085E                            u91 085A  
                ___awdiv@sign 0006                   ?_LCD_String 0003          _DHT11_GetTemperature 0816  
                         l100 0D26                           l334 0A9C                           l347 0B4A  
                         l810 0C8E                           l802 0C64                           l812 0C90  
                         l804 0C6C                           l820 0C10                           l900 0D16  
                         l814 0CA0                           l806 0C70                           l830 0C26  
                         l822 0C12                           l808 0C7E                           l832 0C3C  
                         l824 0C14                           l850 0828                           l834 0C3E  
                         l826 0C16                           l818 0C00                           l860 0878  
                         l852 0832                           l836 0C40                           l828 0C18  
                         l780 0BBE                           l870 08BE                           l862 0894  
                         l854 0834                           l846 0816                           l790 0BE8  
                         l782 0BC0                           l872 08C0                           l856 0842  
                         l880 0912                           l848 081A                           l792 0BEA  
                         l784 0BC2                           l776 0BAC                           l874 08D0  
                         l858 085E                           l890 0CF6                           l794 0BEC  
                         l786 0BC4                           l778 0BBC                           l796 0C52  
                         l876 090C                           l868 08B0                           l892 0CFC  
                         l884 0CDE                           l788 0BD2                           l894 0D02  
                         l886 0CE0                           l896 0D08                           l888 0CF0  
                         l898 0D10                           u100 0878                           u101 0874  
                         u110 0894                           u111 0890                           u120 08AE  
                         u121 08AA                           u130 08D0                           u131 08CC  
                         u140 090C                           u300 0B98                           u141 0908  
                         u310 0BA8                           u311 0BA4                           u320 0CB6  
                         u400 0AC8                           u321 0CB2                           u401 0AC4  
                         u330 09EC                           u410 0AE2                           u307 0B8E  
                         u331 09E8                           u411 0ADE                           u340 0A06  
                         u420 0B00                           u341 0A02                           u421 0AFC  
                         u350 0A2C                           u430 0B16                           u351 0A28  
                         u431 0B12                           u360 0A4A                           u440 0B3A  
                         u361 0A46                           u441 0B36                           u290 0B70  
                         u370 0A66                           u450 0958                           u507 0D1C  
                         u371 0A62                           u451 0954                           u380 0A8C  
                         u517 0C1E                           u381 0A88                           u390 0AAE  
                         u527 0C48                           u391 0AAA                           u537 0820  
                         u297 0B66                           u547 082C                           u467 09C6  
                         u557 0C66                           u477 0BCA                           u487 0BF4  
                         u497 0CE6                  ___awmod@sign 0006                           wreg 0FE8  
                 LCD_Char@dat 0002                          l1100 0AE2                          l1022 0B4C  
                        l1030 0CA6                          l1110 0B1E                          l1102 0AEA  
                        l1024 0B50                          l1040 0CD0                          l1032 0CA6  
                        l1112 0B24                          l1104 0AF2                          l1026 0B74  
                        l1034 0CB6                          l1050 09F8                          l1042 09DC  
                        l1106 0B00                          l1114 0B2A                          l1130 092C  
                        l1122 0916                          l1028 0B78                          l1036 0CC2  
                        l1060 0A2C                          l1052 0A06                          l1044 09DE  
                        l1116 0B3A                          l1108 0B16                          l1140 098C  
                        l1132 0942                          l1124 091A                          l1038 0CCA  
                        l1070 0A66                          l1062 0A34                          l1054 0A0E  
                        l1046 09EC                          l1118 0B42                          l1142 0990  
                        l1134 0948                          l1126 0924                          l1080 0A8C  
                        l1072 0A6E                          l1064 0A3C                          l1056 0A12  
                        l1048 09F4                          l1144 0992                          l1136 0958  
                        l1128 0928                          l1082 0A94                          l1074 0A70  
                        l1066 0A4A                          l1058 0A1A                          l1090 0AAE  
                        l1138 0988                          l1146 09A6                          l1076 0A76  
                        l1068 0A50                          l1092 0AB6                          l1148 09BC  
                        l1078 0A7C                          l1094 0ABA                          l1086 0A9E  
                        l1096 0AC8                          l1088 0AA0                          l1098 0AD0  
                        STR_1 0801                          STR_2 080E                          _LATD 0F8C  
                        _main 0916                          fsr0h 0FEA                          indf0 0FEF  
                        fsr2h 0FDA                          fsr0l 0FE9                          indf2 0FDF  
                        fsr2l 0FD9                          start 7FFC                 _LCD_String_xy 0CA4  
                ___param_bank 0000              __end_of_LCD_Char 0BFE              __end_of_LCD_Init 0D10  
       ?_DHT11_GetTemperature 0001                         ?_main 0001               __end_of___awdiv 0A9E  
             __end_of___awmod 0B4C                         _CMCON 0FB4               ___awdiv@divisor 0003  
                       _LATD0 7C60                         _LATD1 7C61               ___awdiv@counter 0005  
                       _TRISD 0F95                         tablat 0FF5                         status 0FD8  
              ?_LCD_String_xy 0005               __initialization 0D28                  __end_of_main 09DC  
                      ??_main 000F             __end_of_LCD_Clear 0D28                 __activetblptr 0002  
                      _ADCON1 0FC1              ___awdiv@dividend 0001              LCD_String_xy@msg 0006  
            LCD_String_xy@pos 0005              LCD_String_xy@row 0008                        _OSCCON 0FD3  
                ??_DHT11_Read 0001         DHT11_GetTemperature@i 000E                     ??___awdiv 0005  
                   ??___awmod 0005        ??_DHT11_GetTemperature 0003              ___awdiv@quotient 0007  
             ___awmod@divisor 0003                        isa$std 0001               ___awmod@counter 0005  
                __mediumconst 0800                        tblptrh 0FF7                        tblptrl 0FF6  
                      tblptru 0FF8            __end_of_DHT11_Read 0CA4                     ?_LCD_Char 0001  
                  __accesstop 0060       __end_of__initialization 0D28                     ?_LCD_Init 0001  
             ??_LCD_String_xy 0008                 ___rparam_used 0001                __pcstackCOMRAM 0001  
                ??_LCD_String 0005                    ??_LCD_Char 0001                    ??_LCD_Init 0003  
          __end_of_LCD_String 0BAA   DHT11_GetTemperature@timeout 000C                 LCD_String@msg 0003  
                     __Hparam 0000                       __Lparam 0000                       ___awdiv 09DC  
                     ___awmod 0A9E                  __psmallconst 0800                       __pcinit 0D28  
                     __ramtop 0800                       __ptext0 0916                       __ptext1 0A9E  
                     __ptext2 09DC                       __ptext3 0CA4                       __ptext4 0B4C  
                     __ptext5 0BAA                       __ptext6 0CDE                       __ptext7 0D10  
                     __ptext8 0BFE                       __ptext9 0816              ___awmod@dividend 0001  
                   _LCD_Clear 0D10          end_of_initialization 0D28                LCD_Command@cmd 0002  
               __Lmediumconst 0000                     _PORTAbits 0F80                     _TRISAbits 0F92  
                  ?_LCD_Clear 0001                    main@buffer 0011                 ??_LCD_Command 0001  
         start_initialization 0D28         __end_of_LCD_String_xy 0CDE      DHT11_GetTemperature@data 0007  
         __end_of_LCD_Command 0C52                   ??_LCD_Clear 0003                      ?___awdiv 0001  
                    ?___awmod 0001                   __smallconst 0800         LCD_String_xy@location 0009  
                    _LCD_Char 0BAA                      _LCD_Init 0CDE                   DHT11_Read@i 0002  
                 _LCD_Command 0BFE                    _DHT11_Read 0C52                      __Hrparam 0000  
                    __Lrparam 0000                      __ptext10 0C52  __end_of_DHT11_GetTemperature 0916  
                    isa$xinst 0000                      main@temp 0017                    _LCD_String 0B4C  
              DHT11_Read@data 0001                   ?_DHT11_Read 0001  
