

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Mon May 05 10:45:45 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1,group=2
    25                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1,group=2
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    45                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    46   000000                     
    47                           ; Version 2.20
    48                           ; Generated 12/02/2020 GMT
    49                           ; 
    50                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC18F4550 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81   000FE0                     bsr             equ	4064
    82   000FE9                     fsr0            equ	4073
    83   000FEA                     fsr0h           equ	4074
    84   000FE9                     fsr0l           equ	4073
    85   000FE1                     fsr1            equ	4065
    86   000FE2                     fsr1h           equ	4066
    87   000FE1                     fsr1l           equ	4065
    88   000FD9                     fsr2            equ	4057
    89   000FDA                     fsr2h           equ	4058
    90   000FD9                     fsr2l           equ	4057
    91   000FEF                     indf0           equ	4079
    92   000FE7                     indf1           equ	4071
    93   000FDF                     indf2           equ	4063
    94   000FF2                     intcon          equ	4082
    95   000000                     nvmcon          equ	0
    96   000FF9                     pcl             equ	4089
    97   000FFA                     pclath          equ	4090
    98   000FFB                     pclatu          equ	4091
    99   000FEB                     plusw0          equ	4075
   100   000FE3                     plusw1          equ	4067
   101   000FDB                     plusw2          equ	4059
   102   000FED                     postdec0        equ	4077
   103   000FE5                     postdec1        equ	4069
   104   000FDD                     postdec2        equ	4061
   105   000FEE                     postinc0        equ	4078
   106   000FE6                     postinc1        equ	4070
   107   000FDE                     postinc2        equ	4062
   108   000FEC                     preinc0         equ	4076
   109   000FE4                     preinc1         equ	4068
   110   000FDC                     preinc2         equ	4060
   111   000FF3                     prod            equ	4083
   112   000FF4                     prodh           equ	4084
   113   000FF3                     prodl           equ	4083
   114   000FD8                     status          equ	4056
   115   000FF5                     tablat          equ	4085
   116   000FF6                     tblptr          equ	4086
   117   000FF7                     tblptrh         equ	4087
   118   000FF6                     tblptrl         equ	4086
   119   000FF8                     tblptru         equ	4088
   120   000FFD                     tosl            equ	4093
   121   000FE8                     wreg            equ	4072
   122   000F62                     SPPDATA         equ	3938	;# 
   123   000F63                     SPPCFG          equ	3939	;# 
   124   000F64                     SPPEPS          equ	3940	;# 
   125   000F65                     SPPCON          equ	3941	;# 
   126   000F66                     UFRM            equ	3942	;# 
   127   000F66                     UFRML           equ	3942	;# 
   128   000F67                     UFRMH           equ	3943	;# 
   129   000F68                     UIR             equ	3944	;# 
   130   000F69                     UIE             equ	3945	;# 
   131   000F6A                     UEIR            equ	3946	;# 
   132   000F6B                     UEIE            equ	3947	;# 
   133   000F6C                     USTAT           equ	3948	;# 
   134   000F6D                     UCON            equ	3949	;# 
   135   000F6E                     UADDR           equ	3950	;# 
   136   000F6F                     UCFG            equ	3951	;# 
   137   000F70                     UEP0            equ	3952	;# 
   138   000F71                     UEP1            equ	3953	;# 
   139   000F72                     UEP2            equ	3954	;# 
   140   000F73                     UEP3            equ	3955	;# 
   141   000F74                     UEP4            equ	3956	;# 
   142   000F75                     UEP5            equ	3957	;# 
   143   000F76                     UEP6            equ	3958	;# 
   144   000F77                     UEP7            equ	3959	;# 
   145   000F78                     UEP8            equ	3960	;# 
   146   000F79                     UEP9            equ	3961	;# 
   147   000F7A                     UEP10           equ	3962	;# 
   148   000F7B                     UEP11           equ	3963	;# 
   149   000F7C                     UEP12           equ	3964	;# 
   150   000F7D                     UEP13           equ	3965	;# 
   151   000F7E                     UEP14           equ	3966	;# 
   152   000F7F                     UEP15           equ	3967	;# 
   153   000F80                     PORTA           equ	3968	;# 
   154   000F81                     PORTB           equ	3969	;# 
   155   000F82                     PORTC           equ	3970	;# 
   156   000F83                     PORTD           equ	3971	;# 
   157   000F84                     PORTE           equ	3972	;# 
   158   000F89                     LATA            equ	3977	;# 
   159   000F8A                     LATB            equ	3978	;# 
   160   000F8B                     LATC            equ	3979	;# 
   161   000F8C                     LATD            equ	3980	;# 
   162   000F8D                     LATE            equ	3981	;# 
   163   000F92                     TRISA           equ	3986	;# 
   164   000F92                     DDRA            equ	3986	;# 
   165   000F93                     TRISB           equ	3987	;# 
   166   000F93                     DDRB            equ	3987	;# 
   167   000F94                     TRISC           equ	3988	;# 
   168   000F94                     DDRC            equ	3988	;# 
   169   000F95                     TRISD           equ	3989	;# 
   170   000F95                     DDRD            equ	3989	;# 
   171   000F96                     TRISE           equ	3990	;# 
   172   000F96                     DDRE            equ	3990	;# 
   173   000F9B                     OSCTUNE         equ	3995	;# 
   174   000F9D                     PIE1            equ	3997	;# 
   175   000F9E                     PIR1            equ	3998	;# 
   176   000F9F                     IPR1            equ	3999	;# 
   177   000FA0                     PIE2            equ	4000	;# 
   178   000FA1                     PIR2            equ	4001	;# 
   179   000FA2                     IPR2            equ	4002	;# 
   180   000FA6                     EECON1          equ	4006	;# 
   181   000FA7                     EECON2          equ	4007	;# 
   182   000FA8                     EEDATA          equ	4008	;# 
   183   000FA9                     EEADR           equ	4009	;# 
   184   000FAB                     RCSTA           equ	4011	;# 
   185   000FAB                     RCSTA1          equ	4011	;# 
   186   000FAC                     TXSTA           equ	4012	;# 
   187   000FAC                     TXSTA1          equ	4012	;# 
   188   000FAD                     TXREG           equ	4013	;# 
   189   000FAD                     TXREG1          equ	4013	;# 
   190   000FAE                     RCREG           equ	4014	;# 
   191   000FAE                     RCREG1          equ	4014	;# 
   192   000FAF                     SPBRG           equ	4015	;# 
   193   000FAF                     SPBRG1          equ	4015	;# 
   194   000FB0                     SPBRGH          equ	4016	;# 
   195   000FB1                     T3CON           equ	4017	;# 
   196   000FB2                     TMR3            equ	4018	;# 
   197   000FB2                     TMR3L           equ	4018	;# 
   198   000FB3                     TMR3H           equ	4019	;# 
   199   000FB4                     CMCON           equ	4020	;# 
   200   000FB5                     CVRCON          equ	4021	;# 
   201   000FB6                     ECCP1AS         equ	4022	;# 
   202   000FB6                     CCP1AS          equ	4022	;# 
   203   000FB7                     ECCP1DEL        equ	4023	;# 
   204   000FB7                     CCP1DEL         equ	4023	;# 
   205   000FB8                     BAUDCON         equ	4024	;# 
   206   000FB8                     BAUDCTL         equ	4024	;# 
   207   000FBA                     CCP2CON         equ	4026	;# 
   208   000FBB                     CCPR2           equ	4027	;# 
   209   000FBB                     CCPR2L          equ	4027	;# 
   210   000FBC                     CCPR2H          equ	4028	;# 
   211   000FBD                     CCP1CON         equ	4029	;# 
   212   000FBD                     ECCP1CON        equ	4029	;# 
   213   000FBE                     CCPR1           equ	4030	;# 
   214   000FBE                     CCPR1L          equ	4030	;# 
   215   000FBF                     CCPR1H          equ	4031	;# 
   216   000FC0                     ADCON2          equ	4032	;# 
   217   000FC1                     ADCON1          equ	4033	;# 
   218   000FC2                     ADCON0          equ	4034	;# 
   219   000FC3                     ADRES           equ	4035	;# 
   220   000FC3                     ADRESL          equ	4035	;# 
   221   000FC4                     ADRESH          equ	4036	;# 
   222   000FC5                     SSPCON2         equ	4037	;# 
   223   000FC6                     SSPCON1         equ	4038	;# 
   224   000FC7                     SSPSTAT         equ	4039	;# 
   225   000FC8                     SSPADD          equ	4040	;# 
   226   000FC9                     SSPBUF          equ	4041	;# 
   227   000FCA                     T2CON           equ	4042	;# 
   228   000FCB                     PR2             equ	4043	;# 
   229   000FCB                     MEMCON          equ	4043	;# 
   230   000FCC                     TMR2            equ	4044	;# 
   231   000FCD                     T1CON           equ	4045	;# 
   232   000FCE                     TMR1            equ	4046	;# 
   233   000FCE                     TMR1L           equ	4046	;# 
   234   000FCF                     TMR1H           equ	4047	;# 
   235   000FD0                     RCON            equ	4048	;# 
   236   000FD1                     WDTCON          equ	4049	;# 
   237   000FD2                     HLVDCON         equ	4050	;# 
   238   000FD2                     LVDCON          equ	4050	;# 
   239   000FD3                     OSCCON          equ	4051	;# 
   240   000FD5                     T0CON           equ	4053	;# 
   241   000FD6                     TMR0            equ	4054	;# 
   242   000FD6                     TMR0L           equ	4054	;# 
   243   000FD7                     TMR0H           equ	4055	;# 
   244   000FD8                     STATUS          equ	4056	;# 
   245   000FD9                     FSR2            equ	4057	;# 
   246   000FD9                     FSR2L           equ	4057	;# 
   247   000FDA                     FSR2H           equ	4058	;# 
   248   000FDB                     PLUSW2          equ	4059	;# 
   249   000FDC                     PREINC2         equ	4060	;# 
   250   000FDD                     POSTDEC2        equ	4061	;# 
   251   000FDE                     POSTINC2        equ	4062	;# 
   252   000FDF                     INDF2           equ	4063	;# 
   253   000FE0                     BSR             equ	4064	;# 
   254   000FE1                     FSR1            equ	4065	;# 
   255   000FE1                     FSR1L           equ	4065	;# 
   256   000FE2                     FSR1H           equ	4066	;# 
   257   000FE3                     PLUSW1          equ	4067	;# 
   258   000FE4                     PREINC1         equ	4068	;# 
   259   000FE5                     POSTDEC1        equ	4069	;# 
   260   000FE6                     POSTINC1        equ	4070	;# 
   261   000FE7                     INDF1           equ	4071	;# 
   262   000FE8                     WREG            equ	4072	;# 
   263   000FE9                     FSR0            equ	4073	;# 
   264   000FE9                     FSR0L           equ	4073	;# 
   265   000FEA                     FSR0H           equ	4074	;# 
   266   000FEB                     PLUSW0          equ	4075	;# 
   267   000FEC                     PREINC0         equ	4076	;# 
   268   000FED                     POSTDEC0        equ	4077	;# 
   269   000FEE                     POSTINC0        equ	4078	;# 
   270   000FEF                     INDF0           equ	4079	;# 
   271   000FF0                     INTCON3         equ	4080	;# 
   272   000FF1                     INTCON2         equ	4081	;# 
   273   000FF2                     INTCON          equ	4082	;# 
   274   000FF3                     PROD            equ	4083	;# 
   275   000FF3                     PRODL           equ	4083	;# 
   276   000FF4                     PRODH           equ	4084	;# 
   277   000FF5                     TABLAT          equ	4085	;# 
   278   000FF6                     TBLPTR          equ	4086	;# 
   279   000FF6                     TBLPTRL         equ	4086	;# 
   280   000FF7                     TBLPTRH         equ	4087	;# 
   281   000FF8                     TBLPTRU         equ	4088	;# 
   282   000FF9                     PCLAT           equ	4089	;# 
   283   000FF9                     PC              equ	4089	;# 
   284   000FF9                     PCL             equ	4089	;# 
   285   000FFA                     PCLATH          equ	4090	;# 
   286   000FFB                     PCLATU          equ	4091	;# 
   287   000FFC                     STKPTR          equ	4092	;# 
   288   000FFD                     TOS             equ	4093	;# 
   289   000FFD                     TOSL            equ	4093	;# 
   290   000FFE                     TOSH            equ	4094	;# 
   291   000FFF                     TOSU            equ	4095	;# 
   292   000F62                     SPPDATA         equ	3938	;# 
   293   000F63                     SPPCFG          equ	3939	;# 
   294   000F64                     SPPEPS          equ	3940	;# 
   295   000F65                     SPPCON          equ	3941	;# 
   296   000F66                     UFRM            equ	3942	;# 
   297   000F66                     UFRML           equ	3942	;# 
   298   000F67                     UFRMH           equ	3943	;# 
   299   000F68                     UIR             equ	3944	;# 
   300   000F69                     UIE             equ	3945	;# 
   301   000F6A                     UEIR            equ	3946	;# 
   302   000F6B                     UEIE            equ	3947	;# 
   303   000F6C                     USTAT           equ	3948	;# 
   304   000F6D                     UCON            equ	3949	;# 
   305   000F6E                     UADDR           equ	3950	;# 
   306   000F6F                     UCFG            equ	3951	;# 
   307   000F70                     UEP0            equ	3952	;# 
   308   000F71                     UEP1            equ	3953	;# 
   309   000F72                     UEP2            equ	3954	;# 
   310   000F73                     UEP3            equ	3955	;# 
   311   000F74                     UEP4            equ	3956	;# 
   312   000F75                     UEP5            equ	3957	;# 
   313   000F76                     UEP6            equ	3958	;# 
   314   000F77                     UEP7            equ	3959	;# 
   315   000F78                     UEP8            equ	3960	;# 
   316   000F79                     UEP9            equ	3961	;# 
   317   000F7A                     UEP10           equ	3962	;# 
   318   000F7B                     UEP11           equ	3963	;# 
   319   000F7C                     UEP12           equ	3964	;# 
   320   000F7D                     UEP13           equ	3965	;# 
   321   000F7E                     UEP14           equ	3966	;# 
   322   000F7F                     UEP15           equ	3967	;# 
   323   000F80                     PORTA           equ	3968	;# 
   324   000F81                     PORTB           equ	3969	;# 
   325   000F82                     PORTC           equ	3970	;# 
   326   000F83                     PORTD           equ	3971	;# 
   327   000F84                     PORTE           equ	3972	;# 
   328   000F89                     LATA            equ	3977	;# 
   329   000F8A                     LATB            equ	3978	;# 
   330   000F8B                     LATC            equ	3979	;# 
   331   000F8C                     LATD            equ	3980	;# 
   332   000F8D                     LATE            equ	3981	;# 
   333   000F92                     TRISA           equ	3986	;# 
   334   000F92                     DDRA            equ	3986	;# 
   335   000F93                     TRISB           equ	3987	;# 
   336   000F93                     DDRB            equ	3987	;# 
   337   000F94                     TRISC           equ	3988	;# 
   338   000F94                     DDRC            equ	3988	;# 
   339   000F95                     TRISD           equ	3989	;# 
   340   000F95                     DDRD            equ	3989	;# 
   341   000F96                     TRISE           equ	3990	;# 
   342   000F96                     DDRE            equ	3990	;# 
   343   000F9B                     OSCTUNE         equ	3995	;# 
   344   000F9D                     PIE1            equ	3997	;# 
   345   000F9E                     PIR1            equ	3998	;# 
   346   000F9F                     IPR1            equ	3999	;# 
   347   000FA0                     PIE2            equ	4000	;# 
   348   000FA1                     PIR2            equ	4001	;# 
   349   000FA2                     IPR2            equ	4002	;# 
   350   000FA6                     EECON1          equ	4006	;# 
   351   000FA7                     EECON2          equ	4007	;# 
   352   000FA8                     EEDATA          equ	4008	;# 
   353   000FA9                     EEADR           equ	4009	;# 
   354   000FAB                     RCSTA           equ	4011	;# 
   355   000FAB                     RCSTA1          equ	4011	;# 
   356   000FAC                     TXSTA           equ	4012	;# 
   357   000FAC                     TXSTA1          equ	4012	;# 
   358   000FAD                     TXREG           equ	4013	;# 
   359   000FAD                     TXREG1          equ	4013	;# 
   360   000FAE                     RCREG           equ	4014	;# 
   361   000FAE                     RCREG1          equ	4014	;# 
   362   000FAF                     SPBRG           equ	4015	;# 
   363   000FAF                     SPBRG1          equ	4015	;# 
   364   000FB0                     SPBRGH          equ	4016	;# 
   365   000FB1                     T3CON           equ	4017	;# 
   366   000FB2                     TMR3            equ	4018	;# 
   367   000FB2                     TMR3L           equ	4018	;# 
   368   000FB3                     TMR3H           equ	4019	;# 
   369   000FB4                     CMCON           equ	4020	;# 
   370   000FB5                     CVRCON          equ	4021	;# 
   371   000FB6                     ECCP1AS         equ	4022	;# 
   372   000FB6                     CCP1AS          equ	4022	;# 
   373   000FB7                     ECCP1DEL        equ	4023	;# 
   374   000FB7                     CCP1DEL         equ	4023	;# 
   375   000FB8                     BAUDCON         equ	4024	;# 
   376   000FB8                     BAUDCTL         equ	4024	;# 
   377   000FBA                     CCP2CON         equ	4026	;# 
   378   000FBB                     CCPR2           equ	4027	;# 
   379   000FBB                     CCPR2L          equ	4027	;# 
   380   000FBC                     CCPR2H          equ	4028	;# 
   381   000FBD                     CCP1CON         equ	4029	;# 
   382   000FBD                     ECCP1CON        equ	4029	;# 
   383   000FBE                     CCPR1           equ	4030	;# 
   384   000FBE                     CCPR1L          equ	4030	;# 
   385   000FBF                     CCPR1H          equ	4031	;# 
   386   000FC0                     ADCON2          equ	4032	;# 
   387   000FC1                     ADCON1          equ	4033	;# 
   388   000FC2                     ADCON0          equ	4034	;# 
   389   000FC3                     ADRES           equ	4035	;# 
   390   000FC3                     ADRESL          equ	4035	;# 
   391   000FC4                     ADRESH          equ	4036	;# 
   392   000FC5                     SSPCON2         equ	4037	;# 
   393   000FC6                     SSPCON1         equ	4038	;# 
   394   000FC7                     SSPSTAT         equ	4039	;# 
   395   000FC8                     SSPADD          equ	4040	;# 
   396   000FC9                     SSPBUF          equ	4041	;# 
   397   000FCA                     T2CON           equ	4042	;# 
   398   000FCB                     PR2             equ	4043	;# 
   399   000FCB                     MEMCON          equ	4043	;# 
   400   000FCC                     TMR2            equ	4044	;# 
   401   000FCD                     T1CON           equ	4045	;# 
   402   000FCE                     TMR1            equ	4046	;# 
   403   000FCE                     TMR1L           equ	4046	;# 
   404   000FCF                     TMR1H           equ	4047	;# 
   405   000FD0                     RCON            equ	4048	;# 
   406   000FD1                     WDTCON          equ	4049	;# 
   407   000FD2                     HLVDCON         equ	4050	;# 
   408   000FD2                     LVDCON          equ	4050	;# 
   409   000FD3                     OSCCON          equ	4051	;# 
   410   000FD5                     T0CON           equ	4053	;# 
   411   000FD6                     TMR0            equ	4054	;# 
   412   000FD6                     TMR0L           equ	4054	;# 
   413   000FD7                     TMR0H           equ	4055	;# 
   414   000FD8                     STATUS          equ	4056	;# 
   415   000FD9                     FSR2            equ	4057	;# 
   416   000FD9                     FSR2L           equ	4057	;# 
   417   000FDA                     FSR2H           equ	4058	;# 
   418   000FDB                     PLUSW2          equ	4059	;# 
   419   000FDC                     PREINC2         equ	4060	;# 
   420   000FDD                     POSTDEC2        equ	4061	;# 
   421   000FDE                     POSTINC2        equ	4062	;# 
   422   000FDF                     INDF2           equ	4063	;# 
   423   000FE0                     BSR             equ	4064	;# 
   424   000FE1                     FSR1            equ	4065	;# 
   425   000FE1                     FSR1L           equ	4065	;# 
   426   000FE2                     FSR1H           equ	4066	;# 
   427   000FE3                     PLUSW1          equ	4067	;# 
   428   000FE4                     PREINC1         equ	4068	;# 
   429   000FE5                     POSTDEC1        equ	4069	;# 
   430   000FE6                     POSTINC1        equ	4070	;# 
   431   000FE7                     INDF1           equ	4071	;# 
   432   000FE8                     WREG            equ	4072	;# 
   433   000FE9                     FSR0            equ	4073	;# 
   434   000FE9                     FSR0L           equ	4073	;# 
   435   000FEA                     FSR0H           equ	4074	;# 
   436   000FEB                     PLUSW0          equ	4075	;# 
   437   000FEC                     PREINC0         equ	4076	;# 
   438   000FED                     POSTDEC0        equ	4077	;# 
   439   000FEE                     POSTINC0        equ	4078	;# 
   440   000FEF                     INDF0           equ	4079	;# 
   441   000FF0                     INTCON3         equ	4080	;# 
   442   000FF1                     INTCON2         equ	4081	;# 
   443   000FF2                     INTCON          equ	4082	;# 
   444   000FF3                     PROD            equ	4083	;# 
   445   000FF3                     PRODL           equ	4083	;# 
   446   000FF4                     PRODH           equ	4084	;# 
   447   000FF5                     TABLAT          equ	4085	;# 
   448   000FF6                     TBLPTR          equ	4086	;# 
   449   000FF6                     TBLPTRL         equ	4086	;# 
   450   000FF7                     TBLPTRH         equ	4087	;# 
   451   000FF8                     TBLPTRU         equ	4088	;# 
   452   000FF9                     PCLAT           equ	4089	;# 
   453   000FF9                     PC              equ	4089	;# 
   454   000FF9                     PCL             equ	4089	;# 
   455   000FFA                     PCLATH          equ	4090	;# 
   456   000FFB                     PCLATU          equ	4091	;# 
   457   000FFC                     STKPTR          equ	4092	;# 
   458   000FFD                     TOS             equ	4093	;# 
   459   000FFD                     TOSL            equ	4093	;# 
   460   000FFE                     TOSH            equ	4094	;# 
   461   000FFF                     TOSU            equ	4095	;# 
   462   000F62                     SPPDATA         equ	3938	;# 
   463   000F63                     SPPCFG          equ	3939	;# 
   464   000F64                     SPPEPS          equ	3940	;# 
   465   000F65                     SPPCON          equ	3941	;# 
   466   000F66                     UFRM            equ	3942	;# 
   467   000F66                     UFRML           equ	3942	;# 
   468   000F67                     UFRMH           equ	3943	;# 
   469   000F68                     UIR             equ	3944	;# 
   470   000F69                     UIE             equ	3945	;# 
   471   000F6A                     UEIR            equ	3946	;# 
   472   000F6B                     UEIE            equ	3947	;# 
   473   000F6C                     USTAT           equ	3948	;# 
   474   000F6D                     UCON            equ	3949	;# 
   475   000F6E                     UADDR           equ	3950	;# 
   476   000F6F                     UCFG            equ	3951	;# 
   477   000F70                     UEP0            equ	3952	;# 
   478   000F71                     UEP1            equ	3953	;# 
   479   000F72                     UEP2            equ	3954	;# 
   480   000F73                     UEP3            equ	3955	;# 
   481   000F74                     UEP4            equ	3956	;# 
   482   000F75                     UEP5            equ	3957	;# 
   483   000F76                     UEP6            equ	3958	;# 
   484   000F77                     UEP7            equ	3959	;# 
   485   000F78                     UEP8            equ	3960	;# 
   486   000F79                     UEP9            equ	3961	;# 
   487   000F7A                     UEP10           equ	3962	;# 
   488   000F7B                     UEP11           equ	3963	;# 
   489   000F7C                     UEP12           equ	3964	;# 
   490   000F7D                     UEP13           equ	3965	;# 
   491   000F7E                     UEP14           equ	3966	;# 
   492   000F7F                     UEP15           equ	3967	;# 
   493   000F80                     PORTA           equ	3968	;# 
   494   000F81                     PORTB           equ	3969	;# 
   495   000F82                     PORTC           equ	3970	;# 
   496   000F83                     PORTD           equ	3971	;# 
   497   000F84                     PORTE           equ	3972	;# 
   498   000F89                     LATA            equ	3977	;# 
   499   000F8A                     LATB            equ	3978	;# 
   500   000F8B                     LATC            equ	3979	;# 
   501   000F8C                     LATD            equ	3980	;# 
   502   000F8D                     LATE            equ	3981	;# 
   503   000F92                     TRISA           equ	3986	;# 
   504   000F92                     DDRA            equ	3986	;# 
   505   000F93                     TRISB           equ	3987	;# 
   506   000F93                     DDRB            equ	3987	;# 
   507   000F94                     TRISC           equ	3988	;# 
   508   000F94                     DDRC            equ	3988	;# 
   509   000F95                     TRISD           equ	3989	;# 
   510   000F95                     DDRD            equ	3989	;# 
   511   000F96                     TRISE           equ	3990	;# 
   512   000F96                     DDRE            equ	3990	;# 
   513   000F9B                     OSCTUNE         equ	3995	;# 
   514   000F9D                     PIE1            equ	3997	;# 
   515   000F9E                     PIR1            equ	3998	;# 
   516   000F9F                     IPR1            equ	3999	;# 
   517   000FA0                     PIE2            equ	4000	;# 
   518   000FA1                     PIR2            equ	4001	;# 
   519   000FA2                     IPR2            equ	4002	;# 
   520   000FA6                     EECON1          equ	4006	;# 
   521   000FA7                     EECON2          equ	4007	;# 
   522   000FA8                     EEDATA          equ	4008	;# 
   523   000FA9                     EEADR           equ	4009	;# 
   524   000FAB                     RCSTA           equ	4011	;# 
   525   000FAB                     RCSTA1          equ	4011	;# 
   526   000FAC                     TXSTA           equ	4012	;# 
   527   000FAC                     TXSTA1          equ	4012	;# 
   528   000FAD                     TXREG           equ	4013	;# 
   529   000FAD                     TXREG1          equ	4013	;# 
   530   000FAE                     RCREG           equ	4014	;# 
   531   000FAE                     RCREG1          equ	4014	;# 
   532   000FAF                     SPBRG           equ	4015	;# 
   533   000FAF                     SPBRG1          equ	4015	;# 
   534   000FB0                     SPBRGH          equ	4016	;# 
   535   000FB1                     T3CON           equ	4017	;# 
   536   000FB2                     TMR3            equ	4018	;# 
   537   000FB2                     TMR3L           equ	4018	;# 
   538   000FB3                     TMR3H           equ	4019	;# 
   539   000FB4                     CMCON           equ	4020	;# 
   540   000FB5                     CVRCON          equ	4021	;# 
   541   000FB6                     ECCP1AS         equ	4022	;# 
   542   000FB6                     CCP1AS          equ	4022	;# 
   543   000FB7                     ECCP1DEL        equ	4023	;# 
   544   000FB7                     CCP1DEL         equ	4023	;# 
   545   000FB8                     BAUDCON         equ	4024	;# 
   546   000FB8                     BAUDCTL         equ	4024	;# 
   547   000FBA                     CCP2CON         equ	4026	;# 
   548   000FBB                     CCPR2           equ	4027	;# 
   549   000FBB                     CCPR2L          equ	4027	;# 
   550   000FBC                     CCPR2H          equ	4028	;# 
   551   000FBD                     CCP1CON         equ	4029	;# 
   552   000FBD                     ECCP1CON        equ	4029	;# 
   553   000FBE                     CCPR1           equ	4030	;# 
   554   000FBE                     CCPR1L          equ	4030	;# 
   555   000FBF                     CCPR1H          equ	4031	;# 
   556   000FC0                     ADCON2          equ	4032	;# 
   557   000FC1                     ADCON1          equ	4033	;# 
   558   000FC2                     ADCON0          equ	4034	;# 
   559   000FC3                     ADRES           equ	4035	;# 
   560   000FC3                     ADRESL          equ	4035	;# 
   561   000FC4                     ADRESH          equ	4036	;# 
   562   000FC5                     SSPCON2         equ	4037	;# 
   563   000FC6                     SSPCON1         equ	4038	;# 
   564   000FC7                     SSPSTAT         equ	4039	;# 
   565   000FC8                     SSPADD          equ	4040	;# 
   566   000FC9                     SSPBUF          equ	4041	;# 
   567   000FCA                     T2CON           equ	4042	;# 
   568   000FCB                     PR2             equ	4043	;# 
   569   000FCB                     MEMCON          equ	4043	;# 
   570   000FCC                     TMR2            equ	4044	;# 
   571   000FCD                     T1CON           equ	4045	;# 
   572   000FCE                     TMR1            equ	4046	;# 
   573   000FCE                     TMR1L           equ	4046	;# 
   574   000FCF                     TMR1H           equ	4047	;# 
   575   000FD0                     RCON            equ	4048	;# 
   576   000FD1                     WDTCON          equ	4049	;# 
   577   000FD2                     HLVDCON         equ	4050	;# 
   578   000FD2                     LVDCON          equ	4050	;# 
   579   000FD3                     OSCCON          equ	4051	;# 
   580   000FD5                     T0CON           equ	4053	;# 
   581   000FD6                     TMR0            equ	4054	;# 
   582   000FD6                     TMR0L           equ	4054	;# 
   583   000FD7                     TMR0H           equ	4055	;# 
   584   000FD8                     STATUS          equ	4056	;# 
   585   000FD9                     FSR2            equ	4057	;# 
   586   000FD9                     FSR2L           equ	4057	;# 
   587   000FDA                     FSR2H           equ	4058	;# 
   588   000FDB                     PLUSW2          equ	4059	;# 
   589   000FDC                     PREINC2         equ	4060	;# 
   590   000FDD                     POSTDEC2        equ	4061	;# 
   591   000FDE                     POSTINC2        equ	4062	;# 
   592   000FDF                     INDF2           equ	4063	;# 
   593   000FE0                     BSR             equ	4064	;# 
   594   000FE1                     FSR1            equ	4065	;# 
   595   000FE1                     FSR1L           equ	4065	;# 
   596   000FE2                     FSR1H           equ	4066	;# 
   597   000FE3                     PLUSW1          equ	4067	;# 
   598   000FE4                     PREINC1         equ	4068	;# 
   599   000FE5                     POSTDEC1        equ	4069	;# 
   600   000FE6                     POSTINC1        equ	4070	;# 
   601   000FE7                     INDF1           equ	4071	;# 
   602   000FE8                     WREG            equ	4072	;# 
   603   000FE9                     FSR0            equ	4073	;# 
   604   000FE9                     FSR0L           equ	4073	;# 
   605   000FEA                     FSR0H           equ	4074	;# 
   606   000FEB                     PLUSW0          equ	4075	;# 
   607   000FEC                     PREINC0         equ	4076	;# 
   608   000FED                     POSTDEC0        equ	4077	;# 
   609   000FEE                     POSTINC0        equ	4078	;# 
   610   000FEF                     INDF0           equ	4079	;# 
   611   000FF0                     INTCON3         equ	4080	;# 
   612   000FF1                     INTCON2         equ	4081	;# 
   613   000FF2                     INTCON          equ	4082	;# 
   614   000FF3                     PROD            equ	4083	;# 
   615   000FF3                     PRODL           equ	4083	;# 
   616   000FF4                     PRODH           equ	4084	;# 
   617   000FF5                     TABLAT          equ	4085	;# 
   618   000FF6                     TBLPTR          equ	4086	;# 
   619   000FF6                     TBLPTRL         equ	4086	;# 
   620   000FF7                     TBLPTRH         equ	4087	;# 
   621   000FF8                     TBLPTRU         equ	4088	;# 
   622   000FF9                     PCLAT           equ	4089	;# 
   623   000FF9                     PC              equ	4089	;# 
   624   000FF9                     PCL             equ	4089	;# 
   625   000FFA                     PCLATH          equ	4090	;# 
   626   000FFB                     PCLATU          equ	4091	;# 
   627   000FFC                     STKPTR          equ	4092	;# 
   628   000FFD                     TOS             equ	4093	;# 
   629   000FFD                     TOSL            equ	4093	;# 
   630   000FFE                     TOSH            equ	4094	;# 
   631   000FFF                     TOSU            equ	4095	;# 
   632   000F62                     SPPDATA         equ	3938	;# 
   633   000F63                     SPPCFG          equ	3939	;# 
   634   000F64                     SPPEPS          equ	3940	;# 
   635   000F65                     SPPCON          equ	3941	;# 
   636   000F66                     UFRM            equ	3942	;# 
   637   000F66                     UFRML           equ	3942	;# 
   638   000F67                     UFRMH           equ	3943	;# 
   639   000F68                     UIR             equ	3944	;# 
   640   000F69                     UIE             equ	3945	;# 
   641   000F6A                     UEIR            equ	3946	;# 
   642   000F6B                     UEIE            equ	3947	;# 
   643   000F6C                     USTAT           equ	3948	;# 
   644   000F6D                     UCON            equ	3949	;# 
   645   000F6E                     UADDR           equ	3950	;# 
   646   000F6F                     UCFG            equ	3951	;# 
   647   000F70                     UEP0            equ	3952	;# 
   648   000F71                     UEP1            equ	3953	;# 
   649   000F72                     UEP2            equ	3954	;# 
   650   000F73                     UEP3            equ	3955	;# 
   651   000F74                     UEP4            equ	3956	;# 
   652   000F75                     UEP5            equ	3957	;# 
   653   000F76                     UEP6            equ	3958	;# 
   654   000F77                     UEP7            equ	3959	;# 
   655   000F78                     UEP8            equ	3960	;# 
   656   000F79                     UEP9            equ	3961	;# 
   657   000F7A                     UEP10           equ	3962	;# 
   658   000F7B                     UEP11           equ	3963	;# 
   659   000F7C                     UEP12           equ	3964	;# 
   660   000F7D                     UEP13           equ	3965	;# 
   661   000F7E                     UEP14           equ	3966	;# 
   662   000F7F                     UEP15           equ	3967	;# 
   663   000F80                     PORTA           equ	3968	;# 
   664   000F81                     PORTB           equ	3969	;# 
   665   000F82                     PORTC           equ	3970	;# 
   666   000F83                     PORTD           equ	3971	;# 
   667   000F84                     PORTE           equ	3972	;# 
   668   000F89                     LATA            equ	3977	;# 
   669   000F8A                     LATB            equ	3978	;# 
   670   000F8B                     LATC            equ	3979	;# 
   671   000F8C                     LATD            equ	3980	;# 
   672   000F8D                     LATE            equ	3981	;# 
   673   000F92                     TRISA           equ	3986	;# 
   674   000F92                     DDRA            equ	3986	;# 
   675   000F93                     TRISB           equ	3987	;# 
   676   000F93                     DDRB            equ	3987	;# 
   677   000F94                     TRISC           equ	3988	;# 
   678   000F94                     DDRC            equ	3988	;# 
   679   000F95                     TRISD           equ	3989	;# 
   680   000F95                     DDRD            equ	3989	;# 
   681   000F96                     TRISE           equ	3990	;# 
   682   000F96                     DDRE            equ	3990	;# 
   683   000F9B                     OSCTUNE         equ	3995	;# 
   684   000F9D                     PIE1            equ	3997	;# 
   685   000F9E                     PIR1            equ	3998	;# 
   686   000F9F                     IPR1            equ	3999	;# 
   687   000FA0                     PIE2            equ	4000	;# 
   688   000FA1                     PIR2            equ	4001	;# 
   689   000FA2                     IPR2            equ	4002	;# 
   690   000FA6                     EECON1          equ	4006	;# 
   691   000FA7                     EECON2          equ	4007	;# 
   692   000FA8                     EEDATA          equ	4008	;# 
   693   000FA9                     EEADR           equ	4009	;# 
   694   000FAB                     RCSTA           equ	4011	;# 
   695   000FAB                     RCSTA1          equ	4011	;# 
   696   000FAC                     TXSTA           equ	4012	;# 
   697   000FAC                     TXSTA1          equ	4012	;# 
   698   000FAD                     TXREG           equ	4013	;# 
   699   000FAD                     TXREG1          equ	4013	;# 
   700   000FAE                     RCREG           equ	4014	;# 
   701   000FAE                     RCREG1          equ	4014	;# 
   702   000FAF                     SPBRG           equ	4015	;# 
   703   000FAF                     SPBRG1          equ	4015	;# 
   704   000FB0                     SPBRGH          equ	4016	;# 
   705   000FB1                     T3CON           equ	4017	;# 
   706   000FB2                     TMR3            equ	4018	;# 
   707   000FB2                     TMR3L           equ	4018	;# 
   708   000FB3                     TMR3H           equ	4019	;# 
   709   000FB4                     CMCON           equ	4020	;# 
   710   000FB5                     CVRCON          equ	4021	;# 
   711   000FB6                     ECCP1AS         equ	4022	;# 
   712   000FB6                     CCP1AS          equ	4022	;# 
   713   000FB7                     ECCP1DEL        equ	4023	;# 
   714   000FB7                     CCP1DEL         equ	4023	;# 
   715   000FB8                     BAUDCON         equ	4024	;# 
   716   000FB8                     BAUDCTL         equ	4024	;# 
   717   000FBA                     CCP2CON         equ	4026	;# 
   718   000FBB                     CCPR2           equ	4027	;# 
   719   000FBB                     CCPR2L          equ	4027	;# 
   720   000FBC                     CCPR2H          equ	4028	;# 
   721   000FBD                     CCP1CON         equ	4029	;# 
   722   000FBD                     ECCP1CON        equ	4029	;# 
   723   000FBE                     CCPR1           equ	4030	;# 
   724   000FBE                     CCPR1L          equ	4030	;# 
   725   000FBF                     CCPR1H          equ	4031	;# 
   726   000FC0                     ADCON2          equ	4032	;# 
   727   000FC1                     ADCON1          equ	4033	;# 
   728   000FC2                     ADCON0          equ	4034	;# 
   729   000FC3                     ADRES           equ	4035	;# 
   730   000FC3                     ADRESL          equ	4035	;# 
   731   000FC4                     ADRESH          equ	4036	;# 
   732   000FC5                     SSPCON2         equ	4037	;# 
   733   000FC6                     SSPCON1         equ	4038	;# 
   734   000FC7                     SSPSTAT         equ	4039	;# 
   735   000FC8                     SSPADD          equ	4040	;# 
   736   000FC9                     SSPBUF          equ	4041	;# 
   737   000FCA                     T2CON           equ	4042	;# 
   738   000FCB                     PR2             equ	4043	;# 
   739   000FCB                     MEMCON          equ	4043	;# 
   740   000FCC                     TMR2            equ	4044	;# 
   741   000FCD                     T1CON           equ	4045	;# 
   742   000FCE                     TMR1            equ	4046	;# 
   743   000FCE                     TMR1L           equ	4046	;# 
   744   000FCF                     TMR1H           equ	4047	;# 
   745   000FD0                     RCON            equ	4048	;# 
   746   000FD1                     WDTCON          equ	4049	;# 
   747   000FD2                     HLVDCON         equ	4050	;# 
   748   000FD2                     LVDCON          equ	4050	;# 
   749   000FD3                     OSCCON          equ	4051	;# 
   750   000FD5                     T0CON           equ	4053	;# 
   751   000FD6                     TMR0            equ	4054	;# 
   752   000FD6                     TMR0L           equ	4054	;# 
   753   000FD7                     TMR0H           equ	4055	;# 
   754   000FD8                     STATUS          equ	4056	;# 
   755   000FD9                     FSR2            equ	4057	;# 
   756   000FD9                     FSR2L           equ	4057	;# 
   757   000FDA                     FSR2H           equ	4058	;# 
   758   000FDB                     PLUSW2          equ	4059	;# 
   759   000FDC                     PREINC2         equ	4060	;# 
   760   000FDD                     POSTDEC2        equ	4061	;# 
   761   000FDE                     POSTINC2        equ	4062	;# 
   762   000FDF                     INDF2           equ	4063	;# 
   763   000FE0                     BSR             equ	4064	;# 
   764   000FE1                     FSR1            equ	4065	;# 
   765   000FE1                     FSR1L           equ	4065	;# 
   766   000FE2                     FSR1H           equ	4066	;# 
   767   000FE3                     PLUSW1          equ	4067	;# 
   768   000FE4                     PREINC1         equ	4068	;# 
   769   000FE5                     POSTDEC1        equ	4069	;# 
   770   000FE6                     POSTINC1        equ	4070	;# 
   771   000FE7                     INDF1           equ	4071	;# 
   772   000FE8                     WREG            equ	4072	;# 
   773   000FE9                     FSR0            equ	4073	;# 
   774   000FE9                     FSR0L           equ	4073	;# 
   775   000FEA                     FSR0H           equ	4074	;# 
   776   000FEB                     PLUSW0          equ	4075	;# 
   777   000FEC                     PREINC0         equ	4076	;# 
   778   000FED                     POSTDEC0        equ	4077	;# 
   779   000FEE                     POSTINC0        equ	4078	;# 
   780   000FEF                     INDF0           equ	4079	;# 
   781   000FF0                     INTCON3         equ	4080	;# 
   782   000FF1                     INTCON2         equ	4081	;# 
   783   000FF2                     INTCON          equ	4082	;# 
   784   000FF3                     PROD            equ	4083	;# 
   785   000FF3                     PRODL           equ	4083	;# 
   786   000FF4                     PRODH           equ	4084	;# 
   787   000FF5                     TABLAT          equ	4085	;# 
   788   000FF6                     TBLPTR          equ	4086	;# 
   789   000FF6                     TBLPTRL         equ	4086	;# 
   790   000FF7                     TBLPTRH         equ	4087	;# 
   791   000FF8                     TBLPTRU         equ	4088	;# 
   792   000FF9                     PCLAT           equ	4089	;# 
   793   000FF9                     PC              equ	4089	;# 
   794   000FF9                     PCL             equ	4089	;# 
   795   000FFA                     PCLATH          equ	4090	;# 
   796   000FFB                     PCLATU          equ	4091	;# 
   797   000FFC                     STKPTR          equ	4092	;# 
   798   000FFD                     TOS             equ	4093	;# 
   799   000FFD                     TOSL            equ	4093	;# 
   800   000FFE                     TOSH            equ	4094	;# 
   801   000FFF                     TOSU            equ	4095	;# 
   802   007E2C                     _ACKEN          set	32300
   803   007E2D                     _ACKDT          set	32301
   804   007E2B                     _RCEN           set	32299
   805   007E2E                     _ACKSTAT        set	32302
   806   007E2A                     _PEN            set	32298
   807   007E29                     _RSEN           set	32297
   808   007E28                     _SEN            set	32296
   809   007C99                     _TRISB1         set	31897
   810   007C98                     _TRISB0         set	31896
   811   007C61                     _LATD1          set	31841
   812   007C60                     _LATD0          set	31840
   813   000FC9                     _SSPBUF         set	4041
   814   000FC7                     _SSPSTAT        set	4039
   815   000FC8                     _SSPADD         set	4040
   816   000FC5                     _SSPCON2        set	4037
   817   000FC6                     _SSPCON1        set	4038
   818   000F8C                     _LATD           set	3980
   819   000F95                     _TRISD          set	3989
   820   000FC1                     _ADCON1         set	4033
   821   000FD3                     _OSCCONbits     set	4051
   822                           
   823                           	psect	smallconst
   824   000800                     __psmallconst:
   825                           	callstack 0
   826   000800  00                 	db	0
   827   000801                     STR_2:
   828   000801  46                 	db	70	;'F'
   829   000802  65                 	db	101	;'e'
   830   000803  63                 	db	99	;'c'
   831   000804  68                 	db	104	;'h'
   832   000805  61                 	db	97	;'a'
   833   000806  3A                 	db	58	;':'
   834   000807  25                 	db	37
   835   000808  30                 	db	48	;'0'
   836   000809  32                 	db	50	;'2'
   837   00080A  64                 	db	100	;'d'
   838   00080B  2F                 	db	47
   839   00080C  25                 	db	37
   840   00080D  30                 	db	48	;'0'
   841   00080E  32                 	db	50	;'2'
   842   00080F  64                 	db	100	;'d'
   843   000810  2F                 	db	47
   844   000811  32                 	db	50	;'2'
   845   000812  30                 	db	48	;'0'
   846   000813  25                 	db	37
   847   000814  30                 	db	48	;'0'
   848   000815  32                 	db	50	;'2'
   849   000816  64                 	db	100	;'d'
   850   000817  00                 	db	0
   851   000818                     STR_3:
   852   000818  48                 	db	72	;'H'
   853   000819  6F                 	db	111	;'o'
   854   00081A  72                 	db	114	;'r'
   855   00081B  61                 	db	97	;'a'
   856   00081C  3A                 	db	58	;':'
   857   00081D  20                 	db	32
   858   00081E  25                 	db	37
   859   00081F  30                 	db	48	;'0'
   860   000820  32                 	db	50	;'2'
   861   000821  64                 	db	100	;'d'
   862   000822  3A                 	db	58	;':'
   863   000823  25                 	db	37
   864   000824  30                 	db	48	;'0'
   865   000825  32                 	db	50	;'2'
   866   000826  64                 	db	100	;'d'
   867   000827  3A                 	db	58	;':'
   868   000828  25                 	db	37
   869   000829  30                 	db	48	;'0'
   870   00082A  32                 	db	50	;'2'
   871   00082B  64                 	db	100	;'d'
   872   00082C  00                 	db	0
   873   00082D                     STR_1:
   874   00082D  43                 	db	67	;'C'
   875   00082E  6F                 	db	111	;'o'
   876   00082F  6E                 	db	110	;'n'
   877   000830  66                 	db	102	;'f'
   878   000831  69                 	db	105	;'i'
   879   000832  67                 	db	103	;'g'
   880   000833  75                 	db	117	;'u'
   881   000834  72                 	db	114	;'r'
   882   000835  61                 	db	97	;'a'
   883   000836  6E                 	db	110	;'n'
   884   000837  64                 	db	100	;'d'
   885   000838  6F                 	db	111	;'o'
   886   000839  20                 	db	32
   887   00083A  52                 	db	82	;'R'
   888   00083B  54                 	db	84	;'T'
   889   00083C  43                 	db	67	;'C'
   890   00083D  00                 	db	0
   891   00083E                     STR_4:
   892   00083E  52                 	db	82	;'R'
   893   00083F  54                 	db	84	;'T'
   894   000840  43                 	db	67	;'C'
   895   000841  20                 	db	32
   896   000842  64                 	db	100	;'d'
   897   000843  65                 	db	101	;'e'
   898   000844  74                 	db	116	;'t'
   899   000845  65                 	db	101	;'e'
   900   000846  6E                 	db	110	;'n'
   901   000847  69                 	db	105	;'i'
   902   000848  64                 	db	100	;'d'
   903   000849  6F                 	db	111	;'o'
   904   00084A  00                 	db	0
   905   00084B  00                 	db	0	; dummy byte at the end
   906   000002                     __activetblptr  equ	2
   907                           
   908                           ; #config settings
   909                           
   910                           	psect	cinit
   911   001574                     __pcinit:
   912                           	callstack 0
   913   001574                     start_initialization:
   914                           	callstack 0
   915   001574                     __initialization:
   916                           	callstack 0
   917                           
   918                           ; Clear objects allocated to BANK0 (32 bytes)
   919   001574  EE00  F060         	lfsr	0,__pbssBANK0
   920   001578  0E20               	movlw	32
   921   00157A                     clear_0:
   922   00157A  6AEE               	clrf	postinc0,c
   923   00157C  06E8               	decf	wreg,f,c
   924   00157E  E1FD               	bnz	clear_0
   925                           
   926                           ; Clear objects allocated to COMRAM (5 bytes)
   927   001580  6A5E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   928   001582  6A5D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   929   001584  6A5C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   930   001586  6A5B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   931   001588  6A5A               	clrf	__pbssCOMRAM& (0+255),c
   932   00158A                     end_of_initialization:
   933                           	callstack 0
   934   00158A                     __end_of__initialization:
   935                           	callstack 0
   936   00158A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   937   00158C  6EF8               	movwf	tblptru,c
   938   00158E  0100               	movlb	0
   939   001590  EF84  F005         	goto	_main	;jump to C main() function
   940                           
   941                           	psect	bssCOMRAM
   942   00005A                     __pbssCOMRAM:
   943                           	callstack 0
   944   00005A                     _width:
   945                           	callstack 0
   946   00005A                     	ds	2
   947   00005C                     _prec:
   948                           	callstack 0
   949   00005C                     	ds	2
   950   00005E                     _flags:
   951                           	callstack 0
   952   00005E                     	ds	1
   953                           
   954                           	psect	bssBANK0
   955   000060                     __pbssBANK0:
   956                           	callstack 0
   957   000060                     _dbuf:
   958                           	callstack 0
   959   000060                     	ds	32
   960                           
   961                           	psect	cstackCOMRAM
   962   000001                     __pcstackCOMRAM:
   963                           	callstack 0
   964   000001                     ?___awdiv:
   965                           	callstack 0
   966   000001                     ?___awmod:
   967                           	callstack 0
   968   000001                     ?_read_prec_or_width:
   969                           	callstack 0
   970   000001                     ?___lldiv:
   971                           	callstack 0
   972   000001                     read_prec_or_width@fmt:
   973                           	callstack 0
   974   000001                     ___awdiv@dividend:
   975                           	callstack 0
   976   000001                     ___awmod@dividend:
   977                           	callstack 0
   978   000001                     fputc@c:
   979                           	callstack 0
   980   000001                     ___lldiv@dividend:
   981                           	callstack 0
   982   000001                     ??_LCD_Command:
   983   000001                     ??_LCD_Char:
   984   000001                     ??_BCD2DEC:
   985   000001                     ??_I2C_Master_Wait:
   986                           
   987                           ; 1 bytes @ 0x0
   988   000001                     	ds	1
   989   000002                     ?_I2C_Master_Read:
   990                           	callstack 0
   991   000002                     LCD_Command@cmd:
   992                           	callstack 0
   993   000002                     LCD_Char@dat:
   994                           	callstack 0
   995   000002                     BCD2DEC@val:
   996                           	callstack 0
   997   000002                     read_prec_or_width@ap:
   998                           	callstack 0
   999   000002                     I2C_Master_Read@a:
  1000                           	callstack 0
  1001   000002                     
  1002                           ; 1 bytes @ 0x1
  1003   000002                     	ds	1
  1004   000003                     fputc@fp:
  1005                           	callstack 0
  1006   000003                     LCD_String@msg:
  1007                           	callstack 0
  1008   000003                     ___awdiv@divisor:
  1009                           	callstack 0
  1010   000003                     ___awmod@divisor:
  1011                           	callstack 0
  1012   000003                     ??_LCD_Init:
  1013   000003                     ??_LCD_Clear:
  1014   000003                     ??_read_prec_or_width:
  1015                           
  1016                           ; 1 bytes @ 0x2
  1017   000003                     	ds	1
  1018   000004                     I2C_Master_Read@temp:
  1019                           	callstack 0
  1020   000004                     ??_fputc:
  1021                           
  1022                           ; 1 bytes @ 0x3
  1023   000004                     	ds	1
  1024   000005                     LCD_String_xy@pos:
  1025                           	callstack 0
  1026   000005                     ___awdiv@counter:
  1027                           	callstack 0
  1028   000005                     ___awmod@counter:
  1029                           	callstack 0
  1030   000005                     read_prec_or_width@c:
  1031                           	callstack 0
  1032   000005                     ___lldiv@divisor:
  1033                           	callstack 0
  1034   000005                     
  1035                           ; 1 bytes @ 0x4
  1036   000005                     	ds	1
  1037   000006                     ___awdiv@sign:
  1038                           	callstack 0
  1039   000006                     ___awmod@sign:
  1040                           	callstack 0
  1041   000006                     LCD_String_xy@msg:
  1042                           	callstack 0
  1043   000006                     read_prec_or_width@n:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x5
  1047   000006                     	ds	1
  1048   000007                     ?_abs:
  1049                           	callstack 0
  1050   000007                     ___awdiv@quotient:
  1051                           	callstack 0
  1052   000007                     abs@a:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x6
  1056   000007                     	ds	1
  1057   000008                     ??_LCD_String_xy:
  1058                           
  1059                           ; 1 bytes @ 0x7
  1060   000008                     	ds	1
  1061   000009                     fputs@s:
  1062                           	callstack 0
  1063   000009                     ___lldiv@quotient:
  1064                           	callstack 0
  1065   000009                     ??_abs:
  1066   000009                     ??_DEC2BCD:
  1067   000009                     
  1068                           ; 1 bytes @ 0x8
  1069   000009                     	ds	1
  1070   00000A                     LCD_String_xy@row:
  1071                           	callstack 0
  1072   00000A                     fputs@fp:
  1073                           	callstack 0
  1074                           
  1075                           ; 1 bytes @ 0x9
  1076   00000A                     	ds	1
  1077   00000B                     DEC2BCD@val:
  1078                           	callstack 0
  1079   00000B                     fputs@c:
  1080                           	callstack 0
  1081   00000B                     _LCD_String_xy$161:
  1082                           	callstack 0
  1083   00000B                     
  1084                           ; 1 bytes @ 0xA
  1085   00000B                     	ds	1
  1086   00000C                     I2C_Master_Write@d:
  1087                           	callstack 0
  1088   00000C                     fputs@i:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0xB
  1092   00000C                     	ds	1
  1093   00000D                     LCD_String_xy@location:
  1094                           	callstack 0
  1095   00000D                     ___lldiv@counter:
  1096                           	callstack 0
  1097                           
  1098                           ; 1 bytes @ 0xC
  1099   00000D                     	ds	1
  1100   00000E                     RTC_SetDateTime@m:
  1101                           	callstack 0
  1102   00000E                     RTC_GetDateTime@hour:
  1103                           	callstack 0
  1104   00000E                     pad@fp:
  1105                           	callstack 0
  1106   00000E                     I2C_Master_Init@c:
  1107                           	callstack 0
  1108   00000E                     ??_RTC_Init:
  1109   00000E                     
  1110                           ; 1 bytes @ 0xD
  1111   00000E                     	ds	1
  1112   00000F                     RTC_SetDateTime@s:
  1113                           	callstack 0
  1114   00000F                     RTC_GetDateTime@min:
  1115                           	callstack 0
  1116   00000F                     pad@buf:
  1117                           	callstack 0
  1118                           
  1119                           ; 1 bytes @ 0xE
  1120   00000F                     	ds	1
  1121   000010                     RTC_Init@sec:
  1122                           	callstack 0
  1123   000010                     RTC_SetDateTime@d:
  1124                           	callstack 0
  1125   000010                     RTC_GetDateTime@sec:
  1126                           	callstack 0
  1127   000010                     pad@p:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0xF
  1131   000010                     	ds	1
  1132   000011                     RTC_SetDateTime@mo:
  1133                           	callstack 0
  1134   000011                     RTC_GetDateTime@day:
  1135                           	callstack 0
  1136                           
  1137                           ; 1 bytes @ 0x10
  1138   000011                     	ds	1
  1139   000012                     RTC_SetDateTime@y:
  1140                           	callstack 0
  1141   000012                     RTC_GetDateTime@month:
  1142                           	callstack 0
  1143   000012                     ??_I2C_Master_Init:
  1144   000012                     ??_pad:
  1145                           
  1146                           ; 1 bytes @ 0x11
  1147   000012                     	ds	1
  1148   000013                     RTC_GetDateTime@year:
  1149                           	callstack 0
  1150   000013                     pad@i:
  1151                           	callstack 0
  1152   000013                     ??_RTC_SetDateTime:
  1153                           
  1154                           ; 1 bytes @ 0x12
  1155   000013                     	ds	1
  1156   000014                     RTC_SetDateTime@h:
  1157                           	callstack 0
  1158   000014                     
  1159                           ; 1 bytes @ 0x13
  1160   000014                     	ds	1
  1161   000015                     dtoa@fp:
  1162                           	callstack 0
  1163                           
  1164                           ; 1 bytes @ 0x14
  1165   000015                     	ds	1
  1166   000016                     dtoa@d:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x15
  1170   000016                     	ds	2
  1171   000018                     _dtoa$761:
  1172                           	callstack 0
  1173   000018                     
  1174                           ; 1 bytes @ 0x17
  1175   000018                     	ds	2
  1176   00001A                     dtoa@p:
  1177                           	callstack 0
  1178                           
  1179                           ; 1 bytes @ 0x19
  1180   00001A                     	ds	1
  1181   00001B                     dtoa@w:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x1A
  1185   00001B                     	ds	2
  1186   00001D                     dtoa@s:
  1187                           	callstack 0
  1188                           
  1189                           ; 1 bytes @ 0x1C
  1190   00001D                     	ds	1
  1191   00001E                     dtoa@i:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0x1D
  1195   00001E                     	ds	2
  1196   000020                     vfpfcnvrt@fp:
  1197                           	callstack 0
  1198                           
  1199                           ; 1 bytes @ 0x1F
  1200   000020                     	ds	1
  1201   000021                     vfpfcnvrt@fmt:
  1202                           	callstack 0
  1203                           
  1204                           ; 1 bytes @ 0x20
  1205   000021                     	ds	1
  1206   000022                     vfpfcnvrt@ap:
  1207                           	callstack 0
  1208                           
  1209                           ; 1 bytes @ 0x21
  1210   000022                     	ds	1
  1211   000023                     vfpfcnvrt@convarg:
  1212                           	callstack 0
  1213   000023                     
  1214                           ; 1 bytes @ 0x22
  1215   000023                     	ds	4
  1216   000027                     vfpfcnvrt@done:
  1217                           	callstack 0
  1218                           
  1219                           ; 1 bytes @ 0x26
  1220   000027                     	ds	1
  1221   000028                     vfpfcnvrt@cp:
  1222                           	callstack 0
  1223                           
  1224                           ; 1 bytes @ 0x27
  1225   000028                     	ds	1
  1226   000029                     ?_vfprintf:
  1227                           	callstack 0
  1228   000029                     vfprintf@fp:
  1229                           	callstack 0
  1230                           
  1231                           ; 1 bytes @ 0x28
  1232   000029                     	ds	1
  1233   00002A                     vfprintf@fmt:
  1234                           	callstack 0
  1235                           
  1236                           ; 1 bytes @ 0x29
  1237   00002A                     	ds	1
  1238   00002B                     vfprintf@ap:
  1239                           	callstack 0
  1240                           
  1241                           ; 1 bytes @ 0x2A
  1242   00002B                     	ds	1
  1243   00002C                     vfprintf@cfmt:
  1244                           	callstack 0
  1245   00002C                     
  1246                           ; 1 bytes @ 0x2B
  1247   00002C                     	ds	1
  1248   00002D                     ?_sprintf:
  1249                           	callstack 0
  1250   00002D                     sprintf@s:
  1251                           	callstack 0
  1252                           
  1253                           ; 1 bytes @ 0x2C
  1254   00002D                     	ds	1
  1255   00002E                     sprintf@fmt:
  1256                           	callstack 0
  1257                           
  1258                           ; 1 bytes @ 0x2D
  1259   00002E                     	ds	7
  1260   000035                     sprintf@ap:
  1261                           	callstack 0
  1262   000035                     
  1263                           ; 1 bytes @ 0x34
  1264   000035                     	ds	1
  1265   000036                     sprintf@f:
  1266                           	callstack 0
  1267                           
  1268                           ; 11 bytes @ 0x35
  1269   000036                     	ds	11
  1270   000041                     ??_main:
  1271                           
  1272                           ; 1 bytes @ 0x40
  1273   000041                     	ds	2
  1274   000043                     main@buffer:
  1275                           	callstack 0
  1276                           
  1277                           ; 17 bytes @ 0x42
  1278   000043                     	ds	17
  1279   000054                     main@h:
  1280                           	callstack 0
  1281                           
  1282                           ; 1 bytes @ 0x53
  1283   000054                     	ds	1
  1284   000055                     main@m:
  1285                           	callstack 0
  1286                           
  1287                           ; 1 bytes @ 0x54
  1288   000055                     	ds	1
  1289   000056                     main@s:
  1290                           	callstack 0
  1291                           
  1292                           ; 1 bytes @ 0x55
  1293   000056                     	ds	1
  1294   000057                     main@d:
  1295                           	callstack 0
  1296                           
  1297                           ; 1 bytes @ 0x56
  1298   000057                     	ds	1
  1299   000058                     main@mo:
  1300                           	callstack 0
  1301                           
  1302                           ; 1 bytes @ 0x57
  1303   000058                     	ds	1
  1304   000059                     main@y:
  1305                           	callstack 0
  1306                           
  1307                           ; 1 bytes @ 0x58
  1308   000059                     	ds	1
  1309                           
  1310 ;;
  1311 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1312 ;;
  1313 ;; *************** function _main *****************
  1314 ;; Defined at:
  1315 ;;		line 8 in file "main.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  buffer         17   66[COMRAM] unsigned char [17]
  1320 ;;  y               1   88[COMRAM] unsigned char 
  1321 ;;  mo              1   87[COMRAM] unsigned char 
  1322 ;;  d               1   86[COMRAM] unsigned char 
  1323 ;;  s               1   85[COMRAM] unsigned char 
  1324 ;;  m               1   84[COMRAM] unsigned char 
  1325 ;;  h               1   83[COMRAM] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1335 ;;      Params:         0       0       0       0       0       0       0       0       0
  1336 ;;      Locals:        23       0       0       0       0       0       0       0       0
  1337 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1338 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1339 ;;Total ram usage:       25 bytes
  1340 ;; Hardware stack levels required when called: 8
  1341 ;; This function calls:
  1342 ;;		_I2C_Master_Init
  1343 ;;		_LCD_Clear
  1344 ;;		_LCD_Init
  1345 ;;		_LCD_String_xy
  1346 ;;		_RTC_GetDateTime
  1347 ;;		_RTC_Init
  1348 ;;		_RTC_SetDateTime
  1349 ;;		_sprintf
  1350 ;; This function is called by:
  1351 ;;		Startup code after reset
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text0
  1356   000B08                     __ptext0:
  1357                           	callstack 0
  1358   000B08                     _main:
  1359                           	callstack 23
  1360   000B08                     
  1361                           ;main.c: 9:     unsigned char h, m, s, d, mo, y;;main.c: 10:     char buffer[17];;main.c
      +                          : 12:     OSCCONbits.IRCF = 0b111;
  1362   000B08  0E70               	movlw	112
  1363   000B0A  12D3               	iorwf	211,f,c	;volatile
  1364                           
  1365                           ;main.c: 13:     OSCCONbits.SCS = 0b10;
  1366   000B0C  50D3               	movf	211,w,c	;volatile
  1367   000B0E  0BFC               	andlw	-4
  1368   000B10  0902               	iorlw	2
  1369   000B12  6ED3               	movwf	211,c	;volatile
  1370                           
  1371                           ;main.c: 14:     ADCON1 = 0x0F;
  1372   000B14  0E0F               	movlw	15
  1373   000B16  6EC1               	movwf	193,c	;volatile
  1374   000B18                     
  1375                           ;main.c: 16:     LCD_Init();
  1376   000B18  EC8E  F00A         	call	_LCD_Init	;wreg free
  1377   000B1C                     
  1378                           ;main.c: 17:     LCD_Clear();
  1379   000B1C  ECCA  F00A         	call	_LCD_Clear	;wreg free
  1380   000B20                     
  1381                           ;main.c: 18:     I2C_Master_Init(100000);
  1382   000B20  0EA0               	movlw	160
  1383   000B22  6E0E               	movwf	I2C_Master_Init@c^0,c
  1384   000B24  0E86               	movlw	134
  1385   000B26  6E0F               	movwf	(I2C_Master_Init@c+1)^0,c
  1386   000B28  0E01               	movlw	1
  1387   000B2A  6E10               	movwf	(I2C_Master_Init@c+2)^0,c
  1388   000B2C  0E00               	movlw	0
  1389   000B2E  6E11               	movwf	(I2C_Master_Init@c+3)^0,c
  1390   000B30  EC3E  F009         	call	_I2C_Master_Init	;wreg free
  1391   000B34                     
  1392                           ;main.c: 19:     LCD_String_xy(0, 0, "Configurando RTC");
  1393   000B34  0E00               	movlw	0
  1394   000B36  6E05               	movwf	LCD_String_xy@pos^0,c
  1395   000B38  0E2D               	movlw	low STR_1
  1396   000B3A  6E06               	movwf	LCD_String_xy@msg^0,c
  1397   000B3C  5006               	movf	LCD_String_xy@msg^0,w,c
  1398   000B3E  A4D8               	btfss	status,2,c
  1399   000B40  0E08               	movlw	high __smallconst
  1400   000B42  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  1401   000B44  0E00               	movlw	0
  1402   000B46  ECBE  F009         	call	_LCD_String_xy
  1403   000B4A                     
  1404                           ;main.c: 20:     RTC_Init();
  1405   000B4A  ECCF  F006         	call	_RTC_Init	;wreg free
  1406   000B4E                     
  1407                           ;main.c: 21:     RTC_SetDateTime(10, 50, 0, 5, 5, 25);
  1408   000B4E  0E32               	movlw	50
  1409   000B50  6E0E               	movwf	RTC_SetDateTime@m^0,c
  1410   000B52  0E00               	movlw	0
  1411   000B54  6E0F               	movwf	RTC_SetDateTime@s^0,c
  1412   000B56  0E05               	movlw	5
  1413   000B58  6E10               	movwf	RTC_SetDateTime@d^0,c
  1414   000B5A  0E05               	movlw	5
  1415   000B5C  6E11               	movwf	RTC_SetDateTime@mo^0,c
  1416   000B5E  0E19               	movlw	25
  1417   000B60  6E12               	movwf	RTC_SetDateTime@y^0,c
  1418   000B62  0E0A               	movlw	10
  1419   000B64  EC26  F008         	call	_RTC_SetDateTime
  1420   000B68                     
  1421                           ;main.c: 22:     LCD_Clear();
  1422   000B68  ECCA  F00A         	call	_LCD_Clear	;wreg free
  1423   000B6C                     l1933:
  1424                           
  1425                           ;main.c: 25:         RTC_GetDateTime(&h, &m, &s, &d, &mo, &y);
  1426   000B6C  0E54               	movlw	low main@h
  1427   000B6E  6E0E               	movwf	RTC_GetDateTime@hour^0,c
  1428   000B70  0E55               	movlw	low main@m
  1429   000B72  6E0F               	movwf	RTC_GetDateTime@min^0,c
  1430   000B74  0E56               	movlw	low main@s
  1431   000B76  6E10               	movwf	RTC_GetDateTime@sec^0,c
  1432   000B78  0E57               	movlw	low main@d
  1433   000B7A  6E11               	movwf	RTC_GetDateTime@day^0,c
  1434   000B7C  0E58               	movlw	low main@mo
  1435   000B7E  6E12               	movwf	RTC_GetDateTime@month^0,c
  1436   000B80  0E59               	movlw	low main@y
  1437   000B82  6E13               	movwf	RTC_GetDateTime@year^0,c
  1438   000B84  EC01  F006         	call	_RTC_GetDateTime	;wreg free
  1439   000B88                     
  1440                           ;main.c: 27:         sprintf(buffer, "Fecha:%02d/%02d/20%02d", d, mo, y);
  1441   000B88  0E43               	movlw	low main@buffer
  1442   000B8A  6E2D               	movwf	sprintf@s^0,c
  1443   000B8C  0E01               	movlw	low STR_2
  1444   000B8E  6E2E               	movwf	sprintf@fmt^0,c
  1445   000B90  C057  F02F         	movff	main@d,?_sprintf+2
  1446   000B94  6A30               	clrf	(?_sprintf+3)^0,c
  1447   000B96  C058  F031         	movff	main@mo,?_sprintf+4
  1448   000B9A  6A32               	clrf	(?_sprintf+5)^0,c
  1449   000B9C  C059  F033         	movff	main@y,?_sprintf+6
  1450   000BA0  6A34               	clrf	(?_sprintf+7)^0,c
  1451   000BA2  EC5A  F00A         	call	_sprintf	;wreg free
  1452   000BA6                     
  1453                           ;main.c: 28:         LCD_String_xy(0, 0, buffer);
  1454   000BA6  0E00               	movlw	0
  1455   000BA8  6E05               	movwf	LCD_String_xy@pos^0,c
  1456   000BAA  0E43               	movlw	low main@buffer
  1457   000BAC  6E06               	movwf	LCD_String_xy@msg^0,c
  1458   000BAE  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
  1459   000BB0  0E00               	movlw	0
  1460   000BB2  ECBE  F009         	call	_LCD_String_xy
  1461   000BB6                     
  1462                           ;main.c: 31:         sprintf(buffer, "Hora: %02d:%02d:%02d", h, m, s);
  1463   000BB6  0E43               	movlw	low main@buffer
  1464   000BB8  6E2D               	movwf	sprintf@s^0,c
  1465   000BBA  0E18               	movlw	low STR_3
  1466   000BBC  6E2E               	movwf	sprintf@fmt^0,c
  1467   000BBE  C054  F02F         	movff	main@h,?_sprintf+2
  1468   000BC2  6A30               	clrf	(?_sprintf+3)^0,c
  1469   000BC4  C055  F031         	movff	main@m,?_sprintf+4
  1470   000BC8  6A32               	clrf	(?_sprintf+5)^0,c
  1471   000BCA  C056  F033         	movff	main@s,?_sprintf+6
  1472   000BCE  6A34               	clrf	(?_sprintf+7)^0,c
  1473   000BD0  EC5A  F00A         	call	_sprintf	;wreg free
  1474   000BD4                     
  1475                           ;main.c: 32:         LCD_String_xy(1, 0, buffer);
  1476   000BD4  0E00               	movlw	0
  1477   000BD6  6E05               	movwf	LCD_String_xy@pos^0,c
  1478   000BD8  0E43               	movlw	low main@buffer
  1479   000BDA  6E06               	movwf	LCD_String_xy@msg^0,c
  1480   000BDC  6A07               	clrf	(LCD_String_xy@msg+1)^0,c
  1481   000BDE  0E01               	movlw	1
  1482   000BE0  ECBE  F009         	call	_LCD_String_xy
  1483   000BE4                     
  1484                           ;main.c: 34:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  1485   000BE4  0E0B               	movlw	11
  1486   000BE6  6E42               	movwf	(??_main+1)^0,c
  1487   000BE8  0E26               	movlw	38
  1488   000BEA  6E41               	movwf	??_main^0,c
  1489   000BEC  0E5E               	movlw	94
  1490   000BEE                     u1097:
  1491   000BEE  2EE8               	decfsz	wreg,f,c
  1492   000BF0  D7FE               	bra	u1097
  1493   000BF2  2E41               	decfsz	??_main^0,f,c
  1494   000BF4  D7FC               	bra	u1097
  1495   000BF6  2E42               	decfsz	(??_main+1)^0,f,c
  1496   000BF8  D7FA               	bra	u1097
  1497   000BFA  EFB6  F005         	goto	l1933
  1498   000BFE  EF00  F000         	goto	start
  1499   000C02                     __end_of_main:
  1500                           	callstack 0
  1501                           
  1502 ;; *************** function _sprintf *****************
  1503 ;; Defined at:
  1504 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_sprintf.c"
  1505 ;; Parameters:    Size  Location     Type
  1506 ;;  s               1   44[COMRAM] PTR unsigned char 
  1507 ;;		 -> main@buffer(17), 
  1508 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  1509 ;;		 -> STR_3(21), STR_2(23), 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  f              11   53[COMRAM] struct _IO_FILE
  1512 ;;  ret             2    0        int 
  1513 ;;  ap              1   52[COMRAM] PTR void [1]
  1514 ;;		 -> ?_sprintf(2), 
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  2   44[COMRAM] int 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1524 ;;      Params:         8       0       0       0       0       0       0       0       0
  1525 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1527 ;;      Totals:        20       0       0       0       0       0       0       0       0
  1528 ;;Total ram usage:       20 bytes
  1529 ;; Hardware stack levels used: 1
  1530 ;; Hardware stack levels required when called: 7
  1531 ;; This function calls:
  1532 ;;		_vfprintf
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text1
  1539   0014B4                     __ptext1:
  1540                           	callstack 0
  1541   0014B4                     _sprintf:
  1542                           	callstack 23
  1543   0014B4  0E2F               	movlw	low (?_sprintf+2)
  1544   0014B6  6E35               	movwf	sprintf@ap^0,c
  1545   0014B8  C02D  F036         	movff	sprintf@s,sprintf@f
  1546   0014BC  0E00               	movlw	0
  1547   0014BE  6E39               	movwf	(sprintf@f+3)^0,c
  1548   0014C0  0E00               	movlw	0
  1549   0014C2  6E38               	movwf	(sprintf@f+2)^0,c
  1550   0014C4  0E00               	movlw	0
  1551   0014C6  6E40               	movwf	(sprintf@f+10)^0,c
  1552   0014C8  0E00               	movlw	0
  1553   0014CA  6E3F               	movwf	(sprintf@f+9)^0,c
  1554   0014CC  0E36               	movlw	low sprintf@f
  1555   0014CE  6E29               	movwf	vfprintf@fp^0,c
  1556   0014D0  C02E  F02A         	movff	sprintf@fmt,vfprintf@fmt
  1557   0014D4  0E35               	movlw	low sprintf@ap
  1558   0014D6  6E2B               	movwf	vfprintf@ap^0,c
  1559   0014D8  ECE7  F009         	call	_vfprintf	;wreg free
  1560   0014DC  502D               	movf	sprintf@s^0,w,c
  1561   0014DE  2438               	addwf	(sprintf@f+2)^0,w,c
  1562   0014E0  6ED9               	movwf	fsr2l,c
  1563   0014E2  6ADA               	clrf	fsr2h,c
  1564   0014E4  6ADF               	clrf	indf2,c
  1565   0014E6  0012               	return		;funcret
  1566   0014E8                     __end_of_sprintf:
  1567                           	callstack 0
  1568                           
  1569 ;; *************** function _vfprintf *****************
  1570 ;; Defined at:
  1571 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1572 ;; Parameters:    Size  Location     Type
  1573 ;;  fp              1   40[COMRAM] PTR struct _IO_FILE
  1574 ;;		 -> sprintf@f(11), 
  1575 ;;  fmt             1   41[COMRAM] PTR const unsigned char 
  1576 ;;		 -> STR_3(21), STR_2(23), 
  1577 ;;  ap              1   42[COMRAM] PTR PTR void 
  1578 ;;		 -> sprintf@ap(1), 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;  cfmt            1   43[COMRAM] PTR unsigned char 
  1581 ;;		 -> STR_3(21), STR_2(23), 
  1582 ;; Return value:  Size  Location     Type
  1583 ;;                  2   40[COMRAM] int 
  1584 ;; Registers used:
  1585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1586 ;; Tracked objects:
  1587 ;;		On entry : 0/0
  1588 ;;		On exit  : 0/0
  1589 ;;		Unchanged: 0/0
  1590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1591 ;;      Params:         3       0       0       0       0       0       0       0       0
  1592 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1593 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1594 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1595 ;;Total ram usage:        4 bytes
  1596 ;; Hardware stack levels used: 1
  1597 ;; Hardware stack levels required when called: 6
  1598 ;; This function calls:
  1599 ;;		_vfpfcnvrt
  1600 ;; This function is called by:
  1601 ;;		_sprintf
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text2
  1606   0013CE                     __ptext2:
  1607                           	callstack 0
  1608   0013CE                     _vfprintf:
  1609                           	callstack 23
  1610   0013CE                     
  1611                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1612   0013CE  C02A  F02C         	movff	vfprintf@fmt,vfprintf@cfmt
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1615   0013D2  EFF3  F009         	goto	l1819
  1616   0013D6                     l1817:
  1617                           
  1618                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1619   0013D6  C029  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  1620   0013DA  0E2C               	movlw	low vfprintf@cfmt
  1621   0013DC  6E21               	movwf	vfpfcnvrt@fmt^0,c
  1622   0013DE  C02B  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  1623   0013E2  ECD8  F004         	call	_vfpfcnvrt	;wreg free
  1624   0013E6                     l1819:
  1625                           
  1626                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1627   0013E6  C02C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1628   0013EA                     	if	1	;There is more than 1 active tblptr byte
  1629   0013EA  0E08               	movlw	high __smallconst
  1630   0013EC  6EF7               	movwf	tblptrh,c
  1631   0013EE                     	endif
  1632   0013EE                     	if	0	;tblptru may be non-zero
  1633   0013EE                     	endif
  1634   0013EE                     	if	0	;tblptru may be non-zero
  1635   0013EE                     	endif
  1636   0013EE  0008               	tblrd		*
  1637   0013F0  50F5               	movf	tablat,w,c
  1638   0013F2  0900               	iorlw	0
  1639   0013F4  A4D8               	btfss	status,2,c
  1640   0013F6  EFFF  F009         	goto	u1041
  1641   0013FA  EF01  F00A         	goto	u1040
  1642   0013FE                     u1041:
  1643   0013FE  EFEB  F009         	goto	l1817
  1644   001402                     u1040:
  1645   001402                     
  1646                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1647   001402  0E00               	movlw	0
  1648   001404  6E2A               	movwf	(?_vfprintf+1)^0,c
  1649   001406  0E00               	movlw	0
  1650   001408  6E29               	movwf	?_vfprintf^0,c
  1651   00140A  0012               	return		;funcret
  1652   00140C                     __end_of_vfprintf:
  1653                           	callstack 0
  1654                           
  1655 ;; *************** function _vfpfcnvrt *****************
  1656 ;; Defined at:
  1657 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  1660 ;;		 -> sprintf@f(11), 
  1661 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  1662 ;;		 -> vfprintf@cfmt(1), 
  1663 ;;  ap              1   33[COMRAM] PTR PTR void 
  1664 ;;		 -> sprintf@ap(1), 
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;  convarg         4   34[COMRAM] struct .
  1667 ;;  cp              1   39[COMRAM] PTR unsigned char 
  1668 ;;		 -> STR_3(21), STR_2(23), 
  1669 ;;  done            1   38[COMRAM] _Bool 
  1670 ;;  c               1    0        unsigned char 
  1671 ;; Return value:  Size  Location     Type
  1672 ;;                  1    wreg      void 
  1673 ;; Registers used:
  1674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1675 ;; Tracked objects:
  1676 ;;		On entry : 0/0
  1677 ;;		On exit  : 0/0
  1678 ;;		Unchanged: 0/0
  1679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1680 ;;      Params:         3       0       0       0       0       0       0       0       0
  1681 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1682 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1683 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1684 ;;Total ram usage:        9 bytes
  1685 ;; Hardware stack levels used: 1
  1686 ;; Hardware stack levels required when called: 5
  1687 ;; This function calls:
  1688 ;;		_dtoa
  1689 ;;		_fputc
  1690 ;;		_read_prec_or_width
  1691 ;; This function is called by:
  1692 ;;		_vfprintf
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           	psect	text3
  1697   0009B0                     __ptext3:
  1698                           	callstack 0
  1699   0009B0                     _vfpfcnvrt:
  1700                           	callstack 23
  1701   0009B0                     
  1702                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1703   0009B0  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1704   0009B2  6ED9               	movwf	fsr2l,c
  1705   0009B4  6ADA               	clrf	fsr2h,c
  1706   0009B6  CFDF FFF6          	movff	indf2,tblptrl
  1707   0009BA                     	if	1	;There is more than 1 active tblptr byte
  1708   0009BA  0E08               	movlw	high __smallconst
  1709   0009BC  6EF7               	movwf	tblptrh,c
  1710   0009BE                     	endif
  1711   0009BE                     	if	0	;tblptru may be non-zero
  1712   0009BE                     	endif
  1713   0009BE                     	if	0	;tblptru may be non-zero
  1714   0009BE                     	endif
  1715   0009BE  0008               	tblrd		*
  1716   0009C0  50F5               	movf	tablat,w,c
  1717   0009C2  0A25               	xorlw	37
  1718   0009C4  A4D8               	btfss	status,2,c
  1719   0009C6  EFE7  F004         	goto	u931
  1720   0009CA  EFE9  F004         	goto	u930
  1721   0009CE                     u931:
  1722   0009CE  EF72  F005         	goto	l1745
  1723   0009D2                     u930:
  1724   0009D2                     
  1725                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1726   0009D2  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1727   0009D4  6ED9               	movwf	fsr2l,c
  1728   0009D6  6ADA               	clrf	fsr2h,c
  1729   0009D8  2ADF               	incf	indf2,f,c
  1730   0009DA                     
  1731                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1732   0009DA  0E00               	movlw	0
  1733   0009DC  6E5B               	movwf	(_width+1)^0,c
  1734   0009DE  0E00               	movlw	0
  1735   0009E0  6E5A               	movwf	_width^0,c
  1736   0009E2  C05A  F05E         	movff	_width,_flags
  1737   0009E6                     
  1738                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1739   0009E6  685C               	setf	_prec^0,c
  1740   0009E8  685D               	setf	(_prec+1)^0,c
  1741   0009EA                     
  1742                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1743   0009EA  6A27               	clrf	vfpfcnvrt@done^0,c
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1746   0009EC  EF12  F005         	goto	l1719
  1747   0009F0                     l1709:
  1748                           
  1749                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1750   0009F0  825E               	bsf	_flags^0,1,c
  1751   0009F2                     
  1752                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1753   0009F2  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1754   0009F4  6ED9               	movwf	fsr2l,c
  1755   0009F6  6ADA               	clrf	fsr2h,c
  1756   0009F8  2ADF               	incf	indf2,f,c
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1759   0009FA  EF12  F005         	goto	l1719
  1760   0009FE                     l1713:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1763   0009FE  0E01               	movlw	1
  1764   000A00  6E27               	movwf	vfpfcnvrt@done^0,c
  1765                           
  1766                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1767   000A02  EF12  F005         	goto	l1719
  1768   000A06                     l1717:
  1769   000A06  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1770   000A08  6ED9               	movwf	fsr2l,c
  1771   000A0A  6ADA               	clrf	fsr2h,c
  1772   000A0C  CFDF FFF6          	movff	indf2,tblptrl
  1773   000A10                     	if	1	;There is more than 1 active tblptr byte
  1774   000A10  0E08               	movlw	high __smallconst
  1775   000A12  6EF7               	movwf	tblptrh,c
  1776   000A14                     	endif
  1777   000A14                     	if	0	;tblptru may be non-zero
  1778   000A14                     	endif
  1779   000A14                     	if	0	;tblptru may be non-zero
  1780   000A14                     	endif
  1781   000A14  0008               	tblrd		*
  1782   000A16  50F5               	movf	tablat,w,c
  1783                           
  1784                           ; Switch size 1, requested type "simple"
  1785                           ; Number of cases is 1, Range of values is 48 to 48
  1786                           ; switch strategies available:
  1787                           ; Name         Instructions Cycles
  1788                           ; simple_byte            4     3 (average)
  1789                           ;	Chosen strategy is simple_byte
  1790   000A18  0A30               	xorlw	48	; case 48
  1791   000A1A  B4D8               	btfsc	status,2,c
  1792   000A1C  EFF8  F004         	goto	l1709
  1793   000A20  EFFF  F004         	goto	l1713
  1794   000A24                     l1719:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1797   000A24  5027               	movf	vfpfcnvrt@done^0,w,c
  1798   000A26  B4D8               	btfsc	status,2,c
  1799   000A28  EF18  F005         	goto	u941
  1800   000A2C  EF1A  F005         	goto	u940
  1801   000A30                     u941:
  1802   000A30  EF03  F005         	goto	l1717
  1803   000A34                     u940:
  1804   000A34                     
  1805                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1806   000A34  C021  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1807   000A38  C022  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1808   000A3C  ECD4  F007         	call	_read_prec_or_width	;wreg free
  1809   000A40  C001  F05A         	movff	?_read_prec_or_width,_width
  1810   000A44  C002  F05B         	movff	?_read_prec_or_width+1,_width+1
  1811   000A48                     
  1812                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1813   000A48  BE5B               	btfsc	(_width+1)^0,7,c
  1814   000A4A  EF2B  F005         	goto	u950
  1815   000A4E  EF29  F005         	goto	u951
  1816   000A52                     u951:
  1817   000A52  EF30  F005         	goto	l1727
  1818   000A56                     u950:
  1819   000A56                     
  1820                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1821   000A56  805E               	bsf	_flags^0,0,c
  1822                           
  1823                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1824   000A58  6C5A               	negf	_width^0,c
  1825   000A5A  1E5B               	comf	(_width+1)^0,f,c
  1826   000A5C  B0D8               	btfsc	status,0,c
  1827   000A5E  2A5B               	incf	(_width+1)^0,f,c
  1828   000A60                     l1727:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1831   000A60  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1832   000A62  6ED9               	movwf	fsr2l,c
  1833   000A64  6ADA               	clrf	fsr2h,c
  1834   000A66  50DF               	movf	indf2,w,c
  1835   000A68  6E28               	movwf	vfpfcnvrt@cp^0,c
  1836   000A6A                     
  1837                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1838   000A6A  C028  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1839   000A6E                     	if	1	;There is more than 1 active tblptr byte
  1840   000A6E  0E08               	movlw	high __smallconst
  1841   000A70  6EF7               	movwf	tblptrh,c
  1842   000A72                     	endif
  1843   000A72                     	if	0	;tblptru may be non-zero
  1844   000A72                     	endif
  1845   000A72                     	if	0	;tblptru may be non-zero
  1846   000A72                     	endif
  1847   000A72  0008               	tblrd		*
  1848   000A74  50F5               	movf	tablat,w,c
  1849   000A76  0A64               	xorlw	100
  1850   000A78  B4D8               	btfsc	status,2,c
  1851   000A7A  EF41  F005         	goto	u961
  1852   000A7E  EF43  F005         	goto	u960
  1853   000A82                     u961:
  1854   000A82  EF51  F005         	goto	l1733
  1855   000A86                     u960:
  1856   000A86  C028  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1857   000A8A                     	if	1	;There is more than 1 active tblptr byte
  1858   000A8A  0E08               	movlw	high __smallconst
  1859   000A8C  6EF7               	movwf	tblptrh,c
  1860   000A8E                     	endif
  1861   000A8E                     	if	0	;tblptru may be non-zero
  1862   000A8E                     	endif
  1863   000A8E                     	if	0	;tblptru may be non-zero
  1864   000A8E                     	endif
  1865   000A8E  0008               	tblrd		*
  1866   000A90  50F5               	movf	tablat,w,c
  1867   000A92  0A69               	xorlw	105
  1868   000A94  A4D8               	btfss	status,2,c
  1869   000A96  EF4F  F005         	goto	u971
  1870   000A9A  EF51  F005         	goto	u970
  1871   000A9E                     u971:
  1872   000A9E  EF6C  F005         	goto	l1741
  1873   000AA2                     u970:
  1874   000AA2                     l1733:
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1877   000AA2  5022               	movf	vfpfcnvrt@ap^0,w,c
  1878   000AA4  6ED9               	movwf	fsr2l,c
  1879   000AA6  6ADA               	clrf	fsr2h,c
  1880   000AA8  0E02               	movlw	2
  1881   000AAA  26DF               	addwf	indf2,f,c
  1882   000AAC  5CDF               	subwf	indf2,w,c
  1883   000AAE  6ED9               	movwf	fsr2l,c
  1884   000AB0  6ADA               	clrf	fsr2h,c
  1885   000AB2  CFDE F023          	movff	postinc2,vfpfcnvrt@convarg
  1886   000AB6  CFDE F024          	movff	postinc2,vfpfcnvrt@convarg+1
  1887   000ABA                     
  1888                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1889   000ABA  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1890   000ABC  6ED9               	movwf	fsr2l,c
  1891   000ABE  6ADA               	clrf	fsr2h,c
  1892   000AC0  2828               	incf	vfpfcnvrt@cp^0,w,c
  1893   000AC2  6EDF               	movwf	indf2,c
  1894   000AC4                     
  1895                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1896   000AC4  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  1897   000AC8  C023  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  1898   000ACC  C024  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1899   000AD0  EC26  F004         	call	_dtoa	;wreg free
  1900   000AD4  EF83  F005         	goto	l907
  1901   000AD8                     l1741:
  1902                           
  1903                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1904   000AD8  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1905   000ADA  6ED9               	movwf	fsr2l,c
  1906   000ADC  6ADA               	clrf	fsr2h,c
  1907   000ADE  2ADF               	incf	indf2,f,c
  1908   000AE0  EF83  F005         	goto	l907
  1909   000AE4                     l1745:
  1910                           
  1911                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1912   000AE4  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1913   000AE6  6ED9               	movwf	fsr2l,c
  1914   000AE8  6ADA               	clrf	fsr2h,c
  1915   000AEA  CFDF FFF6          	movff	indf2,tblptrl
  1916   000AEE                     	if	1	;There is more than 1 active tblptr byte
  1917   000AEE  0E08               	movlw	high __smallconst
  1918   000AF0  6EF7               	movwf	tblptrh,c
  1919   000AF2                     	endif
  1920   000AF2                     	if	0	;tblptru may be non-zero
  1921   000AF2                     	endif
  1922   000AF2                     	if	0	;tblptru may be non-zero
  1923   000AF2                     	endif
  1924   000AF2  0008               	tblrd		*
  1925   000AF4  50F5               	movf	tablat,w,c
  1926   000AF6  6E01               	movwf	fputc@c^0,c
  1927   000AF8  6A02               	clrf	(fputc@c+1)^0,c
  1928   000AFA  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1929   000AFE  EC7F  F007         	call	_fputc	;wreg free
  1930   000B02  EF6C  F005         	goto	l1741
  1931   000B06                     l907:
  1932   000B06  0012               	return		;funcret
  1933   000B08                     __end_of_vfpfcnvrt:
  1934                           	callstack 0
  1935                           
  1936 ;; *************** function _read_prec_or_width *****************
  1937 ;; Defined at:
  1938 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  1941 ;;		 -> vfprintf@cfmt(1), 
  1942 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  1943 ;;		 -> sprintf@ap(1), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  c               1    4[COMRAM] unsigned char 
  1946 ;;  n               2    5[COMRAM] int 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  2    0[COMRAM] int 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1956 ;;      Params:         2       0       0       0       0       0       0       0       0
  1957 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1958 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1959 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1960 ;;Total ram usage:        7 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; This function calls:
  1963 ;;		Nothing
  1964 ;; This function is called by:
  1965 ;;		_vfpfcnvrt
  1966 ;; This function uses a non-reentrant model
  1967 ;;
  1968                           
  1969                           	psect	text4
  1970   000FA8                     __ptext4:
  1971                           	callstack 0
  1972   000FA8                     _read_prec_or_width:
  1973                           	callstack 27
  1974   000FA8                     
  1975                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1976   000FA8  0E00               	movlw	0
  1977   000FAA  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  1978   000FAC  0E00               	movlw	0
  1979   000FAE  6E06               	movwf	read_prec_or_width@n^0,c
  1980   000FB0                     
  1981                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1982   000FB0  5001               	movf	read_prec_or_width@fmt^0,w,c
  1983   000FB2  6ED9               	movwf	fsr2l,c
  1984   000FB4  6ADA               	clrf	fsr2h,c
  1985   000FB6  CFDF FFF6          	movff	indf2,tblptrl
  1986   000FBA                     	if	1	;There is more than 1 active tblptr byte
  1987   000FBA  0E08               	movlw	high __smallconst
  1988   000FBC  6EF7               	movwf	tblptrh,c
  1989   000FBE                     	endif
  1990   000FBE                     	if	0	;tblptru may be non-zero
  1991   000FBE                     	endif
  1992   000FBE                     	if	0	;tblptru may be non-zero
  1993   000FBE                     	endif
  1994   000FBE  0008               	tblrd		*
  1995   000FC0  50F5               	movf	tablat,w,c
  1996   000FC2  0A2A               	xorlw	42
  1997   000FC4  A4D8               	btfss	status,2,c
  1998   000FC6  EFE7  F007         	goto	u881
  1999   000FCA  EFE9  F007         	goto	u880
  2000   000FCE                     u881:
  2001   000FCE  EF0E  F008         	goto	l1669
  2002   000FD2                     u880:
  2003   000FD2                     
  2004                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2005   000FD2  5001               	movf	read_prec_or_width@fmt^0,w,c
  2006   000FD4  6ED9               	movwf	fsr2l,c
  2007   000FD6  6ADA               	clrf	fsr2h,c
  2008   000FD8  2ADF               	incf	indf2,f,c
  2009   000FDA                     
  2010                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2011   000FDA  5002               	movf	read_prec_or_width@ap^0,w,c
  2012   000FDC  6ED9               	movwf	fsr2l,c
  2013   000FDE  6ADA               	clrf	fsr2h,c
  2014   000FE0  0E02               	movlw	2
  2015   000FE2  26DF               	addwf	indf2,f,c
  2016   000FE4  5CDF               	subwf	indf2,w,c
  2017   000FE6  6ED9               	movwf	fsr2l,c
  2018   000FE8  6ADA               	clrf	fsr2h,c
  2019   000FEA  CFDE F006          	movff	postinc2,read_prec_or_width@n
  2020   000FEE  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  2021                           
  2022                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2023   000FF2  EF21  F008         	goto	l888
  2024   000FF6                     l1665:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2027   000FF6  0E0A               	movlw	10
  2028   000FF8  0206               	mulwf	read_prec_or_width@n^0,c
  2029   000FFA  CFF3 F003          	movff	prodl,??_read_prec_or_width
  2030   000FFE  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  2031   001002  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  2032   001004  50F3               	movf	prodl,w,c
  2033   001006  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  2034   001008  5005               	movf	read_prec_or_width@c^0,w,c
  2035   00100A  2403               	addwf	??_read_prec_or_width^0,w,c
  2036   00100C  6E06               	movwf	read_prec_or_width@n^0,c
  2037   00100E  0E00               	movlw	0
  2038   001010  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  2039   001012  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  2040   001014                     
  2041                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2042   001014  5001               	movf	read_prec_or_width@fmt^0,w,c
  2043   001016  6ED9               	movwf	fsr2l,c
  2044   001018  6ADA               	clrf	fsr2h,c
  2045   00101A  2ADF               	incf	indf2,f,c
  2046   00101C                     l1669:
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2049   00101C  5001               	movf	read_prec_or_width@fmt^0,w,c
  2050   00101E  6ED9               	movwf	fsr2l,c
  2051   001020  6ADA               	clrf	fsr2h,c
  2052   001022  CFDF FFF6          	movff	indf2,tblptrl
  2053   001026                     	if	1	;There is more than 1 active tblptr byte
  2054   001026  0E08               	movlw	high __smallconst
  2055   001028  6EF7               	movwf	tblptrh,c
  2056   00102A                     	endif
  2057   00102A                     	if	0	;tblptru may be non-zero
  2058   00102A                     	endif
  2059   00102A                     	if	0	;tblptru may be non-zero
  2060   00102A                     	endif
  2061   00102A  0008               	tblrd		*
  2062   00102C  50F5               	movf	tablat,w,c
  2063   00102E  0FD0               	addlw	208
  2064   001030  6E05               	movwf	read_prec_or_width@c^0,c
  2065   001032  0E09               	movlw	9
  2066   001034  6405               	cpfsgt	read_prec_or_width@c^0,c
  2067   001036  EF1F  F008         	goto	u891
  2068   00103A  EF21  F008         	goto	u890
  2069   00103E                     u891:
  2070   00103E  EFFB  F007         	goto	l1665
  2071   001042                     u890:
  2072   001042                     l888:
  2073                           
  2074                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2075   001042  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  2076   001046  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  2077   00104A  0012               	return		;funcret
  2078   00104C                     __end_of_read_prec_or_width:
  2079                           	callstack 0
  2080                           
  2081 ;; *************** function _dtoa *****************
  2082 ;; Defined at:
  2083 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  2086 ;;		 -> sprintf@f(11), 
  2087 ;;  d               2   21[COMRAM] int 
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;  i               2   29[COMRAM] int 
  2090 ;;  w               2   26[COMRAM] int 
  2091 ;;  s               1   28[COMRAM] unsigned char 
  2092 ;;  p               1   25[COMRAM] _Bool 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2102 ;;      Params:         3       0       0       0       0       0       0       0       0
  2103 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2104 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2105 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2106 ;;Total ram usage:       11 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; Hardware stack levels required when called: 4
  2109 ;; This function calls:
  2110 ;;		___awdiv
  2111 ;;		___awmod
  2112 ;;		_abs
  2113 ;;		_pad
  2114 ;; This function is called by:
  2115 ;;		_vfpfcnvrt
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119                           	psect	text5
  2120   00084C                     __ptext5:
  2121                           	callstack 0
  2122   00084C                     _dtoa:
  2123                           	callstack 23
  2124   00084C                     
  2125                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  2126   00084C  0E01               	movlw	1
  2127   00084E  6E1A               	movwf	dtoa@p^0,c
  2128   000850                     
  2129                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  2130   000850  BE17               	btfsc	(dtoa@d+1)^0,7,c
  2131   000852  EF2D  F004         	goto	u781
  2132   000856  EF30  F004         	goto	u780
  2133   00085A                     u781:
  2134   00085A  0E01               	movlw	1
  2135   00085C  EF31  F004         	goto	u790
  2136   000860                     u780:
  2137   000860  0E00               	movlw	0
  2138   000862                     u790:
  2139   000862  6E1D               	movwf	dtoa@s^0,c
  2140   000864                     
  2141                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  2142   000864  C05A  F01B         	movff	_width,dtoa@w
  2143   000868  C05B  F01C         	movff	_width+1,dtoa@w+1
  2144   00086C                     
  2145                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 536:     if (s
  2146   00086C  501D               	movf	dtoa@s^0,w,c
  2147   00086E  B4D8               	btfsc	status,2,c
  2148   000870  EF3C  F004         	goto	u801
  2149   000874  EF3E  F004         	goto	u800
  2150   000878                     u801:
  2151   000878  EF55  F004         	goto	l871
  2152   00087C                     u800:
  2153   00087C                     
  2154                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 541:         --w;
  2155   00087C  061B               	decf	dtoa@w^0,f,c
  2156   00087E  A0D8               	btfss	status,0,c
  2157   000880  061C               	decf	(dtoa@w+1)^0,f,c
  2158   000882                     
  2159                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  2160   000882  501D               	movf	dtoa@s^0,w,c
  2161   000884  A4D8               	btfss	status,2,c
  2162   000886  EF47  F004         	goto	u811
  2163   00088A  EF49  F004         	goto	u810
  2164   00088E                     u811:
  2165   00088E  EF4F  F004         	goto	l1621
  2166   000892                     u810:
  2167   000892  0E00               	movlw	0
  2168   000894  6E19               	movwf	(_dtoa$761+1)^0,c
  2169   000896  0E2B               	movlw	43
  2170   000898  6E18               	movwf	_dtoa$761^0,c
  2171   00089A  EF53  F004         	goto	l1623
  2172   00089E                     l1621:
  2173   00089E  0E00               	movlw	0
  2174   0008A0  6E19               	movwf	(_dtoa$761+1)^0,c
  2175   0008A2  0E2D               	movlw	45
  2176   0008A4  6E18               	movwf	_dtoa$761^0,c
  2177   0008A6                     l1623:
  2178   0008A6  C018  F01D         	movff	_dtoa$761,dtoa@s
  2179   0008AA                     l871:
  2180                           
  2181                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  2182   0008AA  0E00               	movlw	0
  2183   0008AC  6E1F               	movwf	(dtoa@i+1)^0,c
  2184   0008AE  0E1F               	movlw	31
  2185   0008B0  6E1E               	movwf	dtoa@i^0,c
  2186   0008B2                     
  2187                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  2188   0008B2  0100               	movlb	0	; () banked
  2189   0008B4  6B7F               	clrf	(_dbuf+31)& (0+255),b
  2190                           
  2191                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2192   0008B6  EF89  F004         	goto	l1637
  2193   0008BA                     l1627:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 564:         --i;
  2196   0008BA  061E               	decf	dtoa@i^0,f,c
  2197   0008BC  A0D8               	btfss	status,0,c
  2198   0008BE  061F               	decf	(dtoa@i+1)^0,f,c
  2199   0008C0                     
  2200                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  2201   0008C0  501E               	movf	dtoa@i^0,w,c
  2202   0008C2  0F60               	addlw	low _dbuf
  2203   0008C4  6ED9               	movwf	fsr2l,c
  2204   0008C6  6ADA               	clrf	fsr2h,c
  2205   0008C8  C016  F001         	movff	dtoa@d,___awmod@dividend
  2206   0008CC  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  2207   0008D0  0E00               	movlw	0
  2208   0008D2  6E04               	movwf	(___awmod@divisor+1)^0,c
  2209   0008D4  0E0A               	movlw	10
  2210   0008D6  6E03               	movwf	___awmod@divisor^0,c
  2211   0008D8  EC28  F007         	call	___awmod	;wreg free
  2212   0008DC  C001  F007         	movff	?___awmod,abs@a
  2213   0008E0  C002  F008         	movff	?___awmod+1,abs@a+1
  2214   0008E4  EC74  F00A         	call	_abs	;wreg free
  2215   0008E8  5007               	movf	?_abs^0,w,c
  2216   0008EA  0F30               	addlw	48
  2217   0008EC  6EDF               	movwf	indf2,c
  2218   0008EE                     
  2219                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  2220   0008EE  6A1A               	clrf	dtoa@p^0,c
  2221   0008F0                     
  2222                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 571:         --w;
  2223   0008F0  061B               	decf	dtoa@w^0,f,c
  2224   0008F2  A0D8               	btfss	status,0,c
  2225   0008F4  061C               	decf	(dtoa@w+1)^0,f,c
  2226   0008F6                     
  2227                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  2228   0008F6  C016  F001         	movff	dtoa@d,___awdiv@dividend
  2229   0008FA  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  2230   0008FE  0E00               	movlw	0
  2231   000900  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2232   000902  0E0A               	movlw	10
  2233   000904  6E03               	movwf	___awdiv@divisor^0,c
  2234   000906  EC6E  F006         	call	___awdiv	;wreg free
  2235   00090A  C001  F016         	movff	?___awdiv,dtoa@d
  2236   00090E  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  2237   000912                     l1637:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2240   000912  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  2241   000914  EF94  F004         	goto	u821
  2242   000918  501F               	movf	(dtoa@i+1)^0,w,c
  2243   00091A  E108               	bnz	u820
  2244   00091C  041E               	decf	dtoa@i^0,w,c
  2245   00091E  A0D8               	btfss	status,0,c
  2246   000920  EF94  F004         	goto	u821
  2247   000924  EF96  F004         	goto	u820
  2248   000928                     u821:
  2249   000928  EFBB  F004         	goto	l1647
  2250   00092C                     u820:
  2251   00092C  5016               	movf	dtoa@d^0,w,c
  2252   00092E  1017               	iorwf	(dtoa@d+1)^0,w,c
  2253   000930  A4D8               	btfss	status,2,c
  2254   000932  EF9D  F004         	goto	u831
  2255   000936  EF9F  F004         	goto	u830
  2256   00093A                     u831:
  2257   00093A  EF5D  F004         	goto	l1627
  2258   00093E                     u830:
  2259   00093E  501A               	movf	dtoa@p^0,w,c
  2260   000940  A4D8               	btfss	status,2,c
  2261   000942  EFA5  F004         	goto	u841
  2262   000946  EFA7  F004         	goto	u840
  2263   00094A                     u841:
  2264   00094A  EF5D  F004         	goto	l1627
  2265   00094E                     u840:
  2266   00094E  BE1C               	btfsc	(dtoa@w+1)^0,7,c
  2267   000950  EFB2  F004         	goto	u851
  2268   000954  501C               	movf	(dtoa@w+1)^0,w,c
  2269   000956  E108               	bnz	u850
  2270   000958  041B               	decf	dtoa@w^0,w,c
  2271   00095A  A0D8               	btfss	status,0,c
  2272   00095C  EFB2  F004         	goto	u851
  2273   000960  EFB4  F004         	goto	u850
  2274   000964                     u851:
  2275   000964  EFBB  F004         	goto	l1647
  2276   000968                     u850:
  2277   000968  B25E               	btfsc	_flags^0,1,c
  2278   00096A  EFB9  F004         	goto	u861
  2279   00096E  EFBB  F004         	goto	u860
  2280   000972                     u861:
  2281   000972  EF5D  F004         	goto	l1627
  2282   000976                     u860:
  2283   000976                     l1647:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2286   000976  501D               	movf	dtoa@s^0,w,c
  2287   000978  B4D8               	btfsc	status,2,c
  2288   00097A  EFC1  F004         	goto	u871
  2289   00097E  EFC3  F004         	goto	u870
  2290   000982                     u871:
  2291   000982  EFCC  F004         	goto	l1653
  2292   000986                     u870:
  2293   000986                     
  2294                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 577:         --i;
  2295   000986  061E               	decf	dtoa@i^0,f,c
  2296   000988  A0D8               	btfss	status,0,c
  2297   00098A  061F               	decf	(dtoa@i+1)^0,f,c
  2298   00098C                     
  2299                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2300   00098C  501E               	movf	dtoa@i^0,w,c
  2301   00098E  0F60               	addlw	low _dbuf
  2302   000990  6ED9               	movwf	fsr2l,c
  2303   000992  6ADA               	clrf	fsr2h,c
  2304   000994  C01D  FFDF         	movff	dtoa@s,indf2
  2305   000998                     l1653:
  2306                           
  2307                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2308   000998  C015  F00E         	movff	dtoa@fp,pad@fp
  2309   00099C  501E               	movf	dtoa@i^0,w,c
  2310   00099E  0F60               	addlw	low _dbuf
  2311   0009A0  6E0F               	movwf	pad@buf^0,c
  2312   0009A2  C01B  F010         	movff	dtoa@w,pad@p
  2313   0009A6  C01C  F011         	movff	dtoa@w+1,pad@p+1
  2314   0009AA  ECCA  F008         	call	_pad	;wreg free
  2315   0009AE  0012               	return		;funcret
  2316   0009B0                     __end_of_dtoa:
  2317                           	callstack 0
  2318                           
  2319 ;; *************** function _pad *****************
  2320 ;; Defined at:
  2321 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c"
  2322 ;; Parameters:    Size  Location     Type
  2323 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2324 ;;		 -> sprintf@f(11), 
  2325 ;;  buf             1   14[COMRAM] PTR unsigned char 
  2326 ;;		 -> dbuf(32), 
  2327 ;;  p               2   15[COMRAM] int 
  2328 ;; Auto vars:     Size  Location     Type
  2329 ;;  i               2   18[COMRAM] int 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  1    wreg      void 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2339 ;;      Params:         4       0       0       0       0       0       0       0       0
  2340 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2341 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2342 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2343 ;;Total ram usage:        7 bytes
  2344 ;; Hardware stack levels used: 1
  2345 ;; Hardware stack levels required when called: 3
  2346 ;; This function calls:
  2347 ;;		_fputc
  2348 ;;		_fputs
  2349 ;; This function is called by:
  2350 ;;		_dtoa
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text6
  2355   001194                     __ptext6:
  2356                           	callstack 0
  2357   001194                     _pad:
  2358                           	callstack 23
  2359   001194                     
  2360                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2361   001194  A05E               	btfss	_flags^0,0,c
  2362   001196  EFCF  F008         	goto	u731
  2363   00119A  EFD1  F008         	goto	u730
  2364   00119E                     u731:
  2365   00119E  EFD7  F008         	goto	l1571
  2366   0011A2                     u730:
  2367   0011A2                     
  2368                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2369   0011A2  C00F  F009         	movff	pad@buf,fputs@s
  2370   0011A6  C00E  F00A         	movff	pad@fp,fputs@fp
  2371   0011AA  EC06  F00A         	call	_fputs	;wreg free
  2372   0011AE                     l1571:
  2373                           
  2374                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2375   0011AE  BE11               	btfsc	(pad@p+1)^0,7,c
  2376   0011B0  EFDE  F008         	goto	u740
  2377   0011B4  EFDC  F008         	goto	u741
  2378   0011B8                     u741:
  2379   0011B8  EFE2  F008         	goto	l863
  2380   0011BC                     u740:
  2381   0011BC                     
  2382                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2383   0011BC  0E00               	movlw	0
  2384   0011BE  6E11               	movwf	(pad@p+1)^0,c
  2385   0011C0  0E00               	movlw	0
  2386   0011C2  6E10               	movwf	pad@p^0,c
  2387   0011C4                     l863:
  2388                           
  2389                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2390   0011C4  0E00               	movlw	0
  2391   0011C6  6E14               	movwf	(pad@i+1)^0,c
  2392   0011C8  0E00               	movlw	0
  2393   0011CA  6E13               	movwf	pad@i^0,c
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2396   0011CC  EFF2  F008         	goto	l1579
  2397   0011D0                     l1575:
  2398                           
  2399                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2400   0011D0  0E00               	movlw	0
  2401   0011D2  6E02               	movwf	(fputc@c+1)^0,c
  2402   0011D4  0E20               	movlw	32
  2403   0011D6  6E01               	movwf	fputc@c^0,c
  2404   0011D8  C00E  F003         	movff	pad@fp,fputc@fp
  2405   0011DC  EC7F  F007         	call	_fputc	;wreg free
  2406   0011E0                     
  2407                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2408   0011E0  4A13               	infsnz	pad@i^0,f,c
  2409   0011E2  2A14               	incf	(pad@i+1)^0,f,c
  2410   0011E4                     l1579:
  2411                           
  2412                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2413   0011E4  5010               	movf	pad@p^0,w,c
  2414   0011E6  5C13               	subwf	pad@i^0,w,c
  2415   0011E8  5014               	movf	(pad@i+1)^0,w,c
  2416   0011EA  0A80               	xorlw	128
  2417   0011EC  6E12               	movwf	??_pad^0,c
  2418   0011EE  5011               	movf	(pad@p+1)^0,w,c
  2419   0011F0  0A80               	xorlw	128
  2420   0011F2  5812               	subwfb	??_pad^0,w,c
  2421   0011F4  A0D8               	btfss	status,0,c
  2422   0011F6  EFFF  F008         	goto	u751
  2423   0011FA  EF01  F009         	goto	u750
  2424   0011FE                     u751:
  2425   0011FE  EFE8  F008         	goto	l1575
  2426   001202                     u750:
  2427   001202                     
  2428                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2429   001202  B05E               	btfsc	_flags^0,0,c
  2430   001204  EF06  F009         	goto	u761
  2431   001208  EF08  F009         	goto	u760
  2432   00120C                     u761:
  2433   00120C  EF0E  F009         	goto	l868
  2434   001210                     u760:
  2435   001210                     
  2436                           ;C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2437   001210  C00F  F009         	movff	pad@buf,fputs@s
  2438   001214  C00E  F00A         	movff	pad@fp,fputs@fp
  2439   001218  EC06  F00A         	call	_fputs	;wreg free
  2440   00121C                     l868:
  2441   00121C  0012               	return		;funcret
  2442   00121E                     __end_of_pad:
  2443                           	callstack 0
  2444                           
  2445 ;; *************** function _fputs *****************
  2446 ;; Defined at:
  2447 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputs.c"
  2448 ;; Parameters:    Size  Location     Type
  2449 ;;  s               1    8[COMRAM] PTR const unsigned char 
  2450 ;;		 -> dbuf(32), 
  2451 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  2452 ;;		 -> sprintf@f(11), 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  i               2   11[COMRAM] int 
  2455 ;;  c               1   10[COMRAM] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  2    8[COMRAM] int 
  2458 ;; Registers used:
  2459 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2465 ;;      Params:         2       0       0       0       0       0       0       0       0
  2466 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2468 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2469 ;;Total ram usage:        5 bytes
  2470 ;; Hardware stack levels used: 1
  2471 ;; Hardware stack levels required when called: 2
  2472 ;; This function calls:
  2473 ;;		_fputc
  2474 ;; This function is called by:
  2475 ;;		_pad
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text7
  2480   00140C                     __ptext7:
  2481                           	callstack 0
  2482   00140C                     _fputs:
  2483                           	callstack 23
  2484   00140C  0E00               	movlw	0
  2485   00140E  6E0D               	movwf	(fputs@i+1)^0,c
  2486   001410  0E00               	movlw	0
  2487   001412  6E0C               	movwf	fputs@i^0,c
  2488   001414  EF15  F00A         	goto	l1485
  2489   001418                     l1481:
  2490   001418  C00B  F001         	movff	fputs@c,fputc@c
  2491   00141C  6A02               	clrf	(fputc@c+1)^0,c
  2492   00141E  C00A  F003         	movff	fputs@fp,fputc@fp
  2493   001422  EC7F  F007         	call	_fputc	;wreg free
  2494   001426  4A0C               	infsnz	fputs@i^0,f,c
  2495   001428  2A0D               	incf	(fputs@i+1)^0,f,c
  2496   00142A                     l1485:
  2497   00142A  5009               	movf	fputs@s^0,w,c
  2498   00142C  240C               	addwf	fputs@i^0,w,c
  2499   00142E  6ED9               	movwf	fsr2l,c
  2500   001430  6ADA               	clrf	fsr2h,c
  2501   001432  50DF               	movf	indf2,w,c
  2502   001434  6E0B               	movwf	fputs@c^0,c
  2503   001436  500B               	movf	fputs@c^0,w,c
  2504   001438  A4D8               	btfss	status,2,c
  2505   00143A  EF21  F00A         	goto	u601
  2506   00143E  EF23  F00A         	goto	u600
  2507   001442                     u601:
  2508   001442  EF0C  F00A         	goto	l1481
  2509   001446                     u600:
  2510   001446  0012               	return		;funcret
  2511   001448                     __end_of_fputs:
  2512                           	callstack 0
  2513                           
  2514 ;; *************** function _fputc *****************
  2515 ;; Defined at:
  2516 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\nf_fputc.c"
  2517 ;; Parameters:    Size  Location     Type
  2518 ;;  c               2    0[COMRAM] int 
  2519 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2520 ;;		 -> sprintf@f(11), 
  2521 ;; Auto vars:     Size  Location     Type
  2522 ;;		None
  2523 ;; Return value:  Size  Location     Type
  2524 ;;                  2    0[COMRAM] int 
  2525 ;; Registers used:
  2526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2527 ;; Tracked objects:
  2528 ;;		On entry : 0/0
  2529 ;;		On exit  : 0/0
  2530 ;;		Unchanged: 0/0
  2531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2532 ;;      Params:         3       0       0       0       0       0       0       0       0
  2533 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2534 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2535 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2536 ;;Total ram usage:        8 bytes
  2537 ;; Hardware stack levels used: 1
  2538 ;; Hardware stack levels required when called: 1
  2539 ;; This function calls:
  2540 ;;		_putch
  2541 ;; This function is called by:
  2542 ;;		_pad
  2543 ;;		_vfpfcnvrt
  2544 ;;		_fputs
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           	psect	text8
  2549   000EFE                     __ptext8:
  2550                           	callstack 0
  2551   000EFE                     _fputc:
  2552                           	callstack 26
  2553   000EFE  5003               	movf	fputc@fp^0,w,c
  2554   000F00  B4D8               	btfsc	status,2,c
  2555   000F02  EF85  F007         	goto	u561
  2556   000F06  EF87  F007         	goto	u560
  2557   000F0A                     u561:
  2558   000F0A  EF8F  F007         	goto	l1469
  2559   000F0E                     u560:
  2560   000F0E  5003               	movf	fputc@fp^0,w,c
  2561   000F10  A4D8               	btfss	status,2,c
  2562   000F12  EF8D  F007         	goto	u571
  2563   000F16  EF8F  F007         	goto	u570
  2564   000F1A                     u571:
  2565   000F1A  EF94  F007         	goto	l1471
  2566   000F1E                     u570:
  2567   000F1E                     l1469:
  2568   000F1E  5001               	movf	fputc@c^0,w,c
  2569   000F20  ECF4  F00A         	call	_putch
  2570   000F24  EFD3  F007         	goto	l932
  2571   000F28                     l1471:
  2572   000F28  5003               	movf	fputc@fp^0,w,c
  2573   000F2A  6ED9               	movwf	fsr2l,c
  2574   000F2C  6ADA               	clrf	fsr2h,c
  2575   000F2E  0E09               	movlw	9
  2576   000F30  26D9               	addwf	fsr2l,f,c
  2577   000F32  50DE               	movf	postinc2,w,c
  2578   000F34  10DE               	iorwf	postinc2,w,c
  2579   000F36  B4D8               	btfsc	status,2,c
  2580   000F38  EFA0  F007         	goto	u581
  2581   000F3C  EFA2  F007         	goto	u580
  2582   000F40                     u581:
  2583   000F40  EFBB  F007         	goto	l1475
  2584   000F44                     u580:
  2585   000F44  5003               	movf	fputc@fp^0,w,c
  2586   000F46  6ED9               	movwf	fsr2l,c
  2587   000F48  6ADA               	clrf	fsr2h,c
  2588   000F4A  0E09               	movlw	9
  2589   000F4C  26D9               	addwf	fsr2l,f,c
  2590   000F4E  5003               	movf	fputc@fp^0,w,c
  2591   000F50  6EE1               	movwf	fsr1l,c
  2592   000F52  6AE2               	clrf	fsr1h,c
  2593   000F54  0E02               	movlw	2
  2594   000F56  26E1               	addwf	fsr1l,f,c
  2595   000F58  50DE               	movf	postinc2,w,c
  2596   000F5A  5CE6               	subwf	postinc1,w,c
  2597   000F5C  50E6               	movf	postinc1,w,c
  2598   000F5E  0A80               	xorlw	128
  2599   000F60  6E08               	movwf	(??_fputc+4)^0,c
  2600   000F62  50DE               	movf	postinc2,w,c
  2601   000F64  0A80               	xorlw	128
  2602   000F66  5808               	subwfb	(??_fputc+4)^0,w,c
  2603   000F68  B0D8               	btfsc	status,0,c
  2604   000F6A  EFB9  F007         	goto	u591
  2605   000F6E  EFBB  F007         	goto	u590
  2606   000F72                     u591:
  2607   000F72  EFD3  F007         	goto	l932
  2608   000F76                     u590:
  2609   000F76                     l1475:
  2610   000F76  5003               	movf	fputc@fp^0,w,c
  2611   000F78  6ED9               	movwf	fsr2l,c
  2612   000F7A  6ADA               	clrf	fsr2h,c
  2613   000F7C  0E02               	movlw	2
  2614   000F7E  26D9               	addwf	fsr2l,f,c
  2615   000F80  50DF               	movf	indf2,w,c
  2616   000F82  6E04               	movwf	??_fputc^0,c
  2617   000F84  5003               	movf	fputc@fp^0,w,c
  2618   000F86  6ED9               	movwf	fsr2l,c
  2619   000F88  6ADA               	clrf	fsr2h,c
  2620   000F8A  50DF               	movf	indf2,w,c
  2621   000F8C  2404               	addwf	??_fputc^0,w,c
  2622   000F8E  6ED9               	movwf	fsr2l,c
  2623   000F90  6ADA               	clrf	fsr2h,c
  2624   000F92  C001  FFDF         	movff	fputc@c,indf2
  2625   000F96  5003               	movf	fputc@fp^0,w,c
  2626   000F98  6ED9               	movwf	fsr2l,c
  2627   000F9A  6ADA               	clrf	fsr2h,c
  2628   000F9C  0E02               	movlw	2
  2629   000F9E  26D9               	addwf	fsr2l,f,c
  2630   000FA0  2ADE               	incf	postinc2,f,c
  2631   000FA2  0E00               	movlw	0
  2632   000FA4  22DD               	addwfc	postdec2,f,c
  2633   000FA6                     l932:
  2634   000FA6  0012               	return		;funcret
  2635   000FA8                     __end_of_fputc:
  2636                           	callstack 0
  2637                           
  2638 ;; *************** function _putch *****************
  2639 ;; Defined at:
  2640 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\putch.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  c               1    wreg     unsigned char 
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  c               1    0[COMRAM] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2654 ;;      Params:         0       0       0       0       0       0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2657 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; This function calls:
  2661 ;;		Nothing
  2662 ;; This function is called by:
  2663 ;;		_fputc
  2664 ;; This function uses a non-reentrant model
  2665 ;;
  2666                           
  2667                           	psect	text9
  2668   0015E8                     __ptext9:
  2669                           	callstack 0
  2670   0015E8                     _putch:
  2671                           	callstack 26
  2672   0015E8  0012               	return		;funcret
  2673   0015EA                     __end_of_putch:
  2674                           	callstack 0
  2675                           
  2676 ;; *************** function _abs *****************
  2677 ;; Defined at:
  2678 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\abs.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  a               2    6[COMRAM] int 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  2    6[COMRAM] int 
  2685 ;; Registers used:
  2686 ;;		wreg, status,2, status,0
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2692 ;;      Params:         2       0       0       0       0       0       0       0       0
  2693 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2694 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2695 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2696 ;;Total ram usage:        4 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; This function calls:
  2699 ;;		Nothing
  2700 ;; This function is called by:
  2701 ;;		_dtoa
  2702 ;; This function uses a non-reentrant model
  2703 ;;
  2704                           
  2705                           	psect	text10
  2706   0014E8                     __ptext10:
  2707                           	callstack 0
  2708   0014E8                     _abs:
  2709                           	callstack 26
  2710   0014E8  BE08               	btfsc	(abs@a+1)^0,7,c
  2711   0014EA  EF79  F00A         	goto	u771
  2712   0014EE  EF7B  F00A         	goto	u770
  2713   0014F2                     u771:
  2714   0014F2  EF81  F00A         	goto	l917
  2715   0014F6                     u770:
  2716   0014F6  C007  F007         	movff	abs@a,?_abs
  2717   0014FA  C008  F008         	movff	abs@a+1,?_abs+1
  2718   0014FE  EF8D  F00A         	goto	l920
  2719   001502                     l917:
  2720   001502  C007  F009         	movff	abs@a,??_abs
  2721   001506  C008  F00A         	movff	abs@a+1,??_abs+1
  2722   00150A  1E09               	comf	??_abs^0,f,c
  2723   00150C  1E0A               	comf	(??_abs+1)^0,f,c
  2724   00150E  4A09               	infsnz	??_abs^0,f,c
  2725   001510  2A0A               	incf	(??_abs+1)^0,f,c
  2726   001512  C009  F007         	movff	??_abs,?_abs
  2727   001516  C00A  F008         	movff	??_abs+1,?_abs+1
  2728   00151A                     l920:
  2729   00151A  0012               	return		;funcret
  2730   00151C                     __end_of_abs:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function _RTC_SetDateTime *****************
  2734 ;; Defined at:
  2735 ;;		line 39 in file "ds1307.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;  h               1    wreg     unsigned char 
  2738 ;;  m               1   13[COMRAM] unsigned char 
  2739 ;;  s               1   14[COMRAM] unsigned char 
  2740 ;;  d               1   15[COMRAM] unsigned char 
  2741 ;;  mo              1   16[COMRAM] unsigned char 
  2742 ;;  y               1   17[COMRAM] unsigned char 
  2743 ;; Auto vars:     Size  Location     Type
  2744 ;;  h               1   19[COMRAM] unsigned char 
  2745 ;;  check           1    0        unsigned char 
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0, cstack
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2755 ;;      Params:         5       0       0       0       0       0       0       0       0
  2756 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2757 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2758 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2759 ;;Total ram usage:        7 bytes
  2760 ;; Hardware stack levels used: 1
  2761 ;; Hardware stack levels required when called: 2
  2762 ;; This function calls:
  2763 ;;		_DEC2BCD
  2764 ;;		_I2C_Master_Start
  2765 ;;		_I2C_Master_Stop
  2766 ;;		_I2C_Master_Write
  2767 ;; This function is called by:
  2768 ;;		_main
  2769 ;; This function uses a non-reentrant model
  2770 ;;
  2771                           
  2772                           	psect	text11
  2773   00104C                     __ptext11:
  2774                           	callstack 0
  2775   00104C                     _RTC_SetDateTime:
  2776                           	callstack 28
  2777                           
  2778                           ;incstack = 0
  2779                           ;RTC_SetDateTime@h stored from wreg
  2780   00104C  6E14               	movwf	RTC_SetDateTime@h^0,c
  2781   00104E                     
  2782                           ;ds1307.c: 39: void RTC_SetDateTime(unsigned char h, unsigned char m, unsigned char s,;d
      +                          s1307.c: 40:                      unsigned char d, unsigned char mo, unsigned char y) {;
      +                          ds1307.c: 41:     unsigned char check;;ds1307.c: 44:     s &= 0x7F;
  2783   00104E  9E0F               	bcf	RTC_SetDateTime@s^0,7,c
  2784   001050                     
  2785                           ;ds1307.c: 47:     I2C_Master_Start();
  2786   001050  ECEC  F00A         	call	_I2C_Master_Start	;wreg free
  2787   001054                     
  2788                           ;ds1307.c: 48:     I2C_Master_Write(0b11010000);
  2789   001054  0E00               	movlw	0
  2790   001056  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  2791   001058  0ED0               	movlw	208
  2792   00105A  6E0C               	movwf	I2C_Master_Write@d^0,c
  2793   00105C  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  2794   001060                     
  2795                           ;ds1307.c: 49:     I2C_Master_Write(0b00000000);
  2796   001060  0E00               	movlw	0
  2797   001062  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  2798   001064  0E00               	movlw	0
  2799   001066  6E0C               	movwf	I2C_Master_Write@d^0,c
  2800   001068  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  2801   00106C                     
  2802                           ;ds1307.c: 52:     I2C_Master_Write(DEC2BCD(s));
  2803   00106C  500F               	movf	RTC_SetDateTime@s^0,w,c
  2804   00106E  EC24  F00A         	call	_DEC2BCD
  2805   001072  6E13               	movwf	??_RTC_SetDateTime^0,c
  2806   001074  5013               	movf	??_RTC_SetDateTime^0,w,c
  2807   001076  6E0C               	movwf	I2C_Master_Write@d^0,c
  2808   001078  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  2809   00107A  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  2810   00107E                     
  2811                           ;ds1307.c: 53:     I2C_Master_Write(DEC2BCD(m));
  2812   00107E  500E               	movf	RTC_SetDateTime@m^0,w,c
  2813   001080  EC24  F00A         	call	_DEC2BCD
  2814   001084  6E13               	movwf	??_RTC_SetDateTime^0,c
  2815   001086  5013               	movf	??_RTC_SetDateTime^0,w,c
  2816   001088  6E0C               	movwf	I2C_Master_Write@d^0,c
  2817   00108A  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  2818   00108C  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  2819   001090                     
  2820                           ;ds1307.c: 54:     I2C_Master_Write(DEC2BCD(h));
  2821   001090  5014               	movf	RTC_SetDateTime@h^0,w,c
  2822   001092  EC24  F00A         	call	_DEC2BCD
  2823   001096  6E13               	movwf	??_RTC_SetDateTime^0,c
  2824   001098  5013               	movf	??_RTC_SetDateTime^0,w,c
  2825   00109A  6E0C               	movwf	I2C_Master_Write@d^0,c
  2826   00109C  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  2827   00109E  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  2828   0010A2                     
  2829                           ;ds1307.c: 55:     I2C_Master_Write(DEC2BCD(1));
  2830   0010A2  0E01               	movlw	1
  2831   0010A4  EC24  F00A         	call	_DEC2BCD
  2832   0010A8  6E13               	movwf	??_RTC_SetDateTime^0,c
  2833   0010AA  5013               	movf	??_RTC_SetDateTime^0,w,c
  2834   0010AC  6E0C               	movwf	I2C_Master_Write@d^0,c
  2835   0010AE  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  2836   0010B0  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  2837   0010B4                     
  2838                           ;ds1307.c: 56:     I2C_Master_Write(DEC2BCD(d));
  2839   0010B4  5010               	movf	RTC_SetDateTime@d^0,w,c
  2840   0010B6  EC24  F00A         	call	_DEC2BCD
  2841   0010BA  6E13               	movwf	??_RTC_SetDateTime^0,c
  2842   0010BC  5013               	movf	??_RTC_SetDateTime^0,w,c
  2843   0010BE  6E0C               	movwf	I2C_Master_Write@d^0,c
  2844   0010C0  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  2845   0010C2  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  2846   0010C6                     
  2847                           ;ds1307.c: 57:     I2C_Master_Write(DEC2BCD(mo));
  2848   0010C6  5011               	movf	RTC_SetDateTime@mo^0,w,c
  2849   0010C8  EC24  F00A         	call	_DEC2BCD
  2850   0010CC  6E13               	movwf	??_RTC_SetDateTime^0,c
  2851   0010CE  5013               	movf	??_RTC_SetDateTime^0,w,c
  2852   0010D0  6E0C               	movwf	I2C_Master_Write@d^0,c
  2853   0010D2  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  2854   0010D4  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  2855   0010D8                     
  2856                           ;ds1307.c: 58:     I2C_Master_Write(DEC2BCD(y));
  2857   0010D8  5012               	movf	RTC_SetDateTime@y^0,w,c
  2858   0010DA  EC24  F00A         	call	_DEC2BCD
  2859   0010DE  6E13               	movwf	??_RTC_SetDateTime^0,c
  2860   0010E0  5013               	movf	??_RTC_SetDateTime^0,w,c
  2861   0010E2  6E0C               	movwf	I2C_Master_Write@d^0,c
  2862   0010E4  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  2863   0010E6  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  2864   0010EA                     
  2865                           ;ds1307.c: 59:     I2C_Master_Stop();
  2866   0010EA  ECE8  F00A         	call	_I2C_Master_Stop	;wreg free
  2867   0010EE  0012               	return		;funcret
  2868   0010F0                     __end_of_RTC_SetDateTime:
  2869                           	callstack 0
  2870                           
  2871 ;; *************** function _DEC2BCD *****************
  2872 ;; Defined at:
  2873 ;;		line 10 in file "ds1307.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  val             1    wreg     unsigned char 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  val             1   10[COMRAM] unsigned char 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  1    wreg      unsigned char 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0, cstack
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2887 ;;      Params:         0       0       0       0       0       0       0       0       0
  2888 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2889 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2890 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2891 ;;Total ram usage:        3 bytes
  2892 ;; Hardware stack levels used: 1
  2893 ;; Hardware stack levels required when called: 1
  2894 ;; This function calls:
  2895 ;;		___awdiv
  2896 ;;		___awmod
  2897 ;; This function is called by:
  2898 ;;		_RTC_SetDateTime
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text12
  2903   001448                     __ptext12:
  2904                           	callstack 0
  2905   001448                     _DEC2BCD:
  2906                           	callstack 28
  2907                           
  2908                           ;incstack = 0
  2909                           ;DEC2BCD@val stored from wreg
  2910   001448  6E0B               	movwf	DEC2BCD@val^0,c
  2911   00144A                     
  2912                           ;ds1307.c: 11:     return ((val / 10) << 4) | (val % 10);
  2913   00144A  C00B  F001         	movff	DEC2BCD@val,___awmod@dividend
  2914   00144E  6A02               	clrf	(___awmod@dividend+1)^0,c
  2915   001450  0E00               	movlw	0
  2916   001452  6E04               	movwf	(___awmod@divisor+1)^0,c
  2917   001454  0E0A               	movlw	10
  2918   001456  6E03               	movwf	___awmod@divisor^0,c
  2919   001458  EC28  F007         	call	___awmod	;wreg free
  2920   00145C  C001  F009         	movff	?___awmod,??_DEC2BCD
  2921   001460  C002  F00A         	movff	?___awmod+1,??_DEC2BCD+1
  2922   001464  C00B  F001         	movff	DEC2BCD@val,___awdiv@dividend
  2923   001468  6A02               	clrf	(___awdiv@dividend+1)^0,c
  2924   00146A  0E00               	movlw	0
  2925   00146C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2926   00146E  0E0A               	movlw	10
  2927   001470  6E03               	movwf	___awdiv@divisor^0,c
  2928   001472  EC6E  F006         	call	___awdiv	;wreg free
  2929   001476  3801               	swapf	?___awdiv^0,w,c
  2930   001478  0BF0               	andlw	240
  2931   00147A  1009               	iorwf	??_DEC2BCD^0,w,c
  2932   00147C  0012               	return		;funcret
  2933   00147E                     __end_of_DEC2BCD:
  2934                           	callstack 0
  2935                           
  2936 ;; *************** function ___awmod *****************
  2937 ;; Defined at:
  2938 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;  dividend        2    0[COMRAM] int 
  2941 ;;  divisor         2    2[COMRAM] int 
  2942 ;; Auto vars:     Size  Location     Type
  2943 ;;  sign            1    5[COMRAM] unsigned char 
  2944 ;;  counter         1    4[COMRAM] unsigned char 
  2945 ;; Return value:  Size  Location     Type
  2946 ;;                  2    0[COMRAM] int 
  2947 ;; Registers used:
  2948 ;;		wreg, status,2, status,0
  2949 ;; Tracked objects:
  2950 ;;		On entry : 0/0
  2951 ;;		On exit  : 0/0
  2952 ;;		Unchanged: 0/0
  2953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2954 ;;      Params:         4       0       0       0       0       0       0       0       0
  2955 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2956 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2957 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2958 ;;Total ram usage:        6 bytes
  2959 ;; Hardware stack levels used: 1
  2960 ;; This function calls:
  2961 ;;		Nothing
  2962 ;; This function is called by:
  2963 ;;		_DEC2BCD
  2964 ;;		_dtoa
  2965 ;; This function uses a non-reentrant model
  2966 ;;
  2967                           
  2968                           	psect	text13
  2969   000E50                     __ptext13:
  2970                           	callstack 0
  2971   000E50                     ___awmod:
  2972                           	callstack 26
  2973   000E50  6A06               	clrf	___awmod@sign^0,c
  2974   000E52  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2975   000E54  EF30  F007         	goto	u670
  2976   000E58  EF2E  F007         	goto	u671
  2977   000E5C                     u671:
  2978   000E5C  EF36  F007         	goto	l1539
  2979   000E60                     u670:
  2980   000E60  6C01               	negf	___awmod@dividend^0,c
  2981   000E62  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2982   000E64  B0D8               	btfsc	status,0,c
  2983   000E66  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2984   000E68  0E01               	movlw	1
  2985   000E6A  6E06               	movwf	___awmod@sign^0,c
  2986   000E6C                     l1539:
  2987   000E6C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2988   000E6E  EF3D  F007         	goto	u680
  2989   000E72  EF3B  F007         	goto	u681
  2990   000E76                     u681:
  2991   000E76  EF41  F007         	goto	l1543
  2992   000E7A                     u680:
  2993   000E7A  6C03               	negf	___awmod@divisor^0,c
  2994   000E7C  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2995   000E7E  B0D8               	btfsc	status,0,c
  2996   000E80  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2997   000E82                     l1543:
  2998   000E82  5003               	movf	___awmod@divisor^0,w,c
  2999   000E84  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  3000   000E86  B4D8               	btfsc	status,2,c
  3001   000E88  EF48  F007         	goto	u691
  3002   000E8C  EF4A  F007         	goto	u690
  3003   000E90                     u691:
  3004   000E90  EF6E  F007         	goto	l1559
  3005   000E94                     u690:
  3006   000E94  0E01               	movlw	1
  3007   000E96  6E05               	movwf	___awmod@counter^0,c
  3008   000E98  EF52  F007         	goto	l1549
  3009   000E9C                     l1547:
  3010   000E9C  90D8               	bcf	status,0,c
  3011   000E9E  3603               	rlcf	___awmod@divisor^0,f,c
  3012   000EA0  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  3013   000EA2  2A05               	incf	___awmod@counter^0,f,c
  3014   000EA4                     l1549:
  3015   000EA4  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  3016   000EA6  EF57  F007         	goto	u701
  3017   000EAA  EF59  F007         	goto	u700
  3018   000EAE                     u701:
  3019   000EAE  EF4E  F007         	goto	l1547
  3020   000EB2                     u700:
  3021   000EB2                     l1551:
  3022   000EB2  5003               	movf	___awmod@divisor^0,w,c
  3023   000EB4  5C01               	subwf	___awmod@dividend^0,w,c
  3024   000EB6  5004               	movf	(___awmod@divisor+1)^0,w,c
  3025   000EB8  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  3026   000EBA  A0D8               	btfss	status,0,c
  3027   000EBC  EF62  F007         	goto	u711
  3028   000EC0  EF64  F007         	goto	u710
  3029   000EC4                     u711:
  3030   000EC4  EF68  F007         	goto	l1555
  3031   000EC8                     u710:
  3032   000EC8  5003               	movf	___awmod@divisor^0,w,c
  3033   000ECA  5E01               	subwf	___awmod@dividend^0,f,c
  3034   000ECC  5004               	movf	(___awmod@divisor+1)^0,w,c
  3035   000ECE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  3036   000ED0                     l1555:
  3037   000ED0  90D8               	bcf	status,0,c
  3038   000ED2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  3039   000ED4  3203               	rrcf	___awmod@divisor^0,f,c
  3040   000ED6  2E05               	decfsz	___awmod@counter^0,f,c
  3041   000ED8  EF59  F007         	goto	l1551
  3042   000EDC                     l1559:
  3043   000EDC  5006               	movf	___awmod@sign^0,w,c
  3044   000EDE  B4D8               	btfsc	status,2,c
  3045   000EE0  EF74  F007         	goto	u721
  3046   000EE4  EF76  F007         	goto	u720
  3047   000EE8                     u721:
  3048   000EE8  EF7A  F007         	goto	l1563
  3049   000EEC                     u720:
  3050   000EEC  6C01               	negf	___awmod@dividend^0,c
  3051   000EEE  1E02               	comf	(___awmod@dividend+1)^0,f,c
  3052   000EF0  B0D8               	btfsc	status,0,c
  3053   000EF2  2A02               	incf	(___awmod@dividend+1)^0,f,c
  3054   000EF4                     l1563:
  3055   000EF4  C001  F001         	movff	___awmod@dividend,?___awmod
  3056   000EF8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3057   000EFC  0012               	return		;funcret
  3058   000EFE                     __end_of___awmod:
  3059                           	callstack 0
  3060                           
  3061 ;; *************** function ___awdiv *****************
  3062 ;; Defined at:
  3063 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
  3064 ;; Parameters:    Size  Location     Type
  3065 ;;  dividend        2    0[COMRAM] int 
  3066 ;;  divisor         2    2[COMRAM] int 
  3067 ;; Auto vars:     Size  Location     Type
  3068 ;;  quotient        2    6[COMRAM] int 
  3069 ;;  sign            1    5[COMRAM] unsigned char 
  3070 ;;  counter         1    4[COMRAM] unsigned char 
  3071 ;; Return value:  Size  Location     Type
  3072 ;;                  2    0[COMRAM] int 
  3073 ;; Registers used:
  3074 ;;		wreg, status,2, status,0
  3075 ;; Tracked objects:
  3076 ;;		On entry : 0/0
  3077 ;;		On exit  : 0/0
  3078 ;;		Unchanged: 0/0
  3079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3080 ;;      Params:         4       0       0       0       0       0       0       0       0
  3081 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3083 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3084 ;;Total ram usage:        8 bytes
  3085 ;; Hardware stack levels used: 1
  3086 ;; This function calls:
  3087 ;;		Nothing
  3088 ;; This function is called by:
  3089 ;;		_DEC2BCD
  3090 ;;		_dtoa
  3091 ;; This function uses a non-reentrant model
  3092 ;;
  3093                           
  3094                           	psect	text14
  3095   000CDC                     __ptext14:
  3096                           	callstack 0
  3097   000CDC                     ___awdiv:
  3098                           	callstack 26
  3099   000CDC  6A06               	clrf	___awdiv@sign^0,c
  3100   000CDE  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  3101   000CE0  EF76  F006         	goto	u610
  3102   000CE4  EF74  F006         	goto	u611
  3103   000CE8                     u611:
  3104   000CE8  EF7C  F006         	goto	l1495
  3105   000CEC                     u610:
  3106   000CEC  6C03               	negf	___awdiv@divisor^0,c
  3107   000CEE  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  3108   000CF0  B0D8               	btfsc	status,0,c
  3109   000CF2  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  3110   000CF4  0E01               	movlw	1
  3111   000CF6  6E06               	movwf	___awdiv@sign^0,c
  3112   000CF8                     l1495:
  3113   000CF8  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  3114   000CFA  EF83  F006         	goto	u620
  3115   000CFE  EF81  F006         	goto	u621
  3116   000D02                     u621:
  3117   000D02  EF89  F006         	goto	l1501
  3118   000D06                     u620:
  3119   000D06  6C01               	negf	___awdiv@dividend^0,c
  3120   000D08  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  3121   000D0A  B0D8               	btfsc	status,0,c
  3122   000D0C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3123   000D0E  0E01               	movlw	1
  3124   000D10  1A06               	xorwf	___awdiv@sign^0,f,c
  3125   000D12                     l1501:
  3126   000D12  0E00               	movlw	0
  3127   000D14  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3128   000D16  0E00               	movlw	0
  3129   000D18  6E07               	movwf	___awdiv@quotient^0,c
  3130   000D1A  5003               	movf	___awdiv@divisor^0,w,c
  3131   000D1C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3132   000D1E  B4D8               	btfsc	status,2,c
  3133   000D20  EF94  F006         	goto	u631
  3134   000D24  EF96  F006         	goto	u630
  3135   000D28                     u631:
  3136   000D28  EFBE  F006         	goto	l1523
  3137   000D2C                     u630:
  3138   000D2C  0E01               	movlw	1
  3139   000D2E  6E05               	movwf	___awdiv@counter^0,c
  3140   000D30  EF9E  F006         	goto	l1509
  3141   000D34                     l1507:
  3142   000D34  90D8               	bcf	status,0,c
  3143   000D36  3603               	rlcf	___awdiv@divisor^0,f,c
  3144   000D38  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3145   000D3A  2A05               	incf	___awdiv@counter^0,f,c
  3146   000D3C                     l1509:
  3147   000D3C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3148   000D3E  EFA3  F006         	goto	u641
  3149   000D42  EFA5  F006         	goto	u640
  3150   000D46                     u641:
  3151   000D46  EF9A  F006         	goto	l1507
  3152   000D4A                     u640:
  3153   000D4A                     l1511:
  3154   000D4A  90D8               	bcf	status,0,c
  3155   000D4C  3607               	rlcf	___awdiv@quotient^0,f,c
  3156   000D4E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3157   000D50  5003               	movf	___awdiv@divisor^0,w,c
  3158   000D52  5C01               	subwf	___awdiv@dividend^0,w,c
  3159   000D54  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3160   000D56  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3161   000D58  A0D8               	btfss	status,0,c
  3162   000D5A  EFB1  F006         	goto	u651
  3163   000D5E  EFB3  F006         	goto	u650
  3164   000D62                     u651:
  3165   000D62  EFB8  F006         	goto	l1519
  3166   000D66                     u650:
  3167   000D66  5003               	movf	___awdiv@divisor^0,w,c
  3168   000D68  5E01               	subwf	___awdiv@dividend^0,f,c
  3169   000D6A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3170   000D6C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3171   000D6E  8007               	bsf	___awdiv@quotient^0,0,c
  3172   000D70                     l1519:
  3173   000D70  90D8               	bcf	status,0,c
  3174   000D72  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3175   000D74  3203               	rrcf	___awdiv@divisor^0,f,c
  3176   000D76  2E05               	decfsz	___awdiv@counter^0,f,c
  3177   000D78  EFA5  F006         	goto	l1511
  3178   000D7C                     l1523:
  3179   000D7C  5006               	movf	___awdiv@sign^0,w,c
  3180   000D7E  B4D8               	btfsc	status,2,c
  3181   000D80  EFC4  F006         	goto	u661
  3182   000D84  EFC6  F006         	goto	u660
  3183   000D88                     u661:
  3184   000D88  EFCA  F006         	goto	l1527
  3185   000D8C                     u660:
  3186   000D8C  6C07               	negf	___awdiv@quotient^0,c
  3187   000D8E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3188   000D90  B0D8               	btfsc	status,0,c
  3189   000D92  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3190   000D94                     l1527:
  3191   000D94  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3192   000D98  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3193   000D9C  0012               	return		;funcret
  3194   000D9E                     __end_of___awdiv:
  3195                           	callstack 0
  3196                           
  3197 ;; *************** function _RTC_Init *****************
  3198 ;; Defined at:
  3199 ;;		line 14 in file "ds1307.c"
  3200 ;; Parameters:    Size  Location     Type
  3201 ;;		None
  3202 ;; Auto vars:     Size  Location     Type
  3203 ;;  sec             1   15[COMRAM] unsigned char 
  3204 ;; Return value:  Size  Location     Type
  3205 ;;                  1    wreg      void 
  3206 ;; Registers used:
  3207 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3208 ;; Tracked objects:
  3209 ;;		On entry : 0/0
  3210 ;;		On exit  : 0/0
  3211 ;;		Unchanged: 0/0
  3212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3213 ;;      Params:         0       0       0       0       0       0       0       0       0
  3214 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3215 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3216 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3217 ;;Total ram usage:        3 bytes
  3218 ;; Hardware stack levels used: 1
  3219 ;; Hardware stack levels required when called: 3
  3220 ;; This function calls:
  3221 ;;		_I2C_Master_Read
  3222 ;;		_I2C_Master_RepeatedStart
  3223 ;;		_I2C_Master_Start
  3224 ;;		_I2C_Master_Stop
  3225 ;;		_I2C_Master_Write
  3226 ;;		_LCD_Clear
  3227 ;;		_LCD_String_xy
  3228 ;; This function is called by:
  3229 ;;		_main
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233                           	psect	text15
  3234   000D9E                     __ptext15:
  3235                           	callstack 0
  3236   000D9E                     _RTC_Init:
  3237                           	callstack 27
  3238   000D9E                     
  3239                           ;ds1307.c: 15:     unsigned char sec;;ds1307.c: 17:     I2C_Master_Start();
  3240   000D9E  ECEC  F00A         	call	_I2C_Master_Start	;wreg free
  3241                           
  3242                           ;ds1307.c: 18:     I2C_Master_Write(0b11010000);
  3243   000DA2  0E00               	movlw	0
  3244   000DA4  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  3245   000DA6  0ED0               	movlw	208
  3246   000DA8  6E0C               	movwf	I2C_Master_Write@d^0,c
  3247   000DAA  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  3248                           
  3249                           ;ds1307.c: 19:     I2C_Master_Write(0x00);
  3250   000DAE  0E00               	movlw	0
  3251   000DB0  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  3252   000DB2  0E00               	movlw	0
  3253   000DB4  6E0C               	movwf	I2C_Master_Write@d^0,c
  3254   000DB6  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  3255                           
  3256                           ;ds1307.c: 20:     I2C_Master_RepeatedStart();
  3257   000DBA  ECF0  F00A         	call	_I2C_Master_RepeatedStart	;wreg free
  3258                           
  3259                           ;ds1307.c: 21:     I2C_Master_Write(0b11010000 | 1);
  3260   000DBE  0E00               	movlw	0
  3261   000DC0  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  3262   000DC2  0ED1               	movlw	209
  3263   000DC4  6E0C               	movwf	I2C_Master_Write@d^0,c
  3264   000DC6  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  3265                           
  3266                           ;ds1307.c: 22:     sec = I2C_Master_Read(0);
  3267   000DCA  0E00               	movlw	0
  3268   000DCC  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3269   000DCE  0E00               	movlw	0
  3270   000DD0  6E02               	movwf	I2C_Master_Read@a^0,c
  3271   000DD2  EC3F  F00A         	call	_I2C_Master_Read	;wreg free
  3272   000DD6  5002               	movf	?_I2C_Master_Read^0,w,c
  3273   000DD8  6E10               	movwf	RTC_Init@sec^0,c
  3274                           
  3275                           ;ds1307.c: 23:     I2C_Master_Stop();
  3276   000DDA  ECE8  F00A         	call	_I2C_Master_Stop	;wreg free
  3277   000DDE                     
  3278                           ;ds1307.c: 25:     if (sec & 0x80) {
  3279   000DDE  AE10               	btfss	RTC_Init@sec^0,7,c
  3280   000DE0  EFF4  F006         	goto	u1061
  3281   000DE4  EFF6  F006         	goto	u1060
  3282   000DE8                     u1061:
  3283   000DE8  EF27  F007         	goto	l104
  3284   000DEC                     u1060:
  3285   000DEC                     
  3286                           ;ds1307.c: 27:         LCD_Clear();
  3287   000DEC  ECCA  F00A         	call	_LCD_Clear	;wreg free
  3288   000DF0                     
  3289                           ;ds1307.c: 28:         LCD_String_xy(0, 0, "RTC detenido");
  3290   000DF0  0E00               	movlw	0
  3291   000DF2  6E05               	movwf	LCD_String_xy@pos^0,c
  3292   000DF4  0E3E               	movlw	low STR_4
  3293   000DF6  6E06               	movwf	LCD_String_xy@msg^0,c
  3294   000DF8  5006               	movf	LCD_String_xy@msg^0,w,c
  3295   000DFA  A4D8               	btfss	status,2,c
  3296   000DFC  0E08               	movlw	high __smallconst
  3297   000DFE  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3298   000E00  0E00               	movlw	0
  3299   000E02  ECBE  F009         	call	_LCD_String_xy
  3300   000E06                     
  3301                           ;ds1307.c: 29:         _delay((unsigned long)((1000)*(8000000/4000.0)));
  3302   000E06  0E0B               	movlw	11
  3303   000E08  6E0F               	movwf	(??_RTC_Init+1)^0,c
  3304   000E0A  0E26               	movlw	38
  3305   000E0C  6E0E               	movwf	??_RTC_Init^0,c
  3306   000E0E  0E5E               	movlw	94
  3307   000E10                     u1107:
  3308   000E10  2EE8               	decfsz	wreg,f,c
  3309   000E12  D7FE               	bra	u1107
  3310   000E14  2E0E               	decfsz	??_RTC_Init^0,f,c
  3311   000E16  D7FC               	bra	u1107
  3312   000E18  2E0F               	decfsz	(??_RTC_Init+1)^0,f,c
  3313   000E1A  D7FA               	bra	u1107
  3314   000E1C                     
  3315                           ;ds1307.c: 31:         I2C_Master_Start();
  3316   000E1C  ECEC  F00A         	call	_I2C_Master_Start	;wreg free
  3317   000E20                     
  3318                           ;ds1307.c: 32:         I2C_Master_Write(0b11010000);
  3319   000E20  0E00               	movlw	0
  3320   000E22  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  3321   000E24  0ED0               	movlw	208
  3322   000E26  6E0C               	movwf	I2C_Master_Write@d^0,c
  3323   000E28  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  3324   000E2C                     
  3325                           ;ds1307.c: 33:         I2C_Master_Write(0x00);
  3326   000E2C  0E00               	movlw	0
  3327   000E2E  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  3328   000E30  0E00               	movlw	0
  3329   000E32  6E0C               	movwf	I2C_Master_Write@d^0,c
  3330   000E34  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  3331   000E38                     
  3332                           ;ds1307.c: 34:         I2C_Master_Write(sec & 0x7F);
  3333   000E38  C010  F00E         	movff	RTC_Init@sec,??_RTC_Init
  3334   000E3C  0E7F               	movlw	127
  3335   000E3E  160E               	andwf	??_RTC_Init^0,f,c
  3336   000E40  500E               	movf	??_RTC_Init^0,w,c
  3337   000E42  6E0C               	movwf	I2C_Master_Write@d^0,c
  3338   000E44  6A0D               	clrf	(I2C_Master_Write@d+1)^0,c
  3339   000E46  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  3340   000E4A                     
  3341                           ;ds1307.c: 35:         I2C_Master_Stop();
  3342   000E4A  ECE8  F00A         	call	_I2C_Master_Stop	;wreg free
  3343   000E4E                     l104:
  3344   000E4E  0012               	return		;funcret
  3345   000E50                     __end_of_RTC_Init:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _LCD_String_xy *****************
  3349 ;; Defined at:
  3350 ;;		line 50 in file "LCD.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;  row             1    wreg     unsigned char 
  3353 ;;  pos             1    4[COMRAM] unsigned char 
  3354 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  3355 ;;		 -> STR_4(13), main@buffer(17), STR_1(17), 
  3356 ;; Auto vars:     Size  Location     Type
  3357 ;;  row             1    9[COMRAM] unsigned char 
  3358 ;;  location        1   12[COMRAM] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  1    wreg      void 
  3361 ;; Registers used:
  3362 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3368 ;;      Params:         3       0       0       0       0       0       0       0       0
  3369 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3370 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3371 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3372 ;;Total ram usage:        9 bytes
  3373 ;; Hardware stack levels used: 1
  3374 ;; Hardware stack levels required when called: 2
  3375 ;; This function calls:
  3376 ;;		_LCD_Command
  3377 ;;		_LCD_String
  3378 ;; This function is called by:
  3379 ;;		_main
  3380 ;;		_RTC_Init
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text16
  3385   00137C                     __ptext16:
  3386                           	callstack 0
  3387   00137C                     _LCD_String_xy:
  3388                           	callstack 27
  3389                           
  3390                           ;incstack = 0
  3391                           ;LCD_String_xy@row stored from wreg
  3392   00137C  6E0A               	movwf	LCD_String_xy@row^0,c
  3393   00137E                     
  3394                           ;LCD.c: 51:     char location = (row == 0) ? (0x80 | (pos & 0x0F)) : (0xC0 | (pos & 0x0F
      +                          ));
  3395   00137E  500A               	movf	LCD_String_xy@row^0,w,c
  3396   001380  B4D8               	btfsc	status,2,c
  3397   001382  EFC5  F009         	goto	u981
  3398   001386  EFC7  F009         	goto	u980
  3399   00138A                     u981:
  3400   00138A  EFD2  F009         	goto	l1759
  3401   00138E                     u980:
  3402   00138E  5005               	movf	LCD_String_xy@pos^0,w,c
  3403   001390  0B0F               	andlw	15
  3404   001392  6E08               	movwf	??_LCD_String_xy^0,c
  3405   001394  6A09               	clrf	(??_LCD_String_xy+1)^0,c
  3406   001396  0EC0               	movlw	192
  3407   001398  1008               	iorwf	??_LCD_String_xy^0,w,c
  3408   00139A  6E0B               	movwf	_LCD_String_xy$161^0,c
  3409   00139C  5009               	movf	(??_LCD_String_xy+1)^0,w,c
  3410   00139E  6E0C               	movwf	(_LCD_String_xy$161+1)^0,c
  3411   0013A0  EFDB  F009         	goto	l1761
  3412   0013A4                     l1759:
  3413   0013A4  5005               	movf	LCD_String_xy@pos^0,w,c
  3414   0013A6  0B0F               	andlw	15
  3415   0013A8  6E08               	movwf	??_LCD_String_xy^0,c
  3416   0013AA  6A09               	clrf	(??_LCD_String_xy+1)^0,c
  3417   0013AC  0E80               	movlw	128
  3418   0013AE  1008               	iorwf	??_LCD_String_xy^0,w,c
  3419   0013B0  6E0B               	movwf	_LCD_String_xy$161^0,c
  3420   0013B2  5009               	movf	(??_LCD_String_xy+1)^0,w,c
  3421   0013B4  6E0C               	movwf	(_LCD_String_xy$161+1)^0,c
  3422   0013B6                     l1761:
  3423   0013B6  C00B  F00D         	movff	_LCD_String_xy$161,LCD_String_xy@location
  3424   0013BA                     
  3425                           ;LCD.c: 52:     LCD_Command(location);
  3426   0013BA  500D               	movf	LCD_String_xy@location^0,w,c
  3427   0013BC  EC94  F009         	call	_LCD_Command
  3428   0013C0                     
  3429                           ;LCD.c: 53:     LCD_String(msg);
  3430   0013C0  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  3431   0013C4  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  3432   0013C8  EC0F  F009         	call	_LCD_String	;wreg free
  3433   0013CC  0012               	return		;funcret
  3434   0013CE                     __end_of_LCD_String_xy:
  3435                           	callstack 0
  3436                           
  3437 ;; *************** function _LCD_String *****************
  3438 ;; Defined at:
  3439 ;;		line 43 in file "LCD.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  3442 ;;		 -> STR_4(13), main@buffer(17), STR_1(17), 
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3454 ;;      Params:         2       0       0       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3457 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3458 ;;Total ram usage:        2 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 1
  3461 ;; This function calls:
  3462 ;;		_LCD_Char
  3463 ;; This function is called by:
  3464 ;;		_LCD_String_xy
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text17
  3469   00121E                     __ptext17:
  3470                           	callstack 0
  3471   00121E                     _LCD_String:
  3472                           	callstack 27
  3473   00121E                     
  3474                           ;LCD.c: 44:     while(*msg != '\0') {
  3475   00121E  EF25  F009         	goto	l1697
  3476   001222                     l1693:
  3477                           
  3478                           ;LCD.c: 45:         LCD_Char(*msg);
  3479   001222  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3480   001226  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3481   00122A  6AF8               	clrf	tblptru,c
  3482   00122C  0E07               	movlw	(high __ramtop+-1)
  3483   00122E  64F7               	cpfsgt	tblptrh,c
  3484   001230  D003               	bra	u907
  3485   001232  0008               	tblrd		*
  3486   001234  50F5               	movf	tablat,w,c
  3487   001236  D005               	bra	u900
  3488   001238                     u907:
  3489   001238  CFF6 FFE1          	movff	tblptrl,fsr1l
  3490   00123C  CFF7 FFE2          	movff	tblptrh,fsr1h
  3491   001240  50E7               	movf	indf1,w,c
  3492   001242                     u900:
  3493   001242  EC6A  F009         	call	_LCD_Char
  3494   001246                     
  3495                           ;LCD.c: 46:         msg++;
  3496   001246  4A03               	infsnz	LCD_String@msg^0,f,c
  3497   001248  2A04               	incf	(LCD_String@msg+1)^0,f,c
  3498   00124A                     l1697:
  3499                           
  3500                           ;LCD.c: 44:     while(*msg != '\0') {
  3501   00124A  C003  FFF6         	movff	LCD_String@msg,tblptrl
  3502   00124E  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  3503   001252  6AF8               	clrf	tblptru,c
  3504   001254  0E07               	movlw	(high __ramtop+-1)
  3505   001256  64F7               	cpfsgt	tblptrh,c
  3506   001258  D003               	bra	u917
  3507   00125A  0008               	tblrd		*
  3508   00125C  50F5               	movf	tablat,w,c
  3509   00125E  D005               	bra	u910
  3510   001260                     u917:
  3511   001260  CFF6 FFE1          	movff	tblptrl,fsr1l
  3512   001264  CFF7 FFE2          	movff	tblptrh,fsr1h
  3513   001268  50E7               	movf	indf1,w,c
  3514   00126A                     u910:
  3515   00126A  0900               	iorlw	0
  3516   00126C  A4D8               	btfss	status,2,c
  3517   00126E  EF3B  F009         	goto	u921
  3518   001272  EF3D  F009         	goto	u920
  3519   001276                     u921:
  3520   001276  EF11  F009         	goto	l1693
  3521   00127A                     u920:
  3522   00127A  0012               	return		;funcret
  3523   00127C                     __end_of_LCD_String:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _LCD_Char *****************
  3527 ;; Defined at:
  3528 ;;		line 28 in file "LCD.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;  dat             1    wreg     unsigned char 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  dat             1    1[COMRAM] unsigned char 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3542 ;;      Params:         0       0       0       0       0       0       0       0       0
  3543 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3544 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3545 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3546 ;;Total ram usage:        2 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; This function calls:
  3549 ;;		Nothing
  3550 ;; This function is called by:
  3551 ;;		_LCD_String
  3552 ;;		_LCD_ClearLine
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text18
  3557   0012D4                     __ptext18:
  3558                           	callstack 0
  3559   0012D4                     _LCD_Char:
  3560                           	callstack 27
  3561                           
  3562                           ;incstack = 0
  3563                           ;LCD_Char@dat stored from wreg
  3564   0012D4  6E02               	movwf	LCD_Char@dat^0,c
  3565   0012D6                     
  3566                           ;LCD.c: 29:     LATD = (unsigned char)((LATD & 0x0F) | (0xF0 & dat));
  3567   0012D6  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3568   0012DA  0EF0               	movlw	240
  3569   0012DC  1601               	andwf	??_LCD_Char^0,f,c
  3570   0012DE  508C               	movf	140,w,c	;volatile
  3571   0012E0  0B0F               	andlw	15
  3572   0012E2  1001               	iorwf	??_LCD_Char^0,w,c
  3573   0012E4  6E8C               	movwf	140,c	;volatile
  3574   0012E6                     
  3575                           ;LCD.c: 30:     LATD0 = 1;
  3576   0012E6  808C               	bsf	3980,0,c	;volatile
  3577   0012E8                     
  3578                           ;LCD.c: 31:     LATD1 = 1;
  3579   0012E8  828C               	bsf	3980,1,c	;volatile
  3580   0012EA                     
  3581                           ;LCD.c: 32:     __nop();
  3582   0012EA  0000               	nop	
  3583   0012EC                     
  3584                           ;LCD.c: 33:     LATD1 = 0;
  3585   0012EC  928C               	bcf	3980,1,c	;volatile
  3586   0012EE                     
  3587                           ;LCD.c: 34:     _delay((unsigned long)((1)*(8000000/4000.0)));
  3588   0012EE  0E03               	movlw	3
  3589   0012F0  6E01               	movwf	??_LCD_Char^0,c
  3590   0012F2  0E98               	movlw	152
  3591   0012F4                     u1117:
  3592   0012F4  2EE8               	decfsz	wreg,f,c
  3593   0012F6  D7FE               	bra	u1117
  3594   0012F8  2E01               	decfsz	??_LCD_Char^0,f,c
  3595   0012FA  D7FC               	bra	u1117
  3596   0012FC                     
  3597                           ;LCD.c: 36:     LATD = (unsigned char)((LATD & 0x0F) | ((dat & 0x0F) << 4));
  3598   0012FC  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  3599   001300  0E0F               	movlw	15
  3600   001302  1601               	andwf	??_LCD_Char^0,f,c
  3601   001304  3A01               	swapf	??_LCD_Char^0,f,c
  3602   001306  0EF0               	movlw	240
  3603   001308  1601               	andwf	??_LCD_Char^0,f,c
  3604   00130A  508C               	movf	140,w,c	;volatile
  3605   00130C  0B0F               	andlw	15
  3606   00130E  1001               	iorwf	??_LCD_Char^0,w,c
  3607   001310  6E8C               	movwf	140,c	;volatile
  3608   001312                     
  3609                           ;LCD.c: 37:     LATD1 = 1;
  3610   001312  828C               	bsf	3980,1,c	;volatile
  3611   001314                     
  3612                           ;LCD.c: 38:     __nop();
  3613   001314  0000               	nop	
  3614   001316                     
  3615                           ;LCD.c: 39:     LATD1 = 0;
  3616   001316  928C               	bcf	3980,1,c	;volatile
  3617                           
  3618                           ;LCD.c: 40:     _delay((unsigned long)((3)*(8000000/4000.0)));
  3619   001318  0E08               	movlw	8
  3620   00131A  6E01               	movwf	??_LCD_Char^0,c
  3621   00131C  0ECA               	movlw	202
  3622   00131E                     u1127:
  3623   00131E  2EE8               	decfsz	wreg,f,c
  3624   001320  D7FE               	bra	u1127
  3625   001322  2E01               	decfsz	??_LCD_Char^0,f,c
  3626   001324  D7FC               	bra	u1127
  3627   001326  0012               	return		;funcret
  3628   001328                     __end_of_LCD_Char:
  3629                           	callstack 0
  3630                           
  3631 ;; *************** function _LCD_Clear *****************
  3632 ;; Defined at:
  3633 ;;		line 56 in file "LCD.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3649 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3650 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3651 ;;Total ram usage:        1 bytes
  3652 ;; Hardware stack levels used: 1
  3653 ;; Hardware stack levels required when called: 1
  3654 ;; This function calls:
  3655 ;;		_LCD_Command
  3656 ;; This function is called by:
  3657 ;;		_main
  3658 ;;		_RTC_Init
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text19
  3663   001594                     __ptext19:
  3664                           	callstack 0
  3665   001594                     _LCD_Clear:
  3666                           	callstack 28
  3667   001594                     
  3668                           ;LCD.c: 57:     LCD_Command(0x01);
  3669   001594  0E01               	movlw	1
  3670   001596  EC94  F009         	call	_LCD_Command
  3671   00159A                     
  3672                           ;LCD.c: 58:     _delay((unsigned long)((2)*(8000000/4000.0)));
  3673   00159A  0E06               	movlw	6
  3674   00159C  6E03               	movwf	??_LCD_Clear^0,c
  3675   00159E  0E30               	movlw	48
  3676   0015A0                     u1137:
  3677   0015A0  2EE8               	decfsz	wreg,f,c
  3678   0015A2  D7FE               	bra	u1137
  3679   0015A4  2E03               	decfsz	??_LCD_Clear^0,f,c
  3680   0015A6  D7FC               	bra	u1137
  3681   0015A8  D000               	nop2	
  3682   0015AA  0012               	return		;funcret
  3683   0015AC                     __end_of_LCD_Clear:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function _RTC_GetDateTime *****************
  3687 ;; Defined at:
  3688 ;;		line 63 in file "ds1307.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  hour            1   13[COMRAM] PTR unsigned char 
  3691 ;;		 -> main@h(1), 
  3692 ;;  min             1   14[COMRAM] PTR unsigned char 
  3693 ;;		 -> main@m(1), 
  3694 ;;  sec             1   15[COMRAM] PTR unsigned char 
  3695 ;;		 -> main@s(1), 
  3696 ;;  day             1   16[COMRAM] PTR unsigned char 
  3697 ;;		 -> main@d(1), 
  3698 ;;  month           1   17[COMRAM] PTR unsigned char 
  3699 ;;		 -> main@mo(1), 
  3700 ;;  year            1   18[COMRAM] PTR unsigned char 
  3701 ;;		 -> main@y(1), 
  3702 ;; Auto vars:     Size  Location     Type
  3703 ;;		None
  3704 ;; Return value:  Size  Location     Type
  3705 ;;                  1    wreg      void 
  3706 ;; Registers used:
  3707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3708 ;; Tracked objects:
  3709 ;;		On entry : 0/0
  3710 ;;		On exit  : 0/0
  3711 ;;		Unchanged: 0/0
  3712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3713 ;;      Params:         6       0       0       0       0       0       0       0       0
  3714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3716 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3717 ;;Total ram usage:        6 bytes
  3718 ;; Hardware stack levels used: 1
  3719 ;; Hardware stack levels required when called: 2
  3720 ;; This function calls:
  3721 ;;		_BCD2DEC
  3722 ;;		_I2C_Master_Read
  3723 ;;		_I2C_Master_RepeatedStart
  3724 ;;		_I2C_Master_Start
  3725 ;;		_I2C_Master_Stop
  3726 ;;		_I2C_Master_Write
  3727 ;; This function is called by:
  3728 ;;		_main
  3729 ;; This function uses a non-reentrant model
  3730 ;;
  3731                           
  3732                           	psect	text20
  3733   000C02                     __ptext20:
  3734                           	callstack 0
  3735   000C02                     _RTC_GetDateTime:
  3736                           	callstack 28
  3737   000C02                     
  3738                           ;ds1307.c: 63: void RTC_GetDateTime(unsigned char *hour, unsigned char *min, unsigned ch
      +                          ar *sec,;ds1307.c: 64:                      unsigned char *day, unsigned char *month, un
      +                          signed char *year) {;ds1307.c: 65:     I2C_Master_Start();
  3739   000C02  ECEC  F00A         	call	_I2C_Master_Start	;wreg free
  3740                           
  3741                           ;ds1307.c: 66:     I2C_Master_Write(0b11010000);
  3742   000C06  0E00               	movlw	0
  3743   000C08  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  3744   000C0A  0ED0               	movlw	208
  3745   000C0C  6E0C               	movwf	I2C_Master_Write@d^0,c
  3746   000C0E  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  3747                           
  3748                           ;ds1307.c: 67:     I2C_Master_Write(0b00000000);
  3749   000C12  0E00               	movlw	0
  3750   000C14  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  3751   000C16  0E00               	movlw	0
  3752   000C18  6E0C               	movwf	I2C_Master_Write@d^0,c
  3753   000C1A  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  3754                           
  3755                           ;ds1307.c: 68:     I2C_Master_RepeatedStart();
  3756   000C1E  ECF0  F00A         	call	_I2C_Master_RepeatedStart	;wreg free
  3757                           
  3758                           ;ds1307.c: 69:     I2C_Master_Write(0b11010000 | 1);
  3759   000C22  0E00               	movlw	0
  3760   000C24  6E0D               	movwf	(I2C_Master_Write@d+1)^0,c
  3761   000C26  0ED1               	movlw	209
  3762   000C28  6E0C               	movwf	I2C_Master_Write@d^0,c
  3763   000C2A  ECE1  F00A         	call	_I2C_Master_Write	;wreg free
  3764   000C2E                     
  3765                           ;ds1307.c: 71:     *sec = BCD2DEC(I2C_Master_Read(1));
  3766   000C2E  5010               	movf	RTC_GetDateTime@sec^0,w,c
  3767   000C30  6ED9               	movwf	fsr2l,c
  3768   000C32  6ADA               	clrf	fsr2h,c
  3769   000C34  0E00               	movlw	0
  3770   000C36  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3771   000C38  0E01               	movlw	1
  3772   000C3A  6E02               	movwf	I2C_Master_Read@a^0,c
  3773   000C3C  EC3F  F00A         	call	_I2C_Master_Read	;wreg free
  3774   000C40  5002               	movf	?_I2C_Master_Read^0,w,c
  3775   000C42  ECD6  F00A         	call	_BCD2DEC
  3776   000C46  6EDF               	movwf	indf2,c
  3777   000C48                     
  3778                           ;ds1307.c: 72:     *min = BCD2DEC(I2C_Master_Read(1));
  3779   000C48  500F               	movf	RTC_GetDateTime@min^0,w,c
  3780   000C4A  6ED9               	movwf	fsr2l,c
  3781   000C4C  6ADA               	clrf	fsr2h,c
  3782   000C4E  0E00               	movlw	0
  3783   000C50  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3784   000C52  0E01               	movlw	1
  3785   000C54  6E02               	movwf	I2C_Master_Read@a^0,c
  3786   000C56  EC3F  F00A         	call	_I2C_Master_Read	;wreg free
  3787   000C5A  5002               	movf	?_I2C_Master_Read^0,w,c
  3788   000C5C  ECD6  F00A         	call	_BCD2DEC
  3789   000C60  6EDF               	movwf	indf2,c
  3790   000C62                     
  3791                           ;ds1307.c: 73:     *hour = BCD2DEC(I2C_Master_Read(1));
  3792   000C62  500E               	movf	RTC_GetDateTime@hour^0,w,c
  3793   000C64  6ED9               	movwf	fsr2l,c
  3794   000C66  6ADA               	clrf	fsr2h,c
  3795   000C68  0E00               	movlw	0
  3796   000C6A  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3797   000C6C  0E01               	movlw	1
  3798   000C6E  6E02               	movwf	I2C_Master_Read@a^0,c
  3799   000C70  EC3F  F00A         	call	_I2C_Master_Read	;wreg free
  3800   000C74  5002               	movf	?_I2C_Master_Read^0,w,c
  3801   000C76  ECD6  F00A         	call	_BCD2DEC
  3802   000C7A  6EDF               	movwf	indf2,c
  3803   000C7C                     
  3804                           ;ds1307.c: 74:     I2C_Master_Read(1);
  3805   000C7C  0E00               	movlw	0
  3806   000C7E  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3807   000C80  0E01               	movlw	1
  3808   000C82  6E02               	movwf	I2C_Master_Read@a^0,c
  3809   000C84  EC3F  F00A         	call	_I2C_Master_Read	;wreg free
  3810                           
  3811                           ;ds1307.c: 75:     *day = BCD2DEC(I2C_Master_Read(1));
  3812   000C88  5011               	movf	RTC_GetDateTime@day^0,w,c
  3813   000C8A  6ED9               	movwf	fsr2l,c
  3814   000C8C  6ADA               	clrf	fsr2h,c
  3815   000C8E  0E00               	movlw	0
  3816   000C90  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3817   000C92  0E01               	movlw	1
  3818   000C94  6E02               	movwf	I2C_Master_Read@a^0,c
  3819   000C96  EC3F  F00A         	call	_I2C_Master_Read	;wreg free
  3820   000C9A  5002               	movf	?_I2C_Master_Read^0,w,c
  3821   000C9C  ECD6  F00A         	call	_BCD2DEC
  3822   000CA0  6EDF               	movwf	indf2,c
  3823                           
  3824                           ;ds1307.c: 76:     *month = BCD2DEC(I2C_Master_Read(1));
  3825   000CA2  5012               	movf	RTC_GetDateTime@month^0,w,c
  3826   000CA4  6ED9               	movwf	fsr2l,c
  3827   000CA6  6ADA               	clrf	fsr2h,c
  3828   000CA8  0E00               	movlw	0
  3829   000CAA  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3830   000CAC  0E01               	movlw	1
  3831   000CAE  6E02               	movwf	I2C_Master_Read@a^0,c
  3832   000CB0  EC3F  F00A         	call	_I2C_Master_Read	;wreg free
  3833   000CB4  5002               	movf	?_I2C_Master_Read^0,w,c
  3834   000CB6  ECD6  F00A         	call	_BCD2DEC
  3835   000CBA  6EDF               	movwf	indf2,c
  3836                           
  3837                           ;ds1307.c: 77:     *year = BCD2DEC(I2C_Master_Read(0));
  3838   000CBC  5013               	movf	RTC_GetDateTime@year^0,w,c
  3839   000CBE  6ED9               	movwf	fsr2l,c
  3840   000CC0  6ADA               	clrf	fsr2h,c
  3841   000CC2  0E00               	movlw	0
  3842   000CC4  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  3843   000CC6  0E00               	movlw	0
  3844   000CC8  6E02               	movwf	I2C_Master_Read@a^0,c
  3845   000CCA  EC3F  F00A         	call	_I2C_Master_Read	;wreg free
  3846   000CCE  5002               	movf	?_I2C_Master_Read^0,w,c
  3847   000CD0  ECD6  F00A         	call	_BCD2DEC
  3848   000CD4  6EDF               	movwf	indf2,c
  3849   000CD6                     
  3850                           ;ds1307.c: 78:     I2C_Master_Stop();
  3851   000CD6  ECE8  F00A         	call	_I2C_Master_Stop	;wreg free
  3852   000CDA  0012               	return		;funcret
  3853   000CDC                     __end_of_RTC_GetDateTime:
  3854                           	callstack 0
  3855                           
  3856 ;; *************** function _I2C_Master_Write *****************
  3857 ;; Defined at:
  3858 ;;		line 32 in file "i2c.c"
  3859 ;; Parameters:    Size  Location     Type
  3860 ;;  d               2   11[COMRAM] unsigned int 
  3861 ;; Auto vars:     Size  Location     Type
  3862 ;;		None
  3863 ;; Return value:  Size  Location     Type
  3864 ;;                  1    wreg      unsigned char 
  3865 ;; Registers used:
  3866 ;;		wreg, status,2, status,0, cstack
  3867 ;; Tracked objects:
  3868 ;;		On entry : 0/0
  3869 ;;		On exit  : 0/0
  3870 ;;		Unchanged: 0/0
  3871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3872 ;;      Params:         2       0       0       0       0       0       0       0       0
  3873 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3874 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3875 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3876 ;;Total ram usage:        2 bytes
  3877 ;; Hardware stack levels used: 1
  3878 ;; Hardware stack levels required when called: 1
  3879 ;; This function calls:
  3880 ;;		_I2C_Master_Wait
  3881 ;; This function is called by:
  3882 ;;		_RTC_Init
  3883 ;;		_RTC_SetDateTime
  3884 ;;		_RTC_GetDateTime
  3885 ;; This function uses a non-reentrant model
  3886 ;;
  3887                           
  3888                           	psect	text21
  3889   0015C2                     __ptext21:
  3890                           	callstack 0
  3891   0015C2                     _I2C_Master_Write:
  3892                           	callstack 28
  3893   0015C2                     
  3894                           ;i2c.c: 33:     I2C_Master_Wait();
  3895   0015C2  ECA7  F00A         	call	_I2C_Master_Wait	;wreg free
  3896   0015C6                     
  3897                           ;i2c.c: 34:     SSPBUF = d;
  3898   0015C6  C00C  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
  3899                           
  3900                           ;i2c.c: 35:     I2C_Master_Wait();
  3901   0015CA  ECA7  F00A         	call	_I2C_Master_Wait	;wreg free
  3902   0015CE  0012               	return		;funcret
  3903   0015D0                     __end_of_I2C_Master_Write:
  3904                           	callstack 0
  3905                           
  3906 ;; *************** function _I2C_Master_Stop *****************
  3907 ;; Defined at:
  3908 ;;		line 27 in file "i2c.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      void 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3922 ;;      Params:         0       0       0       0       0       0       0       0       0
  3923 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3925 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3926 ;;Total ram usage:        0 bytes
  3927 ;; Hardware stack levels used: 1
  3928 ;; Hardware stack levels required when called: 1
  3929 ;; This function calls:
  3930 ;;		_I2C_Master_Wait
  3931 ;; This function is called by:
  3932 ;;		_RTC_Init
  3933 ;;		_RTC_SetDateTime
  3934 ;;		_RTC_GetDateTime
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text22
  3939   0015D0                     __ptext22:
  3940                           	callstack 0
  3941   0015D0                     _I2C_Master_Stop:
  3942                           	callstack 28
  3943   0015D0                     
  3944                           ;i2c.c: 28:     I2C_Master_Wait();
  3945   0015D0  ECA7  F00A         	call	_I2C_Master_Wait	;wreg free
  3946   0015D4                     
  3947                           ;i2c.c: 29:     PEN = 1;
  3948   0015D4  84C5               	bsf	4037,2,c	;volatile
  3949   0015D6  0012               	return		;funcret
  3950   0015D8                     __end_of_I2C_Master_Stop:
  3951                           	callstack 0
  3952                           
  3953 ;; *************** function _I2C_Master_Start *****************
  3954 ;; Defined at:
  3955 ;;		line 17 in file "i2c.c"
  3956 ;; Parameters:    Size  Location     Type
  3957 ;;		None
  3958 ;; Auto vars:     Size  Location     Type
  3959 ;;		None
  3960 ;; Return value:  Size  Location     Type
  3961 ;;                  1    wreg      void 
  3962 ;; Registers used:
  3963 ;;		wreg, status,2, status,0, cstack
  3964 ;; Tracked objects:
  3965 ;;		On entry : 0/0
  3966 ;;		On exit  : 0/0
  3967 ;;		Unchanged: 0/0
  3968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3969 ;;      Params:         0       0       0       0       0       0       0       0       0
  3970 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3972 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3973 ;;Total ram usage:        0 bytes
  3974 ;; Hardware stack levels used: 1
  3975 ;; Hardware stack levels required when called: 1
  3976 ;; This function calls:
  3977 ;;		_I2C_Master_Wait
  3978 ;; This function is called by:
  3979 ;;		_RTC_Init
  3980 ;;		_RTC_SetDateTime
  3981 ;;		_RTC_GetDateTime
  3982 ;; This function uses a non-reentrant model
  3983 ;;
  3984                           
  3985                           	psect	text23
  3986   0015D8                     __ptext23:
  3987                           	callstack 0
  3988   0015D8                     _I2C_Master_Start:
  3989                           	callstack 28
  3990   0015D8                     
  3991                           ;i2c.c: 18:     I2C_Master_Wait();
  3992   0015D8  ECA7  F00A         	call	_I2C_Master_Wait	;wreg free
  3993   0015DC                     
  3994                           ;i2c.c: 19:     SEN = 1;
  3995   0015DC  80C5               	bsf	4037,0,c	;volatile
  3996   0015DE  0012               	return		;funcret
  3997   0015E0                     __end_of_I2C_Master_Start:
  3998                           	callstack 0
  3999                           
  4000 ;; *************** function _I2C_Master_RepeatedStart *****************
  4001 ;; Defined at:
  4002 ;;		line 22 in file "i2c.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;		None
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  1    wreg      void 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0, cstack
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4016 ;;      Params:         0       0       0       0       0       0       0       0       0
  4017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4019 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4020 ;;Total ram usage:        0 bytes
  4021 ;; Hardware stack levels used: 1
  4022 ;; Hardware stack levels required when called: 1
  4023 ;; This function calls:
  4024 ;;		_I2C_Master_Wait
  4025 ;; This function is called by:
  4026 ;;		_RTC_Init
  4027 ;;		_RTC_GetDateTime
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text24
  4032   0015E0                     __ptext24:
  4033                           	callstack 0
  4034   0015E0                     _I2C_Master_RepeatedStart:
  4035                           	callstack 28
  4036   0015E0                     
  4037                           ;i2c.c: 23:     I2C_Master_Wait();
  4038   0015E0  ECA7  F00A         	call	_I2C_Master_Wait	;wreg free
  4039   0015E4                     
  4040                           ;i2c.c: 24:     RSEN = 1;
  4041   0015E4  82C5               	bsf	4037,1,c	;volatile
  4042   0015E6  0012               	return		;funcret
  4043   0015E8                     __end_of_I2C_Master_RepeatedStart:
  4044                           	callstack 0
  4045                           
  4046 ;; *************** function _I2C_Master_Read *****************
  4047 ;; Defined at:
  4048 ;;		line 39 in file "i2c.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;  a               2    1[COMRAM] unsigned short 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  temp            2    3[COMRAM] unsigned short 
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  2    1[COMRAM] unsigned short 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0, cstack
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4062 ;;      Params:         2       0       0       0       0       0       0       0       0
  4063 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4064 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4065 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4066 ;;Total ram usage:        4 bytes
  4067 ;; Hardware stack levels used: 1
  4068 ;; Hardware stack levels required when called: 1
  4069 ;; This function calls:
  4070 ;;		_I2C_Master_Wait
  4071 ;; This function is called by:
  4072 ;;		_RTC_Init
  4073 ;;		_RTC_GetDateTime
  4074 ;; This function uses a non-reentrant model
  4075 ;;
  4076                           
  4077                           	psect	text25
  4078   00147E                     __ptext25:
  4079                           	callstack 0
  4080   00147E                     _I2C_Master_Read:
  4081                           	callstack 28
  4082   00147E                     
  4083                           ;i2c.c: 40:     unsigned short temp;;i2c.c: 41:     I2C_Master_Wait();
  4084   00147E  ECA7  F00A         	call	_I2C_Master_Wait	;wreg free
  4085   001482                     
  4086                           ;i2c.c: 42:     RCEN = 1;
  4087   001482  86C5               	bsf	4037,3,c	;volatile
  4088                           
  4089                           ;i2c.c: 43:     I2C_Master_Wait();
  4090   001484  ECA7  F00A         	call	_I2C_Master_Wait	;wreg free
  4091   001488                     
  4092                           ;i2c.c: 44:     temp = SSPBUF;
  4093   001488  CFC9 F004          	movff	4041,I2C_Master_Read@temp	;volatile
  4094   00148C  6A05               	clrf	(I2C_Master_Read@temp+1)^0,c
  4095                           
  4096                           ;i2c.c: 45:     I2C_Master_Wait();
  4097   00148E  ECA7  F00A         	call	_I2C_Master_Wait	;wreg free
  4098   001492                     
  4099                           ;i2c.c: 46:     ACKDT = (a)?0:1;
  4100   001492  5002               	movf	I2C_Master_Read@a^0,w,c
  4101   001494  1003               	iorwf	(I2C_Master_Read@a+1)^0,w,c
  4102   001496  B4D8               	btfsc	status,2,c
  4103   001498  EF50  F00A         	goto	u991
  4104   00149C  EF53  F00A         	goto	u990
  4105   0014A0                     u991:
  4106   0014A0  8AC5               	bsf	4037,5,c	;volatile
  4107   0014A2  EF54  F00A         	goto	u1005
  4108   0014A6                     u990:
  4109   0014A6  9AC5               	bcf	4037,5,c	;volatile
  4110   0014A8                     u1005:
  4111   0014A8                     
  4112                           ;i2c.c: 47:     ACKEN = 1;
  4113   0014A8  88C5               	bsf	4037,4,c	;volatile
  4114   0014AA                     
  4115                           ;i2c.c: 48:     return temp;
  4116   0014AA  C004  F002         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
  4117   0014AE  C005  F003         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
  4118   0014B2  0012               	return		;funcret
  4119   0014B4                     __end_of_I2C_Master_Read:
  4120                           	callstack 0
  4121                           
  4122 ;; *************** function _I2C_Master_Wait *****************
  4123 ;; Defined at:
  4124 ;;		line 13 in file "i2c.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;		None
  4127 ;; Auto vars:     Size  Location     Type
  4128 ;;		None
  4129 ;; Return value:  Size  Location     Type
  4130 ;;                  1    wreg      void 
  4131 ;; Registers used:
  4132 ;;		wreg, status,2, status,0
  4133 ;; Tracked objects:
  4134 ;;		On entry : 0/0
  4135 ;;		On exit  : 0/0
  4136 ;;		Unchanged: 0/0
  4137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4138 ;;      Params:         0       0       0       0       0       0       0       0       0
  4139 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4140 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4141 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4142 ;;Total ram usage:        1 bytes
  4143 ;; Hardware stack levels used: 1
  4144 ;; This function calls:
  4145 ;;		Nothing
  4146 ;; This function is called by:
  4147 ;;		_I2C_Master_Start
  4148 ;;		_I2C_Master_RepeatedStart
  4149 ;;		_I2C_Master_Stop
  4150 ;;		_I2C_Master_Write
  4151 ;;		_I2C_Master_Read
  4152 ;; This function uses a non-reentrant model
  4153 ;;
  4154                           
  4155                           	psect	text26
  4156   00154E                     __ptext26:
  4157                           	callstack 0
  4158   00154E                     _I2C_Master_Wait:
  4159                           	callstack 28
  4160   00154E                     l1181:
  4161   00154E  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  4162   001552  0E1F               	movlw	31
  4163   001554  1601               	andwf	??_I2C_Master_Wait^0,f,c
  4164   001556  A4D8               	btfss	status,2,c
  4165   001558  EFB0  F00A         	goto	u381
  4166   00155C  EFB2  F00A         	goto	u380
  4167   001560                     u381:
  4168   001560  EFA7  F00A         	goto	l1181
  4169   001564                     u380:
  4170   001564  B4C7               	btfsc	199,2,c	;volatile
  4171   001566  EFB7  F00A         	goto	u391
  4172   00156A  EFB9  F00A         	goto	u390
  4173   00156E                     u391:
  4174   00156E  EFA7  F00A         	goto	l1181
  4175   001572                     u390:
  4176   001572  0012               	return		;funcret
  4177   001574                     __end_of_I2C_Master_Wait:
  4178                           	callstack 0
  4179                           
  4180 ;; *************** function _BCD2DEC *****************
  4181 ;; Defined at:
  4182 ;;		line 6 in file "ds1307.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;  val             1    wreg     unsigned char 
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;  val             1    1[COMRAM] unsigned char 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      unsigned char 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, prodl, prodh
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4196 ;;      Params:         0       0       0       0       0       0       0       0       0
  4197 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4198 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4199 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4200 ;;Total ram usage:        2 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; This function calls:
  4203 ;;		Nothing
  4204 ;; This function is called by:
  4205 ;;		_RTC_GetDateTime
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text27
  4210   0015AC                     __ptext27:
  4211                           	callstack 0
  4212   0015AC                     _BCD2DEC:
  4213                           	callstack 29
  4214                           
  4215                           ;incstack = 0
  4216                           ;BCD2DEC@val stored from wreg
  4217   0015AC  6E02               	movwf	BCD2DEC@val^0,c
  4218   0015AE                     
  4219                           ;ds1307.c: 7:     return ((val >> 4) * 10) + (val & 0x0F);
  4220   0015AE  C002  F001         	movff	BCD2DEC@val,??_BCD2DEC
  4221   0015B2  0E0F               	movlw	15
  4222   0015B4  1601               	andwf	??_BCD2DEC^0,f,c
  4223   0015B6  3802               	swapf	BCD2DEC@val^0,w,c
  4224   0015B8  0B0F               	andlw	15
  4225   0015BA  0D0A               	mullw	10
  4226   0015BC  50F3               	movf	243,w,c
  4227   0015BE  2401               	addwf	??_BCD2DEC^0,w,c
  4228   0015C0  0012               	return		;funcret
  4229   0015C2                     __end_of_BCD2DEC:
  4230                           	callstack 0
  4231                           
  4232 ;; *************** function _LCD_Init *****************
  4233 ;; Defined at:
  4234 ;;		line 3 in file "LCD.c"
  4235 ;; Parameters:    Size  Location     Type
  4236 ;;		None
  4237 ;; Auto vars:     Size  Location     Type
  4238 ;;		None
  4239 ;; Return value:  Size  Location     Type
  4240 ;;                  1    wreg      void 
  4241 ;; Registers used:
  4242 ;;		wreg, status,2, status,0, cstack
  4243 ;; Tracked objects:
  4244 ;;		On entry : 0/0
  4245 ;;		On exit  : 0/0
  4246 ;;		Unchanged: 0/0
  4247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4248 ;;      Params:         0       0       0       0       0       0       0       0       0
  4249 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4250 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4251 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4252 ;;Total ram usage:        1 bytes
  4253 ;; Hardware stack levels used: 1
  4254 ;; Hardware stack levels required when called: 1
  4255 ;; This function calls:
  4256 ;;		_LCD_Command
  4257 ;; This function is called by:
  4258 ;;		_main
  4259 ;; This function uses a non-reentrant model
  4260 ;;
  4261                           
  4262                           	psect	text28
  4263   00151C                     __ptext28:
  4264                           	callstack 0
  4265   00151C                     _LCD_Init:
  4266                           	callstack 29
  4267   00151C                     
  4268                           ;LCD.c: 4:     TRISD = 0;
  4269   00151C  6A95               	clrf	149,c	;volatile
  4270   00151E                     
  4271                           ;LCD.c: 5:     _delay((unsigned long)((15)*(8000000/4000.0)));
  4272   00151E  0E27               	movlw	39
  4273   001520  6E03               	movwf	??_LCD_Init^0,c
  4274   001522  0EF5               	movlw	245
  4275   001524                     u1147:
  4276   001524  2EE8               	decfsz	wreg,f,c
  4277   001526  D7FE               	bra	u1147
  4278   001528  2E03               	decfsz	??_LCD_Init^0,f,c
  4279   00152A  D7FC               	bra	u1147
  4280   00152C  0000               	nop	
  4281   00152E                     
  4282                           ;LCD.c: 6:     LCD_Command(0x02);
  4283   00152E  0E02               	movlw	2
  4284   001530  EC94  F009         	call	_LCD_Command
  4285   001534                     
  4286                           ;LCD.c: 7:     LCD_Command(0x28);
  4287   001534  0E28               	movlw	40
  4288   001536  EC94  F009         	call	_LCD_Command
  4289   00153A                     
  4290                           ;LCD.c: 8:     LCD_Command(0x01);
  4291   00153A  0E01               	movlw	1
  4292   00153C  EC94  F009         	call	_LCD_Command
  4293   001540                     
  4294                           ;LCD.c: 9:     LCD_Command(0x0C);
  4295   001540  0E0C               	movlw	12
  4296   001542  EC94  F009         	call	_LCD_Command
  4297   001546                     
  4298                           ;LCD.c: 10:     LCD_Command(0x06);
  4299   001546  0E06               	movlw	6
  4300   001548  EC94  F009         	call	_LCD_Command
  4301   00154C  0012               	return		;funcret
  4302   00154E                     __end_of_LCD_Init:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function _LCD_Command *****************
  4306 ;; Defined at:
  4307 ;;		line 13 in file "LCD.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;  cmd             1    wreg     unsigned char 
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  cmd             1    1[COMRAM] unsigned char 
  4312 ;; Return value:  Size  Location     Type
  4313 ;;                  1    wreg      void 
  4314 ;; Registers used:
  4315 ;;		wreg, status,2, status,0
  4316 ;; Tracked objects:
  4317 ;;		On entry : 0/0
  4318 ;;		On exit  : 0/0
  4319 ;;		Unchanged: 0/0
  4320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4321 ;;      Params:         0       0       0       0       0       0       0       0       0
  4322 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4323 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4324 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4325 ;;Total ram usage:        2 bytes
  4326 ;; Hardware stack levels used: 1
  4327 ;; This function calls:
  4328 ;;		Nothing
  4329 ;; This function is called by:
  4330 ;;		_LCD_Init
  4331 ;;		_LCD_String_xy
  4332 ;;		_LCD_Clear
  4333 ;;		_LCD_ClearLine
  4334 ;; This function uses a non-reentrant model
  4335 ;;
  4336                           
  4337                           	psect	text29
  4338   001328                     __ptext29:
  4339                           	callstack 0
  4340   001328                     _LCD_Command:
  4341                           	callstack 28
  4342                           
  4343                           ;incstack = 0
  4344                           ;LCD_Command@cmd stored from wreg
  4345   001328  6E02               	movwf	LCD_Command@cmd^0,c
  4346   00132A                     
  4347                           ;LCD.c: 14:     LATD = (unsigned char)((LATD & 0x0F) | (0xF0 & cmd));
  4348   00132A  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4349   00132E  0EF0               	movlw	240
  4350   001330  1601               	andwf	??_LCD_Command^0,f,c
  4351   001332  508C               	movf	140,w,c	;volatile
  4352   001334  0B0F               	andlw	15
  4353   001336  1001               	iorwf	??_LCD_Command^0,w,c
  4354   001338  6E8C               	movwf	140,c	;volatile
  4355   00133A                     
  4356                           ;LCD.c: 15:     LATD0 = 0;
  4357   00133A  908C               	bcf	3980,0,c	;volatile
  4358   00133C                     
  4359                           ;LCD.c: 16:     LATD1 = 1;
  4360   00133C  828C               	bsf	3980,1,c	;volatile
  4361   00133E                     
  4362                           ;LCD.c: 17:     __nop();
  4363   00133E  0000               	nop	
  4364   001340                     
  4365                           ;LCD.c: 18:     LATD1 = 0;
  4366   001340  928C               	bcf	3980,1,c	;volatile
  4367   001342                     
  4368                           ;LCD.c: 19:     _delay((unsigned long)((1)*(8000000/4000.0)));
  4369   001342  0E03               	movlw	3
  4370   001344  6E01               	movwf	??_LCD_Command^0,c
  4371   001346  0E98               	movlw	152
  4372   001348                     u1157:
  4373   001348  2EE8               	decfsz	wreg,f,c
  4374   00134A  D7FE               	bra	u1157
  4375   00134C  2E01               	decfsz	??_LCD_Command^0,f,c
  4376   00134E  D7FC               	bra	u1157
  4377   001350                     
  4378                           ;LCD.c: 21:     LATD = (unsigned char)((LATD & 0x0F) | ((cmd & 0x0F) << 4));
  4379   001350  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  4380   001354  0E0F               	movlw	15
  4381   001356  1601               	andwf	??_LCD_Command^0,f,c
  4382   001358  3A01               	swapf	??_LCD_Command^0,f,c
  4383   00135A  0EF0               	movlw	240
  4384   00135C  1601               	andwf	??_LCD_Command^0,f,c
  4385   00135E  508C               	movf	140,w,c	;volatile
  4386   001360  0B0F               	andlw	15
  4387   001362  1001               	iorwf	??_LCD_Command^0,w,c
  4388   001364  6E8C               	movwf	140,c	;volatile
  4389   001366                     
  4390                           ;LCD.c: 22:     LATD1 = 1;
  4391   001366  828C               	bsf	3980,1,c	;volatile
  4392   001368                     
  4393                           ;LCD.c: 23:     __nop();
  4394   001368  0000               	nop	
  4395   00136A                     
  4396                           ;LCD.c: 24:     LATD1 = 0;
  4397   00136A  928C               	bcf	3980,1,c	;volatile
  4398                           
  4399                           ;LCD.c: 25:     _delay((unsigned long)((3)*(8000000/4000.0)));
  4400   00136C  0E08               	movlw	8
  4401   00136E  6E01               	movwf	??_LCD_Command^0,c
  4402   001370  0ECA               	movlw	202
  4403   001372                     u1167:
  4404   001372  2EE8               	decfsz	wreg,f,c
  4405   001374  D7FE               	bra	u1167
  4406   001376  2E01               	decfsz	??_LCD_Command^0,f,c
  4407   001378  D7FC               	bra	u1167
  4408   00137A  0012               	return		;funcret
  4409   00137C                     __end_of_LCD_Command:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _I2C_Master_Init *****************
  4413 ;; Defined at:
  4414 ;;		line 4 in file "i2c.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  c               4   13[COMRAM] const unsigned long 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;		None
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg, status,2, status,0, cstack
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4428 ;;      Params:         4       0       0       0       0       0       0       0       0
  4429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4430 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4431 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4432 ;;Total ram usage:        8 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; Hardware stack levels required when called: 1
  4435 ;; This function calls:
  4436 ;;		___lldiv
  4437 ;; This function is called by:
  4438 ;;		_main
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text30
  4443   00127C                     __ptext30:
  4444                           	callstack 0
  4445   00127C                     _I2C_Master_Init:
  4446                           	callstack 29
  4447   00127C                     
  4448                           ;i2c.c: 5:     TRISB0 = 1;
  4449   00127C  8093               	bsf	3987,0,c	;volatile
  4450                           
  4451                           ;i2c.c: 6:     TRISB1 = 1;
  4452   00127E  8293               	bsf	3987,1,c	;volatile
  4453   001280                     
  4454                           ;i2c.c: 7:     SSPCON1 = 0b00101000;
  4455   001280  0E28               	movlw	40
  4456   001282  6EC6               	movwf	198,c	;volatile
  4457   001284                     
  4458                           ;i2c.c: 8:     SSPCON2 = 0;
  4459   001284  6AC5               	clrf	197,c	;volatile
  4460   001286                     
  4461                           ;i2c.c: 9:     SSPADD = (8000000 / (4 * c)) - 1;
  4462   001286  0E00               	movlw	0
  4463   001288  6E01               	movwf	___lldiv@dividend^0,c
  4464   00128A  0E12               	movlw	18
  4465   00128C  6E02               	movwf	(___lldiv@dividend+1)^0,c
  4466   00128E  0E7A               	movlw	122
  4467   001290  6E03               	movwf	(___lldiv@dividend+2)^0,c
  4468   001292  0E00               	movlw	0
  4469   001294  6E04               	movwf	(___lldiv@dividend+3)^0,c
  4470   001296  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
  4471   00129A  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
  4472   00129E  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
  4473   0012A2  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
  4474   0012A6  0E02               	movlw	2
  4475   0012A8                     u1055:
  4476   0012A8  90D8               	bcf	status,0,c
  4477   0012AA  3612               	rlcf	??_I2C_Master_Init^0,f,c
  4478   0012AC  3613               	rlcf	(??_I2C_Master_Init+1)^0,f,c
  4479   0012AE  3614               	rlcf	(??_I2C_Master_Init+2)^0,f,c
  4480   0012B0  3615               	rlcf	(??_I2C_Master_Init+3)^0,f,c
  4481   0012B2  2EE8               	decfsz	wreg,f,c
  4482   0012B4  EF54  F009         	goto	u1055
  4483   0012B8  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
  4484   0012BC  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
  4485   0012C0  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
  4486   0012C4  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
  4487   0012C8  EC78  F008         	call	___lldiv	;wreg free
  4488   0012CC  0401               	decf	?___lldiv^0,w,c
  4489   0012CE  6EC8               	movwf	200,c	;volatile
  4490   0012D0                     
  4491                           ;i2c.c: 10:     SSPSTAT = 0;
  4492   0012D0  6AC7               	clrf	199,c	;volatile
  4493   0012D2  0012               	return		;funcret
  4494   0012D4                     __end_of_I2C_Master_Init:
  4495                           	callstack 0
  4496                           
  4497 ;; *************** function ___lldiv *****************
  4498 ;; Defined at:
  4499 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\__lldiv.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  dividend        4    0[COMRAM] unsigned long 
  4502 ;;  divisor         4    4[COMRAM] unsigned long 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  quotient        4    8[COMRAM] unsigned long 
  4505 ;;  counter         1   12[COMRAM] unsigned char 
  4506 ;; Return value:  Size  Location     Type
  4507 ;;                  4    0[COMRAM] unsigned long 
  4508 ;; Registers used:
  4509 ;;		wreg, status,2, status,0
  4510 ;; Tracked objects:
  4511 ;;		On entry : 0/0
  4512 ;;		On exit  : 0/0
  4513 ;;		Unchanged: 0/0
  4514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4515 ;;      Params:         8       0       0       0       0       0       0       0       0
  4516 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4517 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4518 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4519 ;;Total ram usage:       13 bytes
  4520 ;; Hardware stack levels used: 1
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_I2C_Master_Init
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text31
  4529   0010F0                     __ptext31:
  4530                           	callstack 0
  4531   0010F0                     ___lldiv:
  4532                           	callstack 29
  4533   0010F0  0E00               	movlw	0
  4534   0010F2  6E09               	movwf	___lldiv@quotient^0,c
  4535   0010F4  0E00               	movlw	0
  4536   0010F6  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4537   0010F8  0E00               	movlw	0
  4538   0010FA  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4539   0010FC  0E00               	movlw	0
  4540   0010FE  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4541   001100  5005               	movf	___lldiv@divisor^0,w,c
  4542   001102  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4543   001104  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4544   001106  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4545   001108  B4D8               	btfsc	status,2,c
  4546   00110A  EF89  F008         	goto	u1011
  4547   00110E  EF8B  F008         	goto	u1010
  4548   001112                     u1011:
  4549   001112  EFC1  F008         	goto	l192
  4550   001116                     u1010:
  4551   001116  0E01               	movlw	1
  4552   001118  6E0D               	movwf	___lldiv@counter^0,c
  4553   00111A  EF95  F008         	goto	l1801
  4554   00111E                     l1799:
  4555   00111E  90D8               	bcf	status,0,c
  4556   001120  3605               	rlcf	___lldiv@divisor^0,f,c
  4557   001122  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4558   001124  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4559   001126  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4560   001128  2A0D               	incf	___lldiv@counter^0,f,c
  4561   00112A                     l1801:
  4562   00112A  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4563   00112C  EF9A  F008         	goto	u1021
  4564   001130  EF9C  F008         	goto	u1020
  4565   001134                     u1021:
  4566   001134  EF8F  F008         	goto	l1799
  4567   001138                     u1020:
  4568   001138                     l1803:
  4569   001138  90D8               	bcf	status,0,c
  4570   00113A  3609               	rlcf	___lldiv@quotient^0,f,c
  4571   00113C  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4572   00113E  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4573   001140  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4574   001142  5005               	movf	___lldiv@divisor^0,w,c
  4575   001144  5C01               	subwf	___lldiv@dividend^0,w,c
  4576   001146  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4577   001148  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4578   00114A  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4579   00114C  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  4580   00114E  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4581   001150  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  4582   001152  A0D8               	btfss	status,0,c
  4583   001154  EFAE  F008         	goto	u1031
  4584   001158  EFB0  F008         	goto	u1030
  4585   00115C                     u1031:
  4586   00115C  EFB9  F008         	goto	l1811
  4587   001160                     u1030:
  4588   001160  5005               	movf	___lldiv@divisor^0,w,c
  4589   001162  5E01               	subwf	___lldiv@dividend^0,f,c
  4590   001164  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4591   001166  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  4592   001168  5007               	movf	(___lldiv@divisor+2)^0,w,c
  4593   00116A  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  4594   00116C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  4595   00116E  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  4596   001170  8009               	bsf	___lldiv@quotient^0,0,c
  4597   001172                     l1811:
  4598   001172  90D8               	bcf	status,0,c
  4599   001174  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  4600   001176  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  4601   001178  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  4602   00117A  3205               	rrcf	___lldiv@divisor^0,f,c
  4603   00117C  2E0D               	decfsz	___lldiv@counter^0,f,c
  4604   00117E  EF9C  F008         	goto	l1803
  4605   001182                     l192:
  4606   001182  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4607   001186  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4608   00118A  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4609   00118E  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4610   001192  0012               	return		;funcret
  4611   001194                     __end_of___lldiv:
  4612                           	callstack 0
  4613                           
  4614                           	psect	rparam
  4615   000001                     ___rparam_used  equ	1
  4616   000000                     ___param_bank   equ	0
  4617   000000                     __Lparam        equ	__Lrparam
  4618   000000                     __Hparam        equ	__Hrparam
  4619                           
  4620                           	psect	idloc
  4621                           
  4622                           ;Config register IDLOC0 @ 0x200000
  4623                           ;	unspecified, using default values
  4624   200000                     	org	2097152
  4625   200000  FF                 	db	255
  4626                           
  4627                           ;Config register IDLOC1 @ 0x200001
  4628                           ;	unspecified, using default values
  4629   200001                     	org	2097153
  4630   200001  FF                 	db	255
  4631                           
  4632                           ;Config register IDLOC2 @ 0x200002
  4633                           ;	unspecified, using default values
  4634   200002                     	org	2097154
  4635   200002  FF                 	db	255
  4636                           
  4637                           ;Config register IDLOC3 @ 0x200003
  4638                           ;	unspecified, using default values
  4639   200003                     	org	2097155
  4640   200003  FF                 	db	255
  4641                           
  4642                           ;Config register IDLOC4 @ 0x200004
  4643                           ;	unspecified, using default values
  4644   200004                     	org	2097156
  4645   200004  FF                 	db	255
  4646                           
  4647                           ;Config register IDLOC5 @ 0x200005
  4648                           ;	unspecified, using default values
  4649   200005                     	org	2097157
  4650   200005  FF                 	db	255
  4651                           
  4652                           ;Config register IDLOC6 @ 0x200006
  4653                           ;	unspecified, using default values
  4654   200006                     	org	2097158
  4655   200006  FF                 	db	255
  4656                           
  4657                           ;Config register IDLOC7 @ 0x200007
  4658                           ;	unspecified, using default values
  4659   200007                     	org	2097159
  4660   200007  FF                 	db	255
  4661                           
  4662                           	psect	config
  4663                           
  4664                           ;Config register CONFIG1L @ 0x300000
  4665                           ;	PLL Prescaler Selection bits
  4666                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  4667                           ;	System Clock Postscaler Selection bits
  4668                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  4669                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  4670                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  4671   300000                     	org	3145728
  4672   300000  00                 	db	0
  4673                           
  4674                           ;Config register CONFIG1H @ 0x300001
  4675                           ;	Oscillator Selection bits
  4676                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  4677                           ;	Fail-Safe Clock Monitor Enable bit
  4678                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4679                           ;	Internal/External Oscillator Switchover bit
  4680                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4681   300001                     	org	3145729
  4682   300001  09                 	db	9
  4683                           
  4684                           ;Config register CONFIG2L @ 0x300002
  4685                           ;	Power-up Timer Enable bit
  4686                           ;	PWRT = OFF, PWRT disabled
  4687                           ;	Brown-out Reset Enable bits
  4688                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  4689                           ;	Brown-out Reset Voltage bits
  4690                           ;	BORV = 3, Minimum setting 2.05V
  4691                           ;	USB Voltage Regulator Enable bit
  4692                           ;	VREGEN = OFF, USB voltage regulator disabled
  4693   300002                     	org	3145730
  4694   300002  1F                 	db	31
  4695                           
  4696                           ;Config register CONFIG2H @ 0x300003
  4697                           ;	Watchdog Timer Enable bit
  4698                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4699                           ;	Watchdog Timer Postscale Select bits
  4700                           ;	WDTPS = 32768, 1:32768
  4701   300003                     	org	3145731
  4702   300003  1E                 	db	30
  4703                           
  4704                           ; Padding undefined space
  4705   300004                     	org	3145732
  4706   300004  FF                 	db	255
  4707                           
  4708                           ;Config register CONFIG3H @ 0x300005
  4709                           ;	CCP2 MUX bit
  4710                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  4711                           ;	PORTB A/D Enable bit
  4712                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  4713                           ;	Low-Power Timer 1 Oscillator Enable bit
  4714                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  4715                           ;	MCLR Pin Enable bit
  4716                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  4717   300005                     	org	3145733
  4718   300005  01                 	db	1
  4719                           
  4720                           ;Config register CONFIG4L @ 0x300006
  4721                           ;	Stack Full/Underflow Reset Enable bit
  4722                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4723                           ;	Single-Supply ICSP Enable bit
  4724                           ;	LVP = OFF, Single-Supply ICSP disabled
  4725                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  4726                           ;	ICPRT = OFF, ICPORT disabled
  4727                           ;	Extended Instruction Set Enable bit
  4728                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  4729                           ;	Background Debugger Enable bit
  4730                           ;	DEBUG = 0x1, unprogrammed default
  4731   300006                     	org	3145734
  4732   300006  81                 	db	129
  4733                           
  4734                           ; Padding undefined space
  4735   300007                     	org	3145735
  4736   300007  FF                 	db	255
  4737                           
  4738                           ;Config register CONFIG5L @ 0x300008
  4739                           ;	Code Protection bit
  4740                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  4741                           ;	Code Protection bit
  4742                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  4743                           ;	Code Protection bit
  4744                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  4745                           ;	Code Protection bit
  4746                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  4747   300008                     	org	3145736
  4748   300008  0F                 	db	15
  4749                           
  4750                           ;Config register CONFIG5H @ 0x300009
  4751                           ;	Boot Block Code Protection bit
  4752                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  4753                           ;	Data EEPROM Code Protection bit
  4754                           ;	CPD = OFF, Data EEPROM is not code-protected
  4755   300009                     	org	3145737
  4756   300009  C0                 	db	192
  4757                           
  4758                           ;Config register CONFIG6L @ 0x30000A
  4759                           ;	Write Protection bit
  4760                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  4761                           ;	Write Protection bit
  4762                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  4763                           ;	Write Protection bit
  4764                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  4765                           ;	Write Protection bit
  4766                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  4767   30000A                     	org	3145738
  4768   30000A  0F                 	db	15
  4769                           
  4770                           ;Config register CONFIG6H @ 0x30000B
  4771                           ;	Configuration Register Write Protection bit
  4772                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4773                           ;	Boot Block Write Protection bit
  4774                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  4775                           ;	Data EEPROM Write Protection bit
  4776                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4777   30000B                     	org	3145739
  4778   30000B  E0                 	db	224
  4779                           
  4780                           ;Config register CONFIG7L @ 0x30000C
  4781                           ;	Table Read Protection bit
  4782                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4783                           ;	Table Read Protection bit
  4784                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4785                           ;	Table Read Protection bit
  4786                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4787                           ;	Table Read Protection bit
  4788                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  4789   30000C                     	org	3145740
  4790   30000C  0F                 	db	15
  4791                           
  4792                           ;Config register CONFIG7H @ 0x30000D
  4793                           ;	Boot Block Table Read Protection bit
  4794                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  4795   30000D                     	org	3145741
  4796   30000D  40                 	db	64
  4797                           tosu	equ	0xFFF
  4798                           tosh	equ	0xFFE
  4799                           tosl	equ	0xFFD
  4800                           stkptr	equ	0xFFC
  4801                           pclatu	equ	0xFFB
  4802                           pclath	equ	0xFFA
  4803                           pcl	equ	0xFF9
  4804                           tblptru	equ	0xFF8
  4805                           tblptrh	equ	0xFF7
  4806                           tblptrl	equ	0xFF6
  4807                           tablat	equ	0xFF5
  4808                           prodh	equ	0xFF4
  4809                           prodl	equ	0xFF3
  4810                           indf0	equ	0xFEF
  4811                           postinc0	equ	0xFEE
  4812                           postdec0	equ	0xFED
  4813                           preinc0	equ	0xFEC
  4814                           plusw0	equ	0xFEB
  4815                           fsr0h	equ	0xFEA
  4816                           fsr0l	equ	0xFE9
  4817                           wreg	equ	0xFE8
  4818                           indf1	equ	0xFE7
  4819                           postinc1	equ	0xFE6
  4820                           postdec1	equ	0xFE5
  4821                           preinc1	equ	0xFE4
  4822                           plusw1	equ	0xFE3
  4823                           fsr1h	equ	0xFE2
  4824                           fsr1l	equ	0xFE1
  4825                           bsr	equ	0xFE0
  4826                           indf2	equ	0xFDF
  4827                           postinc2	equ	0xFDE
  4828                           postdec2	equ	0xFDD
  4829                           preinc2	equ	0xFDC
  4830                           plusw2	equ	0xFDB
  4831                           fsr2h	equ	0xFDA
  4832                           fsr2l	equ	0xFD9
  4833                           status	equ	0xFD8

Data Sizes:
    Strings     74
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     89      94
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer(COMRAM[17]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer(COMRAM[17]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> main@buffer(COMRAM[17]), STR_1(CODE[17]), STR_4(CODE[13]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 17
		 -> main@buffer(COMRAM[17]), STR_1(CODE[17]), STR_4(CODE[13]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    RTC_GetDateTime@day	PTR unsigned char  size(1) Largest target is 1
		 -> main@d(COMRAM[1]), 

    RTC_GetDateTime@hour	PTR unsigned char  size(1) Largest target is 1
		 -> main@h(COMRAM[1]), 

    RTC_GetDateTime@min	PTR unsigned char  size(1) Largest target is 1
		 -> main@m(COMRAM[1]), 

    RTC_GetDateTime@month	PTR unsigned char  size(1) Largest target is 1
		 -> main@mo(COMRAM[1]), 

    RTC_GetDateTime@sec	PTR unsigned char  size(1) Largest target is 1
		 -> main@s(COMRAM[1]), 

    RTC_GetDateTime@year	PTR unsigned char  size(1) Largest target is 1
		 -> main@y(COMRAM[1]), 

    S682$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer(COMRAM[17]), 

    S682$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_2(CODE[23]), STR_3(CODE[21]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main@buffer(COMRAM[17]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 23
		 -> STR_2(CODE[23]), STR_3(CODE[21]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 23
		 -> STR_2(CODE[23]), STR_3(CODE[21]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 23
		 -> STR_2(CODE[23]), STR_3(CODE[21]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _RTC_SetDateTime->_I2C_Master_Write
    _DEC2BCD->___awdiv
    _RTC_Init->_I2C_Master_Write
    _RTC_Init->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _RTC_GetDateTime->_I2C_Master_Write
    _I2C_Master_Write->_DEC2BCD
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait
    _LCD_Init->_LCD_Command
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                25    25      0    5608
                                             64 COMRAM    25    25      0
                    _I2C_Master_Init
                          _LCD_Clear
                           _LCD_Init
                      _LCD_String_xy
                    _RTC_GetDateTime
                           _RTC_Init
                    _RTC_SetDateTime
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             22    14      8    3007
                                             44 COMRAM    20    12      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2802
                                             40 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           10     7      3    2668
                                             31 COMRAM     9     6      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    1829
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4     747
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2     333
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _RTC_SetDateTime                                      8     3      5     847
                                             13 COMRAM     7     2      5
                            _DEC2BCD
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _DEC2BCD                                              3     3      0     662
                                              8 COMRAM     3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     300
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     304
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _RTC_Init                                             3     3      0     508
                                             13 COMRAM     3     3      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        9     6      3     312
                                              4 COMRAM     9     6      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     104
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            1     1      0      58
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _RTC_GetDateTime                                      6     0      6     261
                                             13 COMRAM     6     0      6
                            _BCD2DEC
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2      40
                                             11 COMRAM     2     0      2
                            _DEC2BCD (ARG)
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      4     2      2      53
                                              1 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _BCD2DEC                                              2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      58
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      58
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     187
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     164
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _LCD_Clear
     _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _RTC_GetDateTime
     _BCD2DEC
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _DEC2BCD (ARG)
         ___awdiv
         ___awmod
       _I2C_Master_Wait (ARG)
   _RTC_Init
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _LCD_Clear
     _LCD_String_xy
   _RTC_SetDateTime
     _DEC2BCD
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      32     20.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     89      94     98.9%
BITBIGSFRh          58      0       0      0.0%
BITBIGSFRlh         49      0       0      0.0%
BITBIGSFRlll        44      0       0      0.0%
BITBIGSFRllh         6      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     126      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Mon May 05 10:45:45 2025

               _LCD_String_xy$161 000B                      ?_LCD_Command 0001                                l50 137A  
                              l53 1326                                l47 154C                                l66 13CC  
                              l59 127A                                l69 15AA                                l97 15C0  
                    ___awdiv@sign 0006                       ?_LCD_String 0003                   __end_of_BCD2DEC 15C2  
                             l100 147C                               l110 0CDA                               l104 0E4E  
                             l107 10EE                               l141 12D2                               l150 15DE  
                             l153 15E6                               l162 14B2                               l147 1572  
                             l156 15D6                               l159 15CE                               l192 1182  
                             l409 0EFC                               l199 1192                               l396 0D9C  
                             l920 151A                               l913 140A                               l907 0B06  
                             l843 14E6                               l932 0FA6                               l940 1446  
                             l917 1502                               l943 15E8                               l863 11C4  
                             l871 08AA                               l866 1202                               l868 121C  
                             l884 09AE                               l892 104A                               l888 1042  
                             u600 1446                               _PEN 7E2A                               u601 1442  
                             u610 0CEC                               u611 0CE8                               u380 1564  
                             u620 0D06                               u700 0EB2                               u381 1560  
                             u621 0D02                               u701 0EAE                               u390 1572  
                             u630 0D2C                               u710 0EC8                               u391 156E  
                             u631 0D28                               u711 0EC4                               u640 0D4A  
                             u720 0EEC                               u560 0F0E                               u800 087C  
                             u641 0D46                               u721 0EE8                               u561 0F0A  
                             u801 0878                               u650 0D66                               u570 0F1E  
                             u730 11A2                               u810 0892                               u651 0D62  
                             u571 0F1A                               u731 119E                               u811 088E  
                             u900 1242                               u660 0D8C                               u580 0F44  
                             u740 11BC                               u820 092C                               _SEN 7E28  
                             u661 0D88                   __end_of_DEC2BCD 147E                               u581 0F40  
                             u741 11B8                               u821 0928                               u910 126A  
                             u670 0E60                               u590 0F76                               u750 1202  
                             u830 093E                               u671 0E5C                               u591 0F72  
                             u751 11FE                               u831 093A                               u920 127A  
                             u680 0E7A                               u760 1210                               u840 094E  
                             u921 1276                               u681 0E76                               u761 120C  
                             u841 094A                               u690 0E94                               u770 14F6  
                             u850 0968                               u930 09D2                               u907 1238  
                             u691 0E90                               u771 14F2                               u851 0964  
                             u931 09CE                               u860 0976                               u780 0860  
                             u940 0A34                               u917 1260                               u861 0972  
                             u781 085A                               u941 0A30                               u870 0986  
                             u790 0862                               u950 0A56                               u871 0982  
                             u951 0A52                               u880 0FD2                               u960 0A86  
                             u881 0FCE                               u961 0A82                               u890 1042  
                             u970 0AA2                               u891 103E                               u971 0A9E  
                             u980 138E                               u981 138A                               u990 14A6  
                             u991 14A0           __end_of_RTC_SetDateTime 10F0                               _abs 14E8  
                             _pad 1194                      ___awmod@sign 0006                               wreg 0FE8  
                     LCD_Char@dat 0002                              ?_abs 0007                              l1253 15AE  
                            l1181 154E                              l1261 15D8                              l1501 0D12  
                            l1183 1564                              l1263 15DC                              l1511 0D4A  
                            l1503 0D1A                              l1273 15E0                              l1601 1312  
                            l1521 0D76                              l1513 0D50                              l1505 0D2C  
                            l1179 154E                              l1275 15E4                              l1291 15D0  
                            l1603 1314                              l1515 0D66                              l1507 0D34  
                            l1523 0D7C                              l1531 0E50                              l1611 0864  
                            l1293 15D4                              l1605 1316                              l1525 0D8C  
                            l1517 0D6E                              l1509 0D3C                              l1541 0E7A  
                            l1533 0E52                              l1621 089E                              l1613 086C  
                            l1701 09D2                              l1527 0D94                              l1519 0D70  
                            l1551 0EB2                              l1543 0E82                              l1535 0E60  
                            l1471 0F28                              l1631 08EE                              l1623 08A6  
                            l1615 087C                              l1607 084C                              l1711 09F2  
                            l1703 09DA                              l1801 112A                              l1561 0EEC  
                            l1553 0EC8                              l1545 0E94                              l1537 0E68  
                            l1473 0F44                              l1465 0EFE                              l1481 1418  
                            l1641 093E                              l1633 08F0                              l1625 08B2  
                            l1617 0882                              l1609 0850                              l1721 0A34  
                            l1713 09FE                              l1705 09E6                              l1811 1172  
                            l1803 1138                              l1491 0CEC                              l1563 0EF4  
                            l1555 0ED0                              l1547 0E9C                              l1539 0E6C  
                            l1475 0F76                              l1467 0F0E                              l1483 1426  
                            l1571 11AE                              l1651 098C                              l1643 094E  
                            l1635 08F6                              l1627 08BA                              l1619 0892  
                            l1731 0A86                              l1723 0A48                              l1707 09EA  
                            l1813 117C                              l1805 1142                              l1901 0C7C  
                            l1493 0CF4                              l1557 0ED6                              l1549 0EA4  
                            l1469 0F1E                              l1485 142A                              l1581 1210  
                            l1573 11BC                              l1653 0998                              l1645 0968  
                            l1629 08C0                              l1637 0912                              l1661 0FD2  
                            l1741 0AD8                              l1733 0AA2                              l1725 0A56  
                            l1717 0A06                              l1709 09F0                              l1821 1402  
                            l1807 1160                              l1671 132A                              l1831 1534  
                            l1903 0CD6                              l1751 1594                              l1591 12E8  
                            l1495 0CF8                              l1487 0CDC                              l1559 0EDC  
                            l1583 14E8                              l1479 140C                              l1575 11D0  
                            l1567 1194                              l1639 092C                              l1647 0976  
                            l1663 0FDA                              l1735 0ABA                              l1727 0A60  
                            l1719 0A24                              l1815 13CE                              l1911 14CC  
                            l1809 1170                              l1841 1280                              l1681 1342  
                            l1673 133A                              l1833 153A                              l1825 151C  
                            l1753 159A                              l1593 12EA                              l1761 13B6  
                            l1497 0D06                              l1489 0CDE                              l1585 14F6  
                            l1577 11E0                              l1569 11A2                              l1649 0986  
                            l1665 0FF6                              l1657 0FA8                              l1737 0AC4  
                            l1729 0A6A                              l1745 0AE4                              l1817 13D6  
                            l1913 14DC                              l1905 14B4                              l1921 0B1C  
                            l1843 1284                              l1683 1350                              l1675 133C  
                            l1835 1540                              l1827 151E                              l1771 15C2  
                            l1595 12EC                              l1587 12D6                              l1691 121E  
                            l1763 13BA                              l1755 137E                              l1851 0DDE  
                            l1499 0D0E                              l1579 11E4                              l1667 1014  
                            l1659 0FB0                              l1819 13E6                              l1907 14BC  
                            l1931 0B68                              l1923 0B20                              l1845 1286  
                            l1685 1366                              l1677 133E                              l1837 1546  
                            l1829 152E                              l1781 1482                              l1773 15C6  
                            l1597 12EE                              l1589 12E6                              l1693 1222  
                            l1765 13C0                              l1757 138E                              l1861 0E20  
                            l1853 0DEC                              l1669 101C                              l1909 14C4  
                            l1941 0BD4                              l1933 0B6C                              l1925 0B34  
                            l1917 0B08                              l1847 12D0                              l1839 127C  
                            l1687 1368                              l1679 1340                              l1783 1488  
                            l1775 15CE                              l1599 12FC                              l1695 1246  
                            l1759 13A4                              l1863 0E2C                              l1855 0DF0  
                            l1767 144A                              l1871 1050                              l1943 0BE4  
                            l1935 0B88                              l1927 0B4A                              l1919 0B18  
                            l1793 10F0                              l1689 136A                              l1785 1492  
                            l1697 124A                              l1865 0E38                              l1857 0E06  
                            l1849 0D9E                              l1881 1090                              l1873 1054  
                            l1937 0BA6                              l1929 0B4E                              l1795 1100  
                            l1787 14A8                              l1779 147E                              l1867 0E4A  
                            l1859 0E1C                              l1891 10EA                              l1883 10A2  
                            l1875 1060                              l1699 09B0                              l1939 0BB6  
                            l1797 1116                              l1789 14AA                              l1893 0C02  
                            l1885 10B4                              l1877 106C                              l1869 104E  
                            ?_pad 000E                              l1799 111E                              l1895 0C2E  
                            l1887 10C6                              l1879 107E                              l1897 0C48  
                            l1889 10D8                              l1899 0C62                              STR_1 082D  
                            STR_2 0801                              STR_3 0818                              STR_4 083E  
                            u1010 1116                              u1011 1112                              u1020 1138  
                            u1021 1134                              u1005 14A8                              u1030 1160  
                            u1031 115C                              u1040 1402                              u1041 13FE  
                            u1107 0E10                              u1060 0DEC                              u1117 12F4  
                            u1061 0DE8                              u1055 12A8                              u1127 131E  
                            u1137 15A0                              u1147 1524                              u1157 1348  
                            u1167 1372                              _LATD 0F8C                              u1097 0BEE  
                            _RCEN 7E2B                              _RSEN 7E29                              abs@a 0007  
                            _dbuf 0060  __end_of_I2C_Master_RepeatedStart 15E8                              _main 0B08  
                            _dtoa 084C                              _prec 005C                              pad@i 0013  
                            pad@p 0010                              fsr1h 0FE2                              fsr2h 0FDA  
                            indf1 0FE7                              indf2 0FDF                              fsr1l 0FE1  
                            fsr2l 0FD9                              prodh 0FF4                              prodl 0FF3  
                            start 0000                     _LCD_String_xy 137C                      ___param_bank 0000  
                           ??_abs 0009                             ??_pad 0012                  __end_of_LCD_Char 1328  
                __end_of_LCD_Init 154E                  ?_I2C_Master_Init 000E                  ?_I2C_Master_Read 0002  
                ?_I2C_Master_Wait 0001                  ?_I2C_Master_Stop 0001                             ?_main 0001  
                           ?_dtoa 0015                             _ACKEN 7E2C                             _ACKDT 7E2D  
                 __end_of___awdiv 0D9E                   __end_of___awmod 0EFE                   __end_of___lldiv 1194  
                 ___awdiv@divisor 0003                             _LATD0 7C60                             _LATD1 7C61  
                 ___awdiv@counter 0005                      vfpfcnvrt@fmt 0021                             _TRISD 0F95  
                           _flags 005E               read_prec_or_width@c 0005               read_prec_or_width@n 0006  
                           _fputc 0EFE                             _fputs 140C                  __end_of_RTC_Init 0E50  
                           pad@fp 000E                             _width 005A                             _putch 15E8  
                           main@d 0057                             main@h 0054                             main@m 0055  
                           dtoa@d 0016                             main@s 0056                             dtoa@i 001E  
                           main@y 0059                             dtoa@p 001A                             dtoa@s 001D  
                           dtoa@w 001B                             tablat 0FF5                             status 0FD8  
                 __end_of_sprintf 14E8                    ?_LCD_String_xy 0005                   __initialization 1574  
                    __end_of_main 0C02                      __end_of_dtoa 09B0                         ??_BCD2DEC 0001  
                       ??_DEC2BCD 0009                            ??_main 0041                            ??_dtoa 0018  
               __end_of_LCD_Clear 15AC                     __activetblptr 0002                  ?_RTC_SetDateTime 000E  
      __end_of_read_prec_or_width 104C                 ?_I2C_Master_Start 0001                 ?_I2C_Master_Write 000C  
              ??_I2C_Master_Start 0002                            _ADCON1 0FC1                ??_I2C_Master_Write 000E  
                          ?_fputc 0001                            ?_fputs 0009                  ___awdiv@dividend 0001  
                          ?_putch 0001                  LCD_String_xy@msg 0006                  LCD_String_xy@pos 0005  
                LCD_String_xy@row 000A                     vfpfcnvrt@done 0027                            _SSPADD 0FC8  
                          _TRISB0 7C98                            _TRISB1 7C99                            _SSPBUF 0FC9  
        _I2C_Master_RepeatedStart 15E0                      vfprintf@cfmt 002C                         ??___awdiv 0005  
                       ??___awmod 0005                         ??___lldiv 0009              read_prec_or_width@ap 0002  
                          clear_0 157A                  ___awdiv@quotient 0007                   ___awmod@divisor 0003  
                          isa$std 0001                   ___awmod@counter 0005                            pad@buf 000F  
                          main@mo 0058                            dtoa@fp 0015                            fputc@c 0001  
                          fputs@c 000B                            fputs@i 000C                            fputs@s 0009  
                      BCD2DEC@val 0002                      __mediumconst 0000                            tblptrh 0FF7  
                          tblptrl 0FF6                            tblptru 0FF8                            putch@c 0001  
                __end_of_vfprintf 140C                         ??_sprintf 0035                         ?_LCD_Char 0001  
                      __accesstop 0060           __end_of__initialization 158A                         ?_LCD_Init 0001  
                 ??_LCD_String_xy 0008                     ___rparam_used 0001                    __pcstackCOMRAM 0001  
                      DEC2BCD@val 000B                     __end_of_fputc 0FA8                     __end_of_fputs 1448  
                   __end_of_putch 15EA                      ??_LCD_String 0005                         ?_RTC_Init 0001  
                         ??_fputc 0004                           ??_fputs 000B                           ??_putch 0001  
                      __pbssBANK0 0060                        ??_LCD_Char 0001                        ??_LCD_Init 0003  
              __end_of_LCD_String 127C                           _BCD2DEC 15AC                           _DEC2BCD 1448  
                         _ACKSTAT 7E2E                        ??_RTC_Init 000E                           _SSPCON1 0FC6  
                         _SSPCON2 0FC5                           _SSPSTAT 0FC7                     LCD_String@msg 0003  
                         __Hparam 0000                           __Lparam 0000                           ___awdiv 0CDC  
                         ___awmod 0E50                           ___lldiv 10F0                         ?_vfprintf 0029  
                    __psmallconst 0800                           __pcinit 1574                           __ramtop 0800  
                         __ptext0 0B08                           __ptext1 14B4                           __ptext2 13CE  
                         __ptext3 09B0                           __ptext4 0FA8                           __ptext5 084C  
                         __ptext6 1194                           __ptext7 140C                           __ptext8 0EFE  
                         __ptext9 15E8             read_prec_or_width@fmt 0001                  ___awmod@dividend 0001  
                       _LCD_Clear 1594                           _sprintf 14B4              end_of_initialization 158A  
      ??_I2C_Master_RepeatedStart 0002                           fputc@fp 0003                    LCD_Command@cmd 0002  
                   __Lmediumconst 0000                           fputs@fp 000A                _read_prec_or_width 0FA8  
               ??_RTC_GetDateTime 0014                   ___lldiv@divisor 0005                   ___lldiv@counter 000D  
               __end_of_vfpfcnvrt 0B08                  I2C_Master_Init@c 000E                  I2C_Master_Read@a 0002  
                         postdec2 0FDD               ?_read_prec_or_width 0001                           postinc0 0FEE  
                         postinc1 0FE6                           postinc2 0FDE                  vfpfcnvrt@convarg 0023  
                      ??_vfprintf 002C                        ?_LCD_Clear 0001              ??_read_prec_or_width 0003  
                      main@buffer 0043                     ??_LCD_Command 0001                       vfpfcnvrt@ap 0022  
                     vfpfcnvrt@cp 0028                       vfpfcnvrt@fp 0020                       RTC_Init@sec 0010  
             start_initialization 1574                       __end_of_abs 151C                       __end_of_pad 121E  
               RTC_SetDateTime@mo 0011                 ??_I2C_Master_Init 0012                 ??_I2C_Master_Read 0004  
               ??_I2C_Master_Wait 0001                 ??_I2C_Master_Stop 0002             __end_of_LCD_String_xy 13CE  
                     vfprintf@fmt 002A                          ?_BCD2DEC 0001                          ?_DEC2BCD 0001  
            RTC_GetDateTime@month 0012               __end_of_LCD_Command 137C                       __pbssCOMRAM 005A  
                     ??_LCD_Clear 0003                  _I2C_Master_Start 15D8                  _I2C_Master_Write 15C2  
               ??_RTC_SetDateTime 0013                          ?___awdiv 0001                          ?___awmod 0001  
                        ?___lldiv 0001                       __smallconst 0800                   _RTC_GetDateTime 0C02  
           LCD_String_xy@location 000D                          ?_sprintf 002D                          _LCD_Char 12D4  
                        _LCD_Init 151C                       _LCD_Command 1328                         _vfpfcnvrt 09B0  
                        _RTC_Init 0D9E               I2C_Master_Read@temp 0004                  RTC_SetDateTime@d 0010  
                RTC_SetDateTime@h 0014                  RTC_SetDateTime@m 000E                  RTC_SetDateTime@s 000F  
                RTC_SetDateTime@y 0012                          __Hrparam 0000                        vfprintf@ap 002B  
                        __Lrparam 0000                        vfprintf@fp 0029               RTC_GetDateTime@hour 000E  
             RTC_GetDateTime@year 0013         ?_I2C_Master_RepeatedStart 0001                        ?_vfpfcnvrt 0020  
         __end_of_RTC_GetDateTime 0CDC                        sprintf@fmt 002E                   _I2C_Master_Init 127C  
                 _I2C_Master_Read 147E                   _I2C_Master_Wait 154E                   _I2C_Master_Stop 15D0  
                        _dtoa$761 0018                          __ptext10 14E8                          __ptext11 104C  
                        __ptext20 0C02                          __ptext12 1448                          __ptext21 15C2  
                        __ptext13 0E50                          __ptext30 127C                          __ptext22 15D0  
                        __ptext14 0CDC                          __ptext31 10F0                          __ptext23 15D8  
                        __ptext15 0D9E                          __ptext24 15E0                          __ptext16 137C  
                        __ptext25 147E                          __ptext17 121E                          __ptext26 154E  
                        __ptext18 12D4                          __ptext27 15AC                          __ptext19 1594  
                        __ptext28 151C                          __ptext29 1328                          isa$xinst 0000  
                        _vfprintf 13CE                        _LCD_String 121E          __end_of_I2C_Master_Start 15E0  
        __end_of_I2C_Master_Write 15D0                RTC_GetDateTime@day 0011                RTC_GetDateTime@min 000F  
              RTC_GetDateTime@sec 0010                   _RTC_SetDateTime 104C                         sprintf@ap 0035  
                ___lldiv@dividend 0001                        _OSCCONbits 0FD3           __end_of_I2C_Master_Init 12D4  
         __end_of_I2C_Master_Read 14B4           __end_of_I2C_Master_Wait 1574           __end_of_I2C_Master_Stop 15D8  
                     ??_vfpfcnvrt 0023                  ?_RTC_GetDateTime 000E                          sprintf@f 0036  
                        sprintf@s 002D                  ___lldiv@quotient 0009                 I2C_Master_Write@d 000C  
