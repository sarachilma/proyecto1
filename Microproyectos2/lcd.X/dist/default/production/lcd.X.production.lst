

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Fri Mar 28 14:54:38 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    21                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    22   000000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC18F4550 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57   000FE0                     bsr             equ	4064
    58   000FE9                     fsr0            equ	4073
    59   000FEA                     fsr0h           equ	4074
    60   000FE9                     fsr0l           equ	4073
    61   000FE1                     fsr1            equ	4065
    62   000FE2                     fsr1h           equ	4066
    63   000FE1                     fsr1l           equ	4065
    64   000FD9                     fsr2            equ	4057
    65   000FDA                     fsr2h           equ	4058
    66   000FD9                     fsr2l           equ	4057
    67   000FEF                     indf0           equ	4079
    68   000FE7                     indf1           equ	4071
    69   000FDF                     indf2           equ	4063
    70   000FF2                     intcon          equ	4082
    71   000000                     nvmcon          equ	0
    72   000FF9                     pcl             equ	4089
    73   000FFA                     pclath          equ	4090
    74   000FFB                     pclatu          equ	4091
    75   000FEB                     plusw0          equ	4075
    76   000FE3                     plusw1          equ	4067
    77   000FDB                     plusw2          equ	4059
    78   000FED                     postdec0        equ	4077
    79   000FE5                     postdec1        equ	4069
    80   000FDD                     postdec2        equ	4061
    81   000FEE                     postinc0        equ	4078
    82   000FE6                     postinc1        equ	4070
    83   000FDE                     postinc2        equ	4062
    84   000FEC                     preinc0         equ	4076
    85   000FE4                     preinc1         equ	4068
    86   000FDC                     preinc2         equ	4060
    87   000FF3                     prod            equ	4083
    88   000FF4                     prodh           equ	4084
    89   000FF3                     prodl           equ	4083
    90   000FD8                     status          equ	4056
    91   000FF5                     tablat          equ	4085
    92   000FF6                     tblptr          equ	4086
    93   000FF7                     tblptrh         equ	4087
    94   000FF6                     tblptrl         equ	4086
    95   000FF8                     tblptru         equ	4088
    96   000FFD                     tosl            equ	4093
    97   000FE8                     wreg            equ	4072
    98   000F62                     SPPDATA         equ	3938	;# 
    99   000F63                     SPPCFG          equ	3939	;# 
   100   000F64                     SPPEPS          equ	3940	;# 
   101   000F65                     SPPCON          equ	3941	;# 
   102   000F66                     UFRM            equ	3942	;# 
   103   000F66                     UFRML           equ	3942	;# 
   104   000F67                     UFRMH           equ	3943	;# 
   105   000F68                     UIR             equ	3944	;# 
   106   000F69                     UIE             equ	3945	;# 
   107   000F6A                     UEIR            equ	3946	;# 
   108   000F6B                     UEIE            equ	3947	;# 
   109   000F6C                     USTAT           equ	3948	;# 
   110   000F6D                     UCON            equ	3949	;# 
   111   000F6E                     UADDR           equ	3950	;# 
   112   000F6F                     UCFG            equ	3951	;# 
   113   000F70                     UEP0            equ	3952	;# 
   114   000F71                     UEP1            equ	3953	;# 
   115   000F72                     UEP2            equ	3954	;# 
   116   000F73                     UEP3            equ	3955	;# 
   117   000F74                     UEP4            equ	3956	;# 
   118   000F75                     UEP5            equ	3957	;# 
   119   000F76                     UEP6            equ	3958	;# 
   120   000F77                     UEP7            equ	3959	;# 
   121   000F78                     UEP8            equ	3960	;# 
   122   000F79                     UEP9            equ	3961	;# 
   123   000F7A                     UEP10           equ	3962	;# 
   124   000F7B                     UEP11           equ	3963	;# 
   125   000F7C                     UEP12           equ	3964	;# 
   126   000F7D                     UEP13           equ	3965	;# 
   127   000F7E                     UEP14           equ	3966	;# 
   128   000F7F                     UEP15           equ	3967	;# 
   129   000F80                     PORTA           equ	3968	;# 
   130   000F81                     PORTB           equ	3969	;# 
   131   000F82                     PORTC           equ	3970	;# 
   132   000F83                     PORTD           equ	3971	;# 
   133   000F84                     PORTE           equ	3972	;# 
   134   000F89                     LATA            equ	3977	;# 
   135   000F8A                     LATB            equ	3978	;# 
   136   000F8B                     LATC            equ	3979	;# 
   137   000F8C                     LATD            equ	3980	;# 
   138   000F8D                     LATE            equ	3981	;# 
   139   000F92                     TRISA           equ	3986	;# 
   140   000F92                     DDRA            equ	3986	;# 
   141   000F93                     TRISB           equ	3987	;# 
   142   000F93                     DDRB            equ	3987	;# 
   143   000F94                     TRISC           equ	3988	;# 
   144   000F94                     DDRC            equ	3988	;# 
   145   000F95                     TRISD           equ	3989	;# 
   146   000F95                     DDRD            equ	3989	;# 
   147   000F96                     TRISE           equ	3990	;# 
   148   000F96                     DDRE            equ	3990	;# 
   149   000F9B                     OSCTUNE         equ	3995	;# 
   150   000F9D                     PIE1            equ	3997	;# 
   151   000F9E                     PIR1            equ	3998	;# 
   152   000F9F                     IPR1            equ	3999	;# 
   153   000FA0                     PIE2            equ	4000	;# 
   154   000FA1                     PIR2            equ	4001	;# 
   155   000FA2                     IPR2            equ	4002	;# 
   156   000FA6                     EECON1          equ	4006	;# 
   157   000FA7                     EECON2          equ	4007	;# 
   158   000FA8                     EEDATA          equ	4008	;# 
   159   000FA9                     EEADR           equ	4009	;# 
   160   000FAB                     RCSTA           equ	4011	;# 
   161   000FAB                     RCSTA1          equ	4011	;# 
   162   000FAC                     TXSTA           equ	4012	;# 
   163   000FAC                     TXSTA1          equ	4012	;# 
   164   000FAD                     TXREG           equ	4013	;# 
   165   000FAD                     TXREG1          equ	4013	;# 
   166   000FAE                     RCREG           equ	4014	;# 
   167   000FAE                     RCREG1          equ	4014	;# 
   168   000FAF                     SPBRG           equ	4015	;# 
   169   000FAF                     SPBRG1          equ	4015	;# 
   170   000FB0                     SPBRGH          equ	4016	;# 
   171   000FB1                     T3CON           equ	4017	;# 
   172   000FB2                     TMR3            equ	4018	;# 
   173   000FB2                     TMR3L           equ	4018	;# 
   174   000FB3                     TMR3H           equ	4019	;# 
   175   000FB4                     CMCON           equ	4020	;# 
   176   000FB5                     CVRCON          equ	4021	;# 
   177   000FB6                     ECCP1AS         equ	4022	;# 
   178   000FB6                     CCP1AS          equ	4022	;# 
   179   000FB7                     ECCP1DEL        equ	4023	;# 
   180   000FB7                     CCP1DEL         equ	4023	;# 
   181   000FB8                     BAUDCON         equ	4024	;# 
   182   000FB8                     BAUDCTL         equ	4024	;# 
   183   000FBA                     CCP2CON         equ	4026	;# 
   184   000FBB                     CCPR2           equ	4027	;# 
   185   000FBB                     CCPR2L          equ	4027	;# 
   186   000FBC                     CCPR2H          equ	4028	;# 
   187   000FBD                     CCP1CON         equ	4029	;# 
   188   000FBD                     ECCP1CON        equ	4029	;# 
   189   000FBE                     CCPR1           equ	4030	;# 
   190   000FBE                     CCPR1L          equ	4030	;# 
   191   000FBF                     CCPR1H          equ	4031	;# 
   192   000FC0                     ADCON2          equ	4032	;# 
   193   000FC1                     ADCON1          equ	4033	;# 
   194   000FC2                     ADCON0          equ	4034	;# 
   195   000FC3                     ADRES           equ	4035	;# 
   196   000FC3                     ADRESL          equ	4035	;# 
   197   000FC4                     ADRESH          equ	4036	;# 
   198   000FC5                     SSPCON2         equ	4037	;# 
   199   000FC6                     SSPCON1         equ	4038	;# 
   200   000FC7                     SSPSTAT         equ	4039	;# 
   201   000FC8                     SSPADD          equ	4040	;# 
   202   000FC9                     SSPBUF          equ	4041	;# 
   203   000FCA                     T2CON           equ	4042	;# 
   204   000FCB                     PR2             equ	4043	;# 
   205   000FCB                     MEMCON          equ	4043	;# 
   206   000FCC                     TMR2            equ	4044	;# 
   207   000FCD                     T1CON           equ	4045	;# 
   208   000FCE                     TMR1            equ	4046	;# 
   209   000FCE                     TMR1L           equ	4046	;# 
   210   000FCF                     TMR1H           equ	4047	;# 
   211   000FD0                     RCON            equ	4048	;# 
   212   000FD1                     WDTCON          equ	4049	;# 
   213   000FD2                     HLVDCON         equ	4050	;# 
   214   000FD2                     LVDCON          equ	4050	;# 
   215   000FD3                     OSCCON          equ	4051	;# 
   216   000FD5                     T0CON           equ	4053	;# 
   217   000FD6                     TMR0            equ	4054	;# 
   218   000FD6                     TMR0L           equ	4054	;# 
   219   000FD7                     TMR0H           equ	4055	;# 
   220   000FD8                     STATUS          equ	4056	;# 
   221   000FD9                     FSR2            equ	4057	;# 
   222   000FD9                     FSR2L           equ	4057	;# 
   223   000FDA                     FSR2H           equ	4058	;# 
   224   000FDB                     PLUSW2          equ	4059	;# 
   225   000FDC                     PREINC2         equ	4060	;# 
   226   000FDD                     POSTDEC2        equ	4061	;# 
   227   000FDE                     POSTINC2        equ	4062	;# 
   228   000FDF                     INDF2           equ	4063	;# 
   229   000FE0                     BSR             equ	4064	;# 
   230   000FE1                     FSR1            equ	4065	;# 
   231   000FE1                     FSR1L           equ	4065	;# 
   232   000FE2                     FSR1H           equ	4066	;# 
   233   000FE3                     PLUSW1          equ	4067	;# 
   234   000FE4                     PREINC1         equ	4068	;# 
   235   000FE5                     POSTDEC1        equ	4069	;# 
   236   000FE6                     POSTINC1        equ	4070	;# 
   237   000FE7                     INDF1           equ	4071	;# 
   238   000FE8                     WREG            equ	4072	;# 
   239   000FE9                     FSR0            equ	4073	;# 
   240   000FE9                     FSR0L           equ	4073	;# 
   241   000FEA                     FSR0H           equ	4074	;# 
   242   000FEB                     PLUSW0          equ	4075	;# 
   243   000FEC                     PREINC0         equ	4076	;# 
   244   000FED                     POSTDEC0        equ	4077	;# 
   245   000FEE                     POSTINC0        equ	4078	;# 
   246   000FEF                     INDF0           equ	4079	;# 
   247   000FF0                     INTCON3         equ	4080	;# 
   248   000FF1                     INTCON2         equ	4081	;# 
   249   000FF2                     INTCON          equ	4082	;# 
   250   000FF3                     PROD            equ	4083	;# 
   251   000FF3                     PRODL           equ	4083	;# 
   252   000FF4                     PRODH           equ	4084	;# 
   253   000FF5                     TABLAT          equ	4085	;# 
   254   000FF6                     TBLPTR          equ	4086	;# 
   255   000FF6                     TBLPTRL         equ	4086	;# 
   256   000FF7                     TBLPTRH         equ	4087	;# 
   257   000FF8                     TBLPTRU         equ	4088	;# 
   258   000FF9                     PCLAT           equ	4089	;# 
   259   000FF9                     PC              equ	4089	;# 
   260   000FF9                     PCL             equ	4089	;# 
   261   000FFA                     PCLATH          equ	4090	;# 
   262   000FFB                     PCLATU          equ	4091	;# 
   263   000FFC                     STKPTR          equ	4092	;# 
   264   000FFD                     TOS             equ	4093	;# 
   265   000FFD                     TOSL            equ	4093	;# 
   266   000FFE                     TOSH            equ	4094	;# 
   267   000FFF                     TOSU            equ	4095	;# 
   268   000F62                     SPPDATA         equ	3938	;# 
   269   000F63                     SPPCFG          equ	3939	;# 
   270   000F64                     SPPEPS          equ	3940	;# 
   271   000F65                     SPPCON          equ	3941	;# 
   272   000F66                     UFRM            equ	3942	;# 
   273   000F66                     UFRML           equ	3942	;# 
   274   000F67                     UFRMH           equ	3943	;# 
   275   000F68                     UIR             equ	3944	;# 
   276   000F69                     UIE             equ	3945	;# 
   277   000F6A                     UEIR            equ	3946	;# 
   278   000F6B                     UEIE            equ	3947	;# 
   279   000F6C                     USTAT           equ	3948	;# 
   280   000F6D                     UCON            equ	3949	;# 
   281   000F6E                     UADDR           equ	3950	;# 
   282   000F6F                     UCFG            equ	3951	;# 
   283   000F70                     UEP0            equ	3952	;# 
   284   000F71                     UEP1            equ	3953	;# 
   285   000F72                     UEP2            equ	3954	;# 
   286   000F73                     UEP3            equ	3955	;# 
   287   000F74                     UEP4            equ	3956	;# 
   288   000F75                     UEP5            equ	3957	;# 
   289   000F76                     UEP6            equ	3958	;# 
   290   000F77                     UEP7            equ	3959	;# 
   291   000F78                     UEP8            equ	3960	;# 
   292   000F79                     UEP9            equ	3961	;# 
   293   000F7A                     UEP10           equ	3962	;# 
   294   000F7B                     UEP11           equ	3963	;# 
   295   000F7C                     UEP12           equ	3964	;# 
   296   000F7D                     UEP13           equ	3965	;# 
   297   000F7E                     UEP14           equ	3966	;# 
   298   000F7F                     UEP15           equ	3967	;# 
   299   000F80                     PORTA           equ	3968	;# 
   300   000F81                     PORTB           equ	3969	;# 
   301   000F82                     PORTC           equ	3970	;# 
   302   000F83                     PORTD           equ	3971	;# 
   303   000F84                     PORTE           equ	3972	;# 
   304   000F89                     LATA            equ	3977	;# 
   305   000F8A                     LATB            equ	3978	;# 
   306   000F8B                     LATC            equ	3979	;# 
   307   000F8C                     LATD            equ	3980	;# 
   308   000F8D                     LATE            equ	3981	;# 
   309   000F92                     TRISA           equ	3986	;# 
   310   000F92                     DDRA            equ	3986	;# 
   311   000F93                     TRISB           equ	3987	;# 
   312   000F93                     DDRB            equ	3987	;# 
   313   000F94                     TRISC           equ	3988	;# 
   314   000F94                     DDRC            equ	3988	;# 
   315   000F95                     TRISD           equ	3989	;# 
   316   000F95                     DDRD            equ	3989	;# 
   317   000F96                     TRISE           equ	3990	;# 
   318   000F96                     DDRE            equ	3990	;# 
   319   000F9B                     OSCTUNE         equ	3995	;# 
   320   000F9D                     PIE1            equ	3997	;# 
   321   000F9E                     PIR1            equ	3998	;# 
   322   000F9F                     IPR1            equ	3999	;# 
   323   000FA0                     PIE2            equ	4000	;# 
   324   000FA1                     PIR2            equ	4001	;# 
   325   000FA2                     IPR2            equ	4002	;# 
   326   000FA6                     EECON1          equ	4006	;# 
   327   000FA7                     EECON2          equ	4007	;# 
   328   000FA8                     EEDATA          equ	4008	;# 
   329   000FA9                     EEADR           equ	4009	;# 
   330   000FAB                     RCSTA           equ	4011	;# 
   331   000FAB                     RCSTA1          equ	4011	;# 
   332   000FAC                     TXSTA           equ	4012	;# 
   333   000FAC                     TXSTA1          equ	4012	;# 
   334   000FAD                     TXREG           equ	4013	;# 
   335   000FAD                     TXREG1          equ	4013	;# 
   336   000FAE                     RCREG           equ	4014	;# 
   337   000FAE                     RCREG1          equ	4014	;# 
   338   000FAF                     SPBRG           equ	4015	;# 
   339   000FAF                     SPBRG1          equ	4015	;# 
   340   000FB0                     SPBRGH          equ	4016	;# 
   341   000FB1                     T3CON           equ	4017	;# 
   342   000FB2                     TMR3            equ	4018	;# 
   343   000FB2                     TMR3L           equ	4018	;# 
   344   000FB3                     TMR3H           equ	4019	;# 
   345   000FB4                     CMCON           equ	4020	;# 
   346   000FB5                     CVRCON          equ	4021	;# 
   347   000FB6                     ECCP1AS         equ	4022	;# 
   348   000FB6                     CCP1AS          equ	4022	;# 
   349   000FB7                     ECCP1DEL        equ	4023	;# 
   350   000FB7                     CCP1DEL         equ	4023	;# 
   351   000FB8                     BAUDCON         equ	4024	;# 
   352   000FB8                     BAUDCTL         equ	4024	;# 
   353   000FBA                     CCP2CON         equ	4026	;# 
   354   000FBB                     CCPR2           equ	4027	;# 
   355   000FBB                     CCPR2L          equ	4027	;# 
   356   000FBC                     CCPR2H          equ	4028	;# 
   357   000FBD                     CCP1CON         equ	4029	;# 
   358   000FBD                     ECCP1CON        equ	4029	;# 
   359   000FBE                     CCPR1           equ	4030	;# 
   360   000FBE                     CCPR1L          equ	4030	;# 
   361   000FBF                     CCPR1H          equ	4031	;# 
   362   000FC0                     ADCON2          equ	4032	;# 
   363   000FC1                     ADCON1          equ	4033	;# 
   364   000FC2                     ADCON0          equ	4034	;# 
   365   000FC3                     ADRES           equ	4035	;# 
   366   000FC3                     ADRESL          equ	4035	;# 
   367   000FC4                     ADRESH          equ	4036	;# 
   368   000FC5                     SSPCON2         equ	4037	;# 
   369   000FC6                     SSPCON1         equ	4038	;# 
   370   000FC7                     SSPSTAT         equ	4039	;# 
   371   000FC8                     SSPADD          equ	4040	;# 
   372   000FC9                     SSPBUF          equ	4041	;# 
   373   000FCA                     T2CON           equ	4042	;# 
   374   000FCB                     PR2             equ	4043	;# 
   375   000FCB                     MEMCON          equ	4043	;# 
   376   000FCC                     TMR2            equ	4044	;# 
   377   000FCD                     T1CON           equ	4045	;# 
   378   000FCE                     TMR1            equ	4046	;# 
   379   000FCE                     TMR1L           equ	4046	;# 
   380   000FCF                     TMR1H           equ	4047	;# 
   381   000FD0                     RCON            equ	4048	;# 
   382   000FD1                     WDTCON          equ	4049	;# 
   383   000FD2                     HLVDCON         equ	4050	;# 
   384   000FD2                     LVDCON          equ	4050	;# 
   385   000FD3                     OSCCON          equ	4051	;# 
   386   000FD5                     T0CON           equ	4053	;# 
   387   000FD6                     TMR0            equ	4054	;# 
   388   000FD6                     TMR0L           equ	4054	;# 
   389   000FD7                     TMR0H           equ	4055	;# 
   390   000FD8                     STATUS          equ	4056	;# 
   391   000FD9                     FSR2            equ	4057	;# 
   392   000FD9                     FSR2L           equ	4057	;# 
   393   000FDA                     FSR2H           equ	4058	;# 
   394   000FDB                     PLUSW2          equ	4059	;# 
   395   000FDC                     PREINC2         equ	4060	;# 
   396   000FDD                     POSTDEC2        equ	4061	;# 
   397   000FDE                     POSTINC2        equ	4062	;# 
   398   000FDF                     INDF2           equ	4063	;# 
   399   000FE0                     BSR             equ	4064	;# 
   400   000FE1                     FSR1            equ	4065	;# 
   401   000FE1                     FSR1L           equ	4065	;# 
   402   000FE2                     FSR1H           equ	4066	;# 
   403   000FE3                     PLUSW1          equ	4067	;# 
   404   000FE4                     PREINC1         equ	4068	;# 
   405   000FE5                     POSTDEC1        equ	4069	;# 
   406   000FE6                     POSTINC1        equ	4070	;# 
   407   000FE7                     INDF1           equ	4071	;# 
   408   000FE8                     WREG            equ	4072	;# 
   409   000FE9                     FSR0            equ	4073	;# 
   410   000FE9                     FSR0L           equ	4073	;# 
   411   000FEA                     FSR0H           equ	4074	;# 
   412   000FEB                     PLUSW0          equ	4075	;# 
   413   000FEC                     PREINC0         equ	4076	;# 
   414   000FED                     POSTDEC0        equ	4077	;# 
   415   000FEE                     POSTINC0        equ	4078	;# 
   416   000FEF                     INDF0           equ	4079	;# 
   417   000FF0                     INTCON3         equ	4080	;# 
   418   000FF1                     INTCON2         equ	4081	;# 
   419   000FF2                     INTCON          equ	4082	;# 
   420   000FF3                     PROD            equ	4083	;# 
   421   000FF3                     PRODL           equ	4083	;# 
   422   000FF4                     PRODH           equ	4084	;# 
   423   000FF5                     TABLAT          equ	4085	;# 
   424   000FF6                     TBLPTR          equ	4086	;# 
   425   000FF6                     TBLPTRL         equ	4086	;# 
   426   000FF7                     TBLPTRH         equ	4087	;# 
   427   000FF8                     TBLPTRU         equ	4088	;# 
   428   000FF9                     PCLAT           equ	4089	;# 
   429   000FF9                     PC              equ	4089	;# 
   430   000FF9                     PCL             equ	4089	;# 
   431   000FFA                     PCLATH          equ	4090	;# 
   432   000FFB                     PCLATU          equ	4091	;# 
   433   000FFC                     STKPTR          equ	4092	;# 
   434   000FFD                     TOS             equ	4093	;# 
   435   000FFD                     TOSL            equ	4093	;# 
   436   000FFE                     TOSH            equ	4094	;# 
   437   000FFF                     TOSU            equ	4095	;# 
   438                           
   439                           	psect	idataCOMRAM
   440   000A00                     __pidataCOMRAM:
   441                           	callstack 0
   442                           
   443                           ;initializer for _password
   444   000A00  32                 	db	50
   445   000A01  30                 	db	48
   446   000A02  32                 	db	50
   447   000A03  31                 	db	49
   448   000A04  00                 	db	0
   449   007F8F                     _RBPU           set	32655
   450   007C61                     _LATD1          set	31841
   451   007C60                     _LATD0          set	31840
   452   000FD3                     _OSCCON         set	4051
   453   000F8C                     _LATD           set	3980
   454   000F95                     _TRISD          set	3989
   455                           
   456                           	psect	smallconst
   457   000800                     __psmallconst:
   458                           	callstack 0
   459   000800  00                 	db	0
   460   000801                     STR_2:
   461   000801  4D                 	db	77	;'M'
   462   000802  49                 	db	73	;'I'
   463   000803  43                 	db	67	;'C'
   464   000804  52                 	db	82	;'R'
   465   000805  4F                 	db	79	;'O'
   466   000806  43                 	db	67	;'C'
   467   000807  4F                 	db	79	;'O'
   468   000808  4E                 	db	78	;'N'
   469   000809  54                 	db	84	;'T'
   470   00080A  52                 	db	82	;'R'
   471   00080B  4F                 	db	79	;'O'
   472   00080C  4C                 	db	76	;'L'
   473   00080D  41                 	db	65	;'A'
   474   00080E  44                 	db	68	;'D'
   475   00080F  4F                 	db	79	;'O'
   476   000810  52                 	db	82	;'R'
   477   000811  45                 	db	69	;'E'
   478   000812  53                 	db	83	;'S'
   479   000813  00                 	db	0
   480   000814                     STR_1:
   481   000814  57                 	db	87	;'W'
   482   000815  45                 	db	69	;'E'
   483   000816  4C                 	db	76	;'L'
   484   000817  43                 	db	67	;'C'
   485   000818  4F                 	db	79	;'O'
   486   000819  4D                 	db	77	;'M'
   487   00081A  45                 	db	69	;'E'
   488   00081B  00                 	db	0
   489   00081C  00                 	db	0	; dummy byte at the end
   490   000800                     __smallconst    set	__psmallconst
   491   000800                     __mediumconst   set	__psmallconst
   492   000001                     __activetblptr  equ	1
   493                           
   494                           ; #config settings
   495                           
   496                           	psect	cinit
   497   000960                     __pcinit:
   498                           	callstack 0
   499   000960                     start_initialization:
   500                           	callstack 0
   501   000960                     __initialization:
   502                           	callstack 0
   503                           
   504                           ; Initialize objects allocated to COMRAM (5 bytes)
   505                           ; load TBLPTR registers with __pidataCOMRAM
   506   000960  0E00               	movlw	low __pidataCOMRAM
   507   000962  6EF6               	movwf	tblptrl,c
   508   000964  0E0A               	movlw	high __pidataCOMRAM
   509   000966  6EF7               	movwf	tblptrh,c
   510   000968  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   511   00096A  6EF8               	movwf	tblptru,c
   512   00096C  EE00  F010         	lfsr	0,__pdataCOMRAM
   513   000970  EE10 F005          	lfsr	1,5
   514   000974                     copy_data0:
   515   000974  0009               	tblrd		*+
   516   000976  CFF5 FFEE          	movff	tablat,postinc0
   517   00097A  50E5               	movf	postdec1,w,c
   518   00097C  50E1               	movf	fsr1l,w,c
   519   00097E  E1FA               	bnz	copy_data0
   520                           
   521                           ; Clear objects allocated to COMRAM (6 bytes)
   522   000980  6A0F               	clrf	(__pbssCOMRAM+5)& (0+255),c
   523   000982  6A0E               	clrf	(__pbssCOMRAM+4)& (0+255),c
   524   000984  6A0D               	clrf	(__pbssCOMRAM+3)& (0+255),c
   525   000986  6A0C               	clrf	(__pbssCOMRAM+2)& (0+255),c
   526   000988  6A0B               	clrf	(__pbssCOMRAM+1)& (0+255),c
   527   00098A  6A0A               	clrf	__pbssCOMRAM& (0+255),c
   528   00098C                     end_of_initialization:
   529                           	callstack 0
   530   00098C                     __end_of__initialization:
   531                           	callstack 0
   532   00098C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   533   00098E  6EF8               	movwf	tblptru,c
   534   000990  0E08               	movlw	high __Lsmallconst
   535   000992  6EF7               	movwf	tblptrh,c
   536   000994  0100               	movlb	0
   537   000996  EF0F  F004         	goto	_main	;jump to C main() function
   538                           
   539                           	psect	bssCOMRAM
   540   00000A                     __pbssCOMRAM:
   541                           	callstack 0
   542   00000A                     _pass_user:
   543                           	callstack 0
   544   00000A                     	ds	5
   545   00000F                     _idx:
   546                           	callstack 0
   547   00000F                     	ds	1
   548                           
   549                           	psect	dataCOMRAM
   550   000010                     __pdataCOMRAM:
   551                           	callstack 0
   552   000010                     _password:
   553                           	callstack 0
   554   000010                     	ds	5
   555                           
   556                           	psect	cstackCOMRAM
   557   000001                     __pcstackCOMRAM:
   558                           	callstack 0
   559   000001                     ??_LCD_Command:
   560   000001                     ??_LCD_Char:
   561                           
   562                           ; 1 bytes @ 0x0
   563   000001                     	ds	1
   564   000002                     LCD_Command@cmd:
   565                           	callstack 0
   566   000002                     LCD_Char@dat:
   567                           	callstack 0
   568                           
   569                           ; 1 bytes @ 0x1
   570   000002                     	ds	1
   571   000003                     LCD_String@msg:
   572                           	callstack 0
   573   000003                     ??_LCD_Init:
   574   000003                     
   575                           ; 1 bytes @ 0x2
   576   000003                     	ds	1
   577   000004                     LCD_String_xy@pos:
   578                           	callstack 0
   579   000004                     
   580                           ; 1 bytes @ 0x3
   581   000004                     	ds	1
   582   000005                     LCD_String_xy@msg:
   583                           	callstack 0
   584                           
   585                           ; 1 bytes @ 0x4
   586   000005                     	ds	1
   587   000006                     LCD_String_xy@row:
   588                           	callstack 0
   589   000006                     
   590                           ; 1 bytes @ 0x5
   591   000006                     	ds	1
   592   000007                     LCD_String_xy@location:
   593                           	callstack 0
   594                           
   595                           ; 1 bytes @ 0x6
   596   000007                     	ds	1
   597   000008                     ??_main:
   598                           
   599                           ; 1 bytes @ 0x7
   600   000008                     	ds	2
   601                           
   602 ;;
   603 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   604 ;;
   605 ;; *************** function _main *****************
   606 ;; Defined at:
   607 ;;		line 36 in file "lcd_main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  key             1    0        unsigned char 
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   621 ;;      Params:         0       0       0       0       0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0       0       0       0       0
   623 ;;      Temps:          2       0       0       0       0       0       0       0       0
   624 ;;      Totals:         2       0       0       0       0       0       0       0       0
   625 ;;Total ram usage:        2 bytes
   626 ;; Hardware stack levels required when called: 3
   627 ;; This function calls:
   628 ;;		_LCD_Clear
   629 ;;		_LCD_Command
   630 ;;		_LCD_Init
   631 ;;		_LCD_String_xy
   632 ;; This function is called by:
   633 ;;		Startup code after reset
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text0
   638   00081E                     __ptext0:
   639                           	callstack 0
   640   00081E                     _main:
   641                           	callstack 28
   642   00081E                     
   643                           ;lcd_main.c: 38:     char key;;lcd_main.c: 39:     OSCCON = 0x72;
   644   00081E  0E72               	movlw	114
   645   000820  6ED3               	movwf	211,c	;volatile
   646   000822                     
   647                           ;lcd_main.c: 41:     RBPU=0;
   648   000822  9EF1               	bcf	4081,7,c	;volatile
   649   000824                     
   650                           ;lcd_main.c: 42:     LCD_Init();
   651   000824  ECCD  F004         	call	_LCD_Init	;wreg free
   652   000828                     
   653                           ;lcd_main.c: 43:     LCD_String_xy(0,0,"WELCOME");
   654   000828  0E00               	movlw	0
   655   00082A  6E04               	movwf	LCD_String_xy@pos^0,c
   656   00082C  0E14               	movlw	low STR_1
   657   00082E  6E05               	movwf	LCD_String_xy@msg^0,c
   658   000830  0E00               	movlw	0
   659   000832  EC92  F004         	call	_LCD_String_xy
   660   000836                     
   661                           ;lcd_main.c: 44:     LCD_Command(0xC0);
   662   000836  0EC0               	movlw	192
   663   000838  EC6A  F004         	call	_LCD_Command
   664   00083C                     l869:
   665                           
   666                           ;lcd_main.c: 46:     {;lcd_main.c: 47:         LCD_String_xy(0,0,"MICROCONTROLADORES");
   667   00083C  0E00               	movlw	0
   668   00083E  6E04               	movwf	LCD_String_xy@pos^0,c
   669   000840  0E01               	movlw	low STR_2
   670   000842  6E05               	movwf	LCD_String_xy@msg^0,c
   671   000844  0E00               	movlw	0
   672   000846  EC92  F004         	call	_LCD_String_xy
   673   00084A                     
   674                           ;lcd_main.c: 48:   _delay((unsigned long)((2000)*(8000000/4000.0)));
   675   00084A  0E15               	movlw	21
   676   00084C  6E09               	movwf	(??_main+1)^0,c
   677   00084E  0E4B               	movlw	75
   678   000850  6E08               	movwf	??_main^0,c
   679   000852  0EBE               	movlw	190
   680   000854                     u57:
   681   000854  2EE8               	decfsz	wreg,f,c
   682   000856  D7FE               	bra	u57
   683   000858  2E08               	decfsz	??_main^0,f,c
   684   00085A  D7FC               	bra	u57
   685   00085C  2E09               	decfsz	(??_main+1)^0,f,c
   686   00085E  D7FA               	bra	u57
   687   000860  D000               	nop2	
   688   000862                     
   689                           ;lcd_main.c: 49:   LCD_Clear();
   690   000862  ECFC  F004         	call	_LCD_Clear	;wreg free
   691   000866                     
   692                           ;lcd_main.c: 50:   _delay((unsigned long)((1000)*(8000000/4000.0)));
   693   000866  0E0B               	movlw	11
   694   000868  6E09               	movwf	(??_main+1)^0,c
   695   00086A  0E26               	movlw	38
   696   00086C  6E08               	movwf	??_main^0,c
   697   00086E  0E5E               	movlw	94
   698   000870                     u67:
   699   000870  2EE8               	decfsz	wreg,f,c
   700   000872  D7FE               	bra	u67
   701   000874  2E08               	decfsz	??_main^0,f,c
   702   000876  D7FC               	bra	u67
   703   000878  2E09               	decfsz	(??_main+1)^0,f,c
   704   00087A  D7FA               	bra	u67
   705   00087C  EF1E  F004         	goto	l869
   706   000880  EFFE  F03F         	goto	start
   707   000884                     __end_of_main:
   708                           	callstack 0
   709                           
   710 ;; *************** function _LCD_String_xy *****************
   711 ;; Defined at:
   712 ;;		line 82 in file "LCD.c"
   713 ;; Parameters:    Size  Location     Type
   714 ;;  row             1    wreg     unsigned char 
   715 ;;  pos             1    3[COMRAM] unsigned char 
   716 ;;  msg             1    4[COMRAM] PTR const unsigned char 
   717 ;;		 -> STR_2(19), STR_1(8), 
   718 ;; Auto vars:     Size  Location     Type
   719 ;;  row             1    5[COMRAM] unsigned char 
   720 ;;  location        1    6[COMRAM] unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      void 
   723 ;; Registers used:
   724 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   730 ;;      Params:         2       0       0       0       0       0       0       0       0
   731 ;;      Locals:         2       0       0       0       0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0
   733 ;;      Totals:         4       0       0       0       0       0       0       0       0
   734 ;;Total ram usage:        4 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; Hardware stack levels required when called: 2
   737 ;; This function calls:
   738 ;;		_LCD_Command
   739 ;;		_LCD_String
   740 ;; This function is called by:
   741 ;;		_main
   742 ;; This function uses a non-reentrant model
   743 ;;
   744                           
   745                           	psect	text1
   746   000924                     __ptext1:
   747                           	callstack 0
   748   000924                     _LCD_String_xy:
   749                           	callstack 28
   750                           
   751                           ;incstack = 0
   752                           ;LCD_String_xy@row stored from wreg
   753   000924  6E06               	movwf	LCD_String_xy@row^0,c
   754   000926                     
   755                           ;LCD.c: 85:     if(row<=1)
   756   000926  0E02               	movlw	2
   757   000928  6006               	cpfslt	LCD_String_xy@row^0,c
   758   00092A  EF99  F004         	goto	u41
   759   00092E  EF9B  F004         	goto	u40
   760   000932                     u41:
   761   000932  EFA4  F004         	goto	l853
   762   000936                     u40:
   763   000936                     
   764                           ;LCD.c: 86:     {;LCD.c: 87:         location = (0x80) | ((pos) & 0x0f);
   765   000936  5004               	movf	LCD_String_xy@pos^0,w,c
   766   000938  0B0F               	andlw	15
   767   00093A  0980               	iorlw	128
   768   00093C  6E07               	movwf	LCD_String_xy@location^0,c
   769   00093E                     
   770                           ;LCD.c: 88:         LCD_Command(location);
   771   00093E  5007               	movf	LCD_String_xy@location^0,w,c
   772   000940  EC6A  F004         	call	_LCD_Command
   773                           
   774                           ;LCD.c: 89:     }
   775   000944  EFAB  F004         	goto	l857
   776   000948                     l853:
   777                           
   778                           ;LCD.c: 91:     {;LCD.c: 92:         location = (0xC0) | ((pos) & 0x0f);
   779   000948  5004               	movf	LCD_String_xy@pos^0,w,c
   780   00094A  0B0F               	andlw	15
   781   00094C  09C0               	iorlw	192
   782   00094E  6E07               	movwf	LCD_String_xy@location^0,c
   783   000950                     
   784                           ;LCD.c: 93:         LCD_Command(location);
   785   000950  5007               	movf	LCD_String_xy@location^0,w,c
   786   000952  EC6A  F004         	call	_LCD_Command
   787   000956                     l857:
   788                           
   789                           ;LCD.c: 97:     LCD_String(msg);
   790   000956  C005  F003         	movff	LCD_String_xy@msg,LCD_String@msg
   791   00095A  ECE6  F004         	call	_LCD_String	;wreg free
   792   00095E  0012               	return		;funcret
   793   000960                     __end_of_LCD_String_xy:
   794                           	callstack 0
   795                           
   796 ;; *************** function _LCD_String *****************
   797 ;; Defined at:
   798 ;;		line 72 in file "LCD.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;  msg             1    2[COMRAM] PTR const unsigned char 
   801 ;;		 -> STR_2(19), STR_1(8), 
   802 ;; Auto vars:     Size  Location     Type
   803 ;;		None
   804 ;; Return value:  Size  Location     Type
   805 ;;                  1    wreg      void 
   806 ;; Registers used:
   807 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   808 ;; Tracked objects:
   809 ;;		On entry : 0/0
   810 ;;		On exit  : 0/0
   811 ;;		Unchanged: 0/0
   812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   813 ;;      Params:         1       0       0       0       0       0       0       0       0
   814 ;;      Locals:         0       0       0       0       0       0       0       0       0
   815 ;;      Temps:          0       0       0       0       0       0       0       0       0
   816 ;;      Totals:         1       0       0       0       0       0       0       0       0
   817 ;;Total ram usage:        1 bytes
   818 ;; Hardware stack levels used: 1
   819 ;; Hardware stack levels required when called: 1
   820 ;; This function calls:
   821 ;;		_LCD_Char
   822 ;; This function is called by:
   823 ;;		_LCD_String_xy
   824 ;; This function uses a non-reentrant model
   825 ;;
   826                           
   827                           	psect	text2
   828   0009CC                     __ptext2:
   829                           	callstack 0
   830   0009CC                     _LCD_String:
   831                           	callstack 28
   832   0009CC                     
   833                           ;LCD.c: 72: void LCD_String(const char *msg);LCD.c: 73: {;LCD.c: 74:  while((*msg)!=0)
   834   0009CC  EFEF  F004         	goto	l843
   835   0009D0                     l839:
   836                           
   837                           ;LCD.c: 75:  {;LCD.c: 76:    LCD_Char(*msg);
   838   0009D0  C003  FFF6         	movff	LCD_String@msg,tblptrl
   839   0009D4                     	if	0	;There is only one active tblptr byte
   840   0009D4                     	endif
   841   0009D4                     	if	0	;tblptru may be non-zero
   842   0009D4                     	endif
   843   0009D4                     	if	0	;tblptru may be non-zero
   844   0009D4                     	endif
   845   0009D4  0008               	tblrd		*
   846   0009D6  50F5               	movf	tablat,w,c
   847   0009D8  EC42  F004         	call	_LCD_Char
   848   0009DC                     
   849                           ;LCD.c: 77:    msg++;
   850   0009DC  2A03               	incf	LCD_String@msg^0,f,c
   851   0009DE                     l843:
   852                           
   853                           ;LCD.c: 74:  while((*msg)!=0)
   854   0009DE  C003  FFF6         	movff	LCD_String@msg,tblptrl
   855   0009E2                     	if	0	;There is only one active tblptr byte
   856   0009E2                     	endif
   857   0009E2                     	if	0	;tblptru may be non-zero
   858   0009E2                     	endif
   859   0009E2                     	if	0	;tblptru may be non-zero
   860   0009E2                     	endif
   861   0009E2  0008               	tblrd		*
   862   0009E4  50F5               	movf	tablat,w,c
   863   0009E6  0900               	iorlw	0
   864   0009E8  A4D8               	btfss	status,2,c
   865   0009EA  EFF9  F004         	goto	u31
   866   0009EE  EFFB  F004         	goto	u30
   867   0009F2                     u31:
   868   0009F2  EFE8  F004         	goto	l839
   869   0009F6                     u30:
   870   0009F6  0012               	return		;funcret
   871   0009F8                     __end_of_LCD_String:
   872                           	callstack 0
   873                           
   874 ;; *************** function _LCD_Char *****************
   875 ;; Defined at:
   876 ;;		line 57 in file "LCD.c"
   877 ;; Parameters:    Size  Location     Type
   878 ;;  dat             1    wreg     unsigned char 
   879 ;; Auto vars:     Size  Location     Type
   880 ;;  dat             1    1[COMRAM] unsigned char 
   881 ;; Return value:  Size  Location     Type
   882 ;;                  1    wreg      void 
   883 ;; Registers used:
   884 ;;		wreg, status,2, status,0
   885 ;; Tracked objects:
   886 ;;		On entry : 0/0
   887 ;;		On exit  : 0/0
   888 ;;		Unchanged: 0/0
   889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   890 ;;      Params:         0       0       0       0       0       0       0       0       0
   891 ;;      Locals:         1       0       0       0       0       0       0       0       0
   892 ;;      Temps:          1       0       0       0       0       0       0       0       0
   893 ;;      Totals:         2       0       0       0       0       0       0       0       0
   894 ;;Total ram usage:        2 bytes
   895 ;; Hardware stack levels used: 1
   896 ;; This function calls:
   897 ;;		Nothing
   898 ;; This function is called by:
   899 ;;		_LCD_String
   900 ;; This function uses a non-reentrant model
   901 ;;
   902                           
   903                           	psect	text3
   904   000884                     __ptext3:
   905                           	callstack 0
   906   000884                     _LCD_Char:
   907                           	callstack 28
   908                           
   909                           ;incstack = 0
   910                           ;LCD_Char@dat stored from wreg
   911   000884  6E02               	movwf	LCD_Char@dat^0,c
   912   000886                     
   913                           ;LCD.c: 57: void LCD_Char(unsigned char dat);LCD.c: 58: {;LCD.c: 59:  LATD = (LATD & 0x0
      +                          f) | (0xF0 & dat);
   914   000886  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
   915   00088A  0EF0               	movlw	240
   916   00088C  1601               	andwf	??_LCD_Char^0,f,c
   917   00088E  508C               	movf	140,w,c	;volatile
   918   000890  0B0F               	andlw	15
   919   000892  1001               	iorwf	??_LCD_Char^0,w,c
   920   000894  6E8C               	movwf	140,c	;volatile
   921   000896                     
   922                           ;LCD.c: 60:  LATD0 = 1;
   923   000896  808C               	bsf	3980,0,c	;volatile
   924   000898                     
   925                           ;LCD.c: 61:  LATD1 = 1;
   926   000898  828C               	bsf	3980,1,c	;volatile
   927   00089A                     
   928                           ;LCD.c: 62:  __nop();
   929   00089A  0000               	nop	
   930   00089C                     
   931                           ;LCD.c: 63:  LATD1 = 0;
   932   00089C  928C               	bcf	3980,1,c	;volatile
   933   00089E                     
   934                           ;LCD.c: 64:  _delay((unsigned long)((1)*(8000000/4000.0)));
   935   00089E  0E03               	movlw	3
   936   0008A0  6E01               	movwf	??_LCD_Char^0,c
   937   0008A2  0E98               	movlw	152
   938   0008A4                     u77:
   939   0008A4  2EE8               	decfsz	wreg,f,c
   940   0008A6  D7FE               	bra	u77
   941   0008A8  2E01               	decfsz	??_LCD_Char^0,f,c
   942   0008AA  D7FC               	bra	u77
   943   0008AC                     
   944                           ;LCD.c: 65:     LATD = (LATD & 0x0f) | (dat<<4);
   945   0008AC  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
   946   0008B0  3A01               	swapf	??_LCD_Char^0,f,c
   947   0008B2  0EF0               	movlw	240
   948   0008B4  1601               	andwf	??_LCD_Char^0,f,c
   949   0008B6  508C               	movf	140,w,c	;volatile
   950   0008B8  0B0F               	andlw	15
   951   0008BA  1001               	iorwf	??_LCD_Char^0,w,c
   952   0008BC  6E8C               	movwf	140,c	;volatile
   953   0008BE                     
   954                           ;LCD.c: 66:  LATD1 = 1;
   955   0008BE  828C               	bsf	3980,1,c	;volatile
   956   0008C0                     
   957                           ;LCD.c: 67:  __nop();
   958   0008C0  0000               	nop	
   959   0008C2                     
   960                           ;LCD.c: 68:  LATD1 = 0;
   961   0008C2  928C               	bcf	3980,1,c	;volatile
   962                           
   963                           ;LCD.c: 69:  _delay((unsigned long)((3)*(8000000/4000.0)));
   964   0008C4  0E08               	movlw	8
   965   0008C6  6E01               	movwf	??_LCD_Char^0,c
   966   0008C8  0ECA               	movlw	202
   967   0008CA                     u87:
   968   0008CA  2EE8               	decfsz	wreg,f,c
   969   0008CC  D7FE               	bra	u87
   970   0008CE  2E01               	decfsz	??_LCD_Char^0,f,c
   971   0008D0  D7FC               	bra	u87
   972   0008D2  0012               	return		;funcret
   973   0008D4                     __end_of_LCD_Char:
   974                           	callstack 0
   975                           
   976 ;; *************** function _LCD_Init *****************
   977 ;; Defined at:
   978 ;;		line 28 in file "LCD.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   992 ;;      Params:         0       0       0       0       0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0       0       0       0       0
   994 ;;      Temps:          1       0       0       0       0       0       0       0       0
   995 ;;      Totals:         1       0       0       0       0       0       0       0       0
   996 ;;Total ram usage:        1 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; Hardware stack levels required when called: 1
   999 ;; This function calls:
  1000 ;;		_LCD_Command
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           	psect	text4
  1007   00099A                     __ptext4:
  1008                           	callstack 0
  1009   00099A                     _LCD_Init:
  1010                           	callstack 29
  1011   00099A                     
  1012                           ;LCD.c: 30:     TRISD = 0;
  1013   00099A  6A95               	clrf	149,c	;volatile
  1014   00099C                     
  1015                           ;LCD.c: 31:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1016   00099C  0E27               	movlw	39
  1017   00099E  6E03               	movwf	??_LCD_Init^0,c
  1018   0009A0  0EF5               	movlw	245
  1019   0009A2                     u97:
  1020   0009A2  2EE8               	decfsz	wreg,f,c
  1021   0009A4  D7FE               	bra	u97
  1022   0009A6  2E03               	decfsz	??_LCD_Init^0,f,c
  1023   0009A8  D7FC               	bra	u97
  1024   0009AA  0000               	nop	
  1025   0009AC                     
  1026                           ;LCD.c: 32:     LCD_Command(0x02);
  1027   0009AC  0E02               	movlw	2
  1028   0009AE  EC6A  F004         	call	_LCD_Command
  1029   0009B2                     
  1030                           ;LCD.c: 34:     LCD_Command(0x28);
  1031   0009B2  0E28               	movlw	40
  1032   0009B4  EC6A  F004         	call	_LCD_Command
  1033   0009B8                     
  1034                           ;LCD.c: 36:  LCD_Command(0x01);
  1035   0009B8  0E01               	movlw	1
  1036   0009BA  EC6A  F004         	call	_LCD_Command
  1037   0009BE                     
  1038                           ;LCD.c: 37:     LCD_Command(0x0c);
  1039   0009BE  0E0C               	movlw	12
  1040   0009C0  EC6A  F004         	call	_LCD_Command
  1041   0009C4                     
  1042                           ;LCD.c: 38:  LCD_Command(0x06);
  1043   0009C4  0E06               	movlw	6
  1044   0009C6  EC6A  F004         	call	_LCD_Command
  1045   0009CA  0012               	return		;funcret
  1046   0009CC                     __end_of_LCD_Init:
  1047                           	callstack 0
  1048                           
  1049 ;; *************** function _LCD_Clear *****************
  1050 ;; Defined at:
  1051 ;;		line 101 in file "LCD.c"
  1052 ;; Parameters:    Size  Location     Type
  1053 ;;		None
  1054 ;; Auto vars:     Size  Location     Type
  1055 ;;		None
  1056 ;; Return value:  Size  Location     Type
  1057 ;;                  1    wreg      void 
  1058 ;; Registers used:
  1059 ;;		wreg, status,2, status,0, cstack
  1060 ;; Tracked objects:
  1061 ;;		On entry : 0/0
  1062 ;;		On exit  : 0/0
  1063 ;;		Unchanged: 0/0
  1064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1065 ;;      Params:         0       0       0       0       0       0       0       0       0
  1066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1068 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1069 ;;Total ram usage:        0 bytes
  1070 ;; Hardware stack levels used: 1
  1071 ;; Hardware stack levels required when called: 1
  1072 ;; This function calls:
  1073 ;;		_LCD_Command
  1074 ;; This function is called by:
  1075 ;;		_main
  1076 ;; This function uses a non-reentrant model
  1077 ;;
  1078                           
  1079                           	psect	text5
  1080   0009F8                     __ptext5:
  1081                           	callstack 0
  1082   0009F8                     _LCD_Clear:
  1083                           	callstack 29
  1084   0009F8                     
  1085                           ;LCD.c: 103:     LCD_Command(0x01);
  1086   0009F8  0E01               	movlw	1
  1087   0009FA  EC6A  F004         	call	_LCD_Command
  1088   0009FE  0012               	return		;funcret
  1089   000A00                     __end_of_LCD_Clear:
  1090                           	callstack 0
  1091                           
  1092 ;; *************** function _LCD_Command *****************
  1093 ;; Defined at:
  1094 ;;		line 41 in file "LCD.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;  cmd             1    wreg     unsigned char 
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;  cmd             1    1[COMRAM] unsigned char 
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, status,2, status,0
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1108 ;;      Params:         0       0       0       0       0       0       0       0       0
  1109 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1110 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1111 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1112 ;;Total ram usage:        2 bytes
  1113 ;; Hardware stack levels used: 1
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_LCD_Init
  1118 ;;		_LCD_String_xy
  1119 ;;		_LCD_Clear
  1120 ;;		_main
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text6
  1125   0008D4                     __ptext6:
  1126                           	callstack 0
  1127   0008D4                     _LCD_Command:
  1128                           	callstack 29
  1129                           
  1130                           ;incstack = 0
  1131                           ;LCD_Command@cmd stored from wreg
  1132   0008D4  6E02               	movwf	LCD_Command@cmd^0,c
  1133   0008D6                     
  1134                           ;LCD.c: 41: void LCD_Command(unsigned char cmd );LCD.c: 42: {;LCD.c: 43:  LATD = (LATD &
      +                           0x0f) |(0xF0 & cmd);
  1135   0008D6  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  1136   0008DA  0EF0               	movlw	240
  1137   0008DC  1601               	andwf	??_LCD_Command^0,f,c
  1138   0008DE  508C               	movf	140,w,c	;volatile
  1139   0008E0  0B0F               	andlw	15
  1140   0008E2  1001               	iorwf	??_LCD_Command^0,w,c
  1141   0008E4  6E8C               	movwf	140,c	;volatile
  1142   0008E6                     
  1143                           ;LCD.c: 44:  LATD0 = 0;
  1144   0008E6  908C               	bcf	3980,0,c	;volatile
  1145   0008E8                     
  1146                           ;LCD.c: 45:  LATD1 = 1;
  1147   0008E8  828C               	bsf	3980,1,c	;volatile
  1148   0008EA                     
  1149                           ;LCD.c: 46:  __nop();
  1150   0008EA  0000               	nop	
  1151   0008EC                     
  1152                           ;LCD.c: 47:  LATD1 = 0;
  1153   0008EC  928C               	bcf	3980,1,c	;volatile
  1154   0008EE                     
  1155                           ;LCD.c: 48:  _delay((unsigned long)((1)*(8000000/4000.0)));
  1156   0008EE  0E03               	movlw	3
  1157   0008F0  6E01               	movwf	??_LCD_Command^0,c
  1158   0008F2  0E98               	movlw	152
  1159   0008F4                     u107:
  1160   0008F4  2EE8               	decfsz	wreg,f,c
  1161   0008F6  D7FE               	bra	u107
  1162   0008F8  2E01               	decfsz	??_LCD_Command^0,f,c
  1163   0008FA  D7FC               	bra	u107
  1164   0008FC                     
  1165                           ;LCD.c: 49:     LATD = (LATD & 0x0f) | (cmd<<4);
  1166   0008FC  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  1167   000900  3A01               	swapf	??_LCD_Command^0,f,c
  1168   000902  0EF0               	movlw	240
  1169   000904  1601               	andwf	??_LCD_Command^0,f,c
  1170   000906  508C               	movf	140,w,c	;volatile
  1171   000908  0B0F               	andlw	15
  1172   00090A  1001               	iorwf	??_LCD_Command^0,w,c
  1173   00090C  6E8C               	movwf	140,c	;volatile
  1174   00090E                     
  1175                           ;LCD.c: 50:  LATD1 = 1;
  1176   00090E  828C               	bsf	3980,1,c	;volatile
  1177   000910                     
  1178                           ;LCD.c: 51:  __nop();
  1179   000910  0000               	nop	
  1180   000912                     
  1181                           ;LCD.c: 52:  LATD1 = 0;
  1182   000912  928C               	bcf	3980,1,c	;volatile
  1183                           
  1184                           ;LCD.c: 53:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1185   000914  0E08               	movlw	8
  1186   000916  6E01               	movwf	??_LCD_Command^0,c
  1187   000918  0ECA               	movlw	202
  1188   00091A                     u117:
  1189   00091A  2EE8               	decfsz	wreg,f,c
  1190   00091C  D7FE               	bra	u117
  1191   00091E  2E01               	decfsz	??_LCD_Command^0,f,c
  1192   000920  D7FC               	bra	u117
  1193   000922  0012               	return		;funcret
  1194   000924                     __end_of_LCD_Command:
  1195                           	callstack 0
  1196                           
  1197                           	psect	rparam
  1198   000001                     ___rparam_used  equ	1
  1199   000000                     ___param_bank   equ	0
  1200   000000                     __Lparam        equ	__Lrparam
  1201   000000                     __Hparam        equ	__Hrparam
  1202                           
  1203                           	psect	idloc
  1204                           
  1205                           ;Config register IDLOC0 @ 0x200000
  1206                           ;	unspecified, using default values
  1207   200000                     	org	2097152
  1208   200000  FF                 	db	255
  1209                           
  1210                           ;Config register IDLOC1 @ 0x200001
  1211                           ;	unspecified, using default values
  1212   200001                     	org	2097153
  1213   200001  FF                 	db	255
  1214                           
  1215                           ;Config register IDLOC2 @ 0x200002
  1216                           ;	unspecified, using default values
  1217   200002                     	org	2097154
  1218   200002  FF                 	db	255
  1219                           
  1220                           ;Config register IDLOC3 @ 0x200003
  1221                           ;	unspecified, using default values
  1222   200003                     	org	2097155
  1223   200003  FF                 	db	255
  1224                           
  1225                           ;Config register IDLOC4 @ 0x200004
  1226                           ;	unspecified, using default values
  1227   200004                     	org	2097156
  1228   200004  FF                 	db	255
  1229                           
  1230                           ;Config register IDLOC5 @ 0x200005
  1231                           ;	unspecified, using default values
  1232   200005                     	org	2097157
  1233   200005  FF                 	db	255
  1234                           
  1235                           ;Config register IDLOC6 @ 0x200006
  1236                           ;	unspecified, using default values
  1237   200006                     	org	2097158
  1238   200006  FF                 	db	255
  1239                           
  1240                           ;Config register IDLOC7 @ 0x200007
  1241                           ;	unspecified, using default values
  1242   200007                     	org	2097159
  1243   200007  FF                 	db	255
  1244                           
  1245                           	psect	config
  1246                           
  1247                           ;Config register CONFIG1L @ 0x300000
  1248                           ;	PLL Prescaler Selection bits
  1249                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1250                           ;	System Clock Postscaler Selection bits
  1251                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1252                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1253                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  1254   300000                     	org	3145728
  1255   300000  00                 	db	0
  1256                           
  1257                           ;Config register CONFIG1H @ 0x300001
  1258                           ;	Oscillator Selection bits
  1259                           ;	FOSC = INTOSC_EC, Internal oscillator, CLKO function on RA6, EC used by USB (INTCKO)
  1260                           ;	Fail-Safe Clock Monitor Enable bit
  1261                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1262                           ;	Internal/External Oscillator Switchover bit
  1263                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1264   300001                     	org	3145729
  1265   300001  09                 	db	9
  1266                           
  1267                           ;Config register CONFIG2L @ 0x300002
  1268                           ;	Power-up Timer Enable bit
  1269                           ;	PWRT = OFF, PWRT disabled
  1270                           ;	Brown-out Reset Enable bits
  1271                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1272                           ;	Brown-out Reset Voltage bits
  1273                           ;	BORV = 3, Minimum setting 2.05V
  1274                           ;	USB Voltage Regulator Enable bit
  1275                           ;	VREGEN = OFF, USB voltage regulator disabled
  1276   300002                     	org	3145730
  1277   300002  1F                 	db	31
  1278                           
  1279                           ;Config register CONFIG2H @ 0x300003
  1280                           ;	Watchdog Timer Enable bit
  1281                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1282                           ;	Watchdog Timer Postscale Select bits
  1283                           ;	WDTPS = 32768, 1:32768
  1284   300003                     	org	3145731
  1285   300003  1E                 	db	30
  1286                           
  1287                           ; Padding undefined space
  1288   300004                     	org	3145732
  1289   300004  FF                 	db	255
  1290                           
  1291                           ;Config register CONFIG3H @ 0x300005
  1292                           ;	CCP2 MUX bit
  1293                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1294                           ;	PORTB A/D Enable bit
  1295                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1296                           ;	Low-Power Timer 1 Oscillator Enable bit
  1297                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1298                           ;	MCLR Pin Enable bit
  1299                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR pin disabled
  1300   300005                     	org	3145733
  1301   300005  01                 	db	1
  1302                           
  1303                           ;Config register CONFIG4L @ 0x300006
  1304                           ;	Stack Full/Underflow Reset Enable bit
  1305                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1306                           ;	Single-Supply ICSP Enable bit
  1307                           ;	LVP = OFF, Single-Supply ICSP disabled
  1308                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1309                           ;	ICPRT = OFF, ICPORT disabled
  1310                           ;	Extended Instruction Set Enable bit
  1311                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1312                           ;	Background Debugger Enable bit
  1313                           ;	DEBUG = 0x1, unprogrammed default
  1314   300006                     	org	3145734
  1315   300006  81                 	db	129
  1316                           
  1317                           ; Padding undefined space
  1318   300007                     	org	3145735
  1319   300007  FF                 	db	255
  1320                           
  1321                           ;Config register CONFIG5L @ 0x300008
  1322                           ;	Code Protection bit
  1323                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1324                           ;	Code Protection bit
  1325                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1326                           ;	Code Protection bit
  1327                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1328                           ;	Code Protection bit
  1329                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1330   300008                     	org	3145736
  1331   300008  0F                 	db	15
  1332                           
  1333                           ;Config register CONFIG5H @ 0x300009
  1334                           ;	Boot Block Code Protection bit
  1335                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1336                           ;	Data EEPROM Code Protection bit
  1337                           ;	CPD = OFF, Data EEPROM is not code-protected
  1338   300009                     	org	3145737
  1339   300009  C0                 	db	192
  1340                           
  1341                           ;Config register CONFIG6L @ 0x30000A
  1342                           ;	Write Protection bit
  1343                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1344                           ;	Write Protection bit
  1345                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1346                           ;	Write Protection bit
  1347                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1348                           ;	Write Protection bit
  1349                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1350   30000A                     	org	3145738
  1351   30000A  0F                 	db	15
  1352                           
  1353                           ;Config register CONFIG6H @ 0x30000B
  1354                           ;	Configuration Register Write Protection bit
  1355                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1356                           ;	Boot Block Write Protection bit
  1357                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1358                           ;	Data EEPROM Write Protection bit
  1359                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1360   30000B                     	org	3145739
  1361   30000B  E0                 	db	224
  1362                           
  1363                           ;Config register CONFIG7L @ 0x30000C
  1364                           ;	Table Read Protection bit
  1365                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1366                           ;	Table Read Protection bit
  1367                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1368                           ;	Table Read Protection bit
  1369                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1370                           ;	Table Read Protection bit
  1371                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1372   30000C                     	org	3145740
  1373   30000C  0F                 	db	15
  1374                           
  1375                           ;Config register CONFIG7H @ 0x30000D
  1376                           ;	Boot Block Table Read Protection bit
  1377                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1378   30000D                     	org	3145741
  1379   30000D  40                 	db	64
  1380                           tosu	equ	0xFFF
  1381                           tosh	equ	0xFFE
  1382                           tosl	equ	0xFFD
  1383                           stkptr	equ	0xFFC
  1384                           pclatu	equ	0xFFB
  1385                           pclath	equ	0xFFA
  1386                           pcl	equ	0xFF9
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           prodh	equ	0xFF4
  1392                           prodl	equ	0xFF3
  1393                           indf0	equ	0xFEF
  1394                           postinc0	equ	0xFEE
  1395                           postdec0	equ	0xFED
  1396                           preinc0	equ	0xFEC
  1397                           plusw0	equ	0xFEB
  1398                           fsr0h	equ	0xFEA
  1399                           fsr0l	equ	0xFE9
  1400                           wreg	equ	0xFE8
  1401                           indf1	equ	0xFE7
  1402                           postinc1	equ	0xFE6
  1403                           postdec1	equ	0xFE5
  1404                           preinc1	equ	0xFE4
  1405                           plusw1	equ	0xFE3
  1406                           fsr1h	equ	0xFE2
  1407                           fsr1l	equ	0xFE1
  1408                           bsr	equ	0xFE0
  1409                           indf2	equ	0xFDF
  1410                           postinc2	equ	0xFDE
  1411                           postdec2	equ	0xFDD
  1412                           preinc2	equ	0xFDC
  1413                           plusw2	equ	0xFDB
  1414                           fsr2h	equ	0xFDA
  1415                           fsr2l	equ	0xFD9
  1416                           status	equ	0xFD8

Data Sizes:
    Strings     27
    Constant    0
    Data        5
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      20
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[8]), STR_2(CODE[19]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[8]), STR_2(CODE[19]), 


Critical Paths under _main in COMRAM

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     342
                                              7 COMRAM     2     2      0
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2     252
                                              3 COMRAM     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     0      1      76
                                              2 COMRAM     1     0      1
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             1     1      0      30
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0      30
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITBIGSFRlh        100      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95      9      20     21.1%
BITBIGSFRll         44      0       0      0.0%
BITBIGSFRh          14      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      20      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Fri Mar 28 14:54:38 2025

           ?_LCD_Command 0001                       l20 0922                       l23 08D2  
                     l17 09CA                       l34 095E                       l37 09FE  
                     l29 09F6                       u30 09F6                       u31 09F2  
                     u40 0936                       u41 0932                       u57 0854  
                     u67 0870                       u77 08A4                       u87 08CA  
                     u97 09A2              ?_LCD_String 0003                      l801 09C4  
                    l741 0886                      l751 089E                      l743 0896  
                    l761 08D6                      l817 09F8                      l753 08AC  
                    l745 0898                      l841 09DC                      l771 08EE  
                    l763 08E6                      l755 08BE                      l747 089A  
                    l843 09DE                      l851 093E                      l773 08FC  
                    l765 08E8                      l757 08C0                      l749 089C  
                    l837 09CC                      l853 0948                      l845 0926  
                    l861 0822                      l775 090E                      l767 08EA  
                    l791 099C                      l759 08C2                      l839 09D0  
                    l855 0950                      l847 0926                      l871 084A  
                    l863 0824                      l777 0910                      l769 08EC  
                    l793 09AC                      l857 0956                      l849 0936  
                    l873 0862                      l865 0828                      l779 0912  
                    l795 09B2                      l875 0866                      l867 0836  
                    l859 081E                      l797 09B8                      l789 099A  
                    l869 083C                      l799 09BE                      u107 08F4  
                    u117 091A                      _idx 000F                      wreg 0FE8  
            LCD_Char@dat 0002                     STR_1 0814                     STR_2 0801  
                   _LATD 0F8C                     _RBPU 7F8F                     _main 081E  
                   fsr1l 0FE1                     start 7FFC            _LCD_String_xy 0924  
           ___param_bank 0000         __end_of_LCD_Char 08D4         __end_of_LCD_Init 09CC  
                  ?_main 0001                    _LATD0 7C60                    _LATD1 7C61  
                  _TRISD 0F95                    tablat 0FF5                    status 0FD8  
         ?_LCD_String_xy 0004          __initialization 0960             __end_of_main 0884  
                 ??_main 0008        __end_of_LCD_Clear 0A00            __activetblptr 0001  
       LCD_String_xy@msg 0005         LCD_String_xy@pos 0004         LCD_String_xy@row 0006  
                 _OSCCON 0FD3                   isa$std 0001             __pdataCOMRAM 0010  
           __mediumconst 0800                   tblptrh 0FF7                   tblptrl 0FF6  
                 tblptru 0FF8                ?_LCD_Char 0001               __accesstop 0060  
__end_of__initialization 098C                ?_LCD_Init 0001          ??_LCD_String_xy 0006  
          ___rparam_used 0001           __pcstackCOMRAM 0001             ??_LCD_String 0004  
             ??_LCD_Char 0001               ??_LCD_Init 0003       __end_of_LCD_String 09F8  
          LCD_String@msg 0003                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 0960                  __ramtop 0800  
                __ptext0 081E                  __ptext1 0924                  __ptext2 09CC  
                __ptext3 0884                  __ptext4 099A                  __ptext5 09F8  
                __ptext6 08D4                _LCD_Clear 09F8     end_of_initialization 098C  
         LCD_Command@cmd 0002                  postdec1 0FE5                  postinc0 0FEE  
             ?_LCD_Clear 0001            ??_LCD_Command 0001            __pidataCOMRAM 0A00  
    start_initialization 0960    __end_of_LCD_String_xy 0960      __end_of_LCD_Command 0924  
            __pbssCOMRAM 000A              ??_LCD_Clear 0003              __smallconst 0800  
  LCD_String_xy@location 0007                 _LCD_Char 0884                 _LCD_Init 099A  
              _pass_user 000A              _LCD_Command 08D4                copy_data0 0974  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
               _password 0010                 isa$xinst 0000               _LCD_String 09CC  
