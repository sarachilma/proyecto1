

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Mar 17 20:17:48 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    18                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    21   000000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56   000FE0                     bsr             equ	4064
    57   000FE9                     fsr0            equ	4073
    58   000FEA                     fsr0h           equ	4074
    59   000FE9                     fsr0l           equ	4073
    60   000FE1                     fsr1            equ	4065
    61   000FE2                     fsr1h           equ	4066
    62   000FE1                     fsr1l           equ	4065
    63   000FD9                     fsr2            equ	4057
    64   000FDA                     fsr2h           equ	4058
    65   000FD9                     fsr2l           equ	4057
    66   000FEF                     indf0           equ	4079
    67   000FE7                     indf1           equ	4071
    68   000FDF                     indf2           equ	4063
    69   000FF2                     intcon          equ	4082
    70   000000                     nvmcon          equ	0
    71   000FF9                     pcl             equ	4089
    72   000FFA                     pclath          equ	4090
    73   000FFB                     pclatu          equ	4091
    74   000FEB                     plusw0          equ	4075
    75   000FE3                     plusw1          equ	4067
    76   000FDB                     plusw2          equ	4059
    77   000FED                     postdec0        equ	4077
    78   000FE5                     postdec1        equ	4069
    79   000FDD                     postdec2        equ	4061
    80   000FEE                     postinc0        equ	4078
    81   000FE6                     postinc1        equ	4070
    82   000FDE                     postinc2        equ	4062
    83   000FEC                     preinc0         equ	4076
    84   000FE4                     preinc1         equ	4068
    85   000FDC                     preinc2         equ	4060
    86   000FF3                     prod            equ	4083
    87   000FF4                     prodh           equ	4084
    88   000FF3                     prodl           equ	4083
    89   000FD8                     status          equ	4056
    90   000FF5                     tablat          equ	4085
    91   000FF6                     tblptr          equ	4086
    92   000FF7                     tblptrh         equ	4087
    93   000FF6                     tblptrl         equ	4086
    94   000FF8                     tblptru         equ	4088
    95   000FFD                     tosl            equ	4093
    96   000FE8                     wreg            equ	4072
    97   000F62                     SPPDATA         equ	3938	;# 
    98   000F63                     SPPCFG          equ	3939	;# 
    99   000F64                     SPPEPS          equ	3940	;# 
   100   000F65                     SPPCON          equ	3941	;# 
   101   000F66                     UFRM            equ	3942	;# 
   102   000F66                     UFRML           equ	3942	;# 
   103   000F67                     UFRMH           equ	3943	;# 
   104   000F68                     UIR             equ	3944	;# 
   105   000F69                     UIE             equ	3945	;# 
   106   000F6A                     UEIR            equ	3946	;# 
   107   000F6B                     UEIE            equ	3947	;# 
   108   000F6C                     USTAT           equ	3948	;# 
   109   000F6D                     UCON            equ	3949	;# 
   110   000F6E                     UADDR           equ	3950	;# 
   111   000F6F                     UCFG            equ	3951	;# 
   112   000F70                     UEP0            equ	3952	;# 
   113   000F71                     UEP1            equ	3953	;# 
   114   000F72                     UEP2            equ	3954	;# 
   115   000F73                     UEP3            equ	3955	;# 
   116   000F74                     UEP4            equ	3956	;# 
   117   000F75                     UEP5            equ	3957	;# 
   118   000F76                     UEP6            equ	3958	;# 
   119   000F77                     UEP7            equ	3959	;# 
   120   000F78                     UEP8            equ	3960	;# 
   121   000F79                     UEP9            equ	3961	;# 
   122   000F7A                     UEP10           equ	3962	;# 
   123   000F7B                     UEP11           equ	3963	;# 
   124   000F7C                     UEP12           equ	3964	;# 
   125   000F7D                     UEP13           equ	3965	;# 
   126   000F7E                     UEP14           equ	3966	;# 
   127   000F7F                     UEP15           equ	3967	;# 
   128   000F80                     PORTA           equ	3968	;# 
   129   000F81                     PORTB           equ	3969	;# 
   130   000F82                     PORTC           equ	3970	;# 
   131   000F83                     PORTD           equ	3971	;# 
   132   000F84                     PORTE           equ	3972	;# 
   133   000F89                     LATA            equ	3977	;# 
   134   000F8A                     LATB            equ	3978	;# 
   135   000F8B                     LATC            equ	3979	;# 
   136   000F8C                     LATD            equ	3980	;# 
   137   000F8D                     LATE            equ	3981	;# 
   138   000F92                     TRISA           equ	3986	;# 
   139   000F92                     DDRA            equ	3986	;# 
   140   000F93                     TRISB           equ	3987	;# 
   141   000F93                     DDRB            equ	3987	;# 
   142   000F94                     TRISC           equ	3988	;# 
   143   000F94                     DDRC            equ	3988	;# 
   144   000F95                     TRISD           equ	3989	;# 
   145   000F95                     DDRD            equ	3989	;# 
   146   000F96                     TRISE           equ	3990	;# 
   147   000F96                     DDRE            equ	3990	;# 
   148   000F9B                     OSCTUNE         equ	3995	;# 
   149   000F9D                     PIE1            equ	3997	;# 
   150   000F9E                     PIR1            equ	3998	;# 
   151   000F9F                     IPR1            equ	3999	;# 
   152   000FA0                     PIE2            equ	4000	;# 
   153   000FA1                     PIR2            equ	4001	;# 
   154   000FA2                     IPR2            equ	4002	;# 
   155   000FA6                     EECON1          equ	4006	;# 
   156   000FA7                     EECON2          equ	4007	;# 
   157   000FA8                     EEDATA          equ	4008	;# 
   158   000FA9                     EEADR           equ	4009	;# 
   159   000FAB                     RCSTA           equ	4011	;# 
   160   000FAB                     RCSTA1          equ	4011	;# 
   161   000FAC                     TXSTA           equ	4012	;# 
   162   000FAC                     TXSTA1          equ	4012	;# 
   163   000FAD                     TXREG           equ	4013	;# 
   164   000FAD                     TXREG1          equ	4013	;# 
   165   000FAE                     RCREG           equ	4014	;# 
   166   000FAE                     RCREG1          equ	4014	;# 
   167   000FAF                     SPBRG           equ	4015	;# 
   168   000FAF                     SPBRG1          equ	4015	;# 
   169   000FB0                     SPBRGH          equ	4016	;# 
   170   000FB1                     T3CON           equ	4017	;# 
   171   000FB2                     TMR3            equ	4018	;# 
   172   000FB2                     TMR3L           equ	4018	;# 
   173   000FB3                     TMR3H           equ	4019	;# 
   174   000FB4                     CMCON           equ	4020	;# 
   175   000FB5                     CVRCON          equ	4021	;# 
   176   000FB6                     ECCP1AS         equ	4022	;# 
   177   000FB6                     CCP1AS          equ	4022	;# 
   178   000FB7                     ECCP1DEL        equ	4023	;# 
   179   000FB7                     CCP1DEL         equ	4023	;# 
   180   000FB8                     BAUDCON         equ	4024	;# 
   181   000FB8                     BAUDCTL         equ	4024	;# 
   182   000FBA                     CCP2CON         equ	4026	;# 
   183   000FBB                     CCPR2           equ	4027	;# 
   184   000FBB                     CCPR2L          equ	4027	;# 
   185   000FBC                     CCPR2H          equ	4028	;# 
   186   000FBD                     CCP1CON         equ	4029	;# 
   187   000FBD                     ECCP1CON        equ	4029	;# 
   188   000FBE                     CCPR1           equ	4030	;# 
   189   000FBE                     CCPR1L          equ	4030	;# 
   190   000FBF                     CCPR1H          equ	4031	;# 
   191   000FC0                     ADCON2          equ	4032	;# 
   192   000FC1                     ADCON1          equ	4033	;# 
   193   000FC2                     ADCON0          equ	4034	;# 
   194   000FC3                     ADRES           equ	4035	;# 
   195   000FC3                     ADRESL          equ	4035	;# 
   196   000FC4                     ADRESH          equ	4036	;# 
   197   000FC5                     SSPCON2         equ	4037	;# 
   198   000FC6                     SSPCON1         equ	4038	;# 
   199   000FC7                     SSPSTAT         equ	4039	;# 
   200   000FC8                     SSPADD          equ	4040	;# 
   201   000FC9                     SSPBUF          equ	4041	;# 
   202   000FCA                     T2CON           equ	4042	;# 
   203   000FCB                     PR2             equ	4043	;# 
   204   000FCB                     MEMCON          equ	4043	;# 
   205   000FCC                     TMR2            equ	4044	;# 
   206   000FCD                     T1CON           equ	4045	;# 
   207   000FCE                     TMR1            equ	4046	;# 
   208   000FCE                     TMR1L           equ	4046	;# 
   209   000FCF                     TMR1H           equ	4047	;# 
   210   000FD0                     RCON            equ	4048	;# 
   211   000FD1                     WDTCON          equ	4049	;# 
   212   000FD2                     HLVDCON         equ	4050	;# 
   213   000FD2                     LVDCON          equ	4050	;# 
   214   000FD3                     OSCCON          equ	4051	;# 
   215   000FD5                     T0CON           equ	4053	;# 
   216   000FD6                     TMR0            equ	4054	;# 
   217   000FD6                     TMR0L           equ	4054	;# 
   218   000FD7                     TMR0H           equ	4055	;# 
   219   000FD8                     STATUS          equ	4056	;# 
   220   000FD9                     FSR2            equ	4057	;# 
   221   000FD9                     FSR2L           equ	4057	;# 
   222   000FDA                     FSR2H           equ	4058	;# 
   223   000FDB                     PLUSW2          equ	4059	;# 
   224   000FDC                     PREINC2         equ	4060	;# 
   225   000FDD                     POSTDEC2        equ	4061	;# 
   226   000FDE                     POSTINC2        equ	4062	;# 
   227   000FDF                     INDF2           equ	4063	;# 
   228   000FE0                     BSR             equ	4064	;# 
   229   000FE1                     FSR1            equ	4065	;# 
   230   000FE1                     FSR1L           equ	4065	;# 
   231   000FE2                     FSR1H           equ	4066	;# 
   232   000FE3                     PLUSW1          equ	4067	;# 
   233   000FE4                     PREINC1         equ	4068	;# 
   234   000FE5                     POSTDEC1        equ	4069	;# 
   235   000FE6                     POSTINC1        equ	4070	;# 
   236   000FE7                     INDF1           equ	4071	;# 
   237   000FE8                     WREG            equ	4072	;# 
   238   000FE9                     FSR0            equ	4073	;# 
   239   000FE9                     FSR0L           equ	4073	;# 
   240   000FEA                     FSR0H           equ	4074	;# 
   241   000FEB                     PLUSW0          equ	4075	;# 
   242   000FEC                     PREINC0         equ	4076	;# 
   243   000FED                     POSTDEC0        equ	4077	;# 
   244   000FEE                     POSTINC0        equ	4078	;# 
   245   000FEF                     INDF0           equ	4079	;# 
   246   000FF0                     INTCON3         equ	4080	;# 
   247   000FF1                     INTCON2         equ	4081	;# 
   248   000FF2                     INTCON          equ	4082	;# 
   249   000FF3                     PROD            equ	4083	;# 
   250   000FF3                     PRODL           equ	4083	;# 
   251   000FF4                     PRODH           equ	4084	;# 
   252   000FF5                     TABLAT          equ	4085	;# 
   253   000FF6                     TBLPTR          equ	4086	;# 
   254   000FF6                     TBLPTRL         equ	4086	;# 
   255   000FF7                     TBLPTRH         equ	4087	;# 
   256   000FF8                     TBLPTRU         equ	4088	;# 
   257   000FF9                     PCLAT           equ	4089	;# 
   258   000FF9                     PC              equ	4089	;# 
   259   000FF9                     PCL             equ	4089	;# 
   260   000FFA                     PCLATH          equ	4090	;# 
   261   000FFB                     PCLATU          equ	4091	;# 
   262   000FFC                     STKPTR          equ	4092	;# 
   263   000FFD                     TOS             equ	4093	;# 
   264   000FFD                     TOSL            equ	4093	;# 
   265   000FFE                     TOSH            equ	4094	;# 
   266   000FFF                     TOSU            equ	4095	;# 
   267   000F62                     SPPDATA         equ	3938	;# 
   268   000F63                     SPPCFG          equ	3939	;# 
   269   000F64                     SPPEPS          equ	3940	;# 
   270   000F65                     SPPCON          equ	3941	;# 
   271   000F66                     UFRM            equ	3942	;# 
   272   000F66                     UFRML           equ	3942	;# 
   273   000F67                     UFRMH           equ	3943	;# 
   274   000F68                     UIR             equ	3944	;# 
   275   000F69                     UIE             equ	3945	;# 
   276   000F6A                     UEIR            equ	3946	;# 
   277   000F6B                     UEIE            equ	3947	;# 
   278   000F6C                     USTAT           equ	3948	;# 
   279   000F6D                     UCON            equ	3949	;# 
   280   000F6E                     UADDR           equ	3950	;# 
   281   000F6F                     UCFG            equ	3951	;# 
   282   000F70                     UEP0            equ	3952	;# 
   283   000F71                     UEP1            equ	3953	;# 
   284   000F72                     UEP2            equ	3954	;# 
   285   000F73                     UEP3            equ	3955	;# 
   286   000F74                     UEP4            equ	3956	;# 
   287   000F75                     UEP5            equ	3957	;# 
   288   000F76                     UEP6            equ	3958	;# 
   289   000F77                     UEP7            equ	3959	;# 
   290   000F78                     UEP8            equ	3960	;# 
   291   000F79                     UEP9            equ	3961	;# 
   292   000F7A                     UEP10           equ	3962	;# 
   293   000F7B                     UEP11           equ	3963	;# 
   294   000F7C                     UEP12           equ	3964	;# 
   295   000F7D                     UEP13           equ	3965	;# 
   296   000F7E                     UEP14           equ	3966	;# 
   297   000F7F                     UEP15           equ	3967	;# 
   298   000F80                     PORTA           equ	3968	;# 
   299   000F81                     PORTB           equ	3969	;# 
   300   000F82                     PORTC           equ	3970	;# 
   301   000F83                     PORTD           equ	3971	;# 
   302   000F84                     PORTE           equ	3972	;# 
   303   000F89                     LATA            equ	3977	;# 
   304   000F8A                     LATB            equ	3978	;# 
   305   000F8B                     LATC            equ	3979	;# 
   306   000F8C                     LATD            equ	3980	;# 
   307   000F8D                     LATE            equ	3981	;# 
   308   000F92                     TRISA           equ	3986	;# 
   309   000F92                     DDRA            equ	3986	;# 
   310   000F93                     TRISB           equ	3987	;# 
   311   000F93                     DDRB            equ	3987	;# 
   312   000F94                     TRISC           equ	3988	;# 
   313   000F94                     DDRC            equ	3988	;# 
   314   000F95                     TRISD           equ	3989	;# 
   315   000F95                     DDRD            equ	3989	;# 
   316   000F96                     TRISE           equ	3990	;# 
   317   000F96                     DDRE            equ	3990	;# 
   318   000F9B                     OSCTUNE         equ	3995	;# 
   319   000F9D                     PIE1            equ	3997	;# 
   320   000F9E                     PIR1            equ	3998	;# 
   321   000F9F                     IPR1            equ	3999	;# 
   322   000FA0                     PIE2            equ	4000	;# 
   323   000FA1                     PIR2            equ	4001	;# 
   324   000FA2                     IPR2            equ	4002	;# 
   325   000FA6                     EECON1          equ	4006	;# 
   326   000FA7                     EECON2          equ	4007	;# 
   327   000FA8                     EEDATA          equ	4008	;# 
   328   000FA9                     EEADR           equ	4009	;# 
   329   000FAB                     RCSTA           equ	4011	;# 
   330   000FAB                     RCSTA1          equ	4011	;# 
   331   000FAC                     TXSTA           equ	4012	;# 
   332   000FAC                     TXSTA1          equ	4012	;# 
   333   000FAD                     TXREG           equ	4013	;# 
   334   000FAD                     TXREG1          equ	4013	;# 
   335   000FAE                     RCREG           equ	4014	;# 
   336   000FAE                     RCREG1          equ	4014	;# 
   337   000FAF                     SPBRG           equ	4015	;# 
   338   000FAF                     SPBRG1          equ	4015	;# 
   339   000FB0                     SPBRGH          equ	4016	;# 
   340   000FB1                     T3CON           equ	4017	;# 
   341   000FB2                     TMR3            equ	4018	;# 
   342   000FB2                     TMR3L           equ	4018	;# 
   343   000FB3                     TMR3H           equ	4019	;# 
   344   000FB4                     CMCON           equ	4020	;# 
   345   000FB5                     CVRCON          equ	4021	;# 
   346   000FB6                     ECCP1AS         equ	4022	;# 
   347   000FB6                     CCP1AS          equ	4022	;# 
   348   000FB7                     ECCP1DEL        equ	4023	;# 
   349   000FB7                     CCP1DEL         equ	4023	;# 
   350   000FB8                     BAUDCON         equ	4024	;# 
   351   000FB8                     BAUDCTL         equ	4024	;# 
   352   000FBA                     CCP2CON         equ	4026	;# 
   353   000FBB                     CCPR2           equ	4027	;# 
   354   000FBB                     CCPR2L          equ	4027	;# 
   355   000FBC                     CCPR2H          equ	4028	;# 
   356   000FBD                     CCP1CON         equ	4029	;# 
   357   000FBD                     ECCP1CON        equ	4029	;# 
   358   000FBE                     CCPR1           equ	4030	;# 
   359   000FBE                     CCPR1L          equ	4030	;# 
   360   000FBF                     CCPR1H          equ	4031	;# 
   361   000FC0                     ADCON2          equ	4032	;# 
   362   000FC1                     ADCON1          equ	4033	;# 
   363   000FC2                     ADCON0          equ	4034	;# 
   364   000FC3                     ADRES           equ	4035	;# 
   365   000FC3                     ADRESL          equ	4035	;# 
   366   000FC4                     ADRESH          equ	4036	;# 
   367   000FC5                     SSPCON2         equ	4037	;# 
   368   000FC6                     SSPCON1         equ	4038	;# 
   369   000FC7                     SSPSTAT         equ	4039	;# 
   370   000FC8                     SSPADD          equ	4040	;# 
   371   000FC9                     SSPBUF          equ	4041	;# 
   372   000FCA                     T2CON           equ	4042	;# 
   373   000FCB                     PR2             equ	4043	;# 
   374   000FCB                     MEMCON          equ	4043	;# 
   375   000FCC                     TMR2            equ	4044	;# 
   376   000FCD                     T1CON           equ	4045	;# 
   377   000FCE                     TMR1            equ	4046	;# 
   378   000FCE                     TMR1L           equ	4046	;# 
   379   000FCF                     TMR1H           equ	4047	;# 
   380   000FD0                     RCON            equ	4048	;# 
   381   000FD1                     WDTCON          equ	4049	;# 
   382   000FD2                     HLVDCON         equ	4050	;# 
   383   000FD2                     LVDCON          equ	4050	;# 
   384   000FD3                     OSCCON          equ	4051	;# 
   385   000FD5                     T0CON           equ	4053	;# 
   386   000FD6                     TMR0            equ	4054	;# 
   387   000FD6                     TMR0L           equ	4054	;# 
   388   000FD7                     TMR0H           equ	4055	;# 
   389   000FD8                     STATUS          equ	4056	;# 
   390   000FD9                     FSR2            equ	4057	;# 
   391   000FD9                     FSR2L           equ	4057	;# 
   392   000FDA                     FSR2H           equ	4058	;# 
   393   000FDB                     PLUSW2          equ	4059	;# 
   394   000FDC                     PREINC2         equ	4060	;# 
   395   000FDD                     POSTDEC2        equ	4061	;# 
   396   000FDE                     POSTINC2        equ	4062	;# 
   397   000FDF                     INDF2           equ	4063	;# 
   398   000FE0                     BSR             equ	4064	;# 
   399   000FE1                     FSR1            equ	4065	;# 
   400   000FE1                     FSR1L           equ	4065	;# 
   401   000FE2                     FSR1H           equ	4066	;# 
   402   000FE3                     PLUSW1          equ	4067	;# 
   403   000FE4                     PREINC1         equ	4068	;# 
   404   000FE5                     POSTDEC1        equ	4069	;# 
   405   000FE6                     POSTINC1        equ	4070	;# 
   406   000FE7                     INDF1           equ	4071	;# 
   407   000FE8                     WREG            equ	4072	;# 
   408   000FE9                     FSR0            equ	4073	;# 
   409   000FE9                     FSR0L           equ	4073	;# 
   410   000FEA                     FSR0H           equ	4074	;# 
   411   000FEB                     PLUSW0          equ	4075	;# 
   412   000FEC                     PREINC0         equ	4076	;# 
   413   000FED                     POSTDEC0        equ	4077	;# 
   414   000FEE                     POSTINC0        equ	4078	;# 
   415   000FEF                     INDF0           equ	4079	;# 
   416   000FF0                     INTCON3         equ	4080	;# 
   417   000FF1                     INTCON2         equ	4081	;# 
   418   000FF2                     INTCON          equ	4082	;# 
   419   000FF3                     PROD            equ	4083	;# 
   420   000FF3                     PRODL           equ	4083	;# 
   421   000FF4                     PRODH           equ	4084	;# 
   422   000FF5                     TABLAT          equ	4085	;# 
   423   000FF6                     TBLPTR          equ	4086	;# 
   424   000FF6                     TBLPTRL         equ	4086	;# 
   425   000FF7                     TBLPTRH         equ	4087	;# 
   426   000FF8                     TBLPTRU         equ	4088	;# 
   427   000FF9                     PCLAT           equ	4089	;# 
   428   000FF9                     PC              equ	4089	;# 
   429   000FF9                     PCL             equ	4089	;# 
   430   000FFA                     PCLATH          equ	4090	;# 
   431   000FFB                     PCLATU          equ	4091	;# 
   432   000FFC                     STKPTR          equ	4092	;# 
   433   000FFD                     TOS             equ	4093	;# 
   434   000FFD                     TOSL            equ	4093	;# 
   435   000FFE                     TOSH            equ	4094	;# 
   436   000FFF                     TOSU            equ	4095	;# 
   437   000F93                     _TRISBbits      set	3987
   438   000F92                     _TRISAbits      set	3986
   439   000F81                     _PORTBbits      set	3969
   440   000F80                     _PORTAbits      set	3968
   441                           
   442                           	psect	smallconst
   443   000800                     __psmallconst:
   444                           	callstack 0
   445   000800  00                 	db	0
   446   000801                     STR_1:
   447   000801  48                 	db	72	;'H'
   448   000802  6F                 	db	111	;'o'
   449   000803  6C                 	db	108	;'l'
   450   000804  61                 	db	97	;'a'
   451   000805  2C                 	db	44
   452   000806  20                 	db	32
   453   000807  4D                 	db	77	;'M'
   454   000808  75                 	db	117	;'u'
   455   000809  6E                 	db	110	;'n'
   456   00080A  64                 	db	100	;'d'
   457   00080B  6F                 	db	111	;'o'
   458   00080C  21                 	db	33
   459   00080D  00                 	db	0
   460   00080E                     STR_2:
   461   00080E  50                 	db	80	;'P'
   462   00080F  49                 	db	73	;'I'
   463   000810  43                 	db	67	;'C'
   464   000811  31                 	db	49	;'1'
   465   000812  38                 	db	56	;'8'
   466   000813  46                 	db	70	;'F'
   467   000814  34                 	db	52	;'4'
   468   000815  35                 	db	53	;'5'
   469   000816  35                 	db	53	;'5'
   470   000817  30                 	db	48	;'0'
   471   000818  00                 	db	0
   472   000819  00                 	db	0	; dummy byte at the end
   473   000800                     __smallconst    set	__psmallconst
   474   000800                     __mediumconst   set	__psmallconst
   475   000001                     __activetblptr  equ	1
   476                           
   477                           ; #config settings
   478                           
   479                           	psect	cinit
   480   0009EA                     __pcinit:
   481                           	callstack 0
   482   0009EA                     start_initialization:
   483                           	callstack 0
   484   0009EA                     __initialization:
   485                           	callstack 0
   486   0009EA                     end_of_initialization:
   487                           	callstack 0
   488   0009EA                     __end_of__initialization:
   489                           	callstack 0
   490   0009EA  0E00               	movlw	low (__Lsmallconst shr (0+16))
   491   0009EC  6EF8               	movwf	tblptru,c
   492   0009EE  0E08               	movlw	high __Lsmallconst
   493   0009F0  6EF7               	movwf	tblptrh,c
   494   0009F2  0100               	movlb	0
   495   0009F4  EF79  F004         	goto	_main	;jump to C main() function
   496                           
   497                           	psect	cstackCOMRAM
   498   000001                     __pcstackCOMRAM:
   499                           	callstack 0
   500   000001                     ??_Lcd_Send_Nibble:
   501                           
   502                           ; 1 bytes @ 0x0
   503   000001                     	ds	1
   504   000002                     Lcd_Send_Nibble@data:
   505                           	callstack 0
   506                           
   507                           ; 1 bytes @ 0x1
   508   000002                     	ds	1
   509   000003                     Lcd_Write_Char@data:
   510                           	callstack 0
   511   000003                     ??_Lcd_Cmd:
   512   000003                     
   513                           ; 1 bytes @ 0x2
   514   000003                     	ds	1
   515   000004                     Lcd_Cmd@cmd:
   516                           	callstack 0
   517   000004                     Lcd_Write_String@str:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x3
   521   000004                     	ds	1
   522   000005                     Lcd_Set_Cursor@col:
   523                           	callstack 0
   524   000005                     ??_Lcd_Clear:
   525                           
   526                           ; 1 bytes @ 0x4
   527   000005                     	ds	1
   528   000006                     Lcd_Set_Cursor@row:
   529                           	callstack 0
   530   000006                     ??_Lcd_Init:
   531                           
   532                           ; 1 bytes @ 0x5
   533   000006                     	ds	1
   534   000007                     Lcd_Set_Cursor@address:
   535                           	callstack 0
   536                           
   537                           ; 1 bytes @ 0x6
   538   000007                     	ds	1
   539   000008                     
   540                           ; 1 bytes @ 0x7
   541 ;;
   542 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   543 ;;
   544 ;; *************** function _main *****************
   545 ;; Defined at:
   546 ;;		line 80 in file "main.c"
   547 ;; Parameters:    Size  Location     Type
   548 ;;		None
   549 ;; Auto vars:     Size  Location     Type
   550 ;;		None
   551 ;; Return value:  Size  Location     Type
   552 ;;                  1    wreg      void 
   553 ;; Registers used:
   554 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   555 ;; Tracked objects:
   556 ;;		On entry : 0/0
   557 ;;		On exit  : 0/0
   558 ;;		Unchanged: 0/0
   559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   560 ;;      Params:         0       0       0       0       0       0       0       0       0
   561 ;;      Locals:         0       0       0       0       0       0       0       0       0
   562 ;;      Temps:          0       0       0       0       0       0       0       0       0
   563 ;;      Totals:         0       0       0       0       0       0       0       0       0
   564 ;;Total ram usage:        0 bytes
   565 ;; Hardware stack levels required when called: 5
   566 ;; This function calls:
   567 ;;		_Lcd_Init
   568 ;;		_Lcd_Set_Cursor
   569 ;;		_Lcd_Write_String
   570 ;; This function is called by:
   571 ;;		Startup code after reset
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           	psect	text0
   576   0008F2                     __ptext0:
   577                           	callstack 0
   578   0008F2                     _main:
   579                           	callstack 26
   580   0008F2                     
   581                           ;main.c: 82:     Lcd_Init();
   582   0008F2  EC47  F004         	call	_Lcd_Init	;wreg free
   583                           
   584                           ;main.c: 85:     Lcd_Set_Cursor(0, 0);
   585   0008F6  0E00               	movlw	0
   586   0008F8  6E05               	movwf	Lcd_Set_Cursor@col^0,c
   587   0008FA  0E00               	movlw	0
   588   0008FC  ECA7  F004         	call	_Lcd_Set_Cursor
   589   000900                     
   590                           ;main.c: 86:     Lcd_Write_String("Hola, Mundo!");
   591   000900  0E01               	movlw	low STR_1
   592   000902  6E04               	movwf	Lcd_Write_String@str^0,c
   593   000904  EC91  F004         	call	_Lcd_Write_String	;wreg free
   594   000908                     
   595                           ;main.c: 88:     Lcd_Set_Cursor(1, 0);
   596   000908  0E00               	movlw	0
   597   00090A  6E05               	movwf	Lcd_Set_Cursor@col^0,c
   598   00090C  0E01               	movlw	1
   599   00090E  ECA7  F004         	call	_Lcd_Set_Cursor
   600                           
   601                           ;main.c: 89:     Lcd_Write_String("PIC18F4550");
   602   000912  0E0E               	movlw	low STR_2
   603   000914  6E04               	movwf	Lcd_Write_String@str^0,c
   604   000916  EC91  F004         	call	_Lcd_Write_String	;wreg free
   605   00091A                     l50:
   606   00091A  EF8D  F004         	goto	l50
   607   00091E  EFFE  F03F         	goto	start
   608   000922                     __end_of_main:
   609                           	callstack 0
   610                           
   611 ;; *************** function _Lcd_Write_String *****************
   612 ;; Defined at:
   613 ;;		line 38 in file "lcd.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  str             1    3[COMRAM] PTR const unsigned char 
   616 ;;		 -> STR_2(11), STR_1(13), 
   617 ;; Auto vars:     Size  Location     Type
   618 ;;		None
   619 ;; Return value:  Size  Location     Type
   620 ;;                  1    wreg      void 
   621 ;; Registers used:
   622 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   623 ;; Tracked objects:
   624 ;;		On entry : 0/0
   625 ;;		On exit  : 0/0
   626 ;;		Unchanged: 0/0
   627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   628 ;;      Params:         1       0       0       0       0       0       0       0       0
   629 ;;      Locals:         0       0       0       0       0       0       0       0       0
   630 ;;      Temps:          0       0       0       0       0       0       0       0       0
   631 ;;      Totals:         1       0       0       0       0       0       0       0       0
   632 ;;Total ram usage:        1 bytes
   633 ;; Hardware stack levels used: 1
   634 ;; Hardware stack levels required when called: 3
   635 ;; This function calls:
   636 ;;		_Lcd_Write_Char
   637 ;; This function is called by:
   638 ;;		_main
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           	psect	text1
   643   000922                     __ptext1:
   644                           	callstack 0
   645   000922                     _Lcd_Write_String:
   646                           	callstack 27
   647   000922                     
   648                           ;lcd.c: 39:     while (*str) {
   649   000922  EF9A  F004         	goto	l805
   650   000926                     l801:
   651                           
   652                           ;lcd.c: 40:         Lcd_Write_Char(*str++);
   653   000926  C004  FFF6         	movff	Lcd_Write_String@str,tblptrl
   654   00092A                     	if	0	;There is only one active tblptr byte
   655   00092A                     	endif
   656   00092A                     	if	0	;tblptru may be non-zero
   657   00092A                     	endif
   658   00092A                     	if	0	;tblptru may be non-zero
   659   00092A                     	endif
   660   00092A  0008               	tblrd		*
   661   00092C  50F5               	movf	tablat,w,c
   662   00092E  ECCF  F004         	call	_Lcd_Write_Char
   663   000932  2A04               	incf	Lcd_Write_String@str^0,f,c
   664   000934                     l805:
   665                           
   666                           ;lcd.c: 39:     while (*str) {
   667   000934  C004  FFF6         	movff	Lcd_Write_String@str,tblptrl
   668   000938                     	if	0	;There is only one active tblptr byte
   669   000938                     	endif
   670   000938                     	if	0	;tblptru may be non-zero
   671   000938                     	endif
   672   000938                     	if	0	;tblptru may be non-zero
   673   000938                     	endif
   674   000938  0008               	tblrd		*
   675   00093A  50F5               	movf	tablat,w,c
   676   00093C  0900               	iorlw	0
   677   00093E  A4D8               	btfss	status,2,c
   678   000940  EFA4  F004         	goto	u31
   679   000944  EFA6  F004         	goto	u30
   680   000948                     u31:
   681   000948  EF93  F004         	goto	l801
   682   00094C                     u30:
   683   00094C  0012               	return		;funcret
   684   00094E                     __end_of_Lcd_Write_String:
   685                           	callstack 0
   686                           
   687 ;; *************** function _Lcd_Write_Char *****************
   688 ;; Defined at:
   689 ;;		line 30 in file "lcd.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;  data            1    wreg     unsigned char 
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  data            1    2[COMRAM] unsigned char 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, status,2, status,0, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   703 ;;      Params:         0       0       0       0       0       0       0       0       0
   704 ;;      Locals:         1       0       0       0       0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0       0       0
   706 ;;      Totals:         1       0       0       0       0       0       0       0       0
   707 ;;Total ram usage:        1 bytes
   708 ;; Hardware stack levels used: 1
   709 ;; Hardware stack levels required when called: 2
   710 ;; This function calls:
   711 ;;		_Lcd_Send_Nibble
   712 ;; This function is called by:
   713 ;;		_Lcd_Write_String
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717                           	psect	text2
   718   00099E                     __ptext2:
   719                           	callstack 0
   720   00099E                     _Lcd_Write_Char:
   721                           	callstack 27
   722                           
   723                           ;incstack = 0
   724                           ;Lcd_Write_Char@data stored from wreg
   725   00099E  6E03               	movwf	Lcd_Write_Char@data^0,c
   726   0009A0                     
   727                           ;lcd.c: 31:     PORTAbits.RA0 = 1;
   728   0009A0  8080               	bsf	128,0,c	;volatile
   729   0009A2                     
   730                           ;lcd.c: 32:     Lcd_Send_Nibble(data >> 4);
   731   0009A2  3803               	swapf	Lcd_Write_Char@data^0,w,c
   732   0009A4  0B0F               	andlw	15
   733   0009A6  EC0D  F004         	call	_Lcd_Send_Nibble
   734                           
   735                           ;lcd.c: 33:     Lcd_Send_Nibble(data & 0x0F);
   736   0009AA  5003               	movf	Lcd_Write_Char@data^0,w,c
   737   0009AC  0B0F               	andlw	15
   738   0009AE  EC0D  F004         	call	_Lcd_Send_Nibble
   739   0009B2                     
   740                           ;lcd.c: 34:     _delay((unsigned long)((40)*(8000000/4000000.0)));
   741   0009B2  0E1A               	movlw	26
   742   0009B4                     u57:
   743   0009B4  2EE8               	decfsz	wreg,f,c
   744   0009B6  D7FE               	bra	u57
   745   0009B8  D000               	nop2	
   746   0009BA  0012               	return		;funcret
   747   0009BC                     __end_of_Lcd_Write_Char:
   748                           	callstack 0
   749                           
   750 ;; *************** function _Lcd_Set_Cursor *****************
   751 ;; Defined at:
   752 ;;		line 45 in file "lcd.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;  row             1    wreg     unsigned char 
   755 ;;  col             1    4[COMRAM] unsigned char 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  row             1    5[COMRAM] unsigned char 
   758 ;;  address         1    6[COMRAM] unsigned char 
   759 ;; Return value:  Size  Location     Type
   760 ;;                  1    wreg      void 
   761 ;; Registers used:
   762 ;;		wreg, status,2, status,0, cstack
   763 ;; Tracked objects:
   764 ;;		On entry : 0/0
   765 ;;		On exit  : 0/0
   766 ;;		Unchanged: 0/0
   767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   768 ;;      Params:         1       0       0       0       0       0       0       0       0
   769 ;;      Locals:         2       0       0       0       0       0       0       0       0
   770 ;;      Temps:          0       0       0       0       0       0       0       0       0
   771 ;;      Totals:         3       0       0       0       0       0       0       0       0
   772 ;;Total ram usage:        3 bytes
   773 ;; Hardware stack levels used: 1
   774 ;; Hardware stack levels required when called: 3
   775 ;; This function calls:
   776 ;;		_Lcd_Cmd
   777 ;; This function is called by:
   778 ;;		_main
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text3
   783   00094E                     __ptext3:
   784                           	callstack 0
   785   00094E                     _Lcd_Set_Cursor:
   786                           	callstack 27
   787                           
   788                           ;incstack = 0
   789                           ;Lcd_Set_Cursor@row stored from wreg
   790   00094E  6E06               	movwf	Lcd_Set_Cursor@row^0,c
   791   000950                     
   792                           ;lcd.c: 46:     unsigned char address;;lcd.c: 47:     if (row == 0)
   793   000950  5006               	movf	Lcd_Set_Cursor@row^0,w,c
   794   000952  A4D8               	btfss	status,2,c
   795   000954  EFAE  F004         	goto	u41
   796   000958  EFB0  F004         	goto	u40
   797   00095C                     u41:
   798   00095C  EFB5  F004         	goto	l811
   799   000960                     u40:
   800   000960                     
   801                           ;lcd.c: 48:         address = 0x80 + col;
   802   000960  5005               	movf	Lcd_Set_Cursor@col^0,w,c
   803   000962  0F80               	addlw	128
   804   000964  6E07               	movwf	Lcd_Set_Cursor@address^0,c
   805   000966  EFB8  F004         	goto	l813
   806   00096A                     l811:
   807                           
   808                           ;lcd.c: 50:         address = 0xC0 + col;
   809   00096A  5005               	movf	Lcd_Set_Cursor@col^0,w,c
   810   00096C  0FC0               	addlw	192
   811   00096E  6E07               	movwf	Lcd_Set_Cursor@address^0,c
   812   000970                     l813:
   813                           
   814                           ;lcd.c: 51:     Lcd_Cmd(address);
   815   000970  5007               	movf	Lcd_Set_Cursor@address^0,w,c
   816   000972  ECBC  F004         	call	_Lcd_Cmd
   817   000976  0012               	return		;funcret
   818   000978                     __end_of_Lcd_Set_Cursor:
   819                           	callstack 0
   820                           
   821 ;; *************** function _Lcd_Init *****************
   822 ;; Defined at:
   823 ;;		line 61 in file "lcd.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;		None
   826 ;; Auto vars:     Size  Location     Type
   827 ;;		None
   828 ;; Return value:  Size  Location     Type
   829 ;;                  1    wreg      void 
   830 ;; Registers used:
   831 ;;		wreg, status,2, status,0, cstack
   832 ;; Tracked objects:
   833 ;;		On entry : 0/0
   834 ;;		On exit  : 0/0
   835 ;;		Unchanged: 0/0
   836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   837 ;;      Params:         0       0       0       0       0       0       0       0       0
   838 ;;      Locals:         0       0       0       0       0       0       0       0       0
   839 ;;      Temps:          1       0       0       0       0       0       0       0       0
   840 ;;      Totals:         1       0       0       0       0       0       0       0       0
   841 ;;Total ram usage:        1 bytes
   842 ;; Hardware stack levels used: 1
   843 ;; Hardware stack levels required when called: 4
   844 ;; This function calls:
   845 ;;		_Lcd_Clear
   846 ;;		_Lcd_Cmd
   847 ;;		_Lcd_Send_Nibble
   848 ;; This function is called by:
   849 ;;		_main
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text4
   854   00088E                     __ptext4:
   855                           	callstack 0
   856   00088E                     _Lcd_Init:
   857                           	callstack 26
   858   00088E                     
   859                           ;lcd.c: 63:     TRISAbits.TRISA0 = 0;
   860   00088E  9092               	bcf	146,0,c	;volatile
   861                           
   862                           ;lcd.c: 64:     TRISAbits.TRISA1 = 0;
   863   000890  9292               	bcf	146,1,c	;volatile
   864                           
   865                           ;lcd.c: 65:     TRISAbits.TRISA2 = 0;
   866   000892  9492               	bcf	146,2,c	;volatile
   867                           
   868                           ;lcd.c: 66:     TRISBbits.TRISB0 = 0;
   869   000894  9093               	bcf	147,0,c	;volatile
   870                           
   871                           ;lcd.c: 67:     TRISBbits.TRISB1 = 0;
   872   000896  9293               	bcf	147,1,c	;volatile
   873                           
   874                           ;lcd.c: 68:     TRISBbits.TRISB2 = 0;
   875   000898  9493               	bcf	147,2,c	;volatile
   876                           
   877                           ;lcd.c: 69:     TRISBbits.TRISB3 = 0;
   878   00089A  9693               	bcf	147,3,c	;volatile
   879                           
   880                           ;lcd.c: 71:     PORTAbits.RA1 = 0;
   881   00089C  9280               	bcf	128,1,c	;volatile
   882   00089E                     
   883                           ;lcd.c: 74:     _delay((unsigned long)((20)*(8000000/4000.0)));
   884   00089E  0E34               	movlw	52
   885   0008A0  6E06               	movwf	??_Lcd_Init^0,c
   886   0008A2  0EF2               	movlw	242
   887   0008A4                     u67:
   888   0008A4  2EE8               	decfsz	wreg,f,c
   889   0008A6  D7FE               	bra	u67
   890   0008A8  2E06               	decfsz	??_Lcd_Init^0,f,c
   891   0008AA  D7FC               	bra	u67
   892   0008AC                     
   893                           ;lcd.c: 75:     Lcd_Send_Nibble(0x03);
   894   0008AC  0E03               	movlw	3
   895   0008AE  EC0D  F004         	call	_Lcd_Send_Nibble
   896   0008B2                     
   897                           ;lcd.c: 76:     _delay((unsigned long)((5)*(8000000/4000.0)));
   898   0008B2  0E0D               	movlw	13
   899   0008B4  6E06               	movwf	??_Lcd_Init^0,c
   900   0008B6  0EFC               	movlw	252
   901   0008B8                     u77:
   902   0008B8  2EE8               	decfsz	wreg,f,c
   903   0008BA  D7FE               	bra	u77
   904   0008BC  2E06               	decfsz	??_Lcd_Init^0,f,c
   905   0008BE  D7FC               	bra	u77
   906                           
   907                           ;lcd.c: 77:     Lcd_Send_Nibble(0x03);
   908   0008C0  0E03               	movlw	3
   909   0008C2  EC0D  F004         	call	_Lcd_Send_Nibble
   910   0008C6                     
   911                           ;lcd.c: 78:     _delay((unsigned long)((100)*(8000000/4000000.0)));
   912   0008C6  0E42               	movlw	66
   913   0008C8                     u87:
   914   0008C8  2EE8               	decfsz	wreg,f,c
   915   0008CA  D7FE               	bra	u87
   916   0008CC  D000               	nop2	
   917   0008CE                     
   918                           ;lcd.c: 79:     Lcd_Send_Nibble(0x03);
   919   0008CE  0E03               	movlw	3
   920   0008D0  EC0D  F004         	call	_Lcd_Send_Nibble
   921   0008D4                     
   922                           ;lcd.c: 80:     Lcd_Send_Nibble(0x02);
   923   0008D4  0E02               	movlw	2
   924   0008D6  EC0D  F004         	call	_Lcd_Send_Nibble
   925   0008DA                     
   926                           ;lcd.c: 82:     Lcd_Cmd(0x28);
   927   0008DA  0E28               	movlw	40
   928   0008DC  ECBC  F004         	call	_Lcd_Cmd
   929   0008E0                     
   930                           ;lcd.c: 83:     Lcd_Cmd(0x0C);
   931   0008E0  0E0C               	movlw	12
   932   0008E2  ECBC  F004         	call	_Lcd_Cmd
   933   0008E6                     
   934                           ;lcd.c: 84:     Lcd_Cmd(0x06);
   935   0008E6  0E06               	movlw	6
   936   0008E8  ECBC  F004         	call	_Lcd_Cmd
   937   0008EC                     
   938                           ;lcd.c: 85:     Lcd_Clear();
   939   0008EC  ECDE  F004         	call	_Lcd_Clear	;wreg free
   940   0008F0  0012               	return		;funcret
   941   0008F2                     __end_of_Lcd_Init:
   942                           	callstack 0
   943                           
   944 ;; *************** function _Lcd_Clear *****************
   945 ;; Defined at:
   946 ;;		line 55 in file "lcd.c"
   947 ;; Parameters:    Size  Location     Type
   948 ;;		None
   949 ;; Auto vars:     Size  Location     Type
   950 ;;		None
   951 ;; Return value:  Size  Location     Type
   952 ;;                  1    wreg      void 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0, cstack
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   960 ;;      Params:         0       0       0       0       0       0       0       0       0
   961 ;;      Locals:         0       0       0       0       0       0       0       0       0
   962 ;;      Temps:          1       0       0       0       0       0       0       0       0
   963 ;;      Totals:         1       0       0       0       0       0       0       0       0
   964 ;;Total ram usage:        1 bytes
   965 ;; Hardware stack levels used: 1
   966 ;; Hardware stack levels required when called: 3
   967 ;; This function calls:
   968 ;;		_Lcd_Cmd
   969 ;; This function is called by:
   970 ;;		_Lcd_Init
   971 ;; This function uses a non-reentrant model
   972 ;;
   973                           
   974                           	psect	text5
   975   0009BC                     __ptext5:
   976                           	callstack 0
   977   0009BC                     _Lcd_Clear:
   978                           	callstack 26
   979   0009BC                     
   980                           ;lcd.c: 56:     Lcd_Cmd(0x01);
   981   0009BC  0E01               	movlw	1
   982   0009BE  ECBC  F004         	call	_Lcd_Cmd
   983   0009C2                     
   984                           ;lcd.c: 57:     _delay((unsigned long)((2)*(8000000/4000.0)));
   985   0009C2  0E06               	movlw	6
   986   0009C4  6E05               	movwf	??_Lcd_Clear^0,c
   987   0009C6  0E30               	movlw	48
   988   0009C8                     u97:
   989   0009C8  2EE8               	decfsz	wreg,f,c
   990   0009CA  D7FE               	bra	u97
   991   0009CC  2E05               	decfsz	??_Lcd_Clear^0,f,c
   992   0009CE  D7FC               	bra	u97
   993   0009D0  D000               	nop2	
   994   0009D2  0012               	return		;funcret
   995   0009D4                     __end_of_Lcd_Clear:
   996                           	callstack 0
   997                           
   998 ;; *************** function _Lcd_Cmd *****************
   999 ;; Defined at:
  1000 ;;		line 22 in file "lcd.c"
  1001 ;; Parameters:    Size  Location     Type
  1002 ;;  cmd             1    wreg     unsigned char 
  1003 ;; Auto vars:     Size  Location     Type
  1004 ;;  cmd             1    3[COMRAM] unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  1    wreg      void 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0, cstack
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1014 ;;      Params:         0       0       0       0       0       0       0       0       0
  1015 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1016 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1017 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1018 ;;Total ram usage:        2 bytes
  1019 ;; Hardware stack levels used: 1
  1020 ;; Hardware stack levels required when called: 2
  1021 ;; This function calls:
  1022 ;;		_Lcd_Send_Nibble
  1023 ;; This function is called by:
  1024 ;;		_Lcd_Set_Cursor
  1025 ;;		_Lcd_Clear
  1026 ;;		_Lcd_Init
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text6
  1031   000978                     __ptext6:
  1032                           	callstack 0
  1033   000978                     _Lcd_Cmd:
  1034                           	callstack 27
  1035                           
  1036                           ;incstack = 0
  1037                           ;Lcd_Cmd@cmd stored from wreg
  1038   000978  6E04               	movwf	Lcd_Cmd@cmd^0,c
  1039   00097A                     
  1040                           ;lcd.c: 23:     PORTAbits.RA0 = 0;
  1041   00097A  9080               	bcf	128,0,c	;volatile
  1042   00097C                     
  1043                           ;lcd.c: 24:     Lcd_Send_Nibble(cmd >> 4);
  1044   00097C  3804               	swapf	Lcd_Cmd@cmd^0,w,c
  1045   00097E  0B0F               	andlw	15
  1046   000980  EC0D  F004         	call	_Lcd_Send_Nibble
  1047                           
  1048                           ;lcd.c: 25:     Lcd_Send_Nibble(cmd & 0x0F);
  1049   000984  5004               	movf	Lcd_Cmd@cmd^0,w,c
  1050   000986  0B0F               	andlw	15
  1051   000988  EC0D  F004         	call	_Lcd_Send_Nibble
  1052   00098C                     
  1053                           ;lcd.c: 26:     _delay((unsigned long)((2)*(8000000/4000.0)));
  1054   00098C  0E06               	movlw	6
  1055   00098E  6E03               	movwf	??_Lcd_Cmd^0,c
  1056   000990  0E30               	movlw	48
  1057   000992                     u107:
  1058   000992  2EE8               	decfsz	wreg,f,c
  1059   000994  D7FE               	bra	u107
  1060   000996  2E03               	decfsz	??_Lcd_Cmd^0,f,c
  1061   000998  D7FC               	bra	u107
  1062   00099A  D000               	nop2	
  1063   00099C  0012               	return		;funcret
  1064   00099E                     __end_of_Lcd_Cmd:
  1065                           	callstack 0
  1066                           
  1067 ;; *************** function _Lcd_Send_Nibble *****************
  1068 ;; Defined at:
  1069 ;;		line 13 in file "lcd.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  data            1    wreg     unsigned char 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  data            1    1[COMRAM] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg, status,2, status,0, cstack
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1083 ;;      Params:         0       0       0       0       0       0       0       0       0
  1084 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1085 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1086 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1087 ;;Total ram usage:        2 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; Hardware stack levels required when called: 1
  1090 ;; This function calls:
  1091 ;;		_Lcd_Pulse_EN
  1092 ;; This function is called by:
  1093 ;;		_Lcd_Cmd
  1094 ;;		_Lcd_Write_Char
  1095 ;;		_Lcd_Init
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           	psect	text7
  1100   00081A                     __ptext7:
  1101                           	callstack 0
  1102   00081A                     _Lcd_Send_Nibble:
  1103                           	callstack 27
  1104                           
  1105                           ;incstack = 0
  1106                           ;Lcd_Send_Nibble@data stored from wreg
  1107   00081A  6E02               	movwf	Lcd_Send_Nibble@data^0,c
  1108   00081C                     
  1109                           ;lcd.c: 14:     PORTBbits.RB0 = (data >> 0) & 1;
  1110   00081C  C002  F001         	movff	Lcd_Send_Nibble@data,??_Lcd_Send_Nibble
  1111   000820  0E01               	movlw	1
  1112   000822  1601               	andwf	??_Lcd_Send_Nibble^0,f,c
  1113   000824  5081               	movf	129,w,c	;volatile
  1114   000826  1801               	xorwf	??_Lcd_Send_Nibble^0,w,c
  1115   000828  0BFE               	andlw	-2
  1116   00082A  1801               	xorwf	??_Lcd_Send_Nibble^0,w,c
  1117   00082C  6E81               	movwf	129,c	;volatile
  1118                           
  1119                           ;lcd.c: 15:     PORTBbits.RB1 = (data >> 1) & 1;
  1120   00082E  C002  F001         	movff	Lcd_Send_Nibble@data,??_Lcd_Send_Nibble
  1121   000832  90D8               	bcf	status,0,c
  1122   000834  3201               	rrcf	??_Lcd_Send_Nibble^0,f,c
  1123   000836  0E01               	movlw	1
  1124   000838  1601               	andwf	??_Lcd_Send_Nibble^0,f,c
  1125   00083A  4601               	rlncf	??_Lcd_Send_Nibble^0,f,c
  1126   00083C  5081               	movf	129,w,c	;volatile
  1127   00083E  1801               	xorwf	??_Lcd_Send_Nibble^0,w,c
  1128   000840  0BFD               	andlw	-3
  1129   000842  1801               	xorwf	??_Lcd_Send_Nibble^0,w,c
  1130   000844  6E81               	movwf	129,c	;volatile
  1131                           
  1132                           ;lcd.c: 16:     PORTBbits.RB2 = (data >> 2) & 1;
  1133   000846  C002  F001         	movff	Lcd_Send_Nibble@data,??_Lcd_Send_Nibble
  1134   00084A  90D8               	bcf	status,0,c
  1135   00084C  3201               	rrcf	??_Lcd_Send_Nibble^0,f,c
  1136   00084E  90D8               	bcf	status,0,c
  1137   000850  3201               	rrcf	??_Lcd_Send_Nibble^0,f,c
  1138   000852  0E01               	movlw	1
  1139   000854  1601               	andwf	??_Lcd_Send_Nibble^0,f,c
  1140   000856  4601               	rlncf	??_Lcd_Send_Nibble^0,f,c
  1141   000858  4601               	rlncf	??_Lcd_Send_Nibble^0,f,c
  1142   00085A  5081               	movf	129,w,c	;volatile
  1143   00085C  1801               	xorwf	??_Lcd_Send_Nibble^0,w,c
  1144   00085E  0BFB               	andlw	-5
  1145   000860  1801               	xorwf	??_Lcd_Send_Nibble^0,w,c
  1146   000862  6E81               	movwf	129,c	;volatile
  1147                           
  1148                           ;lcd.c: 17:     PORTBbits.RB3 = (data >> 3) & 1;
  1149   000864  C002  F001         	movff	Lcd_Send_Nibble@data,??_Lcd_Send_Nibble
  1150   000868  90D8               	bcf	status,0,c
  1151   00086A  3201               	rrcf	??_Lcd_Send_Nibble^0,f,c
  1152   00086C  90D8               	bcf	status,0,c
  1153   00086E  3201               	rrcf	??_Lcd_Send_Nibble^0,f,c
  1154   000870  90D8               	bcf	status,0,c
  1155   000872  3201               	rrcf	??_Lcd_Send_Nibble^0,f,c
  1156   000874  0E01               	movlw	1
  1157   000876  1601               	andwf	??_Lcd_Send_Nibble^0,f,c
  1158   000878  4601               	rlncf	??_Lcd_Send_Nibble^0,f,c
  1159   00087A  4601               	rlncf	??_Lcd_Send_Nibble^0,f,c
  1160   00087C  4601               	rlncf	??_Lcd_Send_Nibble^0,f,c
  1161   00087E  5081               	movf	129,w,c	;volatile
  1162   000880  1801               	xorwf	??_Lcd_Send_Nibble^0,w,c
  1163   000882  0BF7               	andlw	-9
  1164   000884  1801               	xorwf	??_Lcd_Send_Nibble^0,w,c
  1165   000886  6E81               	movwf	129,c	;volatile
  1166   000888                     
  1167                           ;lcd.c: 18:     Lcd_Pulse_EN();
  1168   000888  ECEA  F004         	call	_Lcd_Pulse_EN	;wreg free
  1169   00088C  0012               	return		;funcret
  1170   00088E                     __end_of_Lcd_Send_Nibble:
  1171                           	callstack 0
  1172                           
  1173 ;; *************** function _Lcd_Pulse_EN *****************
  1174 ;; Defined at:
  1175 ;;		line 5 in file "lcd.c"
  1176 ;; Parameters:    Size  Location     Type
  1177 ;;		None
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;		None
  1180 ;; Return value:  Size  Location     Type
  1181 ;;                  1    wreg      void 
  1182 ;; Registers used:
  1183 ;;		wreg
  1184 ;; Tracked objects:
  1185 ;;		On entry : 0/0
  1186 ;;		On exit  : 0/0
  1187 ;;		Unchanged: 0/0
  1188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1189 ;;      Params:         0       0       0       0       0       0       0       0       0
  1190 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1191 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1192 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1193 ;;Total ram usage:        0 bytes
  1194 ;; Hardware stack levels used: 1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_Lcd_Send_Nibble
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text8
  1203   0009D4                     __ptext8:
  1204                           	callstack 0
  1205   0009D4                     _Lcd_Pulse_EN:
  1206                           	callstack 27
  1207   0009D4                     
  1208                           ;lcd.c: 6:     PORTAbits.RA2 = 1;
  1209   0009D4  8480               	bsf	128,2,c	;volatile
  1210   0009D6                     
  1211                           ;lcd.c: 7:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1212   0009D6  0E06               	movlw	6
  1213   0009D8                     u117:
  1214   0009D8  2EE8               	decfsz	wreg,f,c
  1215   0009DA  D7FE               	bra	u117
  1216   0009DC  D000               	nop2	
  1217   0009DE                     
  1218                           ;lcd.c: 8:     PORTAbits.RA2 = 0;
  1219   0009DE  9480               	bcf	128,2,c	;volatile
  1220                           
  1221                           ;lcd.c: 9:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  1222   0009E0  0E06               	movlw	6
  1223   0009E2                     u127:
  1224   0009E2  2EE8               	decfsz	wreg,f,c
  1225   0009E4  D7FE               	bra	u127
  1226   0009E6  D000               	nop2	
  1227   0009E8  0012               	return		;funcret
  1228   0009EA                     __end_of_Lcd_Pulse_EN:
  1229                           	callstack 0
  1230                           
  1231                           	psect	rparam
  1232   000001                     ___rparam_used  equ	1
  1233   000000                     ___param_bank   equ	0
  1234   000000                     __Lparam        equ	__Lrparam
  1235   000000                     __Hparam        equ	__Hrparam
  1236                           
  1237                           	psect	idloc
  1238                           
  1239                           ;Config register IDLOC0 @ 0x200000
  1240                           ;	unspecified, using default values
  1241   200000                     	org	2097152
  1242   200000  FF                 	db	255
  1243                           
  1244                           ;Config register IDLOC1 @ 0x200001
  1245                           ;	unspecified, using default values
  1246   200001                     	org	2097153
  1247   200001  FF                 	db	255
  1248                           
  1249                           ;Config register IDLOC2 @ 0x200002
  1250                           ;	unspecified, using default values
  1251   200002                     	org	2097154
  1252   200002  FF                 	db	255
  1253                           
  1254                           ;Config register IDLOC3 @ 0x200003
  1255                           ;	unspecified, using default values
  1256   200003                     	org	2097155
  1257   200003  FF                 	db	255
  1258                           
  1259                           ;Config register IDLOC4 @ 0x200004
  1260                           ;	unspecified, using default values
  1261   200004                     	org	2097156
  1262   200004  FF                 	db	255
  1263                           
  1264                           ;Config register IDLOC5 @ 0x200005
  1265                           ;	unspecified, using default values
  1266   200005                     	org	2097157
  1267   200005  FF                 	db	255
  1268                           
  1269                           ;Config register IDLOC6 @ 0x200006
  1270                           ;	unspecified, using default values
  1271   200006                     	org	2097158
  1272   200006  FF                 	db	255
  1273                           
  1274                           ;Config register IDLOC7 @ 0x200007
  1275                           ;	unspecified, using default values
  1276   200007                     	org	2097159
  1277   200007  FF                 	db	255
  1278                           
  1279                           	psect	config
  1280                           
  1281                           ;Config register CONFIG1L @ 0x300000
  1282                           ;	PLL Prescaler Selection bits
  1283                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1284                           ;	System Clock Postscaler Selection bits
  1285                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1286                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1287                           ;	USBDIV = 2, USB clock source comes from the 96 MHz PLL divided by 2
  1288   300000                     	org	3145728
  1289   300000  20                 	db	32
  1290                           
  1291                           ;Config register CONFIG1H @ 0x300001
  1292                           ;	Oscillator Selection bits
  1293                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  1294                           ;	Fail-Safe Clock Monitor Enable bit
  1295                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1296                           ;	Internal/External Oscillator Switchover bit
  1297                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1298   300001                     	org	3145729
  1299   300001  08                 	db	8
  1300                           
  1301                           ;Config register CONFIG2L @ 0x300002
  1302                           ;	Power-up Timer Enable bit
  1303                           ;	PWRT = OFF, PWRT disabled
  1304                           ;	Brown-out Reset Enable bits
  1305                           ;	BOR = ON, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1306                           ;	Brown-out Reset Voltage bits
  1307                           ;	BORV = 3, Minimum setting 2.05V
  1308                           ;	USB Voltage Regulator Enable bit
  1309                           ;	VREGEN = OFF, USB voltage regulator disabled
  1310   300002                     	org	3145730
  1311   300002  1F                 	db	31
  1312                           
  1313                           ;Config register CONFIG2H @ 0x300003
  1314                           ;	Watchdog Timer Enable bit
  1315                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1316                           ;	Watchdog Timer Postscale Select bits
  1317                           ;	WDTPS = 32768, 1:32768
  1318   300003                     	org	3145731
  1319   300003  1E                 	db	30
  1320                           
  1321                           ; Padding undefined space
  1322   300004                     	org	3145732
  1323   300004  FF                 	db	255
  1324                           
  1325                           ;Config register CONFIG3H @ 0x300005
  1326                           ;	CCP2 MUX bit
  1327                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1328                           ;	PORTB A/D Enable bit
  1329                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1330                           ;	Low-Power Timer 1 Oscillator Enable bit
  1331                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1332                           ;	MCLR Pin Enable bit
  1333                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1334   300005                     	org	3145733
  1335   300005  83                 	db	131
  1336                           
  1337                           ;Config register CONFIG4L @ 0x300006
  1338                           ;	Stack Full/Underflow Reset Enable bit
  1339                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1340                           ;	Single-Supply ICSP Enable bit
  1341                           ;	LVP = OFF, Single-Supply ICSP disabled
  1342                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1343                           ;	ICPRT = OFF, ICPORT disabled
  1344                           ;	Extended Instruction Set Enable bit
  1345                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1346                           ;	Background Debugger Enable bit
  1347                           ;	DEBUG = 0x1, unprogrammed default
  1348   300006                     	org	3145734
  1349   300006  81                 	db	129
  1350                           
  1351                           ; Padding undefined space
  1352   300007                     	org	3145735
  1353   300007  FF                 	db	255
  1354                           
  1355                           ;Config register CONFIG5L @ 0x300008
  1356                           ;	Code Protection bit
  1357                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  1358                           ;	Code Protection bit
  1359                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  1360                           ;	Code Protection bit
  1361                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  1362                           ;	Code Protection bit
  1363                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  1364   300008                     	org	3145736
  1365   300008  0F                 	db	15
  1366                           
  1367                           ;Config register CONFIG5H @ 0x300009
  1368                           ;	Boot Block Code Protection bit
  1369                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  1370                           ;	Data EEPROM Code Protection bit
  1371                           ;	CPD = OFF, Data EEPROM is not code-protected
  1372   300009                     	org	3145737
  1373   300009  C0                 	db	192
  1374                           
  1375                           ;Config register CONFIG6L @ 0x30000A
  1376                           ;	Write Protection bit
  1377                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  1378                           ;	Write Protection bit
  1379                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  1380                           ;	Write Protection bit
  1381                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  1382                           ;	Write Protection bit
  1383                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  1384   30000A                     	org	3145738
  1385   30000A  0F                 	db	15
  1386                           
  1387                           ;Config register CONFIG6H @ 0x30000B
  1388                           ;	Configuration Register Write Protection bit
  1389                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1390                           ;	Boot Block Write Protection bit
  1391                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  1392                           ;	Data EEPROM Write Protection bit
  1393                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1394   30000B                     	org	3145739
  1395   30000B  E0                 	db	224
  1396                           
  1397                           ;Config register CONFIG7L @ 0x30000C
  1398                           ;	Table Read Protection bit
  1399                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1400                           ;	Table Read Protection bit
  1401                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1402                           ;	Table Read Protection bit
  1403                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1404                           ;	Table Read Protection bit
  1405                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  1406   30000C                     	org	3145740
  1407   30000C  0F                 	db	15
  1408                           
  1409                           ;Config register CONFIG7H @ 0x30000D
  1410                           ;	Boot Block Table Read Protection bit
  1411                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  1412   30000D                     	org	3145741
  1413   30000D  40                 	db	64
  1414                           tosu	equ	0xFFF
  1415                           tosh	equ	0xFFE
  1416                           tosl	equ	0xFFD
  1417                           stkptr	equ	0xFFC
  1418                           pclatu	equ	0xFFB
  1419                           pclath	equ	0xFFA
  1420                           pcl	equ	0xFF9
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           prodh	equ	0xFF4
  1426                           prodl	equ	0xFF3
  1427                           indf0	equ	0xFEF
  1428                           postinc0	equ	0xFEE
  1429                           postdec0	equ	0xFED
  1430                           preinc0	equ	0xFEC
  1431                           plusw0	equ	0xFEB
  1432                           fsr0h	equ	0xFEA
  1433                           fsr0l	equ	0xFE9
  1434                           wreg	equ	0xFE8
  1435                           indf1	equ	0xFE7
  1436                           postinc1	equ	0xFE6
  1437                           postdec1	equ	0xFE5
  1438                           preinc1	equ	0xFE4
  1439                           plusw1	equ	0xFE3
  1440                           fsr1h	equ	0xFE2
  1441                           fsr1l	equ	0xFE1
  1442                           bsr	equ	0xFE0
  1443                           indf2	equ	0xFDF
  1444                           postinc2	equ	0xFDE
  1445                           postdec2	equ	0xFDD
  1446                           preinc2	equ	0xFDC
  1447                           plusw2	equ	0xFDB
  1448                           fsr2h	equ	0xFDA
  1449                           fsr2l	equ	0xFD9
  1450                           status	equ	0xFD8

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       7
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    Lcd_Write_String@str	PTR const unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), STR_2(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Send_Nibble
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Clear
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Send_Nibble

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     566
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     1     0      1     137
                                              3 COMRAM     1     0      1
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       1     1      0      90
                                              2 COMRAM     1     1      0
                    _Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       3     2      1     189
                                              4 COMRAM     3     2      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     240
                                              5 COMRAM     1     1      0
                          _Lcd_Clear
                            _Lcd_Cmd
                    _Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            1     1      0      90
                                              4 COMRAM     1     1      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0      90
                                              2 COMRAM     2     2      0
                    _Lcd_Send_Nibble
 ---------------------------------------------------------------------------------
 (3) _Lcd_Send_Nibble                                      2     2      0      60
                                              0 COMRAM     2     2      0
                       _Lcd_Pulse_EN
 ---------------------------------------------------------------------------------
 (4) _Lcd_Pulse_EN                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Init
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Send_Nibble
           _Lcd_Pulse_EN
     _Lcd_Cmd
     _Lcd_Send_Nibble
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Send_Nibble

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMRAM           95      0       0      0.0%
BITBANK0           160      0       0      0.0%
BITBANK1           256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BITBIGSFRh         126      0       0      0.0%
BITBIGSFRl          32      0       0      0.0%
COMRAM              95      7       7      7.4%
BANK0              160      0       0      0.0%
BANK1              256      0       0      0.0%
BANK2              256      0       0      0.0%
BANK3              256      0       0      0.0%
BANK4              256      0       0      0.0%
BANK5              256      0       0      0.0%
BANK6              256      0       0      0.0%
BANK7              256      0       0      0.0%
BIGRAM            2047      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       7      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Mar 17 20:17:48 2025

                      l13 09E8                        l22 09BA                        l16 088C  
                      l33 0976                        l50 091A                        l19 099C  
                      l51 091A                        l36 09D2                        l28 094C  
                      l39 08F0                        u30 094C                        u31 0948  
                      u40 0960                        u41 095C                        u57 09B4  
                      u67 08A4                        u77 08B8                        u87 08C8  
                      u97 09C8                       l801 0926                       l731 09D6  
                     l811 096A                       l803 0932                       l733 09DE  
                     l741 097C                       l813 0970                       l805 0934  
                     l735 081C                       l743 098C                       l751 09BC  
                     l807 0950                       l815 08F2                       l729 09D4  
                     l737 0888                       l753 09C2                       l809 0960  
                     l745 09A0                       l817 0900                       l739 097A  
                     l771 088E                       l747 09A2                       l819 0908  
                     l781 08CE                       l773 089E                       l749 09B2  
                     l791 08EC                       l783 08D4                       l775 08AC  
                     l785 08DA                       l777 08B2                       l787 08E0  
                     l779 08C6                       l789 08E6                       l799 0922  
                     u107 0992                       u117 09D8                       u127 09E2  
                     wreg 0FE8                      STR_1 0801                      STR_2 080E  
     Lcd_Write_String@str 0004         ?_Lcd_Write_String 0004                      _main 08F2  
                    start 7FFC        ??_Lcd_Write_String 0005           __end_of_Lcd_Cmd 099E  
            ___param_bank 0000                     ?_main 0001      __end_of_Lcd_Pulse_EN 09EA  
                   tablat 0FF5                     status 0FD8          __end_of_Lcd_Init 08F2  
         __initialization 09EA              __end_of_main 0922                    ??_main 0008  
           __activetblptr 0001                 ??_Lcd_Cmd 0003                    isa$std 0001  
            __mediumconst 0800                    tblptrh 0FF7                    tblptrl 0FF6  
                  tblptru 0FF8                __accesstop 0060   __end_of__initialization 09EA  
       __end_of_Lcd_Clear 09D4             ___rparam_used 0001            __pcstackCOMRAM 0001  
          _Lcd_Set_Cursor 094E                 ?_Lcd_Init 0001         ??_Lcd_Send_Nibble 0001  
            _Lcd_Pulse_EN 09D4    __end_of_Lcd_Set_Cursor 0978                ??_Lcd_Init 0006  
          _Lcd_Write_Char 099E                   _Lcd_Cmd 0978                   __Hparam 0000  
                 __Lparam 0000              __psmallconst 0800                   __pcinit 09EA  
                 __ramtop 0800           ?_Lcd_Set_Cursor 0005                   __ptext0 08F2  
                 __ptext1 0922                   __ptext2 099E                   __ptext3 094E  
                 __ptext4 088E                   __ptext5 09BC                   __ptext6 0978  
                 __ptext7 081A                   __ptext8 09D4    __end_of_Lcd_Write_Char 09BC  
    end_of_initialization 09EA                 _PORTAbits 0F80                 _PORTBbits 0F81  
               _TRISAbits 0F92                 _TRISBbits 0F93           ?_Lcd_Write_Char 0001  
     Lcd_Send_Nibble@data 0002                 _Lcd_Clear 09BC          _Lcd_Write_String 0922  
   Lcd_Set_Cursor@address 0007       start_initialization 09EA           _Lcd_Send_Nibble 081A  
              ?_Lcd_Clear 0001                  ?_Lcd_Cmd 0001          ??_Lcd_Set_Cursor 0006  
 __end_of_Lcd_Send_Nibble 088E               __smallconst 0800               ??_Lcd_Clear 0005  
        ??_Lcd_Write_Char 0003                  _Lcd_Init 088E  __end_of_Lcd_Write_String 094E  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
        ?_Lcd_Send_Nibble 0001             ?_Lcd_Pulse_EN 0001                  isa$xinst 0000  
      Lcd_Write_Char@data 0003                Lcd_Cmd@cmd 0004            ??_Lcd_Pulse_EN 0001  
       Lcd_Set_Cursor@col 0005         Lcd_Set_Cursor@row 0006  
